{"id":"1e55c9ce28c6e4fac54e59001d9b9643","_format":"hh-sol-build-info-1","solcVersion":"0.8.22","solcLongVersion":"0.8.22+commit.4fc1097e","input":{"language":"Solidity","sources":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\n    struct OwnableStorage {\n        address _owner;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Ownable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\n\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\n        assembly {\n            $.slot := OwnableStorageLocation\n        }\n    }\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\n        __Ownable_init_unchained(initialOwner);\n    }\n\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        OwnableStorage storage $ = _getOwnableStorage();\n        return $._owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        OwnableStorage storage $ = _getOwnableStorage();\n        address oldOwner = $._owner;\n        $._owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reinitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Pointer to storage slot. Allows integrators to override it with a custom storage location.\n     *\n     * NOTE: Consider following the ERC-7201 formula to derive storage locations.\n     */\n    function _initializableStorageSlot() internal pure virtual returns (bytes32) {\n        return INITIALIZABLE_STORAGE;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        bytes32 slot = _initializableStorageSlot();\n        assembly {\n            $.slot := slot\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport {IERC20Metadata} from \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\nimport {ContextUpgradeable} from \"../../utils/ContextUpgradeable.sol\";\nimport {IERC20Errors} from \"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20, IERC20Metadata, IERC20Errors {\n    /// @custom:storage-location erc7201:openzeppelin.storage.ERC20\n    struct ERC20Storage {\n        mapping(address account => uint256) _balances;\n\n        mapping(address account => mapping(address spender => uint256)) _allowances;\n\n        uint256 _totalSupply;\n\n        string _name;\n        string _symbol;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.ERC20\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant ERC20StorageLocation = 0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00;\n\n    function _getERC20Storage() private pure returns (ERC20Storage storage $) {\n        assembly {\n            $.slot := ERC20StorageLocation\n        }\n    }\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {\n        __ERC20_init_unchained(name_, symbol_);\n    }\n\n    function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {\n        ERC20Storage storage $ = _getERC20Storage();\n        $._name = name_;\n        $._symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /// @inheritdoc IERC20\n    function totalSupply() public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._totalSupply;\n    }\n\n    /// @inheritdoc IERC20\n    function balanceOf(address account) public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /// @inheritdoc IERC20\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        ERC20Storage storage $ = _getERC20Storage();\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            $._totalSupply += value;\n        } else {\n            uint256 fromBalance = $._balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                $._balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                $._totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                $._balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        ERC20Storage storage $ = _getERC20Storage();\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        $._allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/extensions/ERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20Permit} from \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\";\nimport {ERC20Upgradeable} from \"../ERC20Upgradeable.sol\";\nimport {ECDSA} from \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\";\nimport {EIP712Upgradeable} from \"../../../utils/cryptography/EIP712Upgradeable.sol\";\nimport {NoncesUpgradeable} from \"../../../utils/NoncesUpgradeable.sol\";\nimport {Initializable} from \"../../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\nabstract contract ERC20PermitUpgradeable is Initializable, ERC20Upgradeable, IERC20Permit, EIP712Upgradeable, NoncesUpgradeable {\n    bytes32 private constant PERMIT_TYPEHASH =\n        keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n\n    /**\n     * @dev Permit deadline has expired.\n     */\n    error ERC2612ExpiredSignature(uint256 deadline);\n\n    /**\n     * @dev Mismatched signature.\n     */\n    error ERC2612InvalidSigner(address signer, address owner);\n\n    /**\n     * @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n     *\n     * It's a good idea to use the same `name` that is defined as the ERC-20 token name.\n     */\n    function __ERC20Permit_init(string memory name) internal onlyInitializing {\n        __EIP712_init_unchained(name, \"1\");\n    }\n\n    function __ERC20Permit_init_unchained(string memory) internal onlyInitializing {}\n\n    /// @inheritdoc IERC20Permit\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual {\n        if (block.timestamp > deadline) {\n            revert ERC2612ExpiredSignature(deadline);\n        }\n\n        bytes32 structHash = keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline));\n\n        bytes32 hash = _hashTypedDataV4(structHash);\n\n        address signer = ECDSA.recover(hash, v, r, s);\n        if (signer != owner) {\n            revert ERC2612InvalidSigner(signer, owner);\n        }\n\n        _approve(owner, spender, value);\n    }\n\n    /// @inheritdoc IERC20Permit\n    function nonces(address owner) public view virtual override(IERC20Permit, NoncesUpgradeable) returns (uint256) {\n        return super.nonces(owner);\n    }\n\n    /// @inheritdoc IERC20Permit\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view virtual returns (bytes32) {\n        return _domainSeparatorV4();\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/cryptography/EIP712.sol)\n\npragma solidity ^0.8.20;\n\nimport {MessageHashUtils} from \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\";\nimport {IERC5267} from \"@openzeppelin/contracts/interfaces/IERC5267.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n * encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n * does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n * produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * NOTE: The upgradeable version of this contract does not use an immutable cache and recomputes the domain separator\n * each time {_domainSeparatorV4} is called. That is cheaper than accessing a cached version in cold storage.\n */\nabstract contract EIP712Upgradeable is Initializable, IERC5267 {\n    bytes32 private constant TYPE_HASH =\n        keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\");\n\n    /// @custom:storage-location erc7201:openzeppelin.storage.EIP712\n    struct EIP712Storage {\n        /// @custom:oz-renamed-from _HASHED_NAME\n        bytes32 _hashedName;\n        /// @custom:oz-renamed-from _HASHED_VERSION\n        bytes32 _hashedVersion;\n\n        string _name;\n        string _version;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.EIP712\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant EIP712StorageLocation = 0xa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d100;\n\n    function _getEIP712Storage() private pure returns (EIP712Storage storage $) {\n        assembly {\n            $.slot := EIP712StorageLocation\n        }\n    }\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    function __EIP712_init(string memory name, string memory version) internal onlyInitializing {\n        __EIP712_init_unchained(name, version);\n    }\n\n    function __EIP712_init_unchained(string memory name, string memory version) internal onlyInitializing {\n        EIP712Storage storage $ = _getEIP712Storage();\n        $._name = name;\n        $._version = version;\n\n        // Reset prior values in storage if upgrading\n        $._hashedName = 0;\n        $._hashedVersion = 0;\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        return _buildDomainSeparator();\n    }\n\n    function _buildDomainSeparator() private view returns (bytes32) {\n        return keccak256(abi.encode(TYPE_HASH, _EIP712NameHash(), _EIP712VersionHash(), block.chainid, address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n\n    /// @inheritdoc IERC5267\n    function eip712Domain()\n        public\n        view\n        virtual\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        )\n    {\n        EIP712Storage storage $ = _getEIP712Storage();\n        // If the hashed name and version in storage are non-zero, the contract hasn't been properly initialized\n        // and the EIP712 domain is not reliable, as it will be missing name and version.\n        require($._hashedName == 0 && $._hashedVersion == 0, \"EIP712: Uninitialized\");\n\n        return (\n            hex\"0f\", // 01111\n            _EIP712Name(),\n            _EIP712Version(),\n            block.chainid,\n            address(this),\n            bytes32(0),\n            new uint256[](0)\n        );\n    }\n\n    /**\n     * @dev The name parameter for the EIP712 domain.\n     *\n     * NOTE: This function reads from storage by default, but can be redefined to return a constant value if gas costs\n     * are a concern.\n     */\n    function _EIP712Name() internal view virtual returns (string memory) {\n        EIP712Storage storage $ = _getEIP712Storage();\n        return $._name;\n    }\n\n    /**\n     * @dev The version parameter for the EIP712 domain.\n     *\n     * NOTE: This function reads from storage by default, but can be redefined to return a constant value if gas costs\n     * are a concern.\n     */\n    function _EIP712Version() internal view virtual returns (string memory) {\n        EIP712Storage storage $ = _getEIP712Storage();\n        return $._version;\n    }\n\n    /**\n     * @dev The hash of the name parameter for the EIP712 domain.\n     *\n     * NOTE: In previous versions this function was virtual. In this version you should override `_EIP712Name` instead.\n     */\n    function _EIP712NameHash() internal view returns (bytes32) {\n        EIP712Storage storage $ = _getEIP712Storage();\n        string memory name = _EIP712Name();\n        if (bytes(name).length > 0) {\n            return keccak256(bytes(name));\n        } else {\n            // If the name is empty, the contract may have been upgraded without initializing the new storage.\n            // We return the name hash in storage if non-zero, otherwise we assume the name is empty by design.\n            bytes32 hashedName = $._hashedName;\n            if (hashedName != 0) {\n                return hashedName;\n            } else {\n                return keccak256(\"\");\n            }\n        }\n    }\n\n    /**\n     * @dev The hash of the version parameter for the EIP712 domain.\n     *\n     * NOTE: In previous versions this function was virtual. In this version you should override `_EIP712Version` instead.\n     */\n    function _EIP712VersionHash() internal view returns (bytes32) {\n        EIP712Storage storage $ = _getEIP712Storage();\n        string memory version = _EIP712Version();\n        if (bytes(version).length > 0) {\n            return keccak256(bytes(version));\n        } else {\n            // If the version is empty, the contract may have been upgraded without initializing the new storage.\n            // We return the version hash in storage if non-zero, otherwise we assume the version is empty by design.\n            bytes32 hashedVersion = $._hashedVersion;\n            if (hashedVersion != 0) {\n                return hashedVersion;\n            } else {\n                return keccak256(\"\");\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/NoncesUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Nonces.sol)\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides tracking nonces for addresses. Nonces will only increment.\n */\nabstract contract NoncesUpgradeable is Initializable {\n    /**\n     * @dev The nonce used for an `account` is not the expected current nonce.\n     */\n    error InvalidAccountNonce(address account, uint256 currentNonce);\n\n    /// @custom:storage-location erc7201:openzeppelin.storage.Nonces\n    struct NoncesStorage {\n        mapping(address account => uint256) _nonces;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Nonces\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant NoncesStorageLocation = 0x5ab42ced628888259c08ac98db1eb0cf702fc1501344311d8b100cd1bfe4bb00;\n\n    function _getNoncesStorage() private pure returns (NoncesStorage storage $) {\n        assembly {\n            $.slot := NoncesStorageLocation\n        }\n    }\n\n    function __Nonces_init() internal onlyInitializing {\n    }\n\n    function __Nonces_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Returns the next unused nonce for an address.\n     */\n    function nonces(address owner) public view virtual returns (uint256) {\n        NoncesStorage storage $ = _getNoncesStorage();\n        return $._nonces[owner];\n    }\n\n    /**\n     * @dev Consumes a nonce.\n     *\n     * Returns the current value and increments nonce.\n     */\n    function _useNonce(address owner) internal virtual returns (uint256) {\n        NoncesStorage storage $ = _getNoncesStorage();\n        // For each account, the nonce has an initial value of 0, can only be incremented by one, and cannot be\n        // decremented or reset. This guarantees that the nonce never overflows.\n        unchecked {\n            // It is important to do x++ and not ++x here.\n            return $._nonces[owner]++;\n        }\n    }\n\n    /**\n     * @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`.\n     */\n    function _useCheckedNonce(address owner, uint256 nonce) internal virtual {\n        uint256 current = _useNonce(owner);\n        if (nonce != current) {\n            revert InvalidAccountNonce(owner, current);\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract PausableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Pausable\n    struct PausableStorage {\n        bool _paused;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Pausable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant PausableStorageLocation = 0xcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300;\n\n    function _getPausableStorage() private pure returns (PausableStorage storage $) {\n        assembly {\n            $.slot := PausableStorageLocation\n        }\n    }\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    function __Pausable_init() internal onlyInitializing {\n    }\n\n    function __Pausable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        PausableStorage storage $ = _getPausableStorage();\n        return $._paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        PausableStorage storage $ = _getPausableStorage();\n        $._paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        PausableStorage storage $ = _getPausableStorage();\n        $._paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuardUpgradeable is Initializable {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    /// @custom:storage-location erc7201:openzeppelin.storage.ReentrancyGuard\n    struct ReentrancyGuardStorage {\n        uint256 _status;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.ReentrancyGuard\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant ReentrancyGuardStorageLocation = 0x9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00;\n\n    function _getReentrancyGuardStorage() private pure returns (ReentrancyGuardStorage storage $) {\n        assembly {\n            $.slot := ReentrancyGuardStorageLocation\n        }\n    }\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    function __ReentrancyGuard_init() internal onlyInitializing {\n        __ReentrancyGuard_init_unchained();\n    }\n\n    function __ReentrancyGuard_init_unchained() internal onlyInitializing {\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\n        $._status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if ($._status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        $._status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        $._status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\n        return $._status == ENTERED;\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/draft-IERC6093.sol)\npragma solidity >=0.8.4;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/interfaces/IERC1363.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC1363.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"},"@openzeppelin/contracts/interfaces/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC165.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"},"@openzeppelin/contracts/interfaces/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC20.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC5267.sol)\n\npragma solidity >=0.4.16;\n\ninterface IERC5267 {\n    /**\n     * @dev MAY be emitted to signal that the domain could have changed.\n     */\n    event EIP712DomainChanged();\n\n    /**\n     * @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n     * signature.\n     */\n    function eip712Domain()\n        external\n        view\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        );\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransfer(IERC20 token, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransferFrom(IERC20 token, address from, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes memory signature\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            assembly (\"memory-safe\") {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/cryptography/MessageHashUtils.sol)\n\npragma solidity ^0.8.20;\n\nimport {Strings} from \"../Strings.sol\";\n\n/**\n * @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n *\n * The library provides methods for generating a hash of a message that conforms to the\n * https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n * specifications.\n */\nlibrary MessageHashUtils {\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing a bytes32 `messageHash` with\n     * `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n     * hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n     * keccak256, although any bytes32 value can be safely used because the final digest will\n     * be re-hashed.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\") // 32 is the bytes-length of messageHash\n            mstore(0x1c, messageHash) // 0x1c (28) is the length of the prefix\n            digest := keccak256(0x00, 0x3c) // 0x3c is the length of the prefix (0x1c) + messageHash (0x20)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing an arbitrary `message` with\n     * `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n     * hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes memory message) internal pure returns (bytes32) {\n        return\n            keccak256(bytes.concat(\"\\x19Ethereum Signed Message:\\n\", bytes(Strings.toString(message.length)), message));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x00` (data with intended validator).\n     *\n     * The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n     * `validator` address. Then hashing the result.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(hex\"19_00\", validator, data));\n    }\n\n    /**\n     * @dev Variant of {toDataWithIntendedValidatorHash-address-bytes} optimized for cases where `data` is a bytes32.\n     */\n    function toDataWithIntendedValidatorHash(\n        address validator,\n        bytes32 messageHash\n    ) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, hex\"19_00\")\n            mstore(0x02, shl(96, validator))\n            mstore(0x16, messageHash)\n            digest := keccak256(0x00, 0x36)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n     *\n     * The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n     * `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            mstore(ptr, hex\"19_01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            digest := keccak256(ptr, 0x42)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Return the 512-bit addition of two uint256.\n     *\n     * The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low.\n     */\n    function add512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        assembly (\"memory-safe\") {\n            low := add(a, b)\n            high := lt(low, a)\n        }\n    }\n\n    /**\n     * @dev Return the 512-bit multiplication of two uint256.\n     *\n     * The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low.\n     */\n    function mul512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        // 512-bit multiply [high low] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n        // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n        // variables such that product = high * 2²⁵⁶ + low.\n        assembly (\"memory-safe\") {\n            let mm := mulmod(a, b, not(0))\n            low := mul(a, b)\n            high := sub(sub(mm, low), lt(mm, low))\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            success = c >= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a - b;\n            success = c <= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a * b;\n            assembly (\"memory-safe\") {\n                // Only true when the multiplication doesn't overflow\n                // (c / a == b) || (a == 0)\n                success := or(eq(div(c, a), b), iszero(a))\n            }\n            // equivalent to: success ? c : 0\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `DIV` opcode returns zero when the denominator is 0.\n                result := div(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `MOD` opcode returns zero when the denominator is 0.\n                result := mod(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingAdd(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryAdd(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Unsigned saturating subtraction, bounds to zero instead of overflowing.\n     */\n    function saturatingSub(uint256 a, uint256 b) internal pure returns (uint256) {\n        (, uint256 result) = trySub(a, b);\n        return result;\n    }\n\n    /**\n     * @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingMul(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryMul(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (high == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return low / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= high) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [high low].\n            uint256 remainder;\n            assembly (\"memory-safe\") {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                high := sub(high, gt(remainder, low))\n                low := sub(low, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly (\"memory-safe\") {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [high low] by twos.\n                low := div(low, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from high into low.\n            low |= high * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and high\n            // is no longer required.\n            result = low * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n            if (high >= 1 << n) {\n                Panic.panic(Panic.UNDER_OVERFLOW);\n            }\n            return (high << (256 - n)) | (low >> n);\n        }\n    }\n\n    /**\n     * @dev Calculates x * y >> n with full precision, following the selected rounding direction.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n, Rounding rounding) internal pure returns (uint256) {\n        return mulShr(x, y, n) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, 1 << n) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // If upper 8 bits of 16-bit half set, add 8 to result\n        r |= SafeCast.toUint((x >> r) > 0xff) << 3;\n        // If upper 4 bits of 8-bit half set, add 4 to result\n        r |= SafeCast.toUint((x >> r) > 0xf) << 2;\n\n        // Shifts value right by the current result and use it as an index into this lookup table:\n        //\n        // | x (4 bits) |  index  | table[index] = MSB position |\n        // |------------|---------|-----------------------------|\n        // |    0000    |    0    |        table[0] = 0         |\n        // |    0001    |    1    |        table[1] = 0         |\n        // |    0010    |    2    |        table[2] = 1         |\n        // |    0011    |    3    |        table[3] = 1         |\n        // |    0100    |    4    |        table[4] = 2         |\n        // |    0101    |    5    |        table[5] = 2         |\n        // |    0110    |    6    |        table[6] = 2         |\n        // |    0111    |    7    |        table[7] = 2         |\n        // |    1000    |    8    |        table[8] = 3         |\n        // |    1001    |    9    |        table[9] = 3         |\n        // |    1010    |   10    |        table[10] = 3        |\n        // |    1011    |   11    |        table[11] = 3        |\n        // |    1100    |   12    |        table[12] = 3        |\n        // |    1101    |   13    |        table[13] = 3        |\n        // |    1110    |   14    |        table[14] = 3        |\n        // |    1111    |   15    |        table[15] = 3        |\n        //\n        // The lookup table is represented as a 32-byte value with the MSB positions for 0-15 in the last 16 bytes.\n        assembly (\"memory-safe\") {\n            r := or(r, byte(shr(r, x), 0x0000010102020202030303030303030300000000000000000000000000000000))\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // Add 1 if upper 8 bits of 16-bit half set, and divide accumulated result by 8\n        return (r >> 3) | SafeCast.toUint((x >> r) > 0xff);\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SafeCast} from \"./math/SafeCast.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    using SafeCast for *;\n\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n    uint256 private constant SPECIAL_CHARS_LOOKUP =\n        (1 << 0x08) | // backspace\n            (1 << 0x09) | // tab\n            (1 << 0x0a) | // newline\n            (1 << 0x0c) | // form feed\n            (1 << 0x0d) | // carriage return\n            (1 << 0x22) | // double quote\n            (1 << 0x5c); // backslash\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev The string being parsed contains characters that are not in scope of the given base.\n     */\n    error StringsInvalidChar();\n\n    /**\n     * @dev The string being parsed is not a properly formatted address.\n     */\n    error StringsInvalidAddressFormat();\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(add(buffer, 0x20), length)\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input) internal pure returns (uint256) {\n        return parseUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        uint256 result = 0;\n        for (uint256 i = begin; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 9) return (false, 0);\n            result *= 10;\n            result += chr;\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `int256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input) internal pure returns (int256) {\n        return parseInt(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input, uint256 begin, uint256 end) internal pure returns (int256) {\n        (bool success, int256 value) = tryParseInt(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n     * the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(string memory input) internal pure returns (bool success, int256 value) {\n        return _tryParseIntUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    uint256 private constant ABS_MIN_INT256 = 2 ** 255;\n\n    /**\n     * @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character or if the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, int256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseIntUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseIntUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, int256 value) {\n        bytes memory buffer = bytes(input);\n\n        // Check presence of a negative sign.\n        bytes1 sign = begin == end ? bytes1(0) : bytes1(_unsafeReadBytesOffset(buffer, begin)); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        bool positiveSign = sign == bytes1(\"+\");\n        bool negativeSign = sign == bytes1(\"-\");\n        uint256 offset = (positiveSign || negativeSign).toUint();\n\n        (bool absSuccess, uint256 absValue) = tryParseUint(input, begin + offset, end);\n\n        if (absSuccess && absValue < ABS_MIN_INT256) {\n            return (true, negativeSign ? -int256(absValue) : int256(absValue));\n        } else if (absSuccess && negativeSign && absValue == ABS_MIN_INT256) {\n            return (true, type(int256).min);\n        } else return (false, 0);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input) internal pure returns (uint256) {\n        return parseHexUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseHexUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseHexUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n     * invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseHexUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseHexUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        // skip 0x prefix if present\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(buffer, begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 offset = hasPrefix.toUint() * 2;\n\n        uint256 result = 0;\n        for (uint256 i = begin + offset; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 15) return (false, 0);\n            result *= 16;\n            unchecked {\n                // Multiplying by 16 is equivalent to a shift of 4 bits (with additional overflow check).\n                // This guarantees that adding a value < 16 will not cause an overflow, hence the unchecked.\n                result += chr;\n            }\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input) internal pure returns (address) {\n        return parseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input, uint256 begin, uint256 end) internal pure returns (address) {\n        (bool success, address value) = tryParseAddress(input, begin, end);\n        if (!success) revert StringsInvalidAddressFormat();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n     * formatted address. See {parseAddress-string} requirements.\n     */\n    function tryParseAddress(string memory input) internal pure returns (bool success, address value) {\n        return tryParseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n     * formatted address. See {parseAddress-string-uint256-uint256} requirements.\n     */\n    function tryParseAddress(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, address value) {\n        if (end > bytes(input).length || begin > end) return (false, address(0));\n\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(bytes(input), begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 expectedLength = 40 + hasPrefix.toUint() * 2;\n\n        // check that input is the correct length\n        if (end - begin == expectedLength) {\n            // length guarantees that this does not overflow, and value is at most type(uint160).max\n            (bool s, uint256 v) = _tryParseHexUintUncheckedBounds(input, begin, end);\n            return (s, address(uint160(v)));\n        } else {\n            return (false, address(0));\n        }\n    }\n\n    function _tryParseChr(bytes1 chr) private pure returns (uint8) {\n        uint8 value = uint8(chr);\n\n        // Try to parse `chr`:\n        // - Case 1: [0-9]\n        // - Case 2: [a-f]\n        // - Case 3: [A-F]\n        // - otherwise not supported\n        unchecked {\n            if (value > 47 && value < 58) value -= 48;\n            else if (value > 96 && value < 103) value -= 87;\n            else if (value > 64 && value < 71) value -= 55;\n            else return type(uint8).max;\n        }\n\n        return value;\n    }\n\n    /**\n     * @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n     *\n     * WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n     *\n     * NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n     * RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n     * characters that are not in this range, but other tooling may provide different results.\n     */\n    function escapeJSON(string memory input) internal pure returns (string memory) {\n        bytes memory buffer = bytes(input);\n        bytes memory output = new bytes(2 * buffer.length); // worst case scenario\n        uint256 outputLength = 0;\n\n        for (uint256 i; i < buffer.length; ++i) {\n            bytes1 char = bytes1(_unsafeReadBytesOffset(buffer, i));\n            if (((SPECIAL_CHARS_LOOKUP & (1 << uint8(char))) != 0)) {\n                output[outputLength++] = \"\\\\\";\n                if (char == 0x08) output[outputLength++] = \"b\";\n                else if (char == 0x09) output[outputLength++] = \"t\";\n                else if (char == 0x0a) output[outputLength++] = \"n\";\n                else if (char == 0x0c) output[outputLength++] = \"f\";\n                else if (char == 0x0d) output[outputLength++] = \"r\";\n                else if (char == 0x5c) output[outputLength++] = \"\\\\\";\n                else if (char == 0x22) {\n                    // solhint-disable-next-line quotes\n                    output[outputLength++] = '\"';\n                }\n            } else {\n                output[outputLength++] = char;\n            }\n        }\n        // write the actual length and deallocate unused memory\n        assembly (\"memory-safe\") {\n            mstore(output, outputLength)\n            mstore(0x40, add(output, shl(5, shr(5, add(outputLength, 63)))))\n        }\n\n        return string(output);\n    }\n\n    /**\n     * @dev Reads a bytes32 from a bytes array without bounds checking.\n     *\n     * NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n     * assembly block as such would prevent some optimizations.\n     */\n    function _unsafeReadBytesOffset(bytes memory buffer, uint256 offset) private pure returns (bytes32 value) {\n        // This is not memory safe in the general case, but all calls to this private function are within bounds.\n        assembly (\"memory-safe\") {\n            value := mload(add(add(buffer, 0x20), offset))\n        }\n    }\n}\n"},"contracts/AMMFactory.sol":{"content":"// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.5;\n\nimport \"./interfaces/IAMMFactory.sol\";\nimport \"./AMMTokenPair.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\";\n\n//AMM工厂 - 可升级版本\ncontract AMMFactory is\n    IAMMFactory,\n    Initializable,\n    OwnableUpgradeable,\n    ReentrancyGuardUpgradeable\n{\n    address public feeTo; //收税地址\n    address public feeToSetter; //收税权限控制地址\n    //配对映射,地址=>(地址=>地址)\n    mapping(address => mapping(address => address)) public getPair;\n    //所有配对数组\n    address[] public allPairs;\n    //配对合约的Bytecode的hash - 预计算的常量\n    bytes32 public constant INIT_CODE_PAIR_HASH =\n        0x96e8ac4277198ff8b6f785478aa9a39f403cb768dd02cbee326c3e7da348845f;\n\n    /// @custom:oz-upgrades-unsafe-allow constructor\n    constructor() {\n        _disableInitializers();\n    }\n\n    /**\n     * @dev 初始化函数，替代构造函数\n     * @param _feeToSetter 收税权限控制地址\n     */\n    function initialize(address _feeToSetter) external initializer {\n        __Ownable_init(msg.sender);\n        __ReentrancyGuard_init();\n        feeToSetter = _feeToSetter;\n    }\n\n    /**\n     * @dev 查询配对数组长度方法\n     */\n    function allPairsLength() external view returns (uint) {\n        return allPairs.length;\n    }\n\n    /**\n     *\n     * @param tokenA TokenA\n     * @param tokenB TokenB\n     * @return pair 配对地址\n     * @dev 创建配对\n     */\n    function createPair(\n        address tokenA,\n        address tokenB\n    ) external nonReentrant returns (address pair) {\n        //确认tokenA不等于tokenB\n        require(tokenA != tokenB, \"AMMFactory: IDENTICAL_ADDRESSES\");\n        //将tokenA和tokenB进行大小排序,确保tokenA小于tokenB\n        (address token0, address token1) = tokenA < tokenB\n            ? (tokenA, tokenB)\n            : (tokenB, tokenA);\n        //确认token0不等于0地址\n        require(token0 != address(0), \"AMMFactory: ZERO_ADDRESS\");\n        //确认配对映射中不存在token0=>token1\n        require(\n            getPair[token0][token1] == address(0),\n            \"AMMFactory: PAIR_EXISTS\"\n        ); // single check is sufficient\n        //给bytecode变量赋值\"pair\"合约的创建字节码\n        bytes memory bytecode = type(AMMTokenPair).creationCode;\n        //将token0和token1打包后创建哈希\n        bytes32 salt = keccak256(abi.encodePacked(token0, token1));\n        //内联汇编\n        assembly {\n            //通过create2方法布署合约,并且加盐,返回地址到pair变量\n            pair := create2(0, add(bytecode, 32), mload(bytecode), salt)\n        }\n        //调用pair地址的合约中的\"initialize\"方法,传入变量token0,token1\n        IAMMTokenPair(pair).initialize(token0, token1);\n        //配对映射中设置token0=>token1=pair\n        getPair[token0][token1] = pair;\n        //配对映射中设置token1=>token0=pair\n        getPair[token1][token0] = pair; // populate mapping in the reverse direction\n        //配对数组中推入pair地址\n        allPairs.push(pair);\n        //触发配对成功事件\n        emit PairCreated(token0, token1, pair, allPairs.length);\n    }\n\n    /**\n     * @dev 设置收税地址\n     * @param _feeTo 收税地址\n     */\n    function setFeeTo(address _feeTo) external {\n        require(msg.sender == feeToSetter, \"AMMFactory: FORBIDDEN\");\n        feeTo = _feeTo;\n    }\n\n    /**\n     * @dev 收税权限控制\n     * @param _feeToSetter 收税权限控制\n     */\n    function setFeeToSetter(address _feeToSetter) external {\n        require(msg.sender == feeToSetter, \"AMMFactory: FORBIDDEN\");\n        feeToSetter = _feeToSetter;\n    }\n}\n"},"contracts/AMMTokenPair.sol":{"content":"// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.5;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\nimport \"./interfaces/IAMMTokenPair.sol\";\nimport \"./libraries/Math.sol\";\nimport \"./libraries/UQ112x112.sol\";\nimport \"./interfaces/IAMMFactory.sol\";\nimport \"./interfaces/IAMMCallee.sol\";\n\n//AMM配对合约 - 可升级版本\ncontract AMMTokenPair is\n    Initializable,\n    ERC20PermitUpgradeable,\n    ReentrancyGuardUpgradeable,\n    PausableUpgradeable,\n    OwnableUpgradeable,\n    IAMMTokenPair\n{\n    using SafeERC20 for IERC20;\n    using UQ112x112 for uint224;\n\n    //最小流动性 = 1000\n    uint256 public constant MINIMUM_LIQUIDITY = 10 ** 3;\n    //SELECTOR常量值为'transfer(address,uint256)'字符串哈希值的前4位16进制数字\n    bytes4 private constant SELECTOR =\n        bytes4(keccak256(bytes(\"transfer(address,uint256)\")));\n\n    address public factory; //工厂地址\n    address public token0; //token0地址/\n    address public token1; //token1地址\n\n    uint112 private reserve0; // 储备量0\n    uint112 private reserve1; // 储备量1\n    uint32 private blockTimestampLast; // 更新储备量的最后时间戳\n    //价格0最后累计\n    uint256 public price0CumulativeLast;\n    //价格1最后累计\n    uint256 public price1CumulativeLast;\n\n    //在最近一次流动性事件之后的K值\n    //储备量0*储备量1，自最近一次流动性事件发生后\n    uint256 public kLast;\n\n    /// @custom:oz-upgrades-unsafe-allow constructor\n    constructor() {\n        _disableInitializers();\n    }\n\n    /**\n     * @param _token0 token0\n     * @param _token1 token1\n     * @dev 初始化方法,部署时由工厂调用一次\n     */\n    function initialize(address _token0, address _token1) external initializer {\n        __ERC20_init(\"AMM\", \"AMM\");\n        __ReentrancyGuard_init();\n        __Pausable_init();\n        __Ownable_init(msg.sender);\n\n        //确认调用者为工厂地址\n        factory = msg.sender;\n        token0 = _token0;\n        token1 = _token1;\n    }\n\n    /**\n     * @dev 紧急暂停功能 - 只有所有者可以调用\n     */\n    function pause() external onlyOwner {\n        _pause();\n    }\n\n    /**\n     * @dev 取消暂停功能 - 只有所有者可以调用\n     */\n    function unpause() external onlyOwner {\n        _unpause();\n    }\n\n    /**\n     * @return _reserve0 储备量0\n     * @return _reserve1 储备量1\n     * @return _blockTimestampLast 时间戳\n     * @dev 获取储备\n     */\n    function getReserves()\n        public\n        view\n        returns (\n            uint112 _reserve0,\n            uint112 _reserve1,\n            uint32 _blockTimestampLast\n        )\n    {\n        _reserve0 = reserve0;\n        _reserve1 = reserve1;\n        _blockTimestampLast = blockTimestampLast;\n    }\n\n    /**\n     * @param token token地址\n     * @param to    to地址\n     * @param value 数额\n     * @dev 私有安全发送\n     */\n    function _safeTransfer(address token, address to, uint256 value) private {\n        //调用token合约地址的低级transfer方法\n        (bool success, bytes memory data) = token.call(\n            abi.encodeWithSelector(SELECTOR, to, value)\n        );\n        //确认返回值为true并且返回的data长度为0或者解码后为true\n        require(\n            success && (data.length == 0 || abi.decode(data, (bool))),\n            \"AMMTokenPair: TRANSFER_FAILED\"\n        );\n    }\n\n    /**\n     * @param balance0 余额0\n     * @param balance1  余额1\n     * @param _reserve0 储备0\n     * @param _reserve1 储备1\n     * @dev 更新储量，并在每个区块的第一次调用时更新价格累加器\n     */\n    function _update(\n        uint256 balance0,\n        uint256 balance1,\n        uint112 _reserve0,\n        uint112 _reserve1\n    ) private {\n        //确认余额0和余额1小于等于最大的uint112\n        require(\n            balance0 <= type(uint112).max && balance1 <= type(uint112).max,\n            \"AMMTokenPair: OVERFLOW\"\n        );\n        //区块时间戳,将时间戳转换为uint32\n        uint32 blockTimestamp = uint32(block.timestamp % 2 ** 32);\n        //计算时间流逝\n        unchecked {\n            uint32 timeElapsed = blockTimestamp - blockTimestampLast; // overflow is desired\n            //如果时间流逝>0 并且 储备量0,1不等于0\n            if (timeElapsed > 0 && _reserve0 != 0 && _reserve1 != 0) {\n                // * never overflows, and + overflow is desired\n                //价格0最后累计 += 储备量1 * 2**112 / 储备量0 * 时间流逝\n                price0CumulativeLast +=\n                    uint256(UQ112x112.encode(_reserve1).uqdiv(_reserve0)) *\n                    timeElapsed;\n                //价格1最后累计 += 储备量0 * 2**112 / 储备量1 * 时间流逝\n                price1CumulativeLast +=\n                    uint256(UQ112x112.encode(_reserve0).uqdiv(_reserve1)) *\n                    timeElapsed;\n            }\n        }\n        //余额0,1放入储备量0,1\n        reserve0 = uint112(balance0);\n        reserve1 = uint112(balance1);\n        //更新最后时间戳\n        blockTimestampLast = blockTimestamp;\n        //触发同步事件\n        emit Sync(reserve0, reserve1);\n    }\n\n    /**\n     * @param _reserve0 储备0\n     * @param _reserve1 储备1\n     * @return feeOn\n     * @dev 如果收费，铸造流动性相当于1/6的增长sqrt（k）\n     */\n    function _mintFee(\n        uint112 _reserve0,\n        uint112 _reserve1\n    ) private returns (bool feeOn) {\n        //查询工厂合约的feeTo变量值\n        address feeTo = IAMMFactory(factory).feeTo();\n        //如果feeTo不等于0地址,feeOn等于true否则为false\n        feeOn = feeTo != address(0);\n        //定义k值\n        uint256 _kLast = kLast; // gas savings\n        //如果feeOn等于true\n        if (feeOn) {\n            //如果k值不等于0\n            if (_kLast != 0) {\n                //计算(_reserve0*_reserve1)的平方根\n                uint256 rootK = Math.sqrt(uint256(_reserve0) * _reserve1);\n                //计算k值的平方根\n                uint256 rootKLast = Math.sqrt(_kLast);\n                //如果rootK>rootKLast\n                if (rootK > rootKLast) {\n                    //分子 = erc20总量 * (rootK - rootKLast)\n                    uint256 numerator = totalSupply() * (rootK - rootKLast);\n                    //分母 = rootK * 5 + rootKLast\n                    uint256 denominator = rootK * 5 + rootKLast;\n                    //流动性 = 分子 / 分母\n                    uint256 liquidity = numerator / denominator;\n                    // 如果流动性 > 0 将流动性铸造给feeTo地址\n                    if (liquidity > 0) _mint(feeTo, liquidity);\n                }\n            }\n            //否则如果_kLast不等于0\n        } else if (_kLast != 0) {\n            //k值=0\n            kLast = 0;\n        }\n    }\n\n    /**\n     * @param to to地址\n     * @return liquidity 流动性数量\n     * @dev 铸造方法\n     * @notice 应该从执行重要安全检查的合同中调用此低级功能\n     */\n    function mint(\n        address to\n    ) external nonReentrant whenNotPaused returns (uint256 liquidity) {\n        //获取`储备量0`,`储备量1`\n        (uint112 _reserve0, uint112 _reserve1, ) = getReserves(); // gas savings\n        //获取当前合约在token0合约内的余额\n        uint256 balance0 = IERC20(token0).balanceOf(address(this));\n        //获取当前合约在token1合约内的余额\n        uint256 balance1 = IERC20(token1).balanceOf(address(this));\n        //amount0 = 余额0 - 储备0\n        uint256 amount0 = balance0 - _reserve0;\n        //amount1 = 余额1 - 储备1\n        uint256 amount1 = balance1 - _reserve1;\n\n        //返回铸造费开关\n        bool feeOn = _mintFee(_reserve0, _reserve1);\n        //获取totalSupply,必须在此处定义，因为totalSupply可以在mintFee中更新\n        uint256 _totalSupply = totalSupply(); // gas savings, must be defined here since totalSupply can update in _mintFee\n        //如果_totalSupply等于0\n        if (_totalSupply == 0) {\n            //流动性 = (数量0 * 数量1)的平方根 - 最小流动性1000\n            liquidity = Math.sqrt(amount0 * amount1) - MINIMUM_LIQUIDITY;\n            //在总量为0的初始状态,永久锁定最低流动性\n            _mint(address(0), MINIMUM_LIQUIDITY); // permanently lock the first MINIMUM_LIQUIDITY tokens\n        } else {\n            //流动性 = 最小值 (amount0 * _totalSupply / _reserve0) 和 (amount1 * _totalSupply / _reserve1)\n            liquidity = Math.min(\n                (amount0 * _totalSupply) / _reserve0,\n                (amount1 * _totalSupply) / _reserve1\n            );\n        }\n        //确认流动性 > 0\n        require(liquidity > 0, \"AMMTokenPair: INSUFFICIENT_LIQUIDITY_MINTED\");\n        //铸造流动性给to地址\n        _mint(to, liquidity);\n\n        //更新储备量\n        _update(balance0, balance1, _reserve0, _reserve1);\n        //如果铸造费开关为true, k值 = 储备0 * 储备1\n        if (feeOn) kLast = uint256(reserve0) * reserve1; // reserve0 and reserve1 are up-to-date\n        //触发铸造事件\n        emit Mint(msg.sender, amount0, amount1);\n    }\n\n    /**\n     * @param to to地址\n     * @return amount0\n     * @return amount1\n     * @dev 销毁方法\n     * @notice 应该从执行重要安全检查的合同中调用此低级功能\n     */\n    function burn(\n        address to\n    )\n        external\n        nonReentrant\n        whenNotPaused\n        returns (uint256 amount0, uint256 amount1)\n    {\n        //获取`储备量0`,`储备量1`\n        (uint112 _reserve0, uint112 _reserve1, ) = getReserves(); // gas savings\n        //带入变量\n        address _token0 = token0; // gas savings\n        address _token1 = token1; // gas savings\n        //获取当前合约在token0合约内的余额\n        uint256 balance0 = IERC20(_token0).balanceOf(address(this));\n        //获取当前合约在token1合约内的余额\n        uint256 balance1 = IERC20(_token1).balanceOf(address(this));\n        //从当前合约的balanceOf映射中获取当前合约自身的流动性数量\n        uint256 liquidity = balanceOf(address(this));\n\n        //返回铸造费开关\n        bool feeOn = _mintFee(_reserve0, _reserve1);\n        //获取totalSupply,必须在此处定义，因为totalSupply可以在mintFee中更新\n        uint256 _totalSupply = totalSupply(); // gas savings, must be defined here since totalSupply can update in _mintFee\n        //amount0 = 流动性数量 * 余额0 / totalSupply   使用余额确保按比例分配\n        amount0 = (liquidity * balance0) / _totalSupply; // using balances ensures pro-rata distribution\n        //amount1 = 流动性数量 * 余额1 / totalSupply   使用余额确保按比例分配\n        amount1 = (liquidity * balance1) / _totalSupply; // using balances ensures pro-rata distribution\n        //确认amount0和amount1都大于0\n        require(\n            amount0 > 0 && amount1 > 0,\n            \"AMMTokenPair: INSUFFICIENT_LIQUIDITY_BURNED\"\n        );\n        //销毁当前合约内的流动性数量\n        _burn(address(this), liquidity);\n        //将amount0数量的_token0发送给to地址\n        _safeTransfer(_token0, to, amount0);\n        //将amount1数量的_token1发送给to地址\n        _safeTransfer(_token1, to, amount1);\n        //更新balance0\n        balance0 = IERC20(_token0).balanceOf(address(this));\n        //更新balance1\n        balance1 = IERC20(_token1).balanceOf(address(this));\n\n        //更新储备量\n        _update(balance0, balance1, _reserve0, _reserve1);\n        //如果铸造费开关为true, k值 = 储备0 * 储备1\n        if (feeOn) kLast = uint256(reserve0) * reserve1; // reserve0 and reserve1 are up-to-date\n        //触发销毁事件\n        emit Burn(msg.sender, amount0, amount1, to);\n    }\n\n    /**\n     * @param amount0Out 输出数额0\n     * @param amount1Out 输出数额1\n     * @param to    to地址\n     * @param data  用于回调的数据\n     * @dev 交换方法\n     * @notice 应该从执行重要安全检查的合同中调用此低级功能\n     */\n    function swap(\n        uint256 amount0Out,\n        uint256 amount1Out,\n        address to,\n        bytes calldata data\n    ) external nonReentrant whenNotPaused {\n        //确认amount0Out和amount1Out都大于0\n        require(\n            amount0Out > 0 || amount1Out > 0,\n            \"AMMTokenPair: INSUFFICIENT_OUTPUT_AMOUNT\"\n        );\n        //获取`储备量0`,`储备量1`\n        (uint112 _reserve0, uint112 _reserve1, ) = getReserves(); // gas savings\n        //确认`输出数量0,1` < `储备量0,1`\n        require(\n            amount0Out < _reserve0 && amount1Out < _reserve1,\n            \"AMMTokenPair: INSUFFICIENT_LIQUIDITY\"\n        );\n\n        //初始化变量\n        uint256 balance0;\n        uint256 balance1;\n        {\n            //标记_token{0,1}的作用域，避免堆栈太深的错误\n            // scope for _token{0,1}, avoids stack too deep errors\n            address _token0 = token0;\n            address _token1 = token1;\n\n            //确认to地址不等于_token0和_token1\n            require(to != _token0 && to != _token1, \"AMMTokenPair: INVALID_TO\");\n            //如果`输出数量0` > 0 安全发送`输出数量0`的token0到to地址\n            if (amount0Out > 0) _safeTransfer(_token0, to, amount0Out); // optimistically transfer tokens\n            //如果`输出数量1` > 0 安全发送`输出数量1`的token1到to地址\n            if (amount1Out > 0) _safeTransfer(_token1, to, amount1Out); // optimistically transfer tokens\n            //如果data的长度大于0 调用to地址的接口\n            if (data.length > 0)\n                IAMMCallee(to).ammCall(\n                    msg.sender,\n                    amount0Out,\n                    amount1Out,\n                    data\n                );\n            //`余额0,1` = 当前合约在`token0,1`合约内的余额\n            balance0 = IERC20(_token0).balanceOf(address(this));\n            balance1 = IERC20(_token1).balanceOf(address(this));\n        }\n        //如果 余额0 > 储备0 - amount0Out 则 amount0In = 余额0 - (储备0 - amount0Out) 否则 amount0In = 0\n        uint256 amount0In = balance0 > _reserve0 - amount0Out\n            ? balance0 - (_reserve0 - amount0Out)\n            : 0;\n        //如果 余额1 > 储备1 - amount1Out 则 amount1In = 余额1 - (储备1 - amount1Out) 否则 amount1In = 0\n        uint256 amount1In = balance1 > _reserve1 - amount1Out\n            ? balance1 - (_reserve1 - amount1Out)\n            : 0;\n        //确认`输入数量0||1`大于0\n        require(\n            amount0In > 0 || amount1In > 0,\n            \"AMMTokenPair: INSUFFICIENT_INPUT_AMOUNT\"\n        );\n        {\n            //标记reserve{0,1}的作用域，避免堆栈太深的错误\n            // scope for reserve{0,1}Adjusted, avoids stack too deep errors\n            //调整后的余额0 = 余额0 * 1000 - (amount0In * 3)\n            uint256 balance0Adjusted = balance0 * 1000 - (amount0In * 3);\n            //调整后的余额1 = 余额1 * 1000 - (amount1In * 3)\n            uint256 balance1Adjusted = balance1 * 1000 - (amount1In * 3);\n            //确认balance0Adjusted * balance1Adjusted >= 储备0 * 储备1 * 1000000\n            require(\n                balance0Adjusted * balance1Adjusted >=\n                    uint256(_reserve0) * _reserve1 * (1000 ** 2),\n                \"AMMTokenPair: K\"\n            );\n        }\n\n        //更新储备量\n        _update(balance0, balance1, _reserve0, _reserve1);\n        //触发交换事件\n        emit Swap(msg.sender, amount0In, amount1In, amount0Out, amount1Out, to);\n    }\n\n    /**\n     * @param to to地址\n     * @dev 强制平衡以匹配储备\n     */\n    function skim(address to) external nonReentrant {\n        address _token0 = token0; // gas savings\n        address _token1 = token1; // gas savings\n        //将当前合约在`token0,1`的余额-`储备量0,1`安全发送到to地址\n        _safeTransfer(\n            _token0,\n            to,\n            IERC20(_token0).balanceOf(address(this)) - reserve0\n        );\n        _safeTransfer(\n            _token1,\n            to,\n            IERC20(_token1).balanceOf(address(this)) - reserve1\n        );\n    }\n\n    /**\n     * @dev 强制准备金与余额匹配\n     */\n    function sync() external nonReentrant {\n        _update(\n            IERC20(token0).balanceOf(address(this)),\n            IERC20(token1).balanceOf(address(this)),\n            reserve0,\n            reserve1\n        );\n    }\n}\n"},"contracts/interfaces/IAMMCallee.sol":{"content":"// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.5;\n\ninterface IAMMCallee {\n    function ammCall(\n        address sender,\n        uint amount0,\n        uint amount1,\n        bytes calldata data\n    ) external;\n}\n"},"contracts/interfaces/IAMMFactory.sol":{"content":"// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.5;\n\ninterface IAMMFactory {\n    event PairCreated(\n        address indexed token0,\n        address indexed token1,\n        address pair,\n        uint\n    );\n\n    function feeTo() external view returns (address);\n    function feeToSetter() external view returns (address);\n\n    function getPair(\n        address tokenA,\n        address tokenB\n    ) external view returns (address pair);\n    function allPairs(uint) external view returns (address pair);\n    function allPairsLength() external view returns (uint);\n\n    function createPair(\n        address tokenA,\n        address tokenB\n    ) external returns (address pair);\n\n    function setFeeTo(address) external;\n    function setFeeToSetter(address) external;\n}\n"},"contracts/interfaces/IAMMTokenPair.sol":{"content":"// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.5;\n\ninterface IAMMTokenPair {\n    event Mint(address indexed sender, uint amount0, uint amount1);\n    event Burn(\n        address indexed sender,\n        uint amount0,\n        uint amount1,\n        address indexed to\n    );\n    event Swap(\n        address indexed sender,\n        uint amount0In,\n        uint amount1In,\n        uint amount0Out,\n        uint amount1Out,\n        address indexed to\n    );\n    event Sync(uint112 reserve0, uint112 reserve1);\n\n    function MINIMUM_LIQUIDITY() external pure returns (uint);\n    function factory() external view returns (address);\n    function token0() external view returns (address);\n    function token1() external view returns (address);\n    function getReserves()\n        external\n        view\n        returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\n    function price0CumulativeLast() external view returns (uint);\n    function price1CumulativeLast() external view returns (uint);\n    function kLast() external view returns (uint);\n\n    function mint(address to) external returns (uint liquidity);\n    function burn(address to) external returns (uint amount0, uint amount1);\n    function swap(\n        uint amount0Out,\n        uint amount1Out,\n        address to,\n        bytes calldata data\n    ) external;\n    function skim(address to) external;\n    function sync() external;\n\n    function initialize(address, address) external;\n}\n"},"contracts/libraries/Math.sol":{"content":"// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.5;\n\n// a library for performing various math operations\n\nlibrary Math {\n    function min(uint x, uint y) internal pure returns (uint z) {\n        z = x < y ? x : y;\n    }\n\n    // babylonian method (https://en.wikipedia.org/wiki/Methods_of_computing_square_roots#Babylonian_method)\n    function sqrt(uint y) internal pure returns (uint z) {\n        if (y > 3) {\n            z = y;\n            uint x = y / 2 + 1;\n            while (x < z) {\n                z = x;\n                x = (y / x + x) / 2;\n            }\n        } else if (y != 0) {\n            z = 1;\n        }\n    }\n}\n"},"contracts/libraries/UQ112x112.sol":{"content":"// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.5;\n\n// a library for handling binary fixed point numbers (https://en.wikipedia.org/wiki/Q_(number_format))\n\n// range: [0, 2**112 - 1]\n// resolution: 1 / 2**112\n\nlibrary UQ112x112 {\n    uint224 constant Q112 = 2 ** 112;\n\n    // encode a uint112 as a UQ112x112\n    function encode(uint112 y) internal pure returns (uint224 z) {\n        z = uint224(y) * Q112; // never overflows\n    }\n\n    // divide a UQ112x112 by a uint112, returning a UQ112x112\n    function uqdiv(uint224 x, uint112 y) internal pure returns (uint224 z) {\n        z = x / uint224(y);\n    }\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"viaIR":true,"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","storageLayout"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[1294],"Initializable":[462],"OwnableUpgradeable":[194]},"id":195,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":195,"sourceUnit":1295,"src":"128:67:0","symbolAliases":[{"foreign":{"id":2,"name":"ContextUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"136:18:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":195,"sourceUnit":463,"src":"196:63:0","symbolAliases":[{"foreign":{"id":4,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"204:13:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":7,"name":"Initializable","nameLocations":["789:13:0"],"nodeType":"IdentifierPath","referencedDeclaration":462,"src":"789:13:0"},"id":8,"nodeType":"InheritanceSpecifier","src":"789:13:0"},{"baseName":{"id":9,"name":"ContextUpgradeable","nameLocations":["804:18:0"],"nodeType":"IdentifierPath","referencedDeclaration":1294,"src":"804:18:0"},"id":10,"nodeType":"InheritanceSpecifier","src":"804:18:0"}],"canonicalName":"OwnableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":6,"nodeType":"StructuredDocumentation","src":"261:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":194,"linearizedBaseContracts":[194,1294,462],"name":"OwnableUpgradeable","nameLocation":"767:18:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"OwnableUpgradeable.OwnableStorage","documentation":{"id":11,"nodeType":"StructuredDocumentation","src":"829:65:0","text":"@custom:storage-location erc7201:openzeppelin.storage.Ownable"},"id":14,"members":[{"constant":false,"id":13,"mutability":"mutable","name":"_owner","nameLocation":"939:6:0","nodeType":"VariableDeclaration","scope":14,"src":"931:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"OwnableStorage","nameLocation":"906:14:0","nodeType":"StructDefinition","scope":194,"src":"899:53:0","visibility":"public"},{"constant":true,"id":17,"mutability":"constant","name":"OwnableStorageLocation","nameLocation":"1094:22:0","nodeType":"VariableDeclaration","scope":194,"src":"1069:116:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1069:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307839303136643039643732643430666461653266643863656163366236323334633737303632313466643339633163643165363039613035323863313939333030","id":16,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1119:66:0","typeDescriptions":{"typeIdentifier":"t_rational_65173360639460082030725920392146925864023520599682862633725751242436743107328_by_1","typeString":"int_const 6517...(69 digits omitted)...7328"},"value":"0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300"},"visibility":"private"},{"body":{"id":24,"nodeType":"Block","src":"1270:81:0","statements":[{"AST":{"nativeSrc":"1289:56:0","nodeType":"YulBlock","src":"1289:56:0","statements":[{"nativeSrc":"1303:32:0","nodeType":"YulAssignment","src":"1303:32:0","value":{"name":"OwnableStorageLocation","nativeSrc":"1313:22:0","nodeType":"YulIdentifier","src":"1313:22:0"},"variableNames":[{"name":"$.slot","nativeSrc":"1303:6:0","nodeType":"YulIdentifier","src":"1303:6:0"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":21,"isOffset":false,"isSlot":true,"src":"1303:6:0","suffix":"slot","valueSize":1},{"declaration":17,"isOffset":false,"isSlot":false,"src":"1313:22:0","valueSize":1}],"id":23,"nodeType":"InlineAssembly","src":"1280:65:0"}]},"id":25,"implemented":true,"kind":"function","modifiers":[],"name":"_getOwnableStorage","nameLocation":"1201:18:0","nodeType":"FunctionDefinition","parameters":{"id":18,"nodeType":"ParameterList","parameters":[],"src":"1219:2:0"},"returnParameters":{"id":22,"nodeType":"ParameterList","parameters":[{"constant":false,"id":21,"mutability":"mutable","name":"$","nameLocation":"1267:1:0","nodeType":"VariableDeclaration","scope":25,"src":"1244:24:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"},"typeName":{"id":20,"nodeType":"UserDefinedTypeName","pathNode":{"id":19,"name":"OwnableStorage","nameLocations":["1244:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":14,"src":"1244:14:0"},"referencedDeclaration":14,"src":"1244:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"}},"visibility":"internal"}],"src":"1243:26:0"},"scope":194,"src":"1192:159:0","stateMutability":"pure","virtual":false,"visibility":"private"},{"documentation":{"id":26,"nodeType":"StructuredDocumentation","src":"1357:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":30,"name":"OwnableUnauthorizedAccount","nameLocation":"1453:26:0","nodeType":"ErrorDefinition","parameters":{"id":29,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28,"mutability":"mutable","name":"account","nameLocation":"1488:7:0","nodeType":"VariableDeclaration","scope":30,"src":"1480:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":27,"name":"address","nodeType":"ElementaryTypeName","src":"1480:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1479:17:0"},"src":"1447:50:0"},{"documentation":{"id":31,"nodeType":"StructuredDocumentation","src":"1503:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":35,"name":"OwnableInvalidOwner","nameLocation":"1596:19:0","nodeType":"ErrorDefinition","parameters":{"id":34,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33,"mutability":"mutable","name":"owner","nameLocation":"1624:5:0","nodeType":"VariableDeclaration","scope":35,"src":"1616:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":32,"name":"address","nodeType":"ElementaryTypeName","src":"1616:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1615:15:0"},"src":"1590:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":41,"name":"OwnershipTransferred","nameLocation":"1643:20:0","nodeType":"EventDefinition","parameters":{"id":40,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1680:13:0","nodeType":"VariableDeclaration","scope":41,"src":"1664:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":36,"name":"address","nodeType":"ElementaryTypeName","src":"1664:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":39,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1711:8:0","nodeType":"VariableDeclaration","scope":41,"src":"1695:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":38,"name":"address","nodeType":"ElementaryTypeName","src":"1695:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1663:57:0"},"src":"1637:84:0"},{"body":{"id":53,"nodeType":"Block","src":"1919:55:0","statements":[{"expression":{"arguments":[{"id":50,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44,"src":"1954:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":49,"name":"__Ownable_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"1929:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1929:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":52,"nodeType":"ExpressionStatement","src":"1929:38:0"}]},"documentation":{"id":42,"nodeType":"StructuredDocumentation","src":"1727:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":54,"implemented":true,"kind":"function","modifiers":[{"id":47,"kind":"modifierInvocation","modifierName":{"id":46,"name":"onlyInitializing","nameLocations":["1902:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"1902:16:0"},"nodeType":"ModifierInvocation","src":"1902:16:0"}],"name":"__Ownable_init","nameLocation":"1856:14:0","nodeType":"FunctionDefinition","parameters":{"id":45,"nodeType":"ParameterList","parameters":[{"constant":false,"id":44,"mutability":"mutable","name":"initialOwner","nameLocation":"1879:12:0","nodeType":"VariableDeclaration","scope":54,"src":"1871:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":43,"name":"address","nodeType":"ElementaryTypeName","src":"1871:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1870:22:0"},"returnParameters":{"id":48,"nodeType":"ParameterList","parameters":[],"src":"1919:0:0"},"scope":194,"src":"1847:127:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":80,"nodeType":"Block","src":"2062:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":66,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":61,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56,"src":"2076:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2100:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":63,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2092:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":62,"name":"address","nodeType":"ElementaryTypeName","src":"2092:7:0","typeDescriptions":{}}},"id":65,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2092:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2076:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":75,"nodeType":"IfStatement","src":"2072:95:0","trueBody":{"id":74,"nodeType":"Block","src":"2104:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":70,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2153:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":69,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2145:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":68,"name":"address","nodeType":"ElementaryTypeName","src":"2145:7:0","typeDescriptions":{}}},"id":71,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2145:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":67,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":35,"src":"2125:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2125:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":73,"nodeType":"RevertStatement","src":"2118:38:0"}]}},{"expression":{"arguments":[{"id":77,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56,"src":"2195:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"2176:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2176:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":79,"nodeType":"ExpressionStatement","src":"2176:32:0"}]},"id":81,"implemented":true,"kind":"function","modifiers":[{"id":59,"kind":"modifierInvocation","modifierName":{"id":58,"name":"onlyInitializing","nameLocations":["2045:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"2045:16:0"},"nodeType":"ModifierInvocation","src":"2045:16:0"}],"name":"__Ownable_init_unchained","nameLocation":"1989:24:0","nodeType":"FunctionDefinition","parameters":{"id":57,"nodeType":"ParameterList","parameters":[{"constant":false,"id":56,"mutability":"mutable","name":"initialOwner","nameLocation":"2022:12:0","nodeType":"VariableDeclaration","scope":81,"src":"2014:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":55,"name":"address","nodeType":"ElementaryTypeName","src":"2014:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2013:22:0"},"returnParameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"2062:0:0"},"scope":194,"src":"1980:235:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":88,"nodeType":"Block","src":"2324:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":84,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":122,"src":"2334:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":85,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2334:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":86,"nodeType":"ExpressionStatement","src":"2334:13:0"},{"id":87,"nodeType":"PlaceholderStatement","src":"2357:1:0"}]},"documentation":{"id":82,"nodeType":"StructuredDocumentation","src":"2221:77:0","text":" @dev Throws if called by any account other than the owner."},"id":89,"name":"onlyOwner","nameLocation":"2312:9:0","nodeType":"ModifierDefinition","parameters":{"id":83,"nodeType":"ParameterList","parameters":[],"src":"2321:2:0"},"src":"2303:62:0","virtual":false,"visibility":"internal"},{"body":{"id":104,"nodeType":"Block","src":"2496:89:0","statements":[{"assignments":[97],"declarations":[{"constant":false,"id":97,"mutability":"mutable","name":"$","nameLocation":"2529:1:0","nodeType":"VariableDeclaration","scope":104,"src":"2506:24:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"},"typeName":{"id":96,"nodeType":"UserDefinedTypeName","pathNode":{"id":95,"name":"OwnableStorage","nameLocations":["2506:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":14,"src":"2506:14:0"},"referencedDeclaration":14,"src":"2506:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"}},"visibility":"internal"}],"id":100,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":98,"name":"_getOwnableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"2533:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$","typeString":"function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"}},"id":99,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2533:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2506:47:0"},{"expression":{"expression":{"id":101,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"2570:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"id":102,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2572:6:0","memberName":"_owner","nodeType":"MemberAccess","referencedDeclaration":13,"src":"2570:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":94,"id":103,"nodeType":"Return","src":"2563:15:0"}]},"documentation":{"id":90,"nodeType":"StructuredDocumentation","src":"2371:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":105,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"2450:5:0","nodeType":"FunctionDefinition","parameters":{"id":91,"nodeType":"ParameterList","parameters":[],"src":"2455:2:0"},"returnParameters":{"id":94,"nodeType":"ParameterList","parameters":[{"constant":false,"id":93,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":105,"src":"2487:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":92,"name":"address","nodeType":"ElementaryTypeName","src":"2487:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2486:9:0"},"scope":194,"src":"2441:144:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":121,"nodeType":"Block","src":"2703:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":109,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":105,"src":"2717:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2717:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":111,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1276,"src":"2728:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2728:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2717:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2713:101:0","trueBody":{"id":119,"nodeType":"Block","src":"2742:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":115,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1276,"src":"2790:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2790:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":114,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"2763:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2763:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":118,"nodeType":"RevertStatement","src":"2756:47:0"}]}}]},"documentation":{"id":106,"nodeType":"StructuredDocumentation","src":"2591:62:0","text":" @dev Throws if the sender is not the owner."},"id":122,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"2667:11:0","nodeType":"FunctionDefinition","parameters":{"id":107,"nodeType":"ParameterList","parameters":[],"src":"2678:2:0"},"returnParameters":{"id":108,"nodeType":"ParameterList","parameters":[],"src":"2703:0:0"},"scope":194,"src":"2658:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":135,"nodeType":"Block","src":"3209:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3246:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":130,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3238:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":129,"name":"address","nodeType":"ElementaryTypeName","src":"3238:7:0","typeDescriptions":{}}},"id":132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3238:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":128,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"3219:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3219:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":134,"nodeType":"ExpressionStatement","src":"3219:30:0"}]},"documentation":{"id":123,"nodeType":"StructuredDocumentation","src":"2826:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":136,"implemented":true,"kind":"function","modifiers":[{"id":126,"kind":"modifierInvocation","modifierName":{"id":125,"name":"onlyOwner","nameLocations":["3199:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"3199:9:0"},"nodeType":"ModifierInvocation","src":"3199:9:0"}],"name":"renounceOwnership","nameLocation":"3164:17:0","nodeType":"FunctionDefinition","parameters":{"id":124,"nodeType":"ParameterList","parameters":[],"src":"3181:2:0"},"returnParameters":{"id":127,"nodeType":"ParameterList","parameters":[],"src":"3209:0:0"},"scope":194,"src":"3155:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":163,"nodeType":"Block","src":"3475:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":144,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":139,"src":"3489:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3509:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":146,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3501:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":145,"name":"address","nodeType":"ElementaryTypeName","src":"3501:7:0","typeDescriptions":{}}},"id":148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3501:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3489:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":158,"nodeType":"IfStatement","src":"3485:91:0","trueBody":{"id":157,"nodeType":"Block","src":"3513:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3562:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":152,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3554:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":151,"name":"address","nodeType":"ElementaryTypeName","src":"3554:7:0","typeDescriptions":{}}},"id":154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3554:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":150,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":35,"src":"3534:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3534:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":156,"nodeType":"RevertStatement","src":"3527:38:0"}]}},{"expression":{"arguments":[{"id":160,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":139,"src":"3604:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":159,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"3585:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3585:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":162,"nodeType":"ExpressionStatement","src":"3585:28:0"}]},"documentation":{"id":137,"nodeType":"StructuredDocumentation","src":"3262:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":164,"implemented":true,"kind":"function","modifiers":[{"id":142,"kind":"modifierInvocation","modifierName":{"id":141,"name":"onlyOwner","nameLocations":["3465:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"3465:9:0"},"nodeType":"ModifierInvocation","src":"3465:9:0"}],"name":"transferOwnership","nameLocation":"3414:17:0","nodeType":"FunctionDefinition","parameters":{"id":140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":139,"mutability":"mutable","name":"newOwner","nameLocation":"3440:8:0","nodeType":"VariableDeclaration","scope":164,"src":"3432:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":138,"name":"address","nodeType":"ElementaryTypeName","src":"3432:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3431:18:0"},"returnParameters":{"id":143,"nodeType":"ParameterList","parameters":[],"src":"3475:0:0"},"scope":194,"src":"3405:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":192,"nodeType":"Block","src":"3837:185:0","statements":[{"assignments":[172],"declarations":[{"constant":false,"id":172,"mutability":"mutable","name":"$","nameLocation":"3870:1:0","nodeType":"VariableDeclaration","scope":192,"src":"3847:24:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"},"typeName":{"id":171,"nodeType":"UserDefinedTypeName","pathNode":{"id":170,"name":"OwnableStorage","nameLocations":["3847:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":14,"src":"3847:14:0"},"referencedDeclaration":14,"src":"3847:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"}},"visibility":"internal"}],"id":175,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":173,"name":"_getOwnableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"3874:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$","typeString":"function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"}},"id":174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3874:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3847:47:0"},{"assignments":[177],"declarations":[{"constant":false,"id":177,"mutability":"mutable","name":"oldOwner","nameLocation":"3912:8:0","nodeType":"VariableDeclaration","scope":192,"src":"3904:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":176,"name":"address","nodeType":"ElementaryTypeName","src":"3904:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":180,"initialValue":{"expression":{"id":178,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"3923:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"id":179,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3925:6:0","memberName":"_owner","nodeType":"MemberAccess","referencedDeclaration":13,"src":"3923:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3904:27:0"},{"expression":{"id":185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":181,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"3941:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"id":183,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3943:6:0","memberName":"_owner","nodeType":"MemberAccess","referencedDeclaration":13,"src":"3941:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":184,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"3952:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3941:19:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":186,"nodeType":"ExpressionStatement","src":"3941:19:0"},{"eventCall":{"arguments":[{"id":188,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":177,"src":"3996:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":189,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"4006:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":187,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"3975:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3975:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":191,"nodeType":"EmitStatement","src":"3970:45:0"}]},"documentation":{"id":165,"nodeType":"StructuredDocumentation","src":"3626:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":193,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"3783:18:0","nodeType":"FunctionDefinition","parameters":{"id":168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":167,"mutability":"mutable","name":"newOwner","nameLocation":"3810:8:0","nodeType":"VariableDeclaration","scope":193,"src":"3802:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":166,"name":"address","nodeType":"ElementaryTypeName","src":"3802:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3801:18:0"},"returnParameters":{"id":169,"nodeType":"ParameterList","parameters":[],"src":"3837:0:0"},"scope":194,"src":"3774:248:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":195,"src":"749:3275:0","usedErrors":[30,35,211,214],"usedEvents":[41,219]}],"src":"102:3923:0"},"id":0},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","exportedSymbols":{"Initializable":[462]},"id":463,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":196,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:1"},{"abstract":true,"baseContracts":[],"canonicalName":"Initializable","contractDependencies":[],"contractKind":"contract","documentation":{"id":197,"nodeType":"StructuredDocumentation","src":"139:2209:1","text":" @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="},"fullyImplemented":true,"id":462,"linearizedBaseContracts":[462],"name":"Initializable","nameLocation":"2367:13:1","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Initializable.InitializableStorage","documentation":{"id":198,"nodeType":"StructuredDocumentation","src":"2387:293:1","text":" @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"},"id":205,"members":[{"constant":false,"id":201,"mutability":"mutable","name":"_initialized","nameLocation":"2820:12:1","nodeType":"VariableDeclaration","scope":205,"src":"2813:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":200,"name":"uint64","nodeType":"ElementaryTypeName","src":"2813:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":204,"mutability":"mutable","name":"_initializing","nameLocation":"2955:13:1","nodeType":"VariableDeclaration","scope":205,"src":"2950:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":203,"name":"bool","nodeType":"ElementaryTypeName","src":"2950:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"InitializableStorage","nameLocation":"2692:20:1","nodeType":"StructDefinition","scope":462,"src":"2685:290:1","visibility":"public"},{"constant":true,"id":208,"mutability":"constant","name":"INITIALIZABLE_STORAGE","nameLocation":"3123:21:1","nodeType":"VariableDeclaration","scope":462,"src":"3098:115:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":206,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3098:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030","id":207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3147:66:1","typeDescriptions":{"typeIdentifier":"t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1","typeString":"int_const 1089...(70 digits omitted)...9600"},"value":"0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"},"visibility":"private"},{"documentation":{"id":209,"nodeType":"StructuredDocumentation","src":"3220:60:1","text":" @dev The contract is already initialized."},"errorSelector":"f92ee8a9","id":211,"name":"InvalidInitialization","nameLocation":"3291:21:1","nodeType":"ErrorDefinition","parameters":{"id":210,"nodeType":"ParameterList","parameters":[],"src":"3312:2:1"},"src":"3285:30:1"},{"documentation":{"id":212,"nodeType":"StructuredDocumentation","src":"3321:57:1","text":" @dev The contract is not initializing."},"errorSelector":"d7e6bcf8","id":214,"name":"NotInitializing","nameLocation":"3389:15:1","nodeType":"ErrorDefinition","parameters":{"id":213,"nodeType":"ParameterList","parameters":[],"src":"3404:2:1"},"src":"3383:24:1"},{"anonymous":false,"documentation":{"id":215,"nodeType":"StructuredDocumentation","src":"3413:90:1","text":" @dev Triggered when the contract has been initialized or reinitialized."},"eventSelector":"c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2","id":219,"name":"Initialized","nameLocation":"3514:11:1","nodeType":"EventDefinition","parameters":{"id":218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":217,"indexed":false,"mutability":"mutable","name":"version","nameLocation":"3533:7:1","nodeType":"VariableDeclaration","scope":219,"src":"3526:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":216,"name":"uint64","nodeType":"ElementaryTypeName","src":"3526:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3525:16:1"},"src":"3508:34:1"},{"body":{"id":301,"nodeType":"Block","src":"4092:1079:1","statements":[{"assignments":[224],"declarations":[{"constant":false,"id":224,"mutability":"mutable","name":"$","nameLocation":"4187:1:1","nodeType":"VariableDeclaration","scope":301,"src":"4158:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":223,"nodeType":"UserDefinedTypeName","pathNode":{"id":222,"name":"InitializableStorage","nameLocations":["4158:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":205,"src":"4158:20:1"},"referencedDeclaration":205,"src":"4158:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":227,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":225,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"4191:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4191:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4158:59:1"},{"assignments":[229],"declarations":[{"constant":false,"id":229,"mutability":"mutable","name":"isTopLevelCall","nameLocation":"4284:14:1","nodeType":"VariableDeclaration","scope":301,"src":"4279:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":228,"name":"bool","nodeType":"ElementaryTypeName","src":"4279:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":233,"initialValue":{"id":232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4301:16:1","subExpression":{"expression":{"id":230,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"4302:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":231,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4304:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"4302:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4279:38:1"},{"assignments":[235],"declarations":[{"constant":false,"id":235,"mutability":"mutable","name":"initialized","nameLocation":"4334:11:1","nodeType":"VariableDeclaration","scope":301,"src":"4327:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":234,"name":"uint64","nodeType":"ElementaryTypeName","src":"4327:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"id":238,"initialValue":{"expression":{"id":236,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"4348:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":237,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4350:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"4348:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"VariableDeclarationStatement","src":"4327:35:1"},{"assignments":[240],"declarations":[{"constant":false,"id":240,"mutability":"mutable","name":"initialSetup","nameLocation":"4709:12:1","nodeType":"VariableDeclaration","scope":301,"src":"4704:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":239,"name":"bool","nodeType":"ElementaryTypeName","src":"4704:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":246,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":241,"name":"initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"4724:11:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4739:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4724:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":244,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"4744:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4724:34:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4704:54:1"},{"assignments":[248],"declarations":[{"constant":false,"id":248,"mutability":"mutable","name":"construction","nameLocation":"4773:12:1","nodeType":"VariableDeclaration","scope":301,"src":"4768:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":247,"name":"bool","nodeType":"ElementaryTypeName","src":"4768:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":261,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":249,"name":"initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"4788:11:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4803:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4788:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":254,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4816:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_Initializable_$462","typeString":"contract Initializable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Initializable_$462","typeString":"contract Initializable"}],"id":253,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4808:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":252,"name":"address","nodeType":"ElementaryTypeName","src":"4808:7:1","typeDescriptions":{}}},"id":255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4808:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4822:4:1","memberName":"code","nodeType":"MemberAccess","src":"4808:18:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4827:6:1","memberName":"length","nodeType":"MemberAccess","src":"4808:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4837:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4808:30:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4788:50:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4768:70:1"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4853:13:1","subExpression":{"id":262,"name":"initialSetup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":240,"src":"4854:12:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4870:13:1","subExpression":{"id":264,"name":"construction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"4871:12:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4853:30:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":271,"nodeType":"IfStatement","src":"4849:91:1","trueBody":{"id":270,"nodeType":"Block","src":"4885:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":267,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"4906:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4906:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":269,"nodeType":"RevertStatement","src":"4899:30:1"}]}},{"expression":{"id":276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":272,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"4949:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":274,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4951:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"4949:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4966:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4949:18:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":277,"nodeType":"ExpressionStatement","src":"4949:18:1"},{"condition":{"id":278,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"4981:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":286,"nodeType":"IfStatement","src":"4977:67:1","trueBody":{"id":285,"nodeType":"Block","src":"4997:47:1","statements":[{"expression":{"id":283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":279,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"5011:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":281,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5013:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"5011:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5029:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5011:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":284,"nodeType":"ExpressionStatement","src":"5011:22:1"}]}},{"id":287,"nodeType":"PlaceholderStatement","src":"5053:1:1"},{"condition":{"id":288,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"5068:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":300,"nodeType":"IfStatement","src":"5064:101:1","trueBody":{"id":299,"nodeType":"Block","src":"5084:81:1","statements":[{"expression":{"id":293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":289,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"5098:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":291,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5100:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"5098:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5116:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5098:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":294,"nodeType":"ExpressionStatement","src":"5098:23:1"},{"eventCall":{"arguments":[{"hexValue":"31","id":296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5152:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":295,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"5140:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5140:14:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":298,"nodeType":"EmitStatement","src":"5135:19:1"}]}}]},"documentation":{"id":220,"nodeType":"StructuredDocumentation","src":"3548:516:1","text":" @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."},"id":302,"name":"initializer","nameLocation":"4078:11:1","nodeType":"ModifierDefinition","parameters":{"id":221,"nodeType":"ParameterList","parameters":[],"src":"4089:2:1"},"src":"4069:1102:1","virtual":false,"visibility":"internal"},{"body":{"id":348,"nodeType":"Block","src":"6289:392:1","statements":[{"assignments":[309],"declarations":[{"constant":false,"id":309,"mutability":"mutable","name":"$","nameLocation":"6384:1:1","nodeType":"VariableDeclaration","scope":348,"src":"6355:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":308,"nodeType":"UserDefinedTypeName","pathNode":{"id":307,"name":"InitializableStorage","nameLocations":["6355:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":205,"src":"6355:20:1"},"referencedDeclaration":205,"src":"6355:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":312,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":310,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"6388:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6388:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"6355:59:1"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":313,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6429:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":314,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6431:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"6429:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":315,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6448:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":316,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6450:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"6448:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":317,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"6466:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6448:25:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6429:44:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":324,"nodeType":"IfStatement","src":"6425:105:1","trueBody":{"id":323,"nodeType":"Block","src":"6475:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":320,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"6496:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6496:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":322,"nodeType":"RevertStatement","src":"6489:30:1"}]}},{"expression":{"id":329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":325,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6539:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":327,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6541:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"6539:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":328,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"6556:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6539:24:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":330,"nodeType":"ExpressionStatement","src":"6539:24:1"},{"expression":{"id":335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":331,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6573:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":333,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6575:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"6573:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6591:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6573:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":336,"nodeType":"ExpressionStatement","src":"6573:22:1"},{"id":337,"nodeType":"PlaceholderStatement","src":"6605:1:1"},{"expression":{"id":342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":338,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6616:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":340,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6618:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"6616:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6634:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6616:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":343,"nodeType":"ExpressionStatement","src":"6616:23:1"},{"eventCall":{"arguments":[{"id":345,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"6666:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":344,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"6654:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6654:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":347,"nodeType":"EmitStatement","src":"6649:25:1"}]},"documentation":{"id":303,"nodeType":"StructuredDocumentation","src":"5177:1068:1","text":" @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."},"id":349,"name":"reinitializer","nameLocation":"6259:13:1","nodeType":"ModifierDefinition","parameters":{"id":306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":305,"mutability":"mutable","name":"version","nameLocation":"6280:7:1","nodeType":"VariableDeclaration","scope":349,"src":"6273:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":304,"name":"uint64","nodeType":"ElementaryTypeName","src":"6273:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"6272:16:1"},"src":"6250:431:1","virtual":false,"visibility":"internal"},{"body":{"id":356,"nodeType":"Block","src":"6919:48:1","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":352,"name":"_checkInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":370,"src":"6929:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6929:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":354,"nodeType":"ExpressionStatement","src":"6929:20:1"},{"id":355,"nodeType":"PlaceholderStatement","src":"6959:1:1"}]},"documentation":{"id":350,"nodeType":"StructuredDocumentation","src":"6687:199:1","text":" @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."},"id":357,"name":"onlyInitializing","nameLocation":"6900:16:1","nodeType":"ModifierDefinition","parameters":{"id":351,"nodeType":"ParameterList","parameters":[],"src":"6916:2:1"},"src":"6891:76:1","virtual":false,"visibility":"internal"},{"body":{"id":369,"nodeType":"Block","src":"7134:89:1","statements":[{"condition":{"id":363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7148:18:1","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":361,"name":"_isInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":438,"src":"7149:15:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7149:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":368,"nodeType":"IfStatement","src":"7144:73:1","trueBody":{"id":367,"nodeType":"Block","src":"7168:49:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":364,"name":"NotInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"7189:15:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7189:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":366,"nodeType":"RevertStatement","src":"7182:24:1"}]}}]},"documentation":{"id":358,"nodeType":"StructuredDocumentation","src":"6973:104:1","text":" @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."},"id":370,"implemented":true,"kind":"function","modifiers":[],"name":"_checkInitializing","nameLocation":"7091:18:1","nodeType":"FunctionDefinition","parameters":{"id":359,"nodeType":"ParameterList","parameters":[],"src":"7109:2:1"},"returnParameters":{"id":360,"nodeType":"ParameterList","parameters":[],"src":"7134:0:1"},"scope":462,"src":"7082:141:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":415,"nodeType":"Block","src":"7758:373:1","statements":[{"assignments":[376],"declarations":[{"constant":false,"id":376,"mutability":"mutable","name":"$","nameLocation":"7853:1:1","nodeType":"VariableDeclaration","scope":415,"src":"7824:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":375,"nodeType":"UserDefinedTypeName","pathNode":{"id":374,"name":"InitializableStorage","nameLocations":["7824:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":205,"src":"7824:20:1"},"referencedDeclaration":205,"src":"7824:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":379,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":377,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"7857:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7857:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7824:59:1"},{"condition":{"expression":{"id":380,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"7898:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":381,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7900:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"7898:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":386,"nodeType":"IfStatement","src":"7894:76:1","trueBody":{"id":385,"nodeType":"Block","src":"7915:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":382,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"7936:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7936:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":384,"nodeType":"RevertStatement","src":"7929:30:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":387,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"7983:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":388,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7985:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"7983:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":391,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8006:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":390,"name":"uint64","nodeType":"ElementaryTypeName","src":"8006:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":389,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8001:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8001:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":393,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8014:3:1","memberName":"max","nodeType":"MemberAccess","src":"8001:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"7983:34:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":414,"nodeType":"IfStatement","src":"7979:146:1","trueBody":{"id":413,"nodeType":"Block","src":"8019:106:1","statements":[{"expression":{"id":403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":395,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"8033:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":397,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8035:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"8033:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":400,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8055:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":399,"name":"uint64","nodeType":"ElementaryTypeName","src":"8055:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":398,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8050:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8050:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":402,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8063:3:1","memberName":"max","nodeType":"MemberAccess","src":"8050:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"8033:33:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":404,"nodeType":"ExpressionStatement","src":"8033:33:1"},{"eventCall":{"arguments":[{"expression":{"arguments":[{"id":408,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8102:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":407,"name":"uint64","nodeType":"ElementaryTypeName","src":"8102:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":406,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8097:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8097:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":410,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8110:3:1","memberName":"max","nodeType":"MemberAccess","src":"8097:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":405,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"8085:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8085:29:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":412,"nodeType":"EmitStatement","src":"8080:34:1"}]}}]},"documentation":{"id":371,"nodeType":"StructuredDocumentation","src":"7229:475:1","text":" @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."},"id":416,"implemented":true,"kind":"function","modifiers":[],"name":"_disableInitializers","nameLocation":"7718:20:1","nodeType":"FunctionDefinition","parameters":{"id":372,"nodeType":"ParameterList","parameters":[],"src":"7738:2:1"},"returnParameters":{"id":373,"nodeType":"ParameterList","parameters":[],"src":"7758:0:1"},"scope":462,"src":"7709:422:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":426,"nodeType":"Block","src":"8306:63:1","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":422,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"8323:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8323:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":424,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8350:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"8323:39:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":421,"id":425,"nodeType":"Return","src":"8316:46:1"}]},"documentation":{"id":417,"nodeType":"StructuredDocumentation","src":"8137:99:1","text":" @dev Returns the highest version that has been initialized. See {reinitializer}."},"id":427,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializedVersion","nameLocation":"8250:22:1","nodeType":"FunctionDefinition","parameters":{"id":418,"nodeType":"ParameterList","parameters":[],"src":"8272:2:1"},"returnParameters":{"id":421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":420,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":427,"src":"8298:6:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":419,"name":"uint64","nodeType":"ElementaryTypeName","src":"8298:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"8297:8:1"},"scope":462,"src":"8241:128:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":437,"nodeType":"Block","src":"8541:64:1","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":433,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"8558:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8558:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":435,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8585:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"8558:40:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":432,"id":436,"nodeType":"Return","src":"8551:47:1"}]},"documentation":{"id":428,"nodeType":"StructuredDocumentation","src":"8375:105:1","text":" @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."},"id":438,"implemented":true,"kind":"function","modifiers":[],"name":"_isInitializing","nameLocation":"8494:15:1","nodeType":"FunctionDefinition","parameters":{"id":429,"nodeType":"ParameterList","parameters":[],"src":"8509:2:1"},"returnParameters":{"id":432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":431,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":438,"src":"8535:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":430,"name":"bool","nodeType":"ElementaryTypeName","src":"8535:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8534:6:1"},"scope":462,"src":"8485:120:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":446,"nodeType":"Block","src":"8896:45:1","statements":[{"expression":{"id":444,"name":"INITIALIZABLE_STORAGE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":208,"src":"8913:21:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":443,"id":445,"nodeType":"Return","src":"8906:28:1"}]},"documentation":{"id":439,"nodeType":"StructuredDocumentation","src":"8611:203:1","text":" @dev Pointer to storage slot. Allows integrators to override it with a custom storage location.\n NOTE: Consider following the ERC-7201 formula to derive storage locations."},"id":447,"implemented":true,"kind":"function","modifiers":[],"name":"_initializableStorageSlot","nameLocation":"8828:25:1","nodeType":"FunctionDefinition","parameters":{"id":440,"nodeType":"ParameterList","parameters":[],"src":"8853:2:1"},"returnParameters":{"id":443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":442,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":447,"src":"8887:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":441,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8887:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8886:9:1"},"scope":462,"src":"8819:122:1","stateMutability":"pure","virtual":true,"visibility":"internal"},{"body":{"id":460,"nodeType":"Block","src":"9161:115:1","statements":[{"assignments":[455],"declarations":[{"constant":false,"id":455,"mutability":"mutable","name":"slot","nameLocation":"9179:4:1","nodeType":"VariableDeclaration","scope":460,"src":"9171:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":454,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9171:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":458,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":456,"name":"_initializableStorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"9186:25:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_bytes32_$","typeString":"function () pure returns (bytes32)"}},"id":457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9186:27:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"9171:42:1"},{"AST":{"nativeSrc":"9232:38:1","nodeType":"YulBlock","src":"9232:38:1","statements":[{"nativeSrc":"9246:14:1","nodeType":"YulAssignment","src":"9246:14:1","value":{"name":"slot","nativeSrc":"9256:4:1","nodeType":"YulIdentifier","src":"9256:4:1"},"variableNames":[{"name":"$.slot","nativeSrc":"9246:6:1","nodeType":"YulIdentifier","src":"9246:6:1"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":452,"isOffset":false,"isSlot":true,"src":"9246:6:1","suffix":"slot","valueSize":1},{"declaration":455,"isOffset":false,"isSlot":false,"src":"9256:4:1","valueSize":1}],"id":459,"nodeType":"InlineAssembly","src":"9223:47:1"}]},"documentation":{"id":448,"nodeType":"StructuredDocumentation","src":"8947:67:1","text":" @dev Returns a pointer to the storage namespace."},"id":461,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializableStorage","nameLocation":"9080:24:1","nodeType":"FunctionDefinition","parameters":{"id":449,"nodeType":"ParameterList","parameters":[],"src":"9104:2:1"},"returnParameters":{"id":453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":452,"mutability":"mutable","name":"$","nameLocation":"9158:1:1","nodeType":"VariableDeclaration","scope":461,"src":"9129:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":451,"nodeType":"UserDefinedTypeName","pathNode":{"id":450,"name":"InitializableStorage","nameLocations":["9129:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":205,"src":"9129:20:1"},"referencedDeclaration":205,"src":"9129:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"src":"9128:32:1"},"scope":462,"src":"9071:205:1","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":463,"src":"2349:6929:1","usedErrors":[211,214],"usedEvents":[219]}],"src":"113:9166:1"},"id":1},"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol","exportedSymbols":{"ContextUpgradeable":[1294],"ERC20Upgradeable":[1079],"IERC20":[2368],"IERC20Errors":[2195],"IERC20Metadata":[2394],"Initializable":[462]},"id":1080,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":464,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:2"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":466,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1080,"sourceUnit":2369,"src":"131:70:2","symbolAliases":[{"foreign":{"id":465,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2368,"src":"139:6:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","id":468,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1080,"sourceUnit":2395,"src":"202:97:2","symbolAliases":[{"foreign":{"id":467,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2394,"src":"210:14:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../../utils/ContextUpgradeable.sol","id":470,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1080,"sourceUnit":1295,"src":"300:70:2","symbolAliases":[{"foreign":{"id":469,"name":"ContextUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"308:18:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","id":472,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1080,"sourceUnit":2291,"src":"371:83:2","symbolAliases":[{"foreign":{"id":471,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2195,"src":"379:12:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../proxy/utils/Initializable.sol","id":474,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1080,"sourceUnit":463,"src":"455:66:2","symbolAliases":[{"foreign":{"id":473,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"463:13:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":476,"name":"Initializable","nameLocations":["1319:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":462,"src":"1319:13:2"},"id":477,"nodeType":"InheritanceSpecifier","src":"1319:13:2"},{"baseName":{"id":478,"name":"ContextUpgradeable","nameLocations":["1334:18:2"],"nodeType":"IdentifierPath","referencedDeclaration":1294,"src":"1334:18:2"},"id":479,"nodeType":"InheritanceSpecifier","src":"1334:18:2"},{"baseName":{"id":480,"name":"IERC20","nameLocations":["1354:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":2368,"src":"1354:6:2"},"id":481,"nodeType":"InheritanceSpecifier","src":"1354:6:2"},{"baseName":{"id":482,"name":"IERC20Metadata","nameLocations":["1362:14:2"],"nodeType":"IdentifierPath","referencedDeclaration":2394,"src":"1362:14:2"},"id":483,"nodeType":"InheritanceSpecifier","src":"1362:14:2"},{"baseName":{"id":484,"name":"IERC20Errors","nameLocations":["1378:12:2"],"nodeType":"IdentifierPath","referencedDeclaration":2195,"src":"1378:12:2"},"id":485,"nodeType":"InheritanceSpecifier","src":"1378:12:2"}],"canonicalName":"ERC20Upgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":475,"nodeType":"StructuredDocumentation","src":"523:757:2","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."},"fullyImplemented":true,"id":1079,"linearizedBaseContracts":[1079,2195,2394,2368,1294,462],"name":"ERC20Upgradeable","nameLocation":"1299:16:2","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ERC20Upgradeable.ERC20Storage","documentation":{"id":486,"nodeType":"StructuredDocumentation","src":"1397:63:2","text":"@custom:storage-location erc7201:openzeppelin.storage.ERC20"},"id":503,"members":[{"constant":false,"id":490,"mutability":"mutable","name":"_balances","nameLocation":"1531:9:2","nodeType":"VariableDeclaration","scope":503,"src":"1495:45:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":489,"keyName":"account","keyNameLocation":"1511:7:2","keyType":{"id":487,"name":"address","nodeType":"ElementaryTypeName","src":"1503:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1495:35:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":488,"name":"uint256","nodeType":"ElementaryTypeName","src":"1522:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"},{"constant":false,"id":496,"mutability":"mutable","name":"_allowances","nameLocation":"1615:11:2","nodeType":"VariableDeclaration","scope":503,"src":"1551:75:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":495,"keyName":"account","keyNameLocation":"1567:7:2","keyType":{"id":491,"name":"address","nodeType":"ElementaryTypeName","src":"1559:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1551:63:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":494,"keyName":"spender","keyNameLocation":"1594:7:2","keyType":{"id":492,"name":"address","nodeType":"ElementaryTypeName","src":"1586:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1578:35:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":493,"name":"uint256","nodeType":"ElementaryTypeName","src":"1605:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"internal"},{"constant":false,"id":498,"mutability":"mutable","name":"_totalSupply","nameLocation":"1645:12:2","nodeType":"VariableDeclaration","scope":503,"src":"1637:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":497,"name":"uint256","nodeType":"ElementaryTypeName","src":"1637:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":500,"mutability":"mutable","name":"_name","nameLocation":"1675:5:2","nodeType":"VariableDeclaration","scope":503,"src":"1668:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":499,"name":"string","nodeType":"ElementaryTypeName","src":"1668:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":502,"mutability":"mutable","name":"_symbol","nameLocation":"1697:7:2","nodeType":"VariableDeclaration","scope":503,"src":"1690:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":501,"name":"string","nodeType":"ElementaryTypeName","src":"1690:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"ERC20Storage","nameLocation":"1472:12:2","nodeType":"StructDefinition","scope":1079,"src":"1465:246:2","visibility":"public"},{"constant":true,"id":506,"mutability":"constant","name":"ERC20StorageLocation","nameLocation":"1851:20:2","nodeType":"VariableDeclaration","scope":1079,"src":"1826:114:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":504,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1826:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307835326336333234376531663437646231396435636530343630303330633439376630363763613463656266373162613938656561646162653230626163653030","id":505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1874:66:2","typeDescriptions":{"typeIdentifier":"t_rational_37439836327923360225337895871394760624280537466773280374265222508165906222592_by_1","typeString":"int_const 3743...(69 digits omitted)...2592"},"value":"0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00"},"visibility":"private"},{"body":{"id":513,"nodeType":"Block","src":"2021:79:2","statements":[{"AST":{"nativeSrc":"2040:54:2","nodeType":"YulBlock","src":"2040:54:2","statements":[{"nativeSrc":"2054:30:2","nodeType":"YulAssignment","src":"2054:30:2","value":{"name":"ERC20StorageLocation","nativeSrc":"2064:20:2","nodeType":"YulIdentifier","src":"2064:20:2"},"variableNames":[{"name":"$.slot","nativeSrc":"2054:6:2","nodeType":"YulIdentifier","src":"2054:6:2"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":510,"isOffset":false,"isSlot":true,"src":"2054:6:2","suffix":"slot","valueSize":1},{"declaration":506,"isOffset":false,"isSlot":false,"src":"2064:20:2","valueSize":1}],"id":512,"nodeType":"InlineAssembly","src":"2031:63:2"}]},"id":514,"implemented":true,"kind":"function","modifiers":[],"name":"_getERC20Storage","nameLocation":"1956:16:2","nodeType":"FunctionDefinition","parameters":{"id":507,"nodeType":"ParameterList","parameters":[],"src":"1972:2:2"},"returnParameters":{"id":511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":510,"mutability":"mutable","name":"$","nameLocation":"2018:1:2","nodeType":"VariableDeclaration","scope":514,"src":"1997:22:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$503_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":509,"nodeType":"UserDefinedTypeName","pathNode":{"id":508,"name":"ERC20Storage","nameLocations":["1997:12:2"],"nodeType":"IdentifierPath","referencedDeclaration":503,"src":"1997:12:2"},"referencedDeclaration":503,"src":"1997:12:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$503_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"src":"1996:24:2"},"scope":1079,"src":"1947:153:2","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":529,"nodeType":"Block","src":"2355:55:2","statements":[{"expression":{"arguments":[{"id":525,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":517,"src":"2388:5:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":526,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"2395:7:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":524,"name":"__ERC20_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"2365:22:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2365:38:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":528,"nodeType":"ExpressionStatement","src":"2365:38:2"}]},"documentation":{"id":515,"nodeType":"StructuredDocumentation","src":"2106:152:2","text":" @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."},"id":530,"implemented":true,"kind":"function","modifiers":[{"id":522,"kind":"modifierInvocation","modifierName":{"id":521,"name":"onlyInitializing","nameLocations":["2338:16:2"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"2338:16:2"},"nodeType":"ModifierInvocation","src":"2338:16:2"}],"name":"__ERC20_init","nameLocation":"2272:12:2","nodeType":"FunctionDefinition","parameters":{"id":520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":517,"mutability":"mutable","name":"name_","nameLocation":"2299:5:2","nodeType":"VariableDeclaration","scope":530,"src":"2285:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":516,"name":"string","nodeType":"ElementaryTypeName","src":"2285:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":519,"mutability":"mutable","name":"symbol_","nameLocation":"2320:7:2","nodeType":"VariableDeclaration","scope":530,"src":"2306:21:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":518,"name":"string","nodeType":"ElementaryTypeName","src":"2306:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2284:44:2"},"returnParameters":{"id":523,"nodeType":"ParameterList","parameters":[],"src":"2355:0:2"},"scope":1079,"src":"2263:147:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":557,"nodeType":"Block","src":"2518:114:2","statements":[{"assignments":[541],"declarations":[{"constant":false,"id":541,"mutability":"mutable","name":"$","nameLocation":"2549:1:2","nodeType":"VariableDeclaration","scope":557,"src":"2528:22:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$503_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":540,"nodeType":"UserDefinedTypeName","pathNode":{"id":539,"name":"ERC20Storage","nameLocations":["2528:12:2"],"nodeType":"IdentifierPath","referencedDeclaration":503,"src":"2528:12:2"},"referencedDeclaration":503,"src":"2528:12:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$503_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":544,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":542,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":514,"src":"2553:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$503_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2553:18:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$503_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2528:43:2"},{"expression":{"id":549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":545,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":541,"src":"2581:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$503_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":547,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2583:5:2","memberName":"_name","nodeType":"MemberAccess","referencedDeclaration":500,"src":"2581:7:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":548,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":532,"src":"2591:5:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2581:15:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":550,"nodeType":"ExpressionStatement","src":"2581:15:2"},{"expression":{"id":555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":551,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":541,"src":"2606:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$503_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":553,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2608:7:2","memberName":"_symbol","nodeType":"MemberAccess","referencedDeclaration":502,"src":"2606:9:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":554,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":534,"src":"2618:7:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2606:19:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":556,"nodeType":"ExpressionStatement","src":"2606:19:2"}]},"id":558,"implemented":true,"kind":"function","modifiers":[{"id":537,"kind":"modifierInvocation","modifierName":{"id":536,"name":"onlyInitializing","nameLocations":["2501:16:2"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"2501:16:2"},"nodeType":"ModifierInvocation","src":"2501:16:2"}],"name":"__ERC20_init_unchained","nameLocation":"2425:22:2","nodeType":"FunctionDefinition","parameters":{"id":535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":532,"mutability":"mutable","name":"name_","nameLocation":"2462:5:2","nodeType":"VariableDeclaration","scope":558,"src":"2448:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":531,"name":"string","nodeType":"ElementaryTypeName","src":"2448:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":534,"mutability":"mutable","name":"symbol_","nameLocation":"2483:7:2","nodeType":"VariableDeclaration","scope":558,"src":"2469:21:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":533,"name":"string","nodeType":"ElementaryTypeName","src":"2469:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2447:44:2"},"returnParameters":{"id":538,"nodeType":"ParameterList","parameters":[],"src":"2518:0:2"},"scope":1079,"src":"2416:216:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2381],"body":{"id":573,"nodeType":"Block","src":"2757:84:2","statements":[{"assignments":[566],"declarations":[{"constant":false,"id":566,"mutability":"mutable","name":"$","nameLocation":"2788:1:2","nodeType":"VariableDeclaration","scope":573,"src":"2767:22:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$503_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":565,"nodeType":"UserDefinedTypeName","pathNode":{"id":564,"name":"ERC20Storage","nameLocations":["2767:12:2"],"nodeType":"IdentifierPath","referencedDeclaration":503,"src":"2767:12:2"},"referencedDeclaration":503,"src":"2767:12:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$503_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":569,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":567,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":514,"src":"2792:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$503_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2792:18:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$503_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2767:43:2"},{"expression":{"expression":{"id":570,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":566,"src":"2827:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$503_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":571,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2829:5:2","memberName":"_name","nodeType":"MemberAccess","referencedDeclaration":500,"src":"2827:7:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":563,"id":572,"nodeType":"Return","src":"2820:14:2"}]},"documentation":{"id":559,"nodeType":"StructuredDocumentation","src":"2638:54:2","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":574,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2706:4:2","nodeType":"FunctionDefinition","parameters":{"id":560,"nodeType":"ParameterList","parameters":[],"src":"2710:2:2"},"returnParameters":{"id":563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":562,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":574,"src":"2742:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":561,"name":"string","nodeType":"ElementaryTypeName","src":"2742:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2741:15:2"},"scope":1079,"src":"2697:144:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2387],"body":{"id":589,"nodeType":"Block","src":"3016:86:2","statements":[{"assignments":[582],"declarations":[{"constant":false,"id":582,"mutability":"mutable","name":"$","nameLocation":"3047:1:2","nodeType":"VariableDeclaration","scope":589,"src":"3026:22:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$503_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":581,"nodeType":"UserDefinedTypeName","pathNode":{"id":580,"name":"ERC20Storage","nameLocations":["3026:12:2"],"nodeType":"IdentifierPath","referencedDeclaration":503,"src":"3026:12:2"},"referencedDeclaration":503,"src":"3026:12:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$503_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":585,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":583,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":514,"src":"3051:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$503_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3051:18:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$503_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3026:43:2"},{"expression":{"expression":{"id":586,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"3086:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$503_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":587,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3088:7:2","memberName":"_symbol","nodeType":"MemberAccess","referencedDeclaration":502,"src":"3086:9:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":579,"id":588,"nodeType":"Return","src":"3079:16:2"}]},"documentation":{"id":575,"nodeType":"StructuredDocumentation","src":"2847:102:2","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":590,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2963:6:2","nodeType":"FunctionDefinition","parameters":{"id":576,"nodeType":"ParameterList","parameters":[],"src":"2969:2:2"},"returnParameters":{"id":579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":578,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":590,"src":"3001:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":577,"name":"string","nodeType":"ElementaryTypeName","src":"3001:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3000:15:2"},"scope":1079,"src":"2954:148:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2393],"body":{"id":598,"nodeType":"Block","src":"3791:26:2","statements":[{"expression":{"hexValue":"3138","id":596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3808:2:2","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":595,"id":597,"nodeType":"Return","src":"3801:9:2"}]},"documentation":{"id":591,"nodeType":"StructuredDocumentation","src":"3108:622:2","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":599,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3744:8:2","nodeType":"FunctionDefinition","parameters":{"id":592,"nodeType":"ParameterList","parameters":[],"src":"3752:2:2"},"returnParameters":{"id":595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":594,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":599,"src":"3784:5:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":593,"name":"uint8","nodeType":"ElementaryTypeName","src":"3784:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3783:7:2"},"scope":1079,"src":"3735:82:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2317],"body":{"id":614,"nodeType":"Block","src":"3911:91:2","statements":[{"assignments":[607],"declarations":[{"constant":false,"id":607,"mutability":"mutable","name":"$","nameLocation":"3942:1:2","nodeType":"VariableDeclaration","scope":614,"src":"3921:22:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$503_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":606,"nodeType":"UserDefinedTypeName","pathNode":{"id":605,"name":"ERC20Storage","nameLocations":["3921:12:2"],"nodeType":"IdentifierPath","referencedDeclaration":503,"src":"3921:12:2"},"referencedDeclaration":503,"src":"3921:12:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$503_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":610,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":608,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":514,"src":"3946:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$503_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3946:18:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$503_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3921:43:2"},{"expression":{"expression":{"id":611,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":607,"src":"3981:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$503_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":612,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3983:12:2","memberName":"_totalSupply","nodeType":"MemberAccess","referencedDeclaration":498,"src":"3981:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":604,"id":613,"nodeType":"Return","src":"3974:21:2"}]},"documentation":{"id":600,"nodeType":"StructuredDocumentation","src":"3823:22:2","text":"@inheritdoc IERC20"},"functionSelector":"18160ddd","id":615,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3859:11:2","nodeType":"FunctionDefinition","parameters":{"id":601,"nodeType":"ParameterList","parameters":[],"src":"3870:2:2"},"returnParameters":{"id":604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":603,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":615,"src":"3902:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":602,"name":"uint256","nodeType":"ElementaryTypeName","src":"3902:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3901:9:2"},"scope":1079,"src":"3850:152:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2325],"body":{"id":634,"nodeType":"Block","src":"4109:97:2","statements":[{"assignments":[625],"declarations":[{"constant":false,"id":625,"mutability":"mutable","name":"$","nameLocation":"4140:1:2","nodeType":"VariableDeclaration","scope":634,"src":"4119:22:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$503_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":624,"nodeType":"UserDefinedTypeName","pathNode":{"id":623,"name":"ERC20Storage","nameLocations":["4119:12:2"],"nodeType":"IdentifierPath","referencedDeclaration":503,"src":"4119:12:2"},"referencedDeclaration":503,"src":"4119:12:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$503_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":628,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":626,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":514,"src":"4144:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$503_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":627,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4144:18:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$503_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4119:43:2"},{"expression":{"baseExpression":{"expression":{"id":629,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":625,"src":"4179:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$503_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":630,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4181:9:2","memberName":"_balances","nodeType":"MemberAccess","referencedDeclaration":490,"src":"4179:11:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":632,"indexExpression":{"id":631,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":618,"src":"4191:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4179:20:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":622,"id":633,"nodeType":"Return","src":"4172:27:2"}]},"documentation":{"id":616,"nodeType":"StructuredDocumentation","src":"4008:22:2","text":"@inheritdoc IERC20"},"functionSelector":"70a08231","id":635,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"4044:9:2","nodeType":"FunctionDefinition","parameters":{"id":619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":618,"mutability":"mutable","name":"account","nameLocation":"4062:7:2","nodeType":"VariableDeclaration","scope":635,"src":"4054:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":617,"name":"address","nodeType":"ElementaryTypeName","src":"4054:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4053:17:2"},"returnParameters":{"id":622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":621,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":635,"src":"4100:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":620,"name":"uint256","nodeType":"ElementaryTypeName","src":"4100:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4099:9:2"},"scope":1079,"src":"4035:171:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2335],"body":{"id":658,"nodeType":"Block","src":"4476:103:2","statements":[{"assignments":[646],"declarations":[{"constant":false,"id":646,"mutability":"mutable","name":"owner","nameLocation":"4494:5:2","nodeType":"VariableDeclaration","scope":658,"src":"4486:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":645,"name":"address","nodeType":"ElementaryTypeName","src":"4486:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":649,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":647,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1276,"src":"4502:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4502:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4486:28:2"},{"expression":{"arguments":[{"id":651,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":646,"src":"4534:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":652,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":638,"src":"4541:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":653,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":640,"src":"4545:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":650,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"4524:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4524:27:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":655,"nodeType":"ExpressionStatement","src":"4524:27:2"},{"expression":{"hexValue":"74727565","id":656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4568:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":644,"id":657,"nodeType":"Return","src":"4561:11:2"}]},"documentation":{"id":636,"nodeType":"StructuredDocumentation","src":"4212:184:2","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":659,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"4410:8:2","nodeType":"FunctionDefinition","parameters":{"id":641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":638,"mutability":"mutable","name":"to","nameLocation":"4427:2:2","nodeType":"VariableDeclaration","scope":659,"src":"4419:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":637,"name":"address","nodeType":"ElementaryTypeName","src":"4419:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":640,"mutability":"mutable","name":"value","nameLocation":"4439:5:2","nodeType":"VariableDeclaration","scope":659,"src":"4431:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":639,"name":"uint256","nodeType":"ElementaryTypeName","src":"4431:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4418:27:2"},"returnParameters":{"id":644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":643,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":659,"src":"4470:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":642,"name":"bool","nodeType":"ElementaryTypeName","src":"4470:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4469:6:2"},"scope":1079,"src":"4401:178:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2345],"body":{"id":682,"nodeType":"Block","src":"4701:106:2","statements":[{"assignments":[671],"declarations":[{"constant":false,"id":671,"mutability":"mutable","name":"$","nameLocation":"4732:1:2","nodeType":"VariableDeclaration","scope":682,"src":"4711:22:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$503_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":670,"nodeType":"UserDefinedTypeName","pathNode":{"id":669,"name":"ERC20Storage","nameLocations":["4711:12:2"],"nodeType":"IdentifierPath","referencedDeclaration":503,"src":"4711:12:2"},"referencedDeclaration":503,"src":"4711:12:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$503_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":674,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":672,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":514,"src":"4736:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$503_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4736:18:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$503_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4711:43:2"},{"expression":{"baseExpression":{"baseExpression":{"expression":{"id":675,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":671,"src":"4771:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$503_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":676,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4773:11:2","memberName":"_allowances","nodeType":"MemberAccess","referencedDeclaration":496,"src":"4771:13:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":678,"indexExpression":{"id":677,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":662,"src":"4785:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4771:20:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":680,"indexExpression":{"id":679,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"4792:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4771:29:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":668,"id":681,"nodeType":"Return","src":"4764:36:2"}]},"documentation":{"id":660,"nodeType":"StructuredDocumentation","src":"4585:22:2","text":"@inheritdoc IERC20"},"functionSelector":"dd62ed3e","id":683,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"4621:9:2","nodeType":"FunctionDefinition","parameters":{"id":665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":662,"mutability":"mutable","name":"owner","nameLocation":"4639:5:2","nodeType":"VariableDeclaration","scope":683,"src":"4631:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":661,"name":"address","nodeType":"ElementaryTypeName","src":"4631:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":664,"mutability":"mutable","name":"spender","nameLocation":"4654:7:2","nodeType":"VariableDeclaration","scope":683,"src":"4646:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":663,"name":"address","nodeType":"ElementaryTypeName","src":"4646:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4630:32:2"},"returnParameters":{"id":668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":667,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":683,"src":"4692:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":666,"name":"uint256","nodeType":"ElementaryTypeName","src":"4692:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4691:9:2"},"scope":1079,"src":"4612:195:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2355],"body":{"id":706,"nodeType":"Block","src":"5193:107:2","statements":[{"assignments":[694],"declarations":[{"constant":false,"id":694,"mutability":"mutable","name":"owner","nameLocation":"5211:5:2","nodeType":"VariableDeclaration","scope":706,"src":"5203:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":693,"name":"address","nodeType":"ElementaryTypeName","src":"5203:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":697,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":695,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1276,"src":"5219:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5219:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5203:28:2"},{"expression":{"arguments":[{"id":699,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":694,"src":"5250:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":700,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":686,"src":"5257:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":701,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":688,"src":"5266:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":698,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[962,1030],"referencedDeclaration":962,"src":"5241:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5241:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":703,"nodeType":"ExpressionStatement","src":"5241:31:2"},{"expression":{"hexValue":"74727565","id":704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5289:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":692,"id":705,"nodeType":"Return","src":"5282:11:2"}]},"documentation":{"id":684,"nodeType":"StructuredDocumentation","src":"4813:296:2","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":707,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"5123:7:2","nodeType":"FunctionDefinition","parameters":{"id":689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":686,"mutability":"mutable","name":"spender","nameLocation":"5139:7:2","nodeType":"VariableDeclaration","scope":707,"src":"5131:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":685,"name":"address","nodeType":"ElementaryTypeName","src":"5131:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":688,"mutability":"mutable","name":"value","nameLocation":"5156:5:2","nodeType":"VariableDeclaration","scope":707,"src":"5148:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":687,"name":"uint256","nodeType":"ElementaryTypeName","src":"5148:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5130:32:2"},"returnParameters":{"id":692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":691,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":707,"src":"5187:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":690,"name":"bool","nodeType":"ElementaryTypeName","src":"5187:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5186:6:2"},"scope":1079,"src":"5114:186:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2367],"body":{"id":738,"nodeType":"Block","src":"5985:151:2","statements":[{"assignments":[720],"declarations":[{"constant":false,"id":720,"mutability":"mutable","name":"spender","nameLocation":"6003:7:2","nodeType":"VariableDeclaration","scope":738,"src":"5995:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":719,"name":"address","nodeType":"ElementaryTypeName","src":"5995:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":723,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":721,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1276,"src":"6013:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6013:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5995:30:2"},{"expression":{"arguments":[{"id":725,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":710,"src":"6051:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":726,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":720,"src":"6057:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":727,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":714,"src":"6066:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":724,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1078,"src":"6035:15:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6035:37:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":729,"nodeType":"ExpressionStatement","src":"6035:37:2"},{"expression":{"arguments":[{"id":731,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":710,"src":"6092:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":732,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":712,"src":"6098:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":733,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":714,"src":"6102:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":730,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"6082:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6082:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":735,"nodeType":"ExpressionStatement","src":"6082:26:2"},{"expression":{"hexValue":"74727565","id":736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6125:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":718,"id":737,"nodeType":"Return","src":"6118:11:2"}]},"documentation":{"id":708,"nodeType":"StructuredDocumentation","src":"5306:581:2","text":" @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":739,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5901:12:2","nodeType":"FunctionDefinition","parameters":{"id":715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":710,"mutability":"mutable","name":"from","nameLocation":"5922:4:2","nodeType":"VariableDeclaration","scope":739,"src":"5914:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":709,"name":"address","nodeType":"ElementaryTypeName","src":"5914:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":712,"mutability":"mutable","name":"to","nameLocation":"5936:2:2","nodeType":"VariableDeclaration","scope":739,"src":"5928:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":711,"name":"address","nodeType":"ElementaryTypeName","src":"5928:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":714,"mutability":"mutable","name":"value","nameLocation":"5948:5:2","nodeType":"VariableDeclaration","scope":739,"src":"5940:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":713,"name":"uint256","nodeType":"ElementaryTypeName","src":"5940:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5913:41:2"},"returnParameters":{"id":718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":717,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":739,"src":"5979:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":716,"name":"bool","nodeType":"ElementaryTypeName","src":"5979:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5978:6:2"},"scope":1079,"src":"5892:244:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":785,"nodeType":"Block","src":"6578:231:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":749,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":742,"src":"6592:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6608:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":751,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6600:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":750,"name":"address","nodeType":"ElementaryTypeName","src":"6600:7:2","typeDescriptions":{}}},"id":753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6600:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6592:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":763,"nodeType":"IfStatement","src":"6588:86:2","trueBody":{"id":762,"nodeType":"Block","src":"6612:62:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6660:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":757,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6652:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":756,"name":"address","nodeType":"ElementaryTypeName","src":"6652:7:2","typeDescriptions":{}}},"id":759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6652:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":755,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2170,"src":"6633:18:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6633:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":761,"nodeType":"RevertStatement","src":"6626:37:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":764,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":744,"src":"6687:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6701:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":766,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6693:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":765,"name":"address","nodeType":"ElementaryTypeName","src":"6693:7:2","typeDescriptions":{}}},"id":768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6693:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6687:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":778,"nodeType":"IfStatement","src":"6683:86:2","trueBody":{"id":777,"nodeType":"Block","src":"6705:64:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6755:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":772,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6747:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":771,"name":"address","nodeType":"ElementaryTypeName","src":"6747:7:2","typeDescriptions":{}}},"id":774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6747:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":770,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2175,"src":"6726:20:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":775,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6726:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":776,"nodeType":"RevertStatement","src":"6719:39:2"}]}},{"expression":{"arguments":[{"id":780,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":742,"src":"6786:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":781,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":744,"src":"6792:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":782,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":746,"src":"6796:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":779,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":878,"src":"6778:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6778:24:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":784,"nodeType":"ExpressionStatement","src":"6778:24:2"}]},"documentation":{"id":740,"nodeType":"StructuredDocumentation","src":"6142:362:2","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":786,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"6518:9:2","nodeType":"FunctionDefinition","parameters":{"id":747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":742,"mutability":"mutable","name":"from","nameLocation":"6536:4:2","nodeType":"VariableDeclaration","scope":786,"src":"6528:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":741,"name":"address","nodeType":"ElementaryTypeName","src":"6528:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":744,"mutability":"mutable","name":"to","nameLocation":"6550:2:2","nodeType":"VariableDeclaration","scope":786,"src":"6542:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":743,"name":"address","nodeType":"ElementaryTypeName","src":"6542:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":746,"mutability":"mutable","name":"value","nameLocation":"6562:5:2","nodeType":"VariableDeclaration","scope":786,"src":"6554:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":745,"name":"uint256","nodeType":"ElementaryTypeName","src":"6554:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6527:41:2"},"returnParameters":{"id":748,"nodeType":"ParameterList","parameters":[],"src":"6578:0:2"},"scope":1079,"src":"6509:300:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":877,"nodeType":"Block","src":"7199:1095:2","statements":[{"assignments":[798],"declarations":[{"constant":false,"id":798,"mutability":"mutable","name":"$","nameLocation":"7230:1:2","nodeType":"VariableDeclaration","scope":877,"src":"7209:22:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$503_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":797,"nodeType":"UserDefinedTypeName","pathNode":{"id":796,"name":"ERC20Storage","nameLocations":["7209:12:2"],"nodeType":"IdentifierPath","referencedDeclaration":503,"src":"7209:12:2"},"referencedDeclaration":503,"src":"7209:12:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$503_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":801,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":799,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":514,"src":"7234:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$503_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7234:18:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$503_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7209:43:2"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":802,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":789,"src":"7266:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7282:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":804,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7274:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":803,"name":"address","nodeType":"ElementaryTypeName","src":"7274:7:2","typeDescriptions":{}}},"id":806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7274:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7266:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":844,"nodeType":"Block","src":"7442:366:2","statements":[{"assignments":[816],"declarations":[{"constant":false,"id":816,"mutability":"mutable","name":"fromBalance","nameLocation":"7464:11:2","nodeType":"VariableDeclaration","scope":844,"src":"7456:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":815,"name":"uint256","nodeType":"ElementaryTypeName","src":"7456:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":821,"initialValue":{"baseExpression":{"expression":{"id":817,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":798,"src":"7478:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$503_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":818,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7480:9:2","memberName":"_balances","nodeType":"MemberAccess","referencedDeclaration":490,"src":"7478:11:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":820,"indexExpression":{"id":819,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":789,"src":"7490:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7478:17:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7456:39:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":822,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":816,"src":"7513:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":823,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":793,"src":"7527:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7513:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":832,"nodeType":"IfStatement","src":"7509:115:2","trueBody":{"id":831,"nodeType":"Block","src":"7534:90:2","statements":[{"errorCall":{"arguments":[{"id":826,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":789,"src":"7584:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":827,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":816,"src":"7590:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":828,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":793,"src":"7603:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":825,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"7559:24:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7559:50:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":830,"nodeType":"RevertStatement","src":"7552:57:2"}]}},{"id":843,"nodeType":"UncheckedBlock","src":"7637:161:2","statements":[{"expression":{"id":841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":833,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":798,"src":"7744:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$503_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":836,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7746:9:2","memberName":"_balances","nodeType":"MemberAccess","referencedDeclaration":490,"src":"7744:11:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":837,"indexExpression":{"id":835,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":789,"src":"7756:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7744:17:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":838,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":816,"src":"7764:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":839,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":793,"src":"7778:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7764:19:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7744:39:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":842,"nodeType":"ExpressionStatement","src":"7744:39:2"}]}]},"id":845,"nodeType":"IfStatement","src":"7262:546:2","trueBody":{"id":814,"nodeType":"Block","src":"7286:150:2","statements":[{"expression":{"id":812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":808,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":798,"src":"7402:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$503_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":810,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7404:12:2","memberName":"_totalSupply","nodeType":"MemberAccess","referencedDeclaration":498,"src":"7402:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":811,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":793,"src":"7420:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7402:23:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":813,"nodeType":"ExpressionStatement","src":"7402:23:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":846,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":791,"src":"7822:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7836:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":848,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7828:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":847,"name":"address","nodeType":"ElementaryTypeName","src":"7828:7:2","typeDescriptions":{}}},"id":850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7828:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7822:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":869,"nodeType":"Block","src":"8039:208:2","statements":[{"id":868,"nodeType":"UncheckedBlock","src":"8053:184:2","statements":[{"expression":{"id":866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":860,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":798,"src":"8198:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$503_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":863,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8200:9:2","memberName":"_balances","nodeType":"MemberAccess","referencedDeclaration":490,"src":"8198:11:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":864,"indexExpression":{"id":862,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":791,"src":"8210:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8198:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":865,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":793,"src":"8217:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8198:24:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":867,"nodeType":"ExpressionStatement","src":"8198:24:2"}]}]},"id":870,"nodeType":"IfStatement","src":"7818:429:2","trueBody":{"id":859,"nodeType":"Block","src":"7840:193:2","statements":[{"id":858,"nodeType":"UncheckedBlock","src":"7854:169:2","statements":[{"expression":{"id":856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":852,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":798,"src":"7985:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$503_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":854,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7987:12:2","memberName":"_totalSupply","nodeType":"MemberAccess","referencedDeclaration":498,"src":"7985:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":855,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":793,"src":"8003:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7985:23:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":857,"nodeType":"ExpressionStatement","src":"7985:23:2"}]}]}},{"eventCall":{"arguments":[{"id":872,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":789,"src":"8271:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":873,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":791,"src":"8277:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":874,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":793,"src":"8281:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":871,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2302,"src":"8262:8:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8262:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":876,"nodeType":"EmitStatement","src":"8257:30:2"}]},"documentation":{"id":787,"nodeType":"StructuredDocumentation","src":"6815:304:2","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":878,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"7133:7:2","nodeType":"FunctionDefinition","parameters":{"id":794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":789,"mutability":"mutable","name":"from","nameLocation":"7149:4:2","nodeType":"VariableDeclaration","scope":878,"src":"7141:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":788,"name":"address","nodeType":"ElementaryTypeName","src":"7141:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":791,"mutability":"mutable","name":"to","nameLocation":"7163:2:2","nodeType":"VariableDeclaration","scope":878,"src":"7155:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":790,"name":"address","nodeType":"ElementaryTypeName","src":"7155:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":793,"mutability":"mutable","name":"value","nameLocation":"7175:5:2","nodeType":"VariableDeclaration","scope":878,"src":"7167:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":792,"name":"uint256","nodeType":"ElementaryTypeName","src":"7167:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7140:41:2"},"returnParameters":{"id":795,"nodeType":"ParameterList","parameters":[],"src":"7199:0:2"},"scope":1079,"src":"7124:1170:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":910,"nodeType":"Block","src":"8693:152:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":886,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":881,"src":"8707:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8726:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":888,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8718:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":887,"name":"address","nodeType":"ElementaryTypeName","src":"8718:7:2","typeDescriptions":{}}},"id":890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8718:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8707:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":900,"nodeType":"IfStatement","src":"8703:91:2","trueBody":{"id":899,"nodeType":"Block","src":"8730:64:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8780:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":894,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8772:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":893,"name":"address","nodeType":"ElementaryTypeName","src":"8772:7:2","typeDescriptions":{}}},"id":896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8772:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":892,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2175,"src":"8751:20:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8751:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":898,"nodeType":"RevertStatement","src":"8744:39:2"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8819:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":903,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8811:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":902,"name":"address","nodeType":"ElementaryTypeName","src":"8811:7:2","typeDescriptions":{}}},"id":905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8811:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":906,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":881,"src":"8823:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":907,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":883,"src":"8832:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":901,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":878,"src":"8803:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8803:35:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":909,"nodeType":"ExpressionStatement","src":"8803:35:2"}]},"documentation":{"id":879,"nodeType":"StructuredDocumentation","src":"8300:332:2","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":911,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"8646:5:2","nodeType":"FunctionDefinition","parameters":{"id":884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":881,"mutability":"mutable","name":"account","nameLocation":"8660:7:2","nodeType":"VariableDeclaration","scope":911,"src":"8652:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":880,"name":"address","nodeType":"ElementaryTypeName","src":"8652:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":883,"mutability":"mutable","name":"value","nameLocation":"8677:5:2","nodeType":"VariableDeclaration","scope":911,"src":"8669:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":882,"name":"uint256","nodeType":"ElementaryTypeName","src":"8669:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8651:32:2"},"returnParameters":{"id":885,"nodeType":"ParameterList","parameters":[],"src":"8693:0:2"},"scope":1079,"src":"8637:208:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":943,"nodeType":"Block","src":"9219:150:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":919,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":914,"src":"9233:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9252:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":921,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9244:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":920,"name":"address","nodeType":"ElementaryTypeName","src":"9244:7:2","typeDescriptions":{}}},"id":923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9244:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9233:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":933,"nodeType":"IfStatement","src":"9229:89:2","trueBody":{"id":932,"nodeType":"Block","src":"9256:62:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9304:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":927,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9296:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":926,"name":"address","nodeType":"ElementaryTypeName","src":"9296:7:2","typeDescriptions":{}}},"id":929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9296:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":925,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2170,"src":"9277:18:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":930,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9277:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":931,"nodeType":"RevertStatement","src":"9270:37:2"}]}},{"expression":{"arguments":[{"id":935,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":914,"src":"9335:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9352:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":937,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9344:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":936,"name":"address","nodeType":"ElementaryTypeName","src":"9344:7:2","typeDescriptions":{}}},"id":939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9344:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":940,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":916,"src":"9356:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":934,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":878,"src":"9327:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9327:35:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":942,"nodeType":"ExpressionStatement","src":"9327:35:2"}]},"documentation":{"id":912,"nodeType":"StructuredDocumentation","src":"8851:307:2","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":944,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"9172:5:2","nodeType":"FunctionDefinition","parameters":{"id":917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":914,"mutability":"mutable","name":"account","nameLocation":"9186:7:2","nodeType":"VariableDeclaration","scope":944,"src":"9178:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":913,"name":"address","nodeType":"ElementaryTypeName","src":"9178:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":916,"mutability":"mutable","name":"value","nameLocation":"9203:5:2","nodeType":"VariableDeclaration","scope":944,"src":"9195:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":915,"name":"uint256","nodeType":"ElementaryTypeName","src":"9195:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9177:32:2"},"returnParameters":{"id":918,"nodeType":"ParameterList","parameters":[],"src":"9219:0:2"},"scope":1079,"src":"9163:206:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":961,"nodeType":"Block","src":"9979:54:2","statements":[{"expression":{"arguments":[{"id":955,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":947,"src":"9998:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":956,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"10005:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":957,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":951,"src":"10014:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10021:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":954,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[962,1030],"referencedDeclaration":1030,"src":"9989:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9989:37:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":960,"nodeType":"ExpressionStatement","src":"9989:37:2"}]},"documentation":{"id":945,"nodeType":"StructuredDocumentation","src":"9375:525:2","text":" @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":962,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"9914:8:2","nodeType":"FunctionDefinition","parameters":{"id":952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":947,"mutability":"mutable","name":"owner","nameLocation":"9931:5:2","nodeType":"VariableDeclaration","scope":962,"src":"9923:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":946,"name":"address","nodeType":"ElementaryTypeName","src":"9923:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":949,"mutability":"mutable","name":"spender","nameLocation":"9946:7:2","nodeType":"VariableDeclaration","scope":962,"src":"9938:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":948,"name":"address","nodeType":"ElementaryTypeName","src":"9938:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":951,"mutability":"mutable","name":"value","nameLocation":"9963:5:2","nodeType":"VariableDeclaration","scope":962,"src":"9955:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":950,"name":"uint256","nodeType":"ElementaryTypeName","src":"9955:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9922:47:2"},"returnParameters":{"id":953,"nodeType":"ParameterList","parameters":[],"src":"9979:0:2"},"scope":1079,"src":"9905:128:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1029,"nodeType":"Block","src":"10978:389:2","statements":[{"assignments":[976],"declarations":[{"constant":false,"id":976,"mutability":"mutable","name":"$","nameLocation":"11009:1:2","nodeType":"VariableDeclaration","scope":1029,"src":"10988:22:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$503_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":975,"nodeType":"UserDefinedTypeName","pathNode":{"id":974,"name":"ERC20Storage","nameLocations":["10988:12:2"],"nodeType":"IdentifierPath","referencedDeclaration":503,"src":"10988:12:2"},"referencedDeclaration":503,"src":"10988:12:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$503_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":979,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":977,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":514,"src":"11013:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$503_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11013:18:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$503_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"10988:43:2"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":980,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":965,"src":"11045:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11062:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":982,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11054:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":981,"name":"address","nodeType":"ElementaryTypeName","src":"11054:7:2","typeDescriptions":{}}},"id":984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11054:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11045:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":994,"nodeType":"IfStatement","src":"11041:89:2","trueBody":{"id":993,"nodeType":"Block","src":"11066:64:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11116:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":988,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11108:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":987,"name":"address","nodeType":"ElementaryTypeName","src":"11108:7:2","typeDescriptions":{}}},"id":990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11108:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":986,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2189,"src":"11087:20:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":991,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11087:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":992,"nodeType":"RevertStatement","src":"11080:39:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":995,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"11143:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11162:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":997,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11154:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":996,"name":"address","nodeType":"ElementaryTypeName","src":"11154:7:2","typeDescriptions":{}}},"id":999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11154:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11143:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1009,"nodeType":"IfStatement","src":"11139:90:2","trueBody":{"id":1008,"nodeType":"Block","src":"11166:63:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11215:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1003,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11207:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1002,"name":"address","nodeType":"ElementaryTypeName","src":"11207:7:2","typeDescriptions":{}}},"id":1005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11207:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1001,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2194,"src":"11187:19:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11187:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1007,"nodeType":"RevertStatement","src":"11180:38:2"}]}},{"expression":{"id":1018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"expression":{"id":1010,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":976,"src":"11238:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$503_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":1014,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11240:11:2","memberName":"_allowances","nodeType":"MemberAccess","referencedDeclaration":496,"src":"11238:13:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1015,"indexExpression":{"id":1012,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":965,"src":"11252:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11238:20:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1016,"indexExpression":{"id":1013,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"11259:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11238:29:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1017,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":969,"src":"11270:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11238:37:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1019,"nodeType":"ExpressionStatement","src":"11238:37:2"},{"condition":{"id":1020,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":971,"src":"11289:9:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1028,"nodeType":"IfStatement","src":"11285:76:2","trueBody":{"id":1027,"nodeType":"Block","src":"11300:61:2","statements":[{"eventCall":{"arguments":[{"id":1022,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":965,"src":"11328:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1023,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"11335:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1024,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":969,"src":"11344:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1021,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2311,"src":"11319:8:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11319:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1026,"nodeType":"EmitStatement","src":"11314:36:2"}]}}]},"documentation":{"id":963,"nodeType":"StructuredDocumentation","src":"10039:836:2","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":1030,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"10889:8:2","nodeType":"FunctionDefinition","parameters":{"id":972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":965,"mutability":"mutable","name":"owner","nameLocation":"10906:5:2","nodeType":"VariableDeclaration","scope":1030,"src":"10898:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":964,"name":"address","nodeType":"ElementaryTypeName","src":"10898:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":967,"mutability":"mutable","name":"spender","nameLocation":"10921:7:2","nodeType":"VariableDeclaration","scope":1030,"src":"10913:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":966,"name":"address","nodeType":"ElementaryTypeName","src":"10913:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":969,"mutability":"mutable","name":"value","nameLocation":"10938:5:2","nodeType":"VariableDeclaration","scope":1030,"src":"10930:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":968,"name":"uint256","nodeType":"ElementaryTypeName","src":"10930:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":971,"mutability":"mutable","name":"emitEvent","nameLocation":"10950:9:2","nodeType":"VariableDeclaration","scope":1030,"src":"10945:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":970,"name":"bool","nodeType":"ElementaryTypeName","src":"10945:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10897:63:2"},"returnParameters":{"id":973,"nodeType":"ParameterList","parameters":[],"src":"10978:0:2"},"scope":1079,"src":"10880:487:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1077,"nodeType":"Block","src":"11738:387:2","statements":[{"assignments":[1041],"declarations":[{"constant":false,"id":1041,"mutability":"mutable","name":"currentAllowance","nameLocation":"11756:16:2","nodeType":"VariableDeclaration","scope":1077,"src":"11748:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1040,"name":"uint256","nodeType":"ElementaryTypeName","src":"11748:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1046,"initialValue":{"arguments":[{"id":1043,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1033,"src":"11785:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1044,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1035,"src":"11792:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1042,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":683,"src":"11775:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11775:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11748:52:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1047,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1041,"src":"11814:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"id":1050,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11838:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1049,"name":"uint256","nodeType":"ElementaryTypeName","src":"11838:7:2","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":1048,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11833:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11833:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":1052,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11847:3:2","memberName":"max","nodeType":"MemberAccess","src":"11833:17:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11814:36:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1076,"nodeType":"IfStatement","src":"11810:309:2","trueBody":{"id":1075,"nodeType":"Block","src":"11852:267:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1054,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1041,"src":"11870:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1055,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1037,"src":"11889:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11870:24:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1064,"nodeType":"IfStatement","src":"11866:130:2","trueBody":{"id":1063,"nodeType":"Block","src":"11896:100:2","statements":[{"errorCall":{"arguments":[{"id":1058,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1035,"src":"11948:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1059,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1041,"src":"11957:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1060,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1037,"src":"11975:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1057,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2184,"src":"11921:26:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":1061,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:60:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1062,"nodeType":"RevertStatement","src":"11914:67:2"}]}},{"id":1074,"nodeType":"UncheckedBlock","src":"12009:100:2","statements":[{"expression":{"arguments":[{"id":1066,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1033,"src":"12046:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1067,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1035,"src":"12053:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1068,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1041,"src":"12062:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1069,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1037,"src":"12081:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12062:24:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":1071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12088:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1065,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[962,1030],"referencedDeclaration":1030,"src":"12037:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":1072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12037:57:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1073,"nodeType":"ExpressionStatement","src":"12037:57:2"}]}]}}]},"documentation":{"id":1031,"nodeType":"StructuredDocumentation","src":"11373:271:2","text":" @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":1078,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"11658:15:2","nodeType":"FunctionDefinition","parameters":{"id":1038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1033,"mutability":"mutable","name":"owner","nameLocation":"11682:5:2","nodeType":"VariableDeclaration","scope":1078,"src":"11674:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1032,"name":"address","nodeType":"ElementaryTypeName","src":"11674:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1035,"mutability":"mutable","name":"spender","nameLocation":"11697:7:2","nodeType":"VariableDeclaration","scope":1078,"src":"11689:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1034,"name":"address","nodeType":"ElementaryTypeName","src":"11689:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1037,"mutability":"mutable","name":"value","nameLocation":"11714:5:2","nodeType":"VariableDeclaration","scope":1078,"src":"11706:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1036,"name":"uint256","nodeType":"ElementaryTypeName","src":"11706:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11673:47:2"},"returnParameters":{"id":1039,"nodeType":"ParameterList","parameters":[],"src":"11738:0:2"},"scope":1079,"src":"11649:476:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1080,"src":"1281:10846:2","usedErrors":[211,214,2165,2170,2175,2184,2189,2194],"usedEvents":[219,2302,2311]}],"src":"105:12023:2"},"id":2},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol","exportedSymbols":{"ECDSA":[4696],"EIP712Upgradeable":[2038],"ERC20PermitUpgradeable":[1248],"ERC20Upgradeable":[1079],"IERC20Permit":[2430],"Initializable":[462],"NoncesUpgradeable":[1405]},"id":1249,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1081,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"122:24:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","id":1083,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1249,"sourceUnit":2431,"src":"148:93:3","symbolAliases":[{"foreign":{"id":1082,"name":"IERC20Permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2430,"src":"156:12:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol","file":"../ERC20Upgradeable.sol","id":1085,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1249,"sourceUnit":1080,"src":"242:57:3","symbolAliases":[{"foreign":{"id":1084,"name":"ERC20Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1079,"src":"250:16:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","id":1087,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1249,"sourceUnit":4697,"src":"300:75:3","symbolAliases":[{"foreign":{"id":1086,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4696,"src":"308:5:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol","file":"../../../utils/cryptography/EIP712Upgradeable.sol","id":1089,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1249,"sourceUnit":2039,"src":"376:84:3","symbolAliases":[{"foreign":{"id":1088,"name":"EIP712Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"384:17:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/NoncesUpgradeable.sol","file":"../../../utils/NoncesUpgradeable.sol","id":1091,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1249,"sourceUnit":1406,"src":"461:71:3","symbolAliases":[{"foreign":{"id":1090,"name":"NoncesUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1405,"src":"469:17:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../../proxy/utils/Initializable.sol","id":1093,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1249,"sourceUnit":463,"src":"533:69:3","symbolAliases":[{"foreign":{"id":1092,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"541:13:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1095,"name":"Initializable","nameLocations":["1138:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":462,"src":"1138:13:3"},"id":1096,"nodeType":"InheritanceSpecifier","src":"1138:13:3"},{"baseName":{"id":1097,"name":"ERC20Upgradeable","nameLocations":["1153:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":1079,"src":"1153:16:3"},"id":1098,"nodeType":"InheritanceSpecifier","src":"1153:16:3"},{"baseName":{"id":1099,"name":"IERC20Permit","nameLocations":["1171:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":2430,"src":"1171:12:3"},"id":1100,"nodeType":"InheritanceSpecifier","src":"1171:12:3"},{"baseName":{"id":1101,"name":"EIP712Upgradeable","nameLocations":["1185:17:3"],"nodeType":"IdentifierPath","referencedDeclaration":2038,"src":"1185:17:3"},"id":1102,"nodeType":"InheritanceSpecifier","src":"1185:17:3"},{"baseName":{"id":1103,"name":"NoncesUpgradeable","nameLocations":["1204:17:3"],"nodeType":"IdentifierPath","referencedDeclaration":1405,"src":"1204:17:3"},"id":1104,"nodeType":"InheritanceSpecifier","src":"1204:17:3"}],"canonicalName":"ERC20PermitUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1094,"nodeType":"StructuredDocumentation","src":"604:489:3","text":" @dev Implementation of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."},"fullyImplemented":true,"id":1248,"linearizedBaseContracts":[1248,1405,2038,2153,2430,1079,2195,2394,2368,1294,462],"name":"ERC20PermitUpgradeable","nameLocation":"1112:22:3","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1109,"mutability":"constant","name":"PERMIT_TYPEHASH","nameLocation":"1253:15:3","nodeType":"VariableDeclaration","scope":1248,"src":"1228:146:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1105,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1228:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529","id":1107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1289:84:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""},"value":"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""}],"id":1106,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1279:9:3","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1279:95:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"documentation":{"id":1110,"nodeType":"StructuredDocumentation","src":"1381:52:3","text":" @dev Permit deadline has expired."},"errorSelector":"62791302","id":1114,"name":"ERC2612ExpiredSignature","nameLocation":"1444:23:3","nodeType":"ErrorDefinition","parameters":{"id":1113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1112,"mutability":"mutable","name":"deadline","nameLocation":"1476:8:3","nodeType":"VariableDeclaration","scope":1114,"src":"1468:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1111,"name":"uint256","nodeType":"ElementaryTypeName","src":"1468:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1467:18:3"},"src":"1438:48:3"},{"documentation":{"id":1115,"nodeType":"StructuredDocumentation","src":"1492:45:3","text":" @dev Mismatched signature."},"errorSelector":"4b800e46","id":1121,"name":"ERC2612InvalidSigner","nameLocation":"1548:20:3","nodeType":"ErrorDefinition","parameters":{"id":1120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1117,"mutability":"mutable","name":"signer","nameLocation":"1577:6:3","nodeType":"VariableDeclaration","scope":1121,"src":"1569:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1116,"name":"address","nodeType":"ElementaryTypeName","src":"1569:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1119,"mutability":"mutable","name":"owner","nameLocation":"1593:5:3","nodeType":"VariableDeclaration","scope":1121,"src":"1585:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1118,"name":"address","nodeType":"ElementaryTypeName","src":"1585:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1568:31:3"},"src":"1542:58:3"},{"body":{"id":1134,"nodeType":"Block","src":"1906:51:3","statements":[{"expression":{"arguments":[{"id":1130,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1124,"src":"1940:4:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"31","id":1131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1946:3:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""}],"id":1129,"name":"__EIP712_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1791,"src":"1916:23:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":1132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1916:34:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1133,"nodeType":"ExpressionStatement","src":"1916:34:3"}]},"documentation":{"id":1122,"nodeType":"StructuredDocumentation","src":"1606:221:3","text":" @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n It's a good idea to use the same `name` that is defined as the ERC-20 token name."},"id":1135,"implemented":true,"kind":"function","modifiers":[{"id":1127,"kind":"modifierInvocation","modifierName":{"id":1126,"name":"onlyInitializing","nameLocations":["1889:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"1889:16:3"},"nodeType":"ModifierInvocation","src":"1889:16:3"}],"name":"__ERC20Permit_init","nameLocation":"1841:18:3","nodeType":"FunctionDefinition","parameters":{"id":1125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1124,"mutability":"mutable","name":"name","nameLocation":"1874:4:3","nodeType":"VariableDeclaration","scope":1135,"src":"1860:18:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1123,"name":"string","nodeType":"ElementaryTypeName","src":"1860:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1859:20:3"},"returnParameters":{"id":1128,"nodeType":"ParameterList","parameters":[],"src":"1906:0:3"},"scope":1248,"src":"1832:125:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1142,"nodeType":"Block","src":"2042:2:3","statements":[]},"id":1143,"implemented":true,"kind":"function","modifiers":[{"id":1140,"kind":"modifierInvocation","modifierName":{"id":1139,"name":"onlyInitializing","nameLocations":["2025:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"2025:16:3"},"nodeType":"ModifierInvocation","src":"2025:16:3"}],"name":"__ERC20Permit_init_unchained","nameLocation":"1972:28:3","nodeType":"FunctionDefinition","parameters":{"id":1138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1137,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1143,"src":"2001:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1136,"name":"string","nodeType":"ElementaryTypeName","src":"2001:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2000:15:3"},"returnParameters":{"id":1141,"nodeType":"ParameterList","parameters":[],"src":"2042:0:3"},"scope":1248,"src":"1963:81:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2415],"body":{"id":1219,"nodeType":"Block","src":"2272:483:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1161,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2286:5:3","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2292:9:3","memberName":"timestamp","nodeType":"MemberAccess","src":"2286:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1163,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1152,"src":"2304:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2286:26:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1170,"nodeType":"IfStatement","src":"2282:97:3","trueBody":{"id":1169,"nodeType":"Block","src":"2314:65:3","statements":[{"errorCall":{"arguments":[{"id":1166,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1152,"src":"2359:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1165,"name":"ERC2612ExpiredSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1114,"src":"2335:23:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:33:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1168,"nodeType":"RevertStatement","src":"2328:40:3"}]}},{"assignments":[1172],"declarations":[{"constant":false,"id":1172,"mutability":"mutable","name":"structHash","nameLocation":"2397:10:3","nodeType":"VariableDeclaration","scope":1219,"src":"2389:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1171,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2389:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1186,"initialValue":{"arguments":[{"arguments":[{"id":1176,"name":"PERMIT_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1109,"src":"2431:15:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1177,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1146,"src":"2448:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1178,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1148,"src":"2455:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1179,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1150,"src":"2464:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":1181,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1146,"src":"2481:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1180,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1379,"src":"2471:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":1182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2471:16:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1183,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1152,"src":"2489:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1174,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2420:3:3","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1175,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2424:6:3","memberName":"encode","nodeType":"MemberAccess","src":"2420:10:3","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2420:78:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1173,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2410:9:3","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1185,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2410:89:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2389:110:3"},{"assignments":[1188],"declarations":[{"constant":false,"id":1188,"mutability":"mutable","name":"hash","nameLocation":"2518:4:3","nodeType":"VariableDeclaration","scope":1219,"src":"2510:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1187,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2510:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1192,"initialValue":{"arguments":[{"id":1190,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1172,"src":"2542:10:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1189,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1840,"src":"2525:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":1191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2525:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2510:43:3"},{"assignments":[1194],"declarations":[{"constant":false,"id":1194,"mutability":"mutable","name":"signer","nameLocation":"2572:6:3","nodeType":"VariableDeclaration","scope":1219,"src":"2564:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1193,"name":"address","nodeType":"ElementaryTypeName","src":"2564:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1202,"initialValue":{"arguments":[{"id":1197,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1188,"src":"2595:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1198,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1154,"src":"2601:1:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1199,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1156,"src":"2604:1:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1200,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1158,"src":"2607:1:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1195,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4696,"src":"2581:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$4696_$","typeString":"type(library ECDSA)"}},"id":1196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2587:7:3","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":4646,"src":"2581:13:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":1201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2581:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2564:45:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1203,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1194,"src":"2623:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1204,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1146,"src":"2633:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2623:15:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1212,"nodeType":"IfStatement","src":"2619:88:3","trueBody":{"id":1211,"nodeType":"Block","src":"2640:67:3","statements":[{"errorCall":{"arguments":[{"id":1207,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1194,"src":"2682:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1208,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1146,"src":"2690:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1206,"name":"ERC2612InvalidSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1121,"src":"2661:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":1209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2661:35:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1210,"nodeType":"RevertStatement","src":"2654:42:3"}]}},{"expression":{"arguments":[{"id":1214,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1146,"src":"2726:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1215,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1148,"src":"2733:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1216,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1150,"src":"2742:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1213,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[962,1030],"referencedDeclaration":962,"src":"2717:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2717:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1218,"nodeType":"ExpressionStatement","src":"2717:31:3"}]},"documentation":{"id":1144,"nodeType":"StructuredDocumentation","src":"2050:28:3","text":"@inheritdoc IERC20Permit"},"functionSelector":"d505accf","id":1220,"implemented":true,"kind":"function","modifiers":[],"name":"permit","nameLocation":"2092:6:3","nodeType":"FunctionDefinition","parameters":{"id":1159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1146,"mutability":"mutable","name":"owner","nameLocation":"2116:5:3","nodeType":"VariableDeclaration","scope":1220,"src":"2108:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1145,"name":"address","nodeType":"ElementaryTypeName","src":"2108:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1148,"mutability":"mutable","name":"spender","nameLocation":"2139:7:3","nodeType":"VariableDeclaration","scope":1220,"src":"2131:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1147,"name":"address","nodeType":"ElementaryTypeName","src":"2131:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1150,"mutability":"mutable","name":"value","nameLocation":"2164:5:3","nodeType":"VariableDeclaration","scope":1220,"src":"2156:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1149,"name":"uint256","nodeType":"ElementaryTypeName","src":"2156:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1152,"mutability":"mutable","name":"deadline","nameLocation":"2187:8:3","nodeType":"VariableDeclaration","scope":1220,"src":"2179:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1151,"name":"uint256","nodeType":"ElementaryTypeName","src":"2179:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1154,"mutability":"mutable","name":"v","nameLocation":"2211:1:3","nodeType":"VariableDeclaration","scope":1220,"src":"2205:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1153,"name":"uint8","nodeType":"ElementaryTypeName","src":"2205:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1156,"mutability":"mutable","name":"r","nameLocation":"2230:1:3","nodeType":"VariableDeclaration","scope":1220,"src":"2222:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1155,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2222:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1158,"mutability":"mutable","name":"s","nameLocation":"2249:1:3","nodeType":"VariableDeclaration","scope":1220,"src":"2241:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1157,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2241:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2098:158:3"},"returnParameters":{"id":1160,"nodeType":"ParameterList","parameters":[],"src":"2272:0:3"},"scope":1248,"src":"2083:672:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1357,2423],"body":{"id":1236,"nodeType":"Block","src":"2905:43:3","statements":[{"expression":{"arguments":[{"id":1233,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1223,"src":"2935:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1231,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2922:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20PermitUpgradeable_$1248_$","typeString":"type(contract super ERC20PermitUpgradeable)"}},"id":1232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2928:6:3","memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":1357,"src":"2922:12:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2922:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1230,"id":1235,"nodeType":"Return","src":"2915:26:3"}]},"documentation":{"id":1221,"nodeType":"StructuredDocumentation","src":"2761:28:3","text":"@inheritdoc IERC20Permit"},"functionSelector":"7ecebe00","id":1237,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"2803:6:3","nodeType":"FunctionDefinition","overrides":{"id":1227,"nodeType":"OverrideSpecifier","overrides":[{"id":1225,"name":"IERC20Permit","nameLocations":["2854:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":2430,"src":"2854:12:3"},{"id":1226,"name":"NoncesUpgradeable","nameLocations":["2868:17:3"],"nodeType":"IdentifierPath","referencedDeclaration":1405,"src":"2868:17:3"}],"src":"2845:41:3"},"parameters":{"id":1224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1223,"mutability":"mutable","name":"owner","nameLocation":"2818:5:3","nodeType":"VariableDeclaration","scope":1237,"src":"2810:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1222,"name":"address","nodeType":"ElementaryTypeName","src":"2810:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2809:15:3"},"returnParameters":{"id":1230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1229,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1237,"src":"2896:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1228,"name":"uint256","nodeType":"ElementaryTypeName","src":"2896:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2895:9:3"},"scope":1248,"src":"2794:154:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2429],"body":{"id":1246,"nodeType":"Block","src":"3108:44:3","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1243,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1801,"src":"3125:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":1244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3125:20:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1242,"id":1245,"nodeType":"Return","src":"3118:27:3"}]},"documentation":{"id":1238,"nodeType":"StructuredDocumentation","src":"2954:28:3","text":"@inheritdoc IERC20Permit"},"functionSelector":"3644e515","id":1247,"implemented":true,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"3049:16:3","nodeType":"FunctionDefinition","parameters":{"id":1239,"nodeType":"ParameterList","parameters":[],"src":"3065:2:3"},"returnParameters":{"id":1242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1241,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1247,"src":"3099:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1240,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3099:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3098:9:3"},"scope":1248,"src":"3040:112:3","stateMutability":"view","virtual":true,"visibility":"external"}],"scope":1249,"src":"1094:2060:3","usedErrors":[211,214,1114,1121,1308,2165,2170,2175,2184,2189,2194,4359,4364,4369],"usedEvents":[219,2133,2302,2311]}],"src":"122:3033:3"},"id":3},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[1294],"Initializable":[462]},"id":1295,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1250,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:4"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":1252,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1295,"sourceUnit":463,"src":"126:63:4","symbolAliases":[{"foreign":{"id":1251,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"134:13:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1254,"name":"Initializable","nameLocations":["728:13:4"],"nodeType":"IdentifierPath","referencedDeclaration":462,"src":"728:13:4"},"id":1255,"nodeType":"InheritanceSpecifier","src":"728:13:4"}],"canonicalName":"ContextUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1253,"nodeType":"StructuredDocumentation","src":"191:496:4","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1294,"linearizedBaseContracts":[1294,462],"name":"ContextUpgradeable","nameLocation":"706:18:4","nodeType":"ContractDefinition","nodes":[{"body":{"id":1260,"nodeType":"Block","src":"800:7:4","statements":[]},"id":1261,"implemented":true,"kind":"function","modifiers":[{"id":1258,"kind":"modifierInvocation","modifierName":{"id":1257,"name":"onlyInitializing","nameLocations":["783:16:4"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"783:16:4"},"nodeType":"ModifierInvocation","src":"783:16:4"}],"name":"__Context_init","nameLocation":"757:14:4","nodeType":"FunctionDefinition","parameters":{"id":1256,"nodeType":"ParameterList","parameters":[],"src":"771:2:4"},"returnParameters":{"id":1259,"nodeType":"ParameterList","parameters":[],"src":"800:0:4"},"scope":1294,"src":"748:59:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1266,"nodeType":"Block","src":"875:7:4","statements":[]},"id":1267,"implemented":true,"kind":"function","modifiers":[{"id":1264,"kind":"modifierInvocation","modifierName":{"id":1263,"name":"onlyInitializing","nameLocations":["858:16:4"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"858:16:4"},"nodeType":"ModifierInvocation","src":"858:16:4"}],"name":"__Context_init_unchained","nameLocation":"822:24:4","nodeType":"FunctionDefinition","parameters":{"id":1262,"nodeType":"ParameterList","parameters":[],"src":"846:2:4"},"returnParameters":{"id":1265,"nodeType":"ParameterList","parameters":[],"src":"875:0:4"},"scope":1294,"src":"813:69:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1275,"nodeType":"Block","src":"949:34:4","statements":[{"expression":{"expression":{"id":1272,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"966:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"970:6:4","memberName":"sender","nodeType":"MemberAccess","src":"966:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1271,"id":1274,"nodeType":"Return","src":"959:17:4"}]},"id":1276,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"896:10:4","nodeType":"FunctionDefinition","parameters":{"id":1268,"nodeType":"ParameterList","parameters":[],"src":"906:2:4"},"returnParameters":{"id":1271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1270,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1276,"src":"940:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1269,"name":"address","nodeType":"ElementaryTypeName","src":"940:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"939:9:4"},"scope":1294,"src":"887:96:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1284,"nodeType":"Block","src":"1056:32:4","statements":[{"expression":{"expression":{"id":1281,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1073:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1077:4:4","memberName":"data","nodeType":"MemberAccess","src":"1073:8:4","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1280,"id":1283,"nodeType":"Return","src":"1066:15:4"}]},"id":1285,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"998:8:4","nodeType":"FunctionDefinition","parameters":{"id":1277,"nodeType":"ParameterList","parameters":[],"src":"1006:2:4"},"returnParameters":{"id":1280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1279,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1285,"src":"1040:14:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1278,"name":"bytes","nodeType":"ElementaryTypeName","src":"1040:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1039:16:4"},"scope":1294,"src":"989:99:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1292,"nodeType":"Block","src":"1166:25:4","statements":[{"expression":{"hexValue":"30","id":1290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1183:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1289,"id":1291,"nodeType":"Return","src":"1176:8:4"}]},"id":1293,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"1103:20:4","nodeType":"FunctionDefinition","parameters":{"id":1286,"nodeType":"ParameterList","parameters":[],"src":"1123:2:4"},"returnParameters":{"id":1289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1288,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1293,"src":"1157:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1287,"name":"uint256","nodeType":"ElementaryTypeName","src":"1157:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1156:9:4"},"scope":1294,"src":"1094:97:4","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1295,"src":"688:505:4","usedErrors":[211,214],"usedEvents":[219]}],"src":"101:1093:4"},"id":4},"@openzeppelin/contracts-upgradeable/utils/NoncesUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/NoncesUpgradeable.sol","exportedSymbols":{"Initializable":[462],"NoncesUpgradeable":[1405]},"id":1406,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1296,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:5"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":1298,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1406,"sourceUnit":463,"src":"124:63:5","symbolAliases":[{"foreign":{"id":1297,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"132:13:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1300,"name":"Initializable","nameLocations":["312:13:5"],"nodeType":"IdentifierPath","referencedDeclaration":462,"src":"312:13:5"},"id":1301,"nodeType":"InheritanceSpecifier","src":"312:13:5"}],"canonicalName":"NoncesUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1299,"nodeType":"StructuredDocumentation","src":"189:83:5","text":" @dev Provides tracking nonces for addresses. Nonces will only increment."},"fullyImplemented":true,"id":1405,"linearizedBaseContracts":[1405,462],"name":"NoncesUpgradeable","nameLocation":"291:17:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1302,"nodeType":"StructuredDocumentation","src":"332:90:5","text":" @dev The nonce used for an `account` is not the expected current nonce."},"errorSelector":"752d88c0","id":1308,"name":"InvalidAccountNonce","nameLocation":"433:19:5","nodeType":"ErrorDefinition","parameters":{"id":1307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1304,"mutability":"mutable","name":"account","nameLocation":"461:7:5","nodeType":"VariableDeclaration","scope":1308,"src":"453:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1303,"name":"address","nodeType":"ElementaryTypeName","src":"453:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1306,"mutability":"mutable","name":"currentNonce","nameLocation":"478:12:5","nodeType":"VariableDeclaration","scope":1308,"src":"470:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1305,"name":"uint256","nodeType":"ElementaryTypeName","src":"470:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"452:39:5"},"src":"427:65:5"},{"canonicalName":"NoncesUpgradeable.NoncesStorage","documentation":{"id":1309,"nodeType":"StructuredDocumentation","src":"498:64:5","text":"@custom:storage-location erc7201:openzeppelin.storage.Nonces"},"id":1314,"members":[{"constant":false,"id":1313,"mutability":"mutable","name":"_nonces","nameLocation":"634:7:5","nodeType":"VariableDeclaration","scope":1314,"src":"598:43:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1312,"keyName":"account","keyNameLocation":"614:7:5","keyType":{"id":1310,"name":"address","nodeType":"ElementaryTypeName","src":"606:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"598:35:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1311,"name":"uint256","nodeType":"ElementaryTypeName","src":"625:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"}],"name":"NoncesStorage","nameLocation":"574:13:5","nodeType":"StructDefinition","scope":1405,"src":"567:81:5","visibility":"public"},{"constant":true,"id":1317,"mutability":"constant","name":"NoncesStorageLocation","nameLocation":"789:21:5","nodeType":"VariableDeclaration","scope":1405,"src":"764:115:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1315,"name":"bytes32","nodeType":"ElementaryTypeName","src":"764:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307835616234326365643632383838383235396330386163393864623165623063663730326663313530313334343331316438623130306364316266653462623030","id":1316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"813:66:5","typeDescriptions":{"typeIdentifier":"t_rational_41026498920877473550552694860415970151284396403628511442111957027090812156672_by_1","typeString":"int_const 4102...(69 digits omitted)...6672"},"value":"0x5ab42ced628888259c08ac98db1eb0cf702fc1501344311d8b100cd1bfe4bb00"},"visibility":"private"},{"body":{"id":1324,"nodeType":"Block","src":"962:80:5","statements":[{"AST":{"nativeSrc":"981:55:5","nodeType":"YulBlock","src":"981:55:5","statements":[{"nativeSrc":"995:31:5","nodeType":"YulAssignment","src":"995:31:5","value":{"name":"NoncesStorageLocation","nativeSrc":"1005:21:5","nodeType":"YulIdentifier","src":"1005:21:5"},"variableNames":[{"name":"$.slot","nativeSrc":"995:6:5","nodeType":"YulIdentifier","src":"995:6:5"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1321,"isOffset":false,"isSlot":true,"src":"995:6:5","suffix":"slot","valueSize":1},{"declaration":1317,"isOffset":false,"isSlot":false,"src":"1005:21:5","valueSize":1}],"id":1323,"nodeType":"InlineAssembly","src":"972:64:5"}]},"id":1325,"implemented":true,"kind":"function","modifiers":[],"name":"_getNoncesStorage","nameLocation":"895:17:5","nodeType":"FunctionDefinition","parameters":{"id":1318,"nodeType":"ParameterList","parameters":[],"src":"912:2:5"},"returnParameters":{"id":1322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1321,"mutability":"mutable","name":"$","nameLocation":"959:1:5","nodeType":"VariableDeclaration","scope":1325,"src":"937:23:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_NoncesStorage_$1314_storage_ptr","typeString":"struct NoncesUpgradeable.NoncesStorage"},"typeName":{"id":1320,"nodeType":"UserDefinedTypeName","pathNode":{"id":1319,"name":"NoncesStorage","nameLocations":["937:13:5"],"nodeType":"IdentifierPath","referencedDeclaration":1314,"src":"937:13:5"},"referencedDeclaration":1314,"src":"937:13:5","typeDescriptions":{"typeIdentifier":"t_struct$_NoncesStorage_$1314_storage_ptr","typeString":"struct NoncesUpgradeable.NoncesStorage"}},"visibility":"internal"}],"src":"936:25:5"},"scope":1405,"src":"886:156:5","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1330,"nodeType":"Block","src":"1099:7:5","statements":[]},"id":1331,"implemented":true,"kind":"function","modifiers":[{"id":1328,"kind":"modifierInvocation","modifierName":{"id":1327,"name":"onlyInitializing","nameLocations":["1082:16:5"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"1082:16:5"},"nodeType":"ModifierInvocation","src":"1082:16:5"}],"name":"__Nonces_init","nameLocation":"1057:13:5","nodeType":"FunctionDefinition","parameters":{"id":1326,"nodeType":"ParameterList","parameters":[],"src":"1070:2:5"},"returnParameters":{"id":1329,"nodeType":"ParameterList","parameters":[],"src":"1099:0:5"},"scope":1405,"src":"1048:58:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1336,"nodeType":"Block","src":"1173:7:5","statements":[]},"id":1337,"implemented":true,"kind":"function","modifiers":[{"id":1334,"kind":"modifierInvocation","modifierName":{"id":1333,"name":"onlyInitializing","nameLocations":["1156:16:5"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"1156:16:5"},"nodeType":"ModifierInvocation","src":"1156:16:5"}],"name":"__Nonces_init_unchained","nameLocation":"1121:23:5","nodeType":"FunctionDefinition","parameters":{"id":1332,"nodeType":"ParameterList","parameters":[],"src":"1144:2:5"},"returnParameters":{"id":1335,"nodeType":"ParameterList","parameters":[],"src":"1173:0:5"},"scope":1405,"src":"1112:68:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1356,"nodeType":"Block","src":"1328:95:5","statements":[{"assignments":[1347],"declarations":[{"constant":false,"id":1347,"mutability":"mutable","name":"$","nameLocation":"1360:1:5","nodeType":"VariableDeclaration","scope":1356,"src":"1338:23:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_NoncesStorage_$1314_storage_ptr","typeString":"struct NoncesUpgradeable.NoncesStorage"},"typeName":{"id":1346,"nodeType":"UserDefinedTypeName","pathNode":{"id":1345,"name":"NoncesStorage","nameLocations":["1338:13:5"],"nodeType":"IdentifierPath","referencedDeclaration":1314,"src":"1338:13:5"},"referencedDeclaration":1314,"src":"1338:13:5","typeDescriptions":{"typeIdentifier":"t_struct$_NoncesStorage_$1314_storage_ptr","typeString":"struct NoncesUpgradeable.NoncesStorage"}},"visibility":"internal"}],"id":1350,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1348,"name":"_getNoncesStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1325,"src":"1364:17:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_NoncesStorage_$1314_storage_ptr_$","typeString":"function () pure returns (struct NoncesUpgradeable.NoncesStorage storage pointer)"}},"id":1349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1364:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_NoncesStorage_$1314_storage_ptr","typeString":"struct NoncesUpgradeable.NoncesStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"1338:45:5"},{"expression":{"baseExpression":{"expression":{"id":1351,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1347,"src":"1400:1:5","typeDescriptions":{"typeIdentifier":"t_struct$_NoncesStorage_$1314_storage_ptr","typeString":"struct NoncesUpgradeable.NoncesStorage storage pointer"}},"id":1352,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1402:7:5","memberName":"_nonces","nodeType":"MemberAccess","referencedDeclaration":1313,"src":"1400:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1354,"indexExpression":{"id":1353,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1340,"src":"1410:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1400:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1344,"id":1355,"nodeType":"Return","src":"1393:23:5"}]},"documentation":{"id":1338,"nodeType":"StructuredDocumentation","src":"1185:69:5","text":" @dev Returns the next unused nonce for an address."},"functionSelector":"7ecebe00","id":1357,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"1268:6:5","nodeType":"FunctionDefinition","parameters":{"id":1341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1340,"mutability":"mutable","name":"owner","nameLocation":"1283:5:5","nodeType":"VariableDeclaration","scope":1357,"src":"1275:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1339,"name":"address","nodeType":"ElementaryTypeName","src":"1275:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1274:15:5"},"returnParameters":{"id":1344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1343,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1357,"src":"1319:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1342,"name":"uint256","nodeType":"ElementaryTypeName","src":"1319:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1318:9:5"},"scope":1405,"src":"1259:164:5","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1378,"nodeType":"Block","src":"1606:383:5","statements":[{"assignments":[1367],"declarations":[{"constant":false,"id":1367,"mutability":"mutable","name":"$","nameLocation":"1638:1:5","nodeType":"VariableDeclaration","scope":1378,"src":"1616:23:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_NoncesStorage_$1314_storage_ptr","typeString":"struct NoncesUpgradeable.NoncesStorage"},"typeName":{"id":1366,"nodeType":"UserDefinedTypeName","pathNode":{"id":1365,"name":"NoncesStorage","nameLocations":["1616:13:5"],"nodeType":"IdentifierPath","referencedDeclaration":1314,"src":"1616:13:5"},"referencedDeclaration":1314,"src":"1616:13:5","typeDescriptions":{"typeIdentifier":"t_struct$_NoncesStorage_$1314_storage_ptr","typeString":"struct NoncesUpgradeable.NoncesStorage"}},"visibility":"internal"}],"id":1370,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1368,"name":"_getNoncesStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1325,"src":"1642:17:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_NoncesStorage_$1314_storage_ptr_$","typeString":"function () pure returns (struct NoncesUpgradeable.NoncesStorage storage pointer)"}},"id":1369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1642:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_NoncesStorage_$1314_storage_ptr","typeString":"struct NoncesUpgradeable.NoncesStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"1616:45:5"},{"id":1377,"nodeType":"UncheckedBlock","src":"1864:119:5","statements":[{"expression":{"id":1375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1954:18:5","subExpression":{"baseExpression":{"expression":{"id":1371,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1367,"src":"1954:1:5","typeDescriptions":{"typeIdentifier":"t_struct$_NoncesStorage_$1314_storage_ptr","typeString":"struct NoncesUpgradeable.NoncesStorage storage pointer"}},"id":1372,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1956:7:5","memberName":"_nonces","nodeType":"MemberAccess","referencedDeclaration":1313,"src":"1954:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1374,"indexExpression":{"id":1373,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1360,"src":"1964:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1954:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1364,"id":1376,"nodeType":"Return","src":"1947:25:5"}]}]},"documentation":{"id":1358,"nodeType":"StructuredDocumentation","src":"1429:103:5","text":" @dev Consumes a nonce.\n Returns the current value and increments nonce."},"id":1379,"implemented":true,"kind":"function","modifiers":[],"name":"_useNonce","nameLocation":"1546:9:5","nodeType":"FunctionDefinition","parameters":{"id":1361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1360,"mutability":"mutable","name":"owner","nameLocation":"1564:5:5","nodeType":"VariableDeclaration","scope":1379,"src":"1556:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1359,"name":"address","nodeType":"ElementaryTypeName","src":"1556:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1555:15:5"},"returnParameters":{"id":1364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1363,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1379,"src":"1597:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1362,"name":"uint256","nodeType":"ElementaryTypeName","src":"1597:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1596:9:5"},"scope":1405,"src":"1537:452:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1403,"nodeType":"Block","src":"2173:149:5","statements":[{"assignments":[1388],"declarations":[{"constant":false,"id":1388,"mutability":"mutable","name":"current","nameLocation":"2191:7:5","nodeType":"VariableDeclaration","scope":1403,"src":"2183:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1387,"name":"uint256","nodeType":"ElementaryTypeName","src":"2183:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1392,"initialValue":{"arguments":[{"id":1390,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1382,"src":"2211:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1389,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1379,"src":"2201:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":1391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2201:16:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2183:34:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1393,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"2231:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1394,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"2240:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2231:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1402,"nodeType":"IfStatement","src":"2227:89:5","trueBody":{"id":1401,"nodeType":"Block","src":"2249:67:5","statements":[{"errorCall":{"arguments":[{"id":1397,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1382,"src":"2290:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1398,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"2297:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1396,"name":"InvalidAccountNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1308,"src":"2270:19:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) pure"}},"id":1399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2270:35:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1400,"nodeType":"RevertStatement","src":"2263:42:5"}]}}]},"documentation":{"id":1380,"nodeType":"StructuredDocumentation","src":"1995:100:5","text":" @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`."},"id":1404,"implemented":true,"kind":"function","modifiers":[],"name":"_useCheckedNonce","nameLocation":"2109:16:5","nodeType":"FunctionDefinition","parameters":{"id":1385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1382,"mutability":"mutable","name":"owner","nameLocation":"2134:5:5","nodeType":"VariableDeclaration","scope":1404,"src":"2126:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1381,"name":"address","nodeType":"ElementaryTypeName","src":"2126:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1384,"mutability":"mutable","name":"nonce","nameLocation":"2149:5:5","nodeType":"VariableDeclaration","scope":1404,"src":"2141:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1383,"name":"uint256","nodeType":"ElementaryTypeName","src":"2141:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2125:30:5"},"returnParameters":{"id":1386,"nodeType":"ParameterList","parameters":[],"src":"2173:0:5"},"scope":1405,"src":"2100:222:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1406,"src":"273:2051:5","usedErrors":[211,214,1308],"usedEvents":[219]}],"src":"99:2226:5"},"id":5},"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[1294],"Initializable":[462],"PausableUpgradeable":[1565]},"id":1566,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1407,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:6"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":1409,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1566,"sourceUnit":1295,"src":"128:67:6","symbolAliases":[{"foreign":{"id":1408,"name":"ContextUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"136:18:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":1411,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1566,"sourceUnit":463,"src":"196:63:6","symbolAliases":[{"foreign":{"id":1410,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"204:13:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1413,"name":"Initializable","nameLocations":["742:13:6"],"nodeType":"IdentifierPath","referencedDeclaration":462,"src":"742:13:6"},"id":1414,"nodeType":"InheritanceSpecifier","src":"742:13:6"},{"baseName":{"id":1415,"name":"ContextUpgradeable","nameLocations":["757:18:6"],"nodeType":"IdentifierPath","referencedDeclaration":1294,"src":"757:18:6"},"id":1416,"nodeType":"InheritanceSpecifier","src":"757:18:6"}],"canonicalName":"PausableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1412,"nodeType":"StructuredDocumentation","src":"261:439:6","text":" @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."},"fullyImplemented":true,"id":1565,"linearizedBaseContracts":[1565,1294,462],"name":"PausableUpgradeable","nameLocation":"719:19:6","nodeType":"ContractDefinition","nodes":[{"canonicalName":"PausableUpgradeable.PausableStorage","documentation":{"id":1417,"nodeType":"StructuredDocumentation","src":"782:66:6","text":"@custom:storage-location erc7201:openzeppelin.storage.Pausable"},"id":1420,"members":[{"constant":false,"id":1419,"mutability":"mutable","name":"_paused","nameLocation":"891:7:6","nodeType":"VariableDeclaration","scope":1420,"src":"886:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1418,"name":"bool","nodeType":"ElementaryTypeName","src":"886:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"PausableStorage","nameLocation":"860:15:6","nodeType":"StructDefinition","scope":1565,"src":"853:52:6","visibility":"public"},{"constant":true,"id":1423,"mutability":"constant","name":"PausableStorageLocation","nameLocation":"1048:23:6","nodeType":"VariableDeclaration","scope":1565,"src":"1023:117:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1421,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1023:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307863643565643135633665313837653737653961656538383138346332316634663231383261623538323763623362376530376662656463643633663033333030","id":1422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1074:66:6","typeDescriptions":{"typeIdentifier":"t_rational_92891662540554778686986514950364265630913525426840345632122912437671245656832_by_1","typeString":"int_const 9289...(69 digits omitted)...6832"},"value":"0xcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300"},"visibility":"private"},{"body":{"id":1430,"nodeType":"Block","src":"1227:82:6","statements":[{"AST":{"nativeSrc":"1246:57:6","nodeType":"YulBlock","src":"1246:57:6","statements":[{"nativeSrc":"1260:33:6","nodeType":"YulAssignment","src":"1260:33:6","value":{"name":"PausableStorageLocation","nativeSrc":"1270:23:6","nodeType":"YulIdentifier","src":"1270:23:6"},"variableNames":[{"name":"$.slot","nativeSrc":"1260:6:6","nodeType":"YulIdentifier","src":"1260:6:6"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1427,"isOffset":false,"isSlot":true,"src":"1260:6:6","suffix":"slot","valueSize":1},{"declaration":1423,"isOffset":false,"isSlot":false,"src":"1270:23:6","valueSize":1}],"id":1429,"nodeType":"InlineAssembly","src":"1237:66:6"}]},"id":1431,"implemented":true,"kind":"function","modifiers":[],"name":"_getPausableStorage","nameLocation":"1156:19:6","nodeType":"FunctionDefinition","parameters":{"id":1424,"nodeType":"ParameterList","parameters":[],"src":"1175:2:6"},"returnParameters":{"id":1428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1427,"mutability":"mutable","name":"$","nameLocation":"1224:1:6","nodeType":"VariableDeclaration","scope":1431,"src":"1200:25:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1420_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"},"typeName":{"id":1426,"nodeType":"UserDefinedTypeName","pathNode":{"id":1425,"name":"PausableStorage","nameLocations":["1200:15:6"],"nodeType":"IdentifierPath","referencedDeclaration":1420,"src":"1200:15:6"},"referencedDeclaration":1420,"src":"1200:15:6","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1420_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"}},"visibility":"internal"}],"src":"1199:27:6"},"scope":1565,"src":"1147:162:6","stateMutability":"pure","virtual":false,"visibility":"private"},{"anonymous":false,"documentation":{"id":1432,"nodeType":"StructuredDocumentation","src":"1315:73:6","text":" @dev Emitted when the pause is triggered by `account`."},"eventSelector":"62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258","id":1436,"name":"Paused","nameLocation":"1399:6:6","nodeType":"EventDefinition","parameters":{"id":1435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1434,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"1414:7:6","nodeType":"VariableDeclaration","scope":1436,"src":"1406:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1433,"name":"address","nodeType":"ElementaryTypeName","src":"1406:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1405:17:6"},"src":"1393:30:6"},{"anonymous":false,"documentation":{"id":1437,"nodeType":"StructuredDocumentation","src":"1429:70:6","text":" @dev Emitted when the pause is lifted by `account`."},"eventSelector":"5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa","id":1441,"name":"Unpaused","nameLocation":"1510:8:6","nodeType":"EventDefinition","parameters":{"id":1440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1439,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"1527:7:6","nodeType":"VariableDeclaration","scope":1441,"src":"1519:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1438,"name":"address","nodeType":"ElementaryTypeName","src":"1519:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1518:17:6"},"src":"1504:32:6"},{"documentation":{"id":1442,"nodeType":"StructuredDocumentation","src":"1542:76:6","text":" @dev The operation failed because the contract is paused."},"errorSelector":"d93c0665","id":1444,"name":"EnforcedPause","nameLocation":"1629:13:6","nodeType":"ErrorDefinition","parameters":{"id":1443,"nodeType":"ParameterList","parameters":[],"src":"1642:2:6"},"src":"1623:22:6"},{"documentation":{"id":1445,"nodeType":"StructuredDocumentation","src":"1651:80:6","text":" @dev The operation failed because the contract is not paused."},"errorSelector":"8dfc202b","id":1447,"name":"ExpectedPause","nameLocation":"1742:13:6","nodeType":"ErrorDefinition","parameters":{"id":1446,"nodeType":"ParameterList","parameters":[],"src":"1755:2:6"},"src":"1736:22:6"},{"body":{"id":1454,"nodeType":"Block","src":"1969:47:6","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1450,"name":"_requireNotPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1503,"src":"1979:17:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":1451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1979:19:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1452,"nodeType":"ExpressionStatement","src":"1979:19:6"},{"id":1453,"nodeType":"PlaceholderStatement","src":"2008:1:6"}]},"documentation":{"id":1448,"nodeType":"StructuredDocumentation","src":"1764:175:6","text":" @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."},"id":1455,"name":"whenNotPaused","nameLocation":"1953:13:6","nodeType":"ModifierDefinition","parameters":{"id":1449,"nodeType":"ParameterList","parameters":[],"src":"1966:2:6"},"src":"1944:72:6","virtual":false,"visibility":"internal"},{"body":{"id":1462,"nodeType":"Block","src":"2216:44:6","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1458,"name":"_requirePaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1516,"src":"2226:14:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":1459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:16:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1460,"nodeType":"ExpressionStatement","src":"2226:16:6"},{"id":1461,"nodeType":"PlaceholderStatement","src":"2252:1:6"}]},"documentation":{"id":1456,"nodeType":"StructuredDocumentation","src":"2022:167:6","text":" @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."},"id":1463,"name":"whenPaused","nameLocation":"2203:10:6","nodeType":"ModifierDefinition","parameters":{"id":1457,"nodeType":"ParameterList","parameters":[],"src":"2213:2:6"},"src":"2194:66:6","virtual":false,"visibility":"internal"},{"body":{"id":1468,"nodeType":"Block","src":"2319:7:6","statements":[]},"id":1469,"implemented":true,"kind":"function","modifiers":[{"id":1466,"kind":"modifierInvocation","modifierName":{"id":1465,"name":"onlyInitializing","nameLocations":["2302:16:6"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"2302:16:6"},"nodeType":"ModifierInvocation","src":"2302:16:6"}],"name":"__Pausable_init","nameLocation":"2275:15:6","nodeType":"FunctionDefinition","parameters":{"id":1464,"nodeType":"ParameterList","parameters":[],"src":"2290:2:6"},"returnParameters":{"id":1467,"nodeType":"ParameterList","parameters":[],"src":"2319:0:6"},"scope":1565,"src":"2266:60:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1474,"nodeType":"Block","src":"2395:7:6","statements":[]},"id":1475,"implemented":true,"kind":"function","modifiers":[{"id":1472,"kind":"modifierInvocation","modifierName":{"id":1471,"name":"onlyInitializing","nameLocations":["2378:16:6"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"2378:16:6"},"nodeType":"ModifierInvocation","src":"2378:16:6"}],"name":"__Pausable_init_unchained","nameLocation":"2341:25:6","nodeType":"FunctionDefinition","parameters":{"id":1470,"nodeType":"ParameterList","parameters":[],"src":"2366:2:6"},"returnParameters":{"id":1473,"nodeType":"ParameterList","parameters":[],"src":"2395:0:6"},"scope":1565,"src":"2332:70:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1490,"nodeType":"Block","src":"2549:92:6","statements":[{"assignments":[1483],"declarations":[{"constant":false,"id":1483,"mutability":"mutable","name":"$","nameLocation":"2583:1:6","nodeType":"VariableDeclaration","scope":1490,"src":"2559:25:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1420_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"},"typeName":{"id":1482,"nodeType":"UserDefinedTypeName","pathNode":{"id":1481,"name":"PausableStorage","nameLocations":["2559:15:6"],"nodeType":"IdentifierPath","referencedDeclaration":1420,"src":"2559:15:6"},"referencedDeclaration":1420,"src":"2559:15:6","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1420_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"}},"visibility":"internal"}],"id":1486,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1484,"name":"_getPausableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1431,"src":"2587:19:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_PausableStorage_$1420_storage_ptr_$","typeString":"function () pure returns (struct PausableUpgradeable.PausableStorage storage pointer)"}},"id":1485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2587:21:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1420_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2559:49:6"},{"expression":{"expression":{"id":1487,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1483,"src":"2625:1:6","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1420_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"id":1488,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2627:7:6","memberName":"_paused","nodeType":"MemberAccess","referencedDeclaration":1419,"src":"2625:9:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1480,"id":1489,"nodeType":"Return","src":"2618:16:6"}]},"documentation":{"id":1476,"nodeType":"StructuredDocumentation","src":"2407:84:6","text":" @dev Returns true if the contract is paused, and false otherwise."},"functionSelector":"5c975abb","id":1491,"implemented":true,"kind":"function","modifiers":[],"name":"paused","nameLocation":"2505:6:6","nodeType":"FunctionDefinition","parameters":{"id":1477,"nodeType":"ParameterList","parameters":[],"src":"2511:2:6"},"returnParameters":{"id":1480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1479,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1491,"src":"2543:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1478,"name":"bool","nodeType":"ElementaryTypeName","src":"2543:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2542:6:6"},"scope":1565,"src":"2496:145:6","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1502,"nodeType":"Block","src":"2760:77:6","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"id":1495,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1491,"src":"2774:6:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":1496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2774:8:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1501,"nodeType":"IfStatement","src":"2770:61:6","trueBody":{"id":1500,"nodeType":"Block","src":"2784:47:6","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1497,"name":"EnforcedPause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1444,"src":"2805:13:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2805:15:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1499,"nodeType":"RevertStatement","src":"2798:22:6"}]}}]},"documentation":{"id":1492,"nodeType":"StructuredDocumentation","src":"2647:57:6","text":" @dev Throws if the contract is paused."},"id":1503,"implemented":true,"kind":"function","modifiers":[],"name":"_requireNotPaused","nameLocation":"2718:17:6","nodeType":"FunctionDefinition","parameters":{"id":1493,"nodeType":"ParameterList","parameters":[],"src":"2735:2:6"},"returnParameters":{"id":1494,"nodeType":"ParameterList","parameters":[],"src":"2760:0:6"},"scope":1565,"src":"2709:128:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1515,"nodeType":"Block","src":"2957:78:6","statements":[{"condition":{"id":1509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2971:9:6","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1507,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1491,"src":"2972:6:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":1508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2972:8:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1514,"nodeType":"IfStatement","src":"2967:62:6","trueBody":{"id":1513,"nodeType":"Block","src":"2982:47:6","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1510,"name":"ExpectedPause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"3003:13:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3003:15:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1512,"nodeType":"RevertStatement","src":"2996:22:6"}]}}]},"documentation":{"id":1504,"nodeType":"StructuredDocumentation","src":"2843:61:6","text":" @dev Throws if the contract is not paused."},"id":1516,"implemented":true,"kind":"function","modifiers":[],"name":"_requirePaused","nameLocation":"2918:14:6","nodeType":"FunctionDefinition","parameters":{"id":1505,"nodeType":"ParameterList","parameters":[],"src":"2932:2:6"},"returnParameters":{"id":1506,"nodeType":"ParameterList","parameters":[],"src":"2957:0:6"},"scope":1565,"src":"2909:126:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1539,"nodeType":"Block","src":"3219:127:6","statements":[{"assignments":[1524],"declarations":[{"constant":false,"id":1524,"mutability":"mutable","name":"$","nameLocation":"3253:1:6","nodeType":"VariableDeclaration","scope":1539,"src":"3229:25:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1420_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"},"typeName":{"id":1523,"nodeType":"UserDefinedTypeName","pathNode":{"id":1522,"name":"PausableStorage","nameLocations":["3229:15:6"],"nodeType":"IdentifierPath","referencedDeclaration":1420,"src":"3229:15:6"},"referencedDeclaration":1420,"src":"3229:15:6","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1420_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"}},"visibility":"internal"}],"id":1527,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1525,"name":"_getPausableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1431,"src":"3257:19:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_PausableStorage_$1420_storage_ptr_$","typeString":"function () pure returns (struct PausableUpgradeable.PausableStorage storage pointer)"}},"id":1526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3257:21:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1420_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3229:49:6"},{"expression":{"id":1532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1528,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1524,"src":"3288:1:6","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1420_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"id":1530,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3290:7:6","memberName":"_paused","nodeType":"MemberAccess","referencedDeclaration":1419,"src":"3288:9:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3300:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3288:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1533,"nodeType":"ExpressionStatement","src":"3288:16:6"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1535,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1276,"src":"3326:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3326:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1534,"name":"Paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1436,"src":"3319:6:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3319:20:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1538,"nodeType":"EmitStatement","src":"3314:25:6"}]},"documentation":{"id":1517,"nodeType":"StructuredDocumentation","src":"3041:124:6","text":" @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."},"id":1540,"implemented":true,"kind":"function","modifiers":[{"id":1520,"kind":"modifierInvocation","modifierName":{"id":1519,"name":"whenNotPaused","nameLocations":["3205:13:6"],"nodeType":"IdentifierPath","referencedDeclaration":1455,"src":"3205:13:6"},"nodeType":"ModifierInvocation","src":"3205:13:6"}],"name":"_pause","nameLocation":"3179:6:6","nodeType":"FunctionDefinition","parameters":{"id":1518,"nodeType":"ParameterList","parameters":[],"src":"3185:2:6"},"returnParameters":{"id":1521,"nodeType":"ParameterList","parameters":[],"src":"3219:0:6"},"scope":1565,"src":"3170:176:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1563,"nodeType":"Block","src":"3526:130:6","statements":[{"assignments":[1548],"declarations":[{"constant":false,"id":1548,"mutability":"mutable","name":"$","nameLocation":"3560:1:6","nodeType":"VariableDeclaration","scope":1563,"src":"3536:25:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1420_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"},"typeName":{"id":1547,"nodeType":"UserDefinedTypeName","pathNode":{"id":1546,"name":"PausableStorage","nameLocations":["3536:15:6"],"nodeType":"IdentifierPath","referencedDeclaration":1420,"src":"3536:15:6"},"referencedDeclaration":1420,"src":"3536:15:6","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1420_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"}},"visibility":"internal"}],"id":1551,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1549,"name":"_getPausableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1431,"src":"3564:19:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_PausableStorage_$1420_storage_ptr_$","typeString":"function () pure returns (struct PausableUpgradeable.PausableStorage storage pointer)"}},"id":1550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3564:21:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1420_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3536:49:6"},{"expression":{"id":1556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1552,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1548,"src":"3595:1:6","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1420_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"id":1554,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3597:7:6","memberName":"_paused","nodeType":"MemberAccess","referencedDeclaration":1419,"src":"3595:9:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":1555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3607:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"3595:17:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1557,"nodeType":"ExpressionStatement","src":"3595:17:6"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1559,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1276,"src":"3636:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3636:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1558,"name":"Unpaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1441,"src":"3627:8:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3627:22:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1562,"nodeType":"EmitStatement","src":"3622:27:6"}]},"documentation":{"id":1541,"nodeType":"StructuredDocumentation","src":"3352:121:6","text":" @dev Returns to normal state.\n Requirements:\n - The contract must be paused."},"id":1564,"implemented":true,"kind":"function","modifiers":[{"id":1544,"kind":"modifierInvocation","modifierName":{"id":1543,"name":"whenPaused","nameLocations":["3515:10:6"],"nodeType":"IdentifierPath","referencedDeclaration":1463,"src":"3515:10:6"},"nodeType":"ModifierInvocation","src":"3515:10:6"}],"name":"_unpause","nameLocation":"3487:8:6","nodeType":"FunctionDefinition","parameters":{"id":1542,"nodeType":"ParameterList","parameters":[],"src":"3495:2:6"},"returnParameters":{"id":1545,"nodeType":"ParameterList","parameters":[],"src":"3526:0:6"},"scope":1565,"src":"3478:178:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1566,"src":"701:2957:6","usedErrors":[211,214,1444,1447],"usedEvents":[219,1436,1441]}],"src":"102:3557:6"},"id":6},"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol","exportedSymbols":{"Initializable":[462],"ReentrancyGuardUpgradeable":[1694]},"id":1695,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1567,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:7"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":1569,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1695,"sourceUnit":463,"src":"134:63:7","symbolAliases":[{"foreign":{"id":1568,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"142:13:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1571,"name":"Initializable","nameLocations":["1142:13:7"],"nodeType":"IdentifierPath","referencedDeclaration":462,"src":"1142:13:7"},"id":1572,"nodeType":"InheritanceSpecifier","src":"1142:13:7"}],"canonicalName":"ReentrancyGuardUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1570,"nodeType":"StructuredDocumentation","src":"199:894:7","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":1694,"linearizedBaseContracts":[1694,462],"name":"ReentrancyGuardUpgradeable","nameLocation":"1112:26:7","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1575,"mutability":"constant","name":"NOT_ENTERED","nameLocation":"1935:11:7","nodeType":"VariableDeclaration","scope":1694,"src":"1910:40:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1573,"name":"uint256","nodeType":"ElementaryTypeName","src":"1910:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":1574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1949:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":1578,"mutability":"constant","name":"ENTERED","nameLocation":"1981:7:7","nodeType":"VariableDeclaration","scope":1694,"src":"1956:36:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1576,"name":"uint256","nodeType":"ElementaryTypeName","src":"1956:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":1577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1991:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"canonicalName":"ReentrancyGuardUpgradeable.ReentrancyGuardStorage","documentation":{"id":1579,"nodeType":"StructuredDocumentation","src":"1999:73:7","text":"@custom:storage-location erc7201:openzeppelin.storage.ReentrancyGuard"},"id":1582,"members":[{"constant":false,"id":1581,"mutability":"mutable","name":"_status","nameLocation":"2125:7:7","nodeType":"VariableDeclaration","scope":1582,"src":"2117:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1580,"name":"uint256","nodeType":"ElementaryTypeName","src":"2117:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ReentrancyGuardStorage","nameLocation":"2084:22:7","nodeType":"StructDefinition","scope":1694,"src":"2077:62:7","visibility":"public"},{"constant":true,"id":1585,"mutability":"constant","name":"ReentrancyGuardStorageLocation","nameLocation":"2289:30:7","nodeType":"VariableDeclaration","scope":1694,"src":"2264:124:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1583,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2264:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307839623737396231373432326430646639323232333031386233326234643166613436653037313732336436383137653234383664303033626563633535663030","id":1584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2322:66:7","typeDescriptions":{"typeIdentifier":"t_rational_70319816728846589445362000750570655803700195216363692647688146666176345628416_by_1","typeString":"int_const 7031...(69 digits omitted)...8416"},"value":"0x9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00"},"visibility":"private"},{"body":{"id":1592,"nodeType":"Block","src":"2489:89:7","statements":[{"AST":{"nativeSrc":"2508:64:7","nodeType":"YulBlock","src":"2508:64:7","statements":[{"nativeSrc":"2522:40:7","nodeType":"YulAssignment","src":"2522:40:7","value":{"name":"ReentrancyGuardStorageLocation","nativeSrc":"2532:30:7","nodeType":"YulIdentifier","src":"2532:30:7"},"variableNames":[{"name":"$.slot","nativeSrc":"2522:6:7","nodeType":"YulIdentifier","src":"2522:6:7"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1589,"isOffset":false,"isSlot":true,"src":"2522:6:7","suffix":"slot","valueSize":1},{"declaration":1585,"isOffset":false,"isSlot":false,"src":"2532:30:7","valueSize":1}],"id":1591,"nodeType":"InlineAssembly","src":"2499:73:7"}]},"id":1593,"implemented":true,"kind":"function","modifiers":[],"name":"_getReentrancyGuardStorage","nameLocation":"2404:26:7","nodeType":"FunctionDefinition","parameters":{"id":1586,"nodeType":"ParameterList","parameters":[],"src":"2430:2:7"},"returnParameters":{"id":1590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1589,"mutability":"mutable","name":"$","nameLocation":"2486:1:7","nodeType":"VariableDeclaration","scope":1593,"src":"2455:32:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1582_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"},"typeName":{"id":1588,"nodeType":"UserDefinedTypeName","pathNode":{"id":1587,"name":"ReentrancyGuardStorage","nameLocations":["2455:22:7"],"nodeType":"IdentifierPath","referencedDeclaration":1582,"src":"2455:22:7"},"referencedDeclaration":1582,"src":"2455:22:7","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1582_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"}},"visibility":"internal"}],"src":"2454:34:7"},"scope":1694,"src":"2395:183:7","stateMutability":"pure","virtual":false,"visibility":"private"},{"documentation":{"id":1594,"nodeType":"StructuredDocumentation","src":"2584:52:7","text":" @dev Unauthorized reentrant call."},"errorSelector":"3ee5aeb5","id":1596,"name":"ReentrancyGuardReentrantCall","nameLocation":"2647:28:7","nodeType":"ErrorDefinition","parameters":{"id":1595,"nodeType":"ParameterList","parameters":[],"src":"2675:2:7"},"src":"2641:37:7"},{"body":{"id":1604,"nodeType":"Block","src":"2744:51:7","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1601,"name":"__ReentrancyGuard_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1623,"src":"2754:32:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2754:34:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1603,"nodeType":"ExpressionStatement","src":"2754:34:7"}]},"id":1605,"implemented":true,"kind":"function","modifiers":[{"id":1599,"kind":"modifierInvocation","modifierName":{"id":1598,"name":"onlyInitializing","nameLocations":["2727:16:7"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"2727:16:7"},"nodeType":"ModifierInvocation","src":"2727:16:7"}],"name":"__ReentrancyGuard_init","nameLocation":"2693:22:7","nodeType":"FunctionDefinition","parameters":{"id":1597,"nodeType":"ParameterList","parameters":[],"src":"2715:2:7"},"returnParameters":{"id":1600,"nodeType":"ParameterList","parameters":[],"src":"2744:0:7"},"scope":1694,"src":"2684:111:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1622,"nodeType":"Block","src":"2871:113:7","statements":[{"assignments":[1612],"declarations":[{"constant":false,"id":1612,"mutability":"mutable","name":"$","nameLocation":"2912:1:7","nodeType":"VariableDeclaration","scope":1622,"src":"2881:32:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1582_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"},"typeName":{"id":1611,"nodeType":"UserDefinedTypeName","pathNode":{"id":1610,"name":"ReentrancyGuardStorage","nameLocations":["2881:22:7"],"nodeType":"IdentifierPath","referencedDeclaration":1582,"src":"2881:22:7"},"referencedDeclaration":1582,"src":"2881:22:7","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1582_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"}},"visibility":"internal"}],"id":1615,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1613,"name":"_getReentrancyGuardStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1593,"src":"2916:26:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ReentrancyGuardStorage_$1582_storage_ptr_$","typeString":"function () pure returns (struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer)"}},"id":1614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2916:28:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1582_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2881:63:7"},{"expression":{"id":1620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1616,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1612,"src":"2954:1:7","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1582_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"id":1618,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2956:7:7","memberName":"_status","nodeType":"MemberAccess","referencedDeclaration":1581,"src":"2954:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1619,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1575,"src":"2966:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2954:23:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1621,"nodeType":"ExpressionStatement","src":"2954:23:7"}]},"id":1623,"implemented":true,"kind":"function","modifiers":[{"id":1608,"kind":"modifierInvocation","modifierName":{"id":1607,"name":"onlyInitializing","nameLocations":["2854:16:7"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"2854:16:7"},"nodeType":"ModifierInvocation","src":"2854:16:7"}],"name":"__ReentrancyGuard_init_unchained","nameLocation":"2810:32:7","nodeType":"FunctionDefinition","parameters":{"id":1606,"nodeType":"ParameterList","parameters":[],"src":"2842:2:7"},"returnParameters":{"id":1609,"nodeType":"ParameterList","parameters":[],"src":"2871:0:7"},"scope":1694,"src":"2801:183:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1633,"nodeType":"Block","src":"3385:79:7","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1626,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1659,"src":"3395:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1627,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3395:21:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1628,"nodeType":"ExpressionStatement","src":"3395:21:7"},{"id":1629,"nodeType":"PlaceholderStatement","src":"3426:1:7"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1630,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1675,"src":"3437:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3437:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1632,"nodeType":"ExpressionStatement","src":"3437:20:7"}]},"documentation":{"id":1624,"nodeType":"StructuredDocumentation","src":"2990:366:7","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":1634,"name":"nonReentrant","nameLocation":"3370:12:7","nodeType":"ModifierDefinition","parameters":{"id":1625,"nodeType":"ParameterList","parameters":[],"src":"3382:2:7"},"src":"3361:103:7","virtual":false,"visibility":"internal"},{"body":{"id":1658,"nodeType":"Block","src":"3509:345:7","statements":[{"assignments":[1639],"declarations":[{"constant":false,"id":1639,"mutability":"mutable","name":"$","nameLocation":"3550:1:7","nodeType":"VariableDeclaration","scope":1658,"src":"3519:32:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1582_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"},"typeName":{"id":1638,"nodeType":"UserDefinedTypeName","pathNode":{"id":1637,"name":"ReentrancyGuardStorage","nameLocations":["3519:22:7"],"nodeType":"IdentifierPath","referencedDeclaration":1582,"src":"3519:22:7"},"referencedDeclaration":1582,"src":"3519:22:7","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1582_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"}},"visibility":"internal"}],"id":1642,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1640,"name":"_getReentrancyGuardStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1593,"src":"3554:26:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ReentrancyGuardStorage_$1582_storage_ptr_$","typeString":"function () pure returns (struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer)"}},"id":1641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3554:28:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1582_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3519:63:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1643,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1639,"src":"3670:1:7","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1582_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"id":1644,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3672:7:7","memberName":"_status","nodeType":"MemberAccess","referencedDeclaration":1581,"src":"3670:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1645,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1578,"src":"3683:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3670:20:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1651,"nodeType":"IfStatement","src":"3666:88:7","trueBody":{"id":1650,"nodeType":"Block","src":"3692:62:7","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1647,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1596,"src":"3713:28:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3713:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1649,"nodeType":"RevertStatement","src":"3706:37:7"}]}},{"expression":{"id":1656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1652,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1639,"src":"3828:1:7","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1582_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"id":1654,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3830:7:7","memberName":"_status","nodeType":"MemberAccess","referencedDeclaration":1581,"src":"3828:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1655,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1578,"src":"3840:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3828:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1657,"nodeType":"ExpressionStatement","src":"3828:19:7"}]},"id":1659,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"3479:19:7","nodeType":"FunctionDefinition","parameters":{"id":1635,"nodeType":"ParameterList","parameters":[],"src":"3498:2:7"},"returnParameters":{"id":1636,"nodeType":"ParameterList","parameters":[],"src":"3509:0:7"},"scope":1694,"src":"3470:384:7","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1674,"nodeType":"Block","src":"3898:245:7","statements":[{"assignments":[1664],"declarations":[{"constant":false,"id":1664,"mutability":"mutable","name":"$","nameLocation":"3939:1:7","nodeType":"VariableDeclaration","scope":1674,"src":"3908:32:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1582_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"},"typeName":{"id":1663,"nodeType":"UserDefinedTypeName","pathNode":{"id":1662,"name":"ReentrancyGuardStorage","nameLocations":["3908:22:7"],"nodeType":"IdentifierPath","referencedDeclaration":1582,"src":"3908:22:7"},"referencedDeclaration":1582,"src":"3908:22:7","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1582_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"}},"visibility":"internal"}],"id":1667,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1665,"name":"_getReentrancyGuardStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1593,"src":"3943:26:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ReentrancyGuardStorage_$1582_storage_ptr_$","typeString":"function () pure returns (struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer)"}},"id":1666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3943:28:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1582_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3908:63:7"},{"expression":{"id":1672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1668,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1664,"src":"4113:1:7","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1582_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"id":1670,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4115:7:7","memberName":"_status","nodeType":"MemberAccess","referencedDeclaration":1581,"src":"4113:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1671,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1575,"src":"4125:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4113:23:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1673,"nodeType":"ExpressionStatement","src":"4113:23:7"}]},"id":1675,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"3869:18:7","nodeType":"FunctionDefinition","parameters":{"id":1660,"nodeType":"ParameterList","parameters":[],"src":"3887:2:7"},"returnParameters":{"id":1661,"nodeType":"ParameterList","parameters":[],"src":"3898:0:7"},"scope":1694,"src":"3860:283:7","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1692,"nodeType":"Block","src":"4386:117:7","statements":[{"assignments":[1683],"declarations":[{"constant":false,"id":1683,"mutability":"mutable","name":"$","nameLocation":"4427:1:7","nodeType":"VariableDeclaration","scope":1692,"src":"4396:32:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1582_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"},"typeName":{"id":1682,"nodeType":"UserDefinedTypeName","pathNode":{"id":1681,"name":"ReentrancyGuardStorage","nameLocations":["4396:22:7"],"nodeType":"IdentifierPath","referencedDeclaration":1582,"src":"4396:22:7"},"referencedDeclaration":1582,"src":"4396:22:7","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1582_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"}},"visibility":"internal"}],"id":1686,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1684,"name":"_getReentrancyGuardStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1593,"src":"4431:26:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ReentrancyGuardStorage_$1582_storage_ptr_$","typeString":"function () pure returns (struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer)"}},"id":1685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4431:28:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1582_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4396:63:7"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1687,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1683,"src":"4476:1:7","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1582_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"id":1688,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4478:7:7","memberName":"_status","nodeType":"MemberAccess","referencedDeclaration":1581,"src":"4476:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1689,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1578,"src":"4489:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4476:20:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1680,"id":1691,"nodeType":"Return","src":"4469:27:7"}]},"documentation":{"id":1676,"nodeType":"StructuredDocumentation","src":"4149:168:7","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":1693,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"4331:23:7","nodeType":"FunctionDefinition","parameters":{"id":1677,"nodeType":"ParameterList","parameters":[],"src":"4354:2:7"},"returnParameters":{"id":1680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1679,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1693,"src":"4380:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1678,"name":"bool","nodeType":"ElementaryTypeName","src":"4380:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4379:6:7"},"scope":1694,"src":"4322:181:7","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1695,"src":"1094:3411:7","usedErrors":[211,214,1596],"usedEvents":[219]}],"src":"109:4397:7"},"id":7},"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol","exportedSymbols":{"EIP712Upgradeable":[2038],"IERC5267":[2153],"Initializable":[462],"MessageHashUtils":[4782]},"id":2039,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1696,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:8"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","file":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","id":1698,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2039,"sourceUnit":4783,"src":"139:97:8","symbolAliases":[{"foreign":{"id":1697,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4782,"src":"147:16:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","file":"@openzeppelin/contracts/interfaces/IERC5267.sol","id":1700,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2039,"sourceUnit":2154,"src":"237:73:8","symbolAliases":[{"foreign":{"id":1699,"name":"IERC5267","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2153,"src":"245:8:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../proxy/utils/Initializable.sol","id":1702,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2039,"sourceUnit":463,"src":"311:66:8","symbolAliases":[{"foreign":{"id":1701,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"319:13:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1704,"name":"Initializable","nameLocations":["1884:13:8"],"nodeType":"IdentifierPath","referencedDeclaration":462,"src":"1884:13:8"},"id":1705,"nodeType":"InheritanceSpecifier","src":"1884:13:8"},{"baseName":{"id":1706,"name":"IERC5267","nameLocations":["1899:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":2153,"src":"1899:8:8"},"id":1707,"nodeType":"InheritanceSpecifier","src":"1899:8:8"}],"canonicalName":"EIP712Upgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1703,"nodeType":"StructuredDocumentation","src":"379:1465:8","text":" @dev https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data.\n The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n NOTE: The upgradeable version of this contract does not use an immutable cache and recomputes the domain separator\n each time {_domainSeparatorV4} is called. That is cheaper than accessing a cached version in cold storage."},"fullyImplemented":true,"id":2038,"linearizedBaseContracts":[2038,2153,462],"name":"EIP712Upgradeable","nameLocation":"1863:17:8","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1712,"mutability":"constant","name":"TYPE_HASH","nameLocation":"1939:9:8","nodeType":"VariableDeclaration","scope":2038,"src":"1914:140:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1708,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1914:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429","id":1710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1969:84:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""},"value":"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""}],"id":1709,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1959:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1959:95:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"canonicalName":"EIP712Upgradeable.EIP712Storage","documentation":{"id":1713,"nodeType":"StructuredDocumentation","src":"2061:64:8","text":"@custom:storage-location erc7201:openzeppelin.storage.EIP712"},"id":1724,"members":[{"constant":false,"id":1716,"mutability":"mutable","name":"_hashedName","nameLocation":"2218:11:8","nodeType":"VariableDeclaration","scope":1724,"src":"2210:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1715,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2210:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1719,"mutability":"mutable","name":"_hashedVersion","nameLocation":"2299:14:8","nodeType":"VariableDeclaration","scope":1724,"src":"2291:22:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1718,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2291:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1721,"mutability":"mutable","name":"_name","nameLocation":"2331:5:8","nodeType":"VariableDeclaration","scope":1724,"src":"2324:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1720,"name":"string","nodeType":"ElementaryTypeName","src":"2324:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1723,"mutability":"mutable","name":"_version","nameLocation":"2353:8:8","nodeType":"VariableDeclaration","scope":1724,"src":"2346:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1722,"name":"string","nodeType":"ElementaryTypeName","src":"2346:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"EIP712Storage","nameLocation":"2137:13:8","nodeType":"StructDefinition","scope":2038,"src":"2130:238:8","visibility":"public"},{"constant":true,"id":1727,"mutability":"constant","name":"EIP712StorageLocation","nameLocation":"2509:21:8","nodeType":"VariableDeclaration","scope":2038,"src":"2484:115:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1725,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2484:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307861313661343664393432363163373531376363386666383966363163306365393335393865336338343938303130313164656536343961366135353764313030","id":1726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2533:66:8","typeDescriptions":{"typeIdentifier":"t_rational_73010143390315934406010559831118728393600729754696197287367516085911467577600_by_1","typeString":"int_const 7301...(69 digits omitted)...7600"},"value":"0xa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d100"},"visibility":"private"},{"body":{"id":1734,"nodeType":"Block","src":"2682:80:8","statements":[{"AST":{"nativeSrc":"2701:55:8","nodeType":"YulBlock","src":"2701:55:8","statements":[{"nativeSrc":"2715:31:8","nodeType":"YulAssignment","src":"2715:31:8","value":{"name":"EIP712StorageLocation","nativeSrc":"2725:21:8","nodeType":"YulIdentifier","src":"2725:21:8"},"variableNames":[{"name":"$.slot","nativeSrc":"2715:6:8","nodeType":"YulIdentifier","src":"2715:6:8"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1731,"isOffset":false,"isSlot":true,"src":"2715:6:8","suffix":"slot","valueSize":1},{"declaration":1727,"isOffset":false,"isSlot":false,"src":"2725:21:8","valueSize":1}],"id":1733,"nodeType":"InlineAssembly","src":"2692:64:8"}]},"id":1735,"implemented":true,"kind":"function","modifiers":[],"name":"_getEIP712Storage","nameLocation":"2615:17:8","nodeType":"FunctionDefinition","parameters":{"id":1728,"nodeType":"ParameterList","parameters":[],"src":"2632:2:8"},"returnParameters":{"id":1732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1731,"mutability":"mutable","name":"$","nameLocation":"2679:1:8","nodeType":"VariableDeclaration","scope":1735,"src":"2657:23:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$1724_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage"},"typeName":{"id":1730,"nodeType":"UserDefinedTypeName","pathNode":{"id":1729,"name":"EIP712Storage","nameLocations":["2657:13:8"],"nodeType":"IdentifierPath","referencedDeclaration":1724,"src":"2657:13:8"},"referencedDeclaration":1724,"src":"2657:13:8","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$1724_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage"}},"visibility":"internal"}],"src":"2656:25:8"},"scope":2038,"src":"2606:156:8","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1750,"nodeType":"Block","src":"3424:55:8","statements":[{"expression":{"arguments":[{"id":1746,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1738,"src":"3458:4:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1747,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1740,"src":"3464:7:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1745,"name":"__EIP712_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1791,"src":"3434:23:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":1748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3434:38:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1749,"nodeType":"ExpressionStatement","src":"3434:38:8"}]},"documentation":{"id":1736,"nodeType":"StructuredDocumentation","src":"2768:559:8","text":" @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."},"id":1751,"implemented":true,"kind":"function","modifiers":[{"id":1743,"kind":"modifierInvocation","modifierName":{"id":1742,"name":"onlyInitializing","nameLocations":["3407:16:8"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"3407:16:8"},"nodeType":"ModifierInvocation","src":"3407:16:8"}],"name":"__EIP712_init","nameLocation":"3341:13:8","nodeType":"FunctionDefinition","parameters":{"id":1741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1738,"mutability":"mutable","name":"name","nameLocation":"3369:4:8","nodeType":"VariableDeclaration","scope":1751,"src":"3355:18:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1737,"name":"string","nodeType":"ElementaryTypeName","src":"3355:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1740,"mutability":"mutable","name":"version","nameLocation":"3389:7:8","nodeType":"VariableDeclaration","scope":1751,"src":"3375:21:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1739,"name":"string","nodeType":"ElementaryTypeName","src":"3375:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3354:43:8"},"returnParameters":{"id":1744,"nodeType":"ParameterList","parameters":[],"src":"3424:0:8"},"scope":2038,"src":"3332:147:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1790,"nodeType":"Block","src":"3587:228:8","statements":[{"assignments":[1762],"declarations":[{"constant":false,"id":1762,"mutability":"mutable","name":"$","nameLocation":"3619:1:8","nodeType":"VariableDeclaration","scope":1790,"src":"3597:23:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$1724_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage"},"typeName":{"id":1761,"nodeType":"UserDefinedTypeName","pathNode":{"id":1760,"name":"EIP712Storage","nameLocations":["3597:13:8"],"nodeType":"IdentifierPath","referencedDeclaration":1724,"src":"3597:13:8"},"referencedDeclaration":1724,"src":"3597:13:8","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$1724_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage"}},"visibility":"internal"}],"id":1765,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1763,"name":"_getEIP712Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1735,"src":"3623:17:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_EIP712Storage_$1724_storage_ptr_$","typeString":"function () pure returns (struct EIP712Upgradeable.EIP712Storage storage pointer)"}},"id":1764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3623:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$1724_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3597:45:8"},{"expression":{"id":1770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1766,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1762,"src":"3652:1:8","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$1724_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"id":1768,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3654:5:8","memberName":"_name","nodeType":"MemberAccess","referencedDeclaration":1721,"src":"3652:7:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1769,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1753,"src":"3662:4:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3652:14:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1771,"nodeType":"ExpressionStatement","src":"3652:14:8"},{"expression":{"id":1776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1772,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1762,"src":"3676:1:8","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$1724_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"id":1774,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3678:8:8","memberName":"_version","nodeType":"MemberAccess","referencedDeclaration":1723,"src":"3676:10:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1775,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1755,"src":"3689:7:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3676:20:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1777,"nodeType":"ExpressionStatement","src":"3676:20:8"},{"expression":{"id":1782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1778,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1762,"src":"3761:1:8","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$1724_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"id":1780,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3763:11:8","memberName":"_hashedName","nodeType":"MemberAccess","referencedDeclaration":1716,"src":"3761:13:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3777:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3761:17:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1783,"nodeType":"ExpressionStatement","src":"3761:17:8"},{"expression":{"id":1788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1784,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1762,"src":"3788:1:8","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$1724_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"id":1786,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3790:14:8","memberName":"_hashedVersion","nodeType":"MemberAccess","referencedDeclaration":1719,"src":"3788:16:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3807:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3788:20:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1789,"nodeType":"ExpressionStatement","src":"3788:20:8"}]},"id":1791,"implemented":true,"kind":"function","modifiers":[{"id":1758,"kind":"modifierInvocation","modifierName":{"id":1757,"name":"onlyInitializing","nameLocations":["3570:16:8"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"3570:16:8"},"nodeType":"ModifierInvocation","src":"3570:16:8"}],"name":"__EIP712_init_unchained","nameLocation":"3494:23:8","nodeType":"FunctionDefinition","parameters":{"id":1756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1753,"mutability":"mutable","name":"name","nameLocation":"3532:4:8","nodeType":"VariableDeclaration","scope":1791,"src":"3518:18:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1752,"name":"string","nodeType":"ElementaryTypeName","src":"3518:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1755,"mutability":"mutable","name":"version","nameLocation":"3552:7:8","nodeType":"VariableDeclaration","scope":1791,"src":"3538:21:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1754,"name":"string","nodeType":"ElementaryTypeName","src":"3538:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3517:43:8"},"returnParameters":{"id":1759,"nodeType":"ParameterList","parameters":[],"src":"3587:0:8"},"scope":2038,"src":"3485:330:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1800,"nodeType":"Block","src":"3963:47:8","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1797,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1824,"src":"3980:21:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":1798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3980:23:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1796,"id":1799,"nodeType":"Return","src":"3973:30:8"}]},"documentation":{"id":1792,"nodeType":"StructuredDocumentation","src":"3821:75:8","text":" @dev Returns the domain separator for the current chain."},"id":1801,"implemented":true,"kind":"function","modifiers":[],"name":"_domainSeparatorV4","nameLocation":"3910:18:8","nodeType":"FunctionDefinition","parameters":{"id":1793,"nodeType":"ParameterList","parameters":[],"src":"3928:2:8"},"returnParameters":{"id":1796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1795,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1801,"src":"3954:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1794,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3954:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3953:9:8"},"scope":2038,"src":"3901:109:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1823,"nodeType":"Block","src":"4080:127:8","statements":[{"expression":{"arguments":[{"arguments":[{"id":1809,"name":"TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1712,"src":"4118:9:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1810,"name":"_EIP712NameHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"4129:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":1811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4129:17:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1812,"name":"_EIP712VersionHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2037,"src":"4148:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":1813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4148:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":1814,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4170:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4176:7:8","memberName":"chainid","nodeType":"MemberAccess","src":"4170:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":1818,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4193:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712Upgradeable_$2038","typeString":"contract EIP712Upgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712Upgradeable_$2038","typeString":"contract EIP712Upgradeable"}],"id":1817,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4185:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1816,"name":"address","nodeType":"ElementaryTypeName","src":"4185:7:8","typeDescriptions":{}}},"id":1819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4185:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1807,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4107:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1808,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4111:6:8","memberName":"encode","nodeType":"MemberAccess","src":"4107:10:8","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4107:92:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1806,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4097:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4097:103:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1805,"id":1822,"nodeType":"Return","src":"4090:110:8"}]},"id":1824,"implemented":true,"kind":"function","modifiers":[],"name":"_buildDomainSeparator","nameLocation":"4025:21:8","nodeType":"FunctionDefinition","parameters":{"id":1802,"nodeType":"ParameterList","parameters":[],"src":"4046:2:8"},"returnParameters":{"id":1805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1804,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1824,"src":"4071:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1803,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4071:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4070:9:8"},"scope":2038,"src":"4016:191:8","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":1839,"nodeType":"Block","src":"4918:90:8","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1834,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1801,"src":"4968:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":1835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4968:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1836,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1827,"src":"4990:10:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1832,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4782,"src":"4935:16:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MessageHashUtils_$4782_$","typeString":"type(library MessageHashUtils)"}},"id":1833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4952:15:8","memberName":"toTypedDataHash","nodeType":"MemberAccess","referencedDeclaration":4781,"src":"4935:32:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":1837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4935:66:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1831,"id":1838,"nodeType":"Return","src":"4928:73:8"}]},"documentation":{"id":1825,"nodeType":"StructuredDocumentation","src":"4213:614:8","text":" @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"},"id":1840,"implemented":true,"kind":"function","modifiers":[],"name":"_hashTypedDataV4","nameLocation":"4841:16:8","nodeType":"FunctionDefinition","parameters":{"id":1828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1827,"mutability":"mutable","name":"structHash","nameLocation":"4866:10:8","nodeType":"VariableDeclaration","scope":1840,"src":"4858:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1826,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4858:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4857:20:8"},"returnParameters":{"id":1831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1830,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1840,"src":"4909:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1829,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4909:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4908:9:8"},"scope":2038,"src":"4832:176:8","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[2152],"body":{"id":1900,"nodeType":"Block","src":"5371:575:8","statements":[{"assignments":[1861],"declarations":[{"constant":false,"id":1861,"mutability":"mutable","name":"$","nameLocation":"5403:1:8","nodeType":"VariableDeclaration","scope":1900,"src":"5381:23:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$1724_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage"},"typeName":{"id":1860,"nodeType":"UserDefinedTypeName","pathNode":{"id":1859,"name":"EIP712Storage","nameLocations":["5381:13:8"],"nodeType":"IdentifierPath","referencedDeclaration":1724,"src":"5381:13:8"},"referencedDeclaration":1724,"src":"5381:13:8","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$1724_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage"}},"visibility":"internal"}],"id":1864,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1862,"name":"_getEIP712Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1735,"src":"5407:17:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_EIP712Storage_$1724_storage_ptr_$","typeString":"function () pure returns (struct EIP712Upgradeable.EIP712Storage storage pointer)"}},"id":1863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5407:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$1724_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"5381:45:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1866,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1861,"src":"5647:1:8","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$1724_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"id":1867,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5649:11:8","memberName":"_hashedName","nodeType":"MemberAccess","referencedDeclaration":1716,"src":"5647:13:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5664:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5647:18:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1870,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1861,"src":"5669:1:8","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$1724_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"id":1871,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5671:14:8","memberName":"_hashedVersion","nodeType":"MemberAccess","referencedDeclaration":1719,"src":"5669:16:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5689:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5669:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5647:43:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4549503731323a20556e696e697469616c697a6564","id":1875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5692:23:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_2e5045ff73280aa8e8acd8c82710f23812497f87f7f576e2220a2ddd0d45eade","typeString":"literal_string \"EIP712: Uninitialized\""},"value":"EIP712: Uninitialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2e5045ff73280aa8e8acd8c82710f23812497f87f7f576e2220a2ddd0d45eade","typeString":"literal_string \"EIP712: Uninitialized\""}],"id":1865,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5639:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5639:77:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1877,"nodeType":"ExpressionStatement","src":"5639:77:8"},{"expression":{"components":[{"hexValue":"0f","id":1878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"5748:7:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c","typeString":"literal_string hex\"0f\""},"value":"\u000f"},{"arguments":[],"expression":{"argumentTypes":[],"id":1879,"name":"_EIP712Name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1917,"src":"5778:11:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":1880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5778:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1881,"name":"_EIP712Version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1933,"src":"5805:14:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":1882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5805:16:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":1883,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5835:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5841:7:8","memberName":"chainid","nodeType":"MemberAccess","src":"5835:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":1887,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5870:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712Upgradeable_$2038","typeString":"contract EIP712Upgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712Upgradeable_$2038","typeString":"contract EIP712Upgradeable"}],"id":1886,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5862:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1885,"name":"address","nodeType":"ElementaryTypeName","src":"5862:7:8","typeDescriptions":{}}},"id":1888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5862:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5897:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1890,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5889:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1889,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5889:7:8","typeDescriptions":{}}},"id":1892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5889:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"hexValue":"30","id":1896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5927:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1895,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5913:13:8","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":1893,"name":"uint256","nodeType":"ElementaryTypeName","src":"5917:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1894,"nodeType":"ArrayTypeName","src":"5917:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":1897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5913:16:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":1898,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5734:205:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(literal_string hex\"0f\",string memory,string memory,uint256,address,bytes32,uint256[] memory)"}},"functionReturnParameters":1858,"id":1899,"nodeType":"Return","src":"5727:212:8"}]},"documentation":{"id":1841,"nodeType":"StructuredDocumentation","src":"5014:24:8","text":"@inheritdoc IERC5267"},"functionSelector":"84b0196e","id":1901,"implemented":true,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"5052:12:8","nodeType":"FunctionDefinition","parameters":{"id":1842,"nodeType":"ParameterList","parameters":[],"src":"5064:2:8"},"returnParameters":{"id":1858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1844,"mutability":"mutable","name":"fields","nameLocation":"5148:6:8","nodeType":"VariableDeclaration","scope":1901,"src":"5141:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":1843,"name":"bytes1","nodeType":"ElementaryTypeName","src":"5141:6:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":1846,"mutability":"mutable","name":"name","nameLocation":"5182:4:8","nodeType":"VariableDeclaration","scope":1901,"src":"5168:18:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1845,"name":"string","nodeType":"ElementaryTypeName","src":"5168:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1848,"mutability":"mutable","name":"version","nameLocation":"5214:7:8","nodeType":"VariableDeclaration","scope":1901,"src":"5200:21:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1847,"name":"string","nodeType":"ElementaryTypeName","src":"5200:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1850,"mutability":"mutable","name":"chainId","nameLocation":"5243:7:8","nodeType":"VariableDeclaration","scope":1901,"src":"5235:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1849,"name":"uint256","nodeType":"ElementaryTypeName","src":"5235:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1852,"mutability":"mutable","name":"verifyingContract","nameLocation":"5272:17:8","nodeType":"VariableDeclaration","scope":1901,"src":"5264:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1851,"name":"address","nodeType":"ElementaryTypeName","src":"5264:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1854,"mutability":"mutable","name":"salt","nameLocation":"5311:4:8","nodeType":"VariableDeclaration","scope":1901,"src":"5303:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1853,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5303:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1857,"mutability":"mutable","name":"extensions","nameLocation":"5346:10:8","nodeType":"VariableDeclaration","scope":1901,"src":"5329:27:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1855,"name":"uint256","nodeType":"ElementaryTypeName","src":"5329:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1856,"nodeType":"ArrayTypeName","src":"5329:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5127:239:8"},"scope":2038,"src":"5043:903:8","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1916,"nodeType":"Block","src":"6239:86:8","statements":[{"assignments":[1909],"declarations":[{"constant":false,"id":1909,"mutability":"mutable","name":"$","nameLocation":"6271:1:8","nodeType":"VariableDeclaration","scope":1916,"src":"6249:23:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$1724_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage"},"typeName":{"id":1908,"nodeType":"UserDefinedTypeName","pathNode":{"id":1907,"name":"EIP712Storage","nameLocations":["6249:13:8"],"nodeType":"IdentifierPath","referencedDeclaration":1724,"src":"6249:13:8"},"referencedDeclaration":1724,"src":"6249:13:8","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$1724_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage"}},"visibility":"internal"}],"id":1912,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1910,"name":"_getEIP712Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1735,"src":"6275:17:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_EIP712Storage_$1724_storage_ptr_$","typeString":"function () pure returns (struct EIP712Upgradeable.EIP712Storage storage pointer)"}},"id":1911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6275:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$1724_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"6249:45:8"},{"expression":{"expression":{"id":1913,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1909,"src":"6311:1:8","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$1724_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"id":1914,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6313:5:8","memberName":"_name","nodeType":"MemberAccess","referencedDeclaration":1721,"src":"6311:7:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1906,"id":1915,"nodeType":"Return","src":"6304:14:8"}]},"documentation":{"id":1902,"nodeType":"StructuredDocumentation","src":"5952:213:8","text":" @dev The name parameter for the EIP712 domain.\n NOTE: This function reads from storage by default, but can be redefined to return a constant value if gas costs\n are a concern."},"id":1917,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Name","nameLocation":"6179:11:8","nodeType":"FunctionDefinition","parameters":{"id":1903,"nodeType":"ParameterList","parameters":[],"src":"6190:2:8"},"returnParameters":{"id":1906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1905,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1917,"src":"6224:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1904,"name":"string","nodeType":"ElementaryTypeName","src":"6224:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6223:15:8"},"scope":2038,"src":"6170:155:8","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1932,"nodeType":"Block","src":"6624:89:8","statements":[{"assignments":[1925],"declarations":[{"constant":false,"id":1925,"mutability":"mutable","name":"$","nameLocation":"6656:1:8","nodeType":"VariableDeclaration","scope":1932,"src":"6634:23:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$1724_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage"},"typeName":{"id":1924,"nodeType":"UserDefinedTypeName","pathNode":{"id":1923,"name":"EIP712Storage","nameLocations":["6634:13:8"],"nodeType":"IdentifierPath","referencedDeclaration":1724,"src":"6634:13:8"},"referencedDeclaration":1724,"src":"6634:13:8","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$1724_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage"}},"visibility":"internal"}],"id":1928,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1926,"name":"_getEIP712Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1735,"src":"6660:17:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_EIP712Storage_$1724_storage_ptr_$","typeString":"function () pure returns (struct EIP712Upgradeable.EIP712Storage storage pointer)"}},"id":1927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6660:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$1724_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"6634:45:8"},{"expression":{"expression":{"id":1929,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1925,"src":"6696:1:8","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$1724_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"id":1930,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6698:8:8","memberName":"_version","nodeType":"MemberAccess","referencedDeclaration":1723,"src":"6696:10:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1922,"id":1931,"nodeType":"Return","src":"6689:17:8"}]},"documentation":{"id":1918,"nodeType":"StructuredDocumentation","src":"6331:216:8","text":" @dev The version parameter for the EIP712 domain.\n NOTE: This function reads from storage by default, but can be redefined to return a constant value if gas costs\n are a concern."},"id":1933,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Version","nameLocation":"6561:14:8","nodeType":"FunctionDefinition","parameters":{"id":1919,"nodeType":"ParameterList","parameters":[],"src":"6575:2:8"},"returnParameters":{"id":1922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1921,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1933,"src":"6609:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1920,"name":"string","nodeType":"ElementaryTypeName","src":"6609:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6608:15:8"},"scope":2038,"src":"6552:161:8","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1984,"nodeType":"Block","src":"6987:628:8","statements":[{"assignments":[1941],"declarations":[{"constant":false,"id":1941,"mutability":"mutable","name":"$","nameLocation":"7019:1:8","nodeType":"VariableDeclaration","scope":1984,"src":"6997:23:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$1724_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage"},"typeName":{"id":1940,"nodeType":"UserDefinedTypeName","pathNode":{"id":1939,"name":"EIP712Storage","nameLocations":["6997:13:8"],"nodeType":"IdentifierPath","referencedDeclaration":1724,"src":"6997:13:8"},"referencedDeclaration":1724,"src":"6997:13:8","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$1724_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage"}},"visibility":"internal"}],"id":1944,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1942,"name":"_getEIP712Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1735,"src":"7023:17:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_EIP712Storage_$1724_storage_ptr_$","typeString":"function () pure returns (struct EIP712Upgradeable.EIP712Storage storage pointer)"}},"id":1943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7023:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$1724_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"6997:45:8"},{"assignments":[1946],"declarations":[{"constant":false,"id":1946,"mutability":"mutable","name":"name","nameLocation":"7066:4:8","nodeType":"VariableDeclaration","scope":1984,"src":"7052:18:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1945,"name":"string","nodeType":"ElementaryTypeName","src":"7052:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1949,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1947,"name":"_EIP712Name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1917,"src":"7073:11:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":1948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7073:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"7052:34:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1952,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1946,"src":"7106:4:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1951,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7100:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1950,"name":"bytes","nodeType":"ElementaryTypeName","src":"7100:5:8","typeDescriptions":{}}},"id":1953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7100:11:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7112:6:8","memberName":"length","nodeType":"MemberAccess","src":"7100:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7121:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7100:22:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1982,"nodeType":"Block","src":"7184:425:8","statements":[{"assignments":[1966],"declarations":[{"constant":false,"id":1966,"mutability":"mutable","name":"hashedName","nameLocation":"7429:10:8","nodeType":"VariableDeclaration","scope":1982,"src":"7421:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1965,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7421:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1969,"initialValue":{"expression":{"id":1967,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1941,"src":"7442:1:8","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$1724_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"id":1968,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7444:11:8","memberName":"_hashedName","nodeType":"MemberAccess","referencedDeclaration":1716,"src":"7442:13:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"7421:34:8"},{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1970,"name":"hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1966,"src":"7473:10:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7487:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7473:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1980,"nodeType":"Block","src":"7546:53:8","statements":[{"expression":{"arguments":[{"hexValue":"","id":1977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7581:2:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1976,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7571:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7571:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1938,"id":1979,"nodeType":"Return","src":"7564:20:8"}]},"id":1981,"nodeType":"IfStatement","src":"7469:130:8","trueBody":{"id":1975,"nodeType":"Block","src":"7490:50:8","statements":[{"expression":{"id":1973,"name":"hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1966,"src":"7515:10:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1938,"id":1974,"nodeType":"Return","src":"7508:17:8"}]}}]},"id":1983,"nodeType":"IfStatement","src":"7096:513:8","trueBody":{"id":1964,"nodeType":"Block","src":"7124:54:8","statements":[{"expression":{"arguments":[{"arguments":[{"id":1960,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1946,"src":"7161:4:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1959,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7155:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1958,"name":"bytes","nodeType":"ElementaryTypeName","src":"7155:5:8","typeDescriptions":{}}},"id":1961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7155:11:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1957,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7145:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7145:22:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1938,"id":1963,"nodeType":"Return","src":"7138:29:8"}]}}]},"documentation":{"id":1934,"nodeType":"StructuredDocumentation","src":"6719:204:8","text":" @dev The hash of the name parameter for the EIP712 domain.\n NOTE: In previous versions this function was virtual. In this version you should override `_EIP712Name` instead."},"id":1985,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712NameHash","nameLocation":"6937:15:8","nodeType":"FunctionDefinition","parameters":{"id":1935,"nodeType":"ParameterList","parameters":[],"src":"6952:2:8"},"returnParameters":{"id":1938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1937,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1985,"src":"6978:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1936,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6978:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6977:9:8"},"scope":2038,"src":"6928:687:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2036,"nodeType":"Block","src":"7898:661:8","statements":[{"assignments":[1993],"declarations":[{"constant":false,"id":1993,"mutability":"mutable","name":"$","nameLocation":"7930:1:8","nodeType":"VariableDeclaration","scope":2036,"src":"7908:23:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$1724_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage"},"typeName":{"id":1992,"nodeType":"UserDefinedTypeName","pathNode":{"id":1991,"name":"EIP712Storage","nameLocations":["7908:13:8"],"nodeType":"IdentifierPath","referencedDeclaration":1724,"src":"7908:13:8"},"referencedDeclaration":1724,"src":"7908:13:8","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$1724_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage"}},"visibility":"internal"}],"id":1996,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1994,"name":"_getEIP712Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1735,"src":"7934:17:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_EIP712Storage_$1724_storage_ptr_$","typeString":"function () pure returns (struct EIP712Upgradeable.EIP712Storage storage pointer)"}},"id":1995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$1724_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7908:45:8"},{"assignments":[1998],"declarations":[{"constant":false,"id":1998,"mutability":"mutable","name":"version","nameLocation":"7977:7:8","nodeType":"VariableDeclaration","scope":2036,"src":"7963:21:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1997,"name":"string","nodeType":"ElementaryTypeName","src":"7963:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2001,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1999,"name":"_EIP712Version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1933,"src":"7987:14:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":2000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7987:16:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"7963:40:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2004,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1998,"src":"8023:7:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2003,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8017:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2002,"name":"bytes","nodeType":"ElementaryTypeName","src":"8017:5:8","typeDescriptions":{}}},"id":2005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8017:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8032:6:8","memberName":"length","nodeType":"MemberAccess","src":"8017:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8041:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8017:25:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2034,"nodeType":"Block","src":"8107:446:8","statements":[{"assignments":[2018],"declarations":[{"constant":false,"id":2018,"mutability":"mutable","name":"hashedVersion","nameLocation":"8361:13:8","nodeType":"VariableDeclaration","scope":2034,"src":"8353:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2017,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8353:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2021,"initialValue":{"expression":{"id":2019,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1993,"src":"8377:1:8","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$1724_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"id":2020,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8379:14:8","memberName":"_hashedVersion","nodeType":"MemberAccess","referencedDeclaration":1719,"src":"8377:16:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"8353:40:8"},{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2022,"name":"hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2018,"src":"8411:13:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8428:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8411:18:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2032,"nodeType":"Block","src":"8490:53:8","statements":[{"expression":{"arguments":[{"hexValue":"","id":2029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8525:2:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":2028,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"8515:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8515:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1990,"id":2031,"nodeType":"Return","src":"8508:20:8"}]},"id":2033,"nodeType":"IfStatement","src":"8407:136:8","trueBody":{"id":2027,"nodeType":"Block","src":"8431:53:8","statements":[{"expression":{"id":2025,"name":"hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2018,"src":"8456:13:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1990,"id":2026,"nodeType":"Return","src":"8449:20:8"}]}}]},"id":2035,"nodeType":"IfStatement","src":"8013:540:8","trueBody":{"id":2016,"nodeType":"Block","src":"8044:57:8","statements":[{"expression":{"arguments":[{"arguments":[{"id":2012,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1998,"src":"8081:7:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2011,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8075:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2010,"name":"bytes","nodeType":"ElementaryTypeName","src":"8075:5:8","typeDescriptions":{}}},"id":2013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8075:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2009,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"8065:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2014,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8065:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1990,"id":2015,"nodeType":"Return","src":"8058:32:8"}]}}]},"documentation":{"id":1986,"nodeType":"StructuredDocumentation","src":"7621:210:8","text":" @dev The hash of the version parameter for the EIP712 domain.\n NOTE: In previous versions this function was virtual. In this version you should override `_EIP712Version` instead."},"id":2037,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712VersionHash","nameLocation":"7845:18:8","nodeType":"FunctionDefinition","parameters":{"id":1987,"nodeType":"ParameterList","parameters":[],"src":"7863:2:8"},"returnParameters":{"id":1990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1989,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2037,"src":"7889:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1988,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7889:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7888:9:8"},"scope":2038,"src":"7836:723:8","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":2039,"src":"1845:6716:8","usedErrors":[211,214],"usedEvents":[219,2133]}],"src":"113:8449:8"},"id":8},"@openzeppelin/contracts/interfaces/IERC1363.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1363.sol","exportedSymbols":{"IERC1363":[2120],"IERC165":[4794],"IERC20":[2368]},"id":2121,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2040,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"107:24:9"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC20.sol","file":"./IERC20.sol","id":2042,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2121,"sourceUnit":2129,"src":"133:36:9","symbolAliases":[{"foreign":{"id":2041,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2368,"src":"141:6:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","file":"./IERC165.sol","id":2044,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2121,"sourceUnit":2125,"src":"170:38:9","symbolAliases":[{"foreign":{"id":2043,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4794,"src":"178:7:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2046,"name":"IERC20","nameLocations":["590:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":2368,"src":"590:6:9"},"id":2047,"nodeType":"InheritanceSpecifier","src":"590:6:9"},{"baseName":{"id":2048,"name":"IERC165","nameLocations":["598:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":4794,"src":"598:7:9"},"id":2049,"nodeType":"InheritanceSpecifier","src":"598:7:9"}],"canonicalName":"IERC1363","contractDependencies":[],"contractKind":"interface","documentation":{"id":2045,"nodeType":"StructuredDocumentation","src":"210:357:9","text":" @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."},"fullyImplemented":false,"id":2120,"linearizedBaseContracts":[2120,4794,2368],"name":"IERC1363","nameLocation":"578:8:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2050,"nodeType":"StructuredDocumentation","src":"1148:370:9","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"1296ee62","id":2059,"implemented":false,"kind":"function","modifiers":[],"name":"transferAndCall","nameLocation":"1532:15:9","nodeType":"FunctionDefinition","parameters":{"id":2055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2052,"mutability":"mutable","name":"to","nameLocation":"1556:2:9","nodeType":"VariableDeclaration","scope":2059,"src":"1548:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2051,"name":"address","nodeType":"ElementaryTypeName","src":"1548:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2054,"mutability":"mutable","name":"value","nameLocation":"1568:5:9","nodeType":"VariableDeclaration","scope":2059,"src":"1560:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2053,"name":"uint256","nodeType":"ElementaryTypeName","src":"1560:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1547:27:9"},"returnParameters":{"id":2058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2057,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2059,"src":"1593:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2056,"name":"bool","nodeType":"ElementaryTypeName","src":"1593:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1592:6:9"},"scope":2120,"src":"1523:76:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2060,"nodeType":"StructuredDocumentation","src":"1605:453:9","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"4000aea0","id":2071,"implemented":false,"kind":"function","modifiers":[],"name":"transferAndCall","nameLocation":"2072:15:9","nodeType":"FunctionDefinition","parameters":{"id":2067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2062,"mutability":"mutable","name":"to","nameLocation":"2096:2:9","nodeType":"VariableDeclaration","scope":2071,"src":"2088:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2061,"name":"address","nodeType":"ElementaryTypeName","src":"2088:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2064,"mutability":"mutable","name":"value","nameLocation":"2108:5:9","nodeType":"VariableDeclaration","scope":2071,"src":"2100:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2063,"name":"uint256","nodeType":"ElementaryTypeName","src":"2100:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2066,"mutability":"mutable","name":"data","nameLocation":"2130:4:9","nodeType":"VariableDeclaration","scope":2071,"src":"2115:19:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2065,"name":"bytes","nodeType":"ElementaryTypeName","src":"2115:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2087:48:9"},"returnParameters":{"id":2070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2069,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2071,"src":"2154:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2068,"name":"bool","nodeType":"ElementaryTypeName","src":"2154:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2153:6:9"},"scope":2120,"src":"2063:97:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2072,"nodeType":"StructuredDocumentation","src":"2166:453:9","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"d8fbe994","id":2083,"implemented":false,"kind":"function","modifiers":[],"name":"transferFromAndCall","nameLocation":"2633:19:9","nodeType":"FunctionDefinition","parameters":{"id":2079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2074,"mutability":"mutable","name":"from","nameLocation":"2661:4:9","nodeType":"VariableDeclaration","scope":2083,"src":"2653:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2073,"name":"address","nodeType":"ElementaryTypeName","src":"2653:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2076,"mutability":"mutable","name":"to","nameLocation":"2675:2:9","nodeType":"VariableDeclaration","scope":2083,"src":"2667:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2075,"name":"address","nodeType":"ElementaryTypeName","src":"2667:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2078,"mutability":"mutable","name":"value","nameLocation":"2687:5:9","nodeType":"VariableDeclaration","scope":2083,"src":"2679:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2077,"name":"uint256","nodeType":"ElementaryTypeName","src":"2679:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2652:41:9"},"returnParameters":{"id":2082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2081,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2083,"src":"2712:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2080,"name":"bool","nodeType":"ElementaryTypeName","src":"2712:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2711:6:9"},"scope":2120,"src":"2624:94:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2084,"nodeType":"StructuredDocumentation","src":"2724:536:9","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"c1d34b89","id":2097,"implemented":false,"kind":"function","modifiers":[],"name":"transferFromAndCall","nameLocation":"3274:19:9","nodeType":"FunctionDefinition","parameters":{"id":2093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2086,"mutability":"mutable","name":"from","nameLocation":"3302:4:9","nodeType":"VariableDeclaration","scope":2097,"src":"3294:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2085,"name":"address","nodeType":"ElementaryTypeName","src":"3294:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2088,"mutability":"mutable","name":"to","nameLocation":"3316:2:9","nodeType":"VariableDeclaration","scope":2097,"src":"3308:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2087,"name":"address","nodeType":"ElementaryTypeName","src":"3308:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2090,"mutability":"mutable","name":"value","nameLocation":"3328:5:9","nodeType":"VariableDeclaration","scope":2097,"src":"3320:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2089,"name":"uint256","nodeType":"ElementaryTypeName","src":"3320:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2092,"mutability":"mutable","name":"data","nameLocation":"3350:4:9","nodeType":"VariableDeclaration","scope":2097,"src":"3335:19:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2091,"name":"bytes","nodeType":"ElementaryTypeName","src":"3335:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3293:62:9"},"returnParameters":{"id":2096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2095,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2097,"src":"3374:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2094,"name":"bool","nodeType":"ElementaryTypeName","src":"3374:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3373:6:9"},"scope":2120,"src":"3265:115:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2098,"nodeType":"StructuredDocumentation","src":"3386:390:9","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"3177029f","id":2107,"implemented":false,"kind":"function","modifiers":[],"name":"approveAndCall","nameLocation":"3790:14:9","nodeType":"FunctionDefinition","parameters":{"id":2103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2100,"mutability":"mutable","name":"spender","nameLocation":"3813:7:9","nodeType":"VariableDeclaration","scope":2107,"src":"3805:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2099,"name":"address","nodeType":"ElementaryTypeName","src":"3805:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2102,"mutability":"mutable","name":"value","nameLocation":"3830:5:9","nodeType":"VariableDeclaration","scope":2107,"src":"3822:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2101,"name":"uint256","nodeType":"ElementaryTypeName","src":"3822:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3804:32:9"},"returnParameters":{"id":2106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2105,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2107,"src":"3855:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2104,"name":"bool","nodeType":"ElementaryTypeName","src":"3855:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3854:6:9"},"scope":2120,"src":"3781:80:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2108,"nodeType":"StructuredDocumentation","src":"3867:478:9","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"cae9ca51","id":2119,"implemented":false,"kind":"function","modifiers":[],"name":"approveAndCall","nameLocation":"4359:14:9","nodeType":"FunctionDefinition","parameters":{"id":2115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2110,"mutability":"mutable","name":"spender","nameLocation":"4382:7:9","nodeType":"VariableDeclaration","scope":2119,"src":"4374:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2109,"name":"address","nodeType":"ElementaryTypeName","src":"4374:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2112,"mutability":"mutable","name":"value","nameLocation":"4399:5:9","nodeType":"VariableDeclaration","scope":2119,"src":"4391:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2111,"name":"uint256","nodeType":"ElementaryTypeName","src":"4391:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2114,"mutability":"mutable","name":"data","nameLocation":"4421:4:9","nodeType":"VariableDeclaration","scope":2119,"src":"4406:19:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2113,"name":"bytes","nodeType":"ElementaryTypeName","src":"4406:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4373:53:9"},"returnParameters":{"id":2118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2117,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2119,"src":"4445:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2116,"name":"bool","nodeType":"ElementaryTypeName","src":"4445:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4444:6:9"},"scope":2120,"src":"4350:101:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2121,"src":"568:3885:9","usedErrors":[],"usedEvents":[2302,2311]}],"src":"107:4347:9"},"id":9},"@openzeppelin/contracts/interfaces/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","exportedSymbols":{"IERC165":[4794]},"id":2125,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2122,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"106:25:10"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../utils/introspection/IERC165.sol","id":2124,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2125,"sourceUnit":4795,"src":"133:59:10","symbolAliases":[{"foreign":{"id":2123,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4794,"src":"141:7:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"106:87:10"},"id":10},"@openzeppelin/contracts/interfaces/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC20.sol","exportedSymbols":{"IERC20":[2368]},"id":2129,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2126,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"105:25:11"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../token/ERC20/IERC20.sol","id":2128,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2129,"sourceUnit":2369,"src":"132:49:11","symbolAliases":[{"foreign":{"id":2127,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2368,"src":"140:6:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"105:77:11"},"id":11},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","exportedSymbols":{"IERC5267":[2153]},"id":2154,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2130,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"107:25:12"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC5267","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":2153,"linearizedBaseContracts":[2153],"name":"IERC5267","nameLocation":"144:8:12","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":2131,"nodeType":"StructuredDocumentation","src":"159:84:12","text":" @dev MAY be emitted to signal that the domain could have changed."},"eventSelector":"0a6387c9ea3628b88a633bb4f3b151770f70085117a15f9bf3787cda53f13d31","id":2133,"name":"EIP712DomainChanged","nameLocation":"254:19:12","nodeType":"EventDefinition","parameters":{"id":2132,"nodeType":"ParameterList","parameters":[],"src":"273:2:12"},"src":"248:28:12"},{"documentation":{"id":2134,"nodeType":"StructuredDocumentation","src":"282:140:12","text":" @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n signature."},"functionSelector":"84b0196e","id":2152,"implemented":false,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"436:12:12","nodeType":"FunctionDefinition","parameters":{"id":2135,"nodeType":"ParameterList","parameters":[],"src":"448:2:12"},"returnParameters":{"id":2151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2137,"mutability":"mutable","name":"fields","nameLocation":"518:6:12","nodeType":"VariableDeclaration","scope":2152,"src":"511:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2136,"name":"bytes1","nodeType":"ElementaryTypeName","src":"511:6:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":2139,"mutability":"mutable","name":"name","nameLocation":"552:4:12","nodeType":"VariableDeclaration","scope":2152,"src":"538:18:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2138,"name":"string","nodeType":"ElementaryTypeName","src":"538:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2141,"mutability":"mutable","name":"version","nameLocation":"584:7:12","nodeType":"VariableDeclaration","scope":2152,"src":"570:21:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2140,"name":"string","nodeType":"ElementaryTypeName","src":"570:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2143,"mutability":"mutable","name":"chainId","nameLocation":"613:7:12","nodeType":"VariableDeclaration","scope":2152,"src":"605:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2142,"name":"uint256","nodeType":"ElementaryTypeName","src":"605:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2145,"mutability":"mutable","name":"verifyingContract","nameLocation":"642:17:12","nodeType":"VariableDeclaration","scope":2152,"src":"634:25:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2144,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2147,"mutability":"mutable","name":"salt","nameLocation":"681:4:12","nodeType":"VariableDeclaration","scope":2152,"src":"673:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2146,"name":"bytes32","nodeType":"ElementaryTypeName","src":"673:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2150,"mutability":"mutable","name":"extensions","nameLocation":"716:10:12","nodeType":"VariableDeclaration","scope":2152,"src":"699:27:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2148,"name":"uint256","nodeType":"ElementaryTypeName","src":"699:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2149,"nodeType":"ArrayTypeName","src":"699:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"497:239:12"},"scope":2153,"src":"427:310:12","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2154,"src":"134:605:12","usedErrors":[],"usedEvents":[2133]}],"src":"107:633:12"},"id":12},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[2290],"IERC20Errors":[2195],"IERC721Errors":[2243]},"id":2291,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2155,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"112:24:13"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":2156,"nodeType":"StructuredDocumentation","src":"138:141:13","text":" @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."},"fullyImplemented":true,"id":2195,"linearizedBaseContracts":[2195],"name":"IERC20Errors","nameLocation":"290:12:13","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2157,"nodeType":"StructuredDocumentation","src":"309:309:13","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":2165,"name":"ERC20InsufficientBalance","nameLocation":"629:24:13","nodeType":"ErrorDefinition","parameters":{"id":2164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2159,"mutability":"mutable","name":"sender","nameLocation":"662:6:13","nodeType":"VariableDeclaration","scope":2165,"src":"654:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2158,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2161,"mutability":"mutable","name":"balance","nameLocation":"678:7:13","nodeType":"VariableDeclaration","scope":2165,"src":"670:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2160,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2163,"mutability":"mutable","name":"needed","nameLocation":"695:6:13","nodeType":"VariableDeclaration","scope":2165,"src":"687:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2162,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"653:49:13"},"src":"623:80:13"},{"documentation":{"id":2166,"nodeType":"StructuredDocumentation","src":"709:152:13","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":2170,"name":"ERC20InvalidSender","nameLocation":"872:18:13","nodeType":"ErrorDefinition","parameters":{"id":2169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2168,"mutability":"mutable","name":"sender","nameLocation":"899:6:13","nodeType":"VariableDeclaration","scope":2170,"src":"891:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2167,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:16:13"},"src":"866:41:13"},{"documentation":{"id":2171,"nodeType":"StructuredDocumentation","src":"913:159:13","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":2175,"name":"ERC20InvalidReceiver","nameLocation":"1083:20:13","nodeType":"ErrorDefinition","parameters":{"id":2174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2173,"mutability":"mutable","name":"receiver","nameLocation":"1112:8:13","nodeType":"VariableDeclaration","scope":2175,"src":"1104:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2172,"name":"address","nodeType":"ElementaryTypeName","src":"1104:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1103:18:13"},"src":"1077:45:13"},{"documentation":{"id":2176,"nodeType":"StructuredDocumentation","src":"1128:345:13","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":2184,"name":"ERC20InsufficientAllowance","nameLocation":"1484:26:13","nodeType":"ErrorDefinition","parameters":{"id":2183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2178,"mutability":"mutable","name":"spender","nameLocation":"1519:7:13","nodeType":"VariableDeclaration","scope":2184,"src":"1511:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2177,"name":"address","nodeType":"ElementaryTypeName","src":"1511:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2180,"mutability":"mutable","name":"allowance","nameLocation":"1536:9:13","nodeType":"VariableDeclaration","scope":2184,"src":"1528:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2179,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2182,"mutability":"mutable","name":"needed","nameLocation":"1555:6:13","nodeType":"VariableDeclaration","scope":2184,"src":"1547:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2181,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1510:52:13"},"src":"1478:85:13"},{"documentation":{"id":2185,"nodeType":"StructuredDocumentation","src":"1569:174:13","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":2189,"name":"ERC20InvalidApprover","nameLocation":"1754:20:13","nodeType":"ErrorDefinition","parameters":{"id":2188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2187,"mutability":"mutable","name":"approver","nameLocation":"1783:8:13","nodeType":"VariableDeclaration","scope":2189,"src":"1775:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2186,"name":"address","nodeType":"ElementaryTypeName","src":"1775:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1774:18:13"},"src":"1748:45:13"},{"documentation":{"id":2190,"nodeType":"StructuredDocumentation","src":"1799:195:13","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":2194,"name":"ERC20InvalidSpender","nameLocation":"2005:19:13","nodeType":"ErrorDefinition","parameters":{"id":2193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2192,"mutability":"mutable","name":"spender","nameLocation":"2033:7:13","nodeType":"VariableDeclaration","scope":2194,"src":"2025:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2191,"name":"address","nodeType":"ElementaryTypeName","src":"2025:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2024:17:13"},"src":"1999:43:13"}],"scope":2291,"src":"280:1764:13","usedErrors":[2165,2170,2175,2184,2189,2194],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":2196,"nodeType":"StructuredDocumentation","src":"2046:143:13","text":" @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."},"fullyImplemented":true,"id":2243,"linearizedBaseContracts":[2243],"name":"IERC721Errors","nameLocation":"2200:13:13","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2197,"nodeType":"StructuredDocumentation","src":"2220:219:13","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":2201,"name":"ERC721InvalidOwner","nameLocation":"2450:18:13","nodeType":"ErrorDefinition","parameters":{"id":2200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2199,"mutability":"mutable","name":"owner","nameLocation":"2477:5:13","nodeType":"VariableDeclaration","scope":2201,"src":"2469:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2198,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2468:15:13"},"src":"2444:40:13"},{"documentation":{"id":2202,"nodeType":"StructuredDocumentation","src":"2490:132:13","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":2206,"name":"ERC721NonexistentToken","nameLocation":"2633:22:13","nodeType":"ErrorDefinition","parameters":{"id":2205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2204,"mutability":"mutable","name":"tokenId","nameLocation":"2664:7:13","nodeType":"VariableDeclaration","scope":2206,"src":"2656:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2203,"name":"uint256","nodeType":"ElementaryTypeName","src":"2656:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2655:17:13"},"src":"2627:46:13"},{"documentation":{"id":2207,"nodeType":"StructuredDocumentation","src":"2679:289:13","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":2215,"name":"ERC721IncorrectOwner","nameLocation":"2979:20:13","nodeType":"ErrorDefinition","parameters":{"id":2214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2209,"mutability":"mutable","name":"sender","nameLocation":"3008:6:13","nodeType":"VariableDeclaration","scope":2215,"src":"3000:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2208,"name":"address","nodeType":"ElementaryTypeName","src":"3000:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2211,"mutability":"mutable","name":"tokenId","nameLocation":"3024:7:13","nodeType":"VariableDeclaration","scope":2215,"src":"3016:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2210,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2213,"mutability":"mutable","name":"owner","nameLocation":"3041:5:13","nodeType":"VariableDeclaration","scope":2215,"src":"3033:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2212,"name":"address","nodeType":"ElementaryTypeName","src":"3033:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2999:48:13"},"src":"2973:75:13"},{"documentation":{"id":2216,"nodeType":"StructuredDocumentation","src":"3054:152:13","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":2220,"name":"ERC721InvalidSender","nameLocation":"3217:19:13","nodeType":"ErrorDefinition","parameters":{"id":2219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2218,"mutability":"mutable","name":"sender","nameLocation":"3245:6:13","nodeType":"VariableDeclaration","scope":2220,"src":"3237:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2217,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3236:16:13"},"src":"3211:42:13"},{"documentation":{"id":2221,"nodeType":"StructuredDocumentation","src":"3259:159:13","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":2225,"name":"ERC721InvalidReceiver","nameLocation":"3429:21:13","nodeType":"ErrorDefinition","parameters":{"id":2224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2223,"mutability":"mutable","name":"receiver","nameLocation":"3459:8:13","nodeType":"VariableDeclaration","scope":2225,"src":"3451:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2222,"name":"address","nodeType":"ElementaryTypeName","src":"3451:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3450:18:13"},"src":"3423:46:13"},{"documentation":{"id":2226,"nodeType":"StructuredDocumentation","src":"3475:247:13","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":2232,"name":"ERC721InsufficientApproval","nameLocation":"3733:26:13","nodeType":"ErrorDefinition","parameters":{"id":2231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2228,"mutability":"mutable","name":"operator","nameLocation":"3768:8:13","nodeType":"VariableDeclaration","scope":2232,"src":"3760:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2227,"name":"address","nodeType":"ElementaryTypeName","src":"3760:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2230,"mutability":"mutable","name":"tokenId","nameLocation":"3786:7:13","nodeType":"VariableDeclaration","scope":2232,"src":"3778:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2229,"name":"uint256","nodeType":"ElementaryTypeName","src":"3778:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3759:35:13"},"src":"3727:68:13"},{"documentation":{"id":2233,"nodeType":"StructuredDocumentation","src":"3801:174:13","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":2237,"name":"ERC721InvalidApprover","nameLocation":"3986:21:13","nodeType":"ErrorDefinition","parameters":{"id":2236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2235,"mutability":"mutable","name":"approver","nameLocation":"4016:8:13","nodeType":"VariableDeclaration","scope":2237,"src":"4008:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2234,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4007:18:13"},"src":"3980:46:13"},{"documentation":{"id":2238,"nodeType":"StructuredDocumentation","src":"4032:197:13","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":2242,"name":"ERC721InvalidOperator","nameLocation":"4240:21:13","nodeType":"ErrorDefinition","parameters":{"id":2241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2240,"mutability":"mutable","name":"operator","nameLocation":"4270:8:13","nodeType":"VariableDeclaration","scope":2242,"src":"4262:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2239,"name":"address","nodeType":"ElementaryTypeName","src":"4262:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4261:18:13"},"src":"4234:46:13"}],"scope":2291,"src":"2190:2092:13","usedErrors":[2201,2206,2215,2220,2225,2232,2237,2242],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":2244,"nodeType":"StructuredDocumentation","src":"4284:145:13","text":" @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."},"fullyImplemented":true,"id":2290,"linearizedBaseContracts":[2290],"name":"IERC1155Errors","nameLocation":"4440:14:13","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2245,"nodeType":"StructuredDocumentation","src":"4461:361:13","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":2255,"name":"ERC1155InsufficientBalance","nameLocation":"4833:26:13","nodeType":"ErrorDefinition","parameters":{"id":2254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2247,"mutability":"mutable","name":"sender","nameLocation":"4868:6:13","nodeType":"VariableDeclaration","scope":2255,"src":"4860:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2246,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2249,"mutability":"mutable","name":"balance","nameLocation":"4884:7:13","nodeType":"VariableDeclaration","scope":2255,"src":"4876:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2248,"name":"uint256","nodeType":"ElementaryTypeName","src":"4876:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2251,"mutability":"mutable","name":"needed","nameLocation":"4901:6:13","nodeType":"VariableDeclaration","scope":2255,"src":"4893:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2250,"name":"uint256","nodeType":"ElementaryTypeName","src":"4893:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2253,"mutability":"mutable","name":"tokenId","nameLocation":"4917:7:13","nodeType":"VariableDeclaration","scope":2255,"src":"4909:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2252,"name":"uint256","nodeType":"ElementaryTypeName","src":"4909:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4859:66:13"},"src":"4827:99:13"},{"documentation":{"id":2256,"nodeType":"StructuredDocumentation","src":"4932:152:13","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":2260,"name":"ERC1155InvalidSender","nameLocation":"5095:20:13","nodeType":"ErrorDefinition","parameters":{"id":2259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2258,"mutability":"mutable","name":"sender","nameLocation":"5124:6:13","nodeType":"VariableDeclaration","scope":2260,"src":"5116:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2257,"name":"address","nodeType":"ElementaryTypeName","src":"5116:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5115:16:13"},"src":"5089:43:13"},{"documentation":{"id":2261,"nodeType":"StructuredDocumentation","src":"5138:159:13","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":2265,"name":"ERC1155InvalidReceiver","nameLocation":"5308:22:13","nodeType":"ErrorDefinition","parameters":{"id":2264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2263,"mutability":"mutable","name":"receiver","nameLocation":"5339:8:13","nodeType":"VariableDeclaration","scope":2265,"src":"5331:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2262,"name":"address","nodeType":"ElementaryTypeName","src":"5331:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5330:18:13"},"src":"5302:47:13"},{"documentation":{"id":2266,"nodeType":"StructuredDocumentation","src":"5355:256:13","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":2272,"name":"ERC1155MissingApprovalForAll","nameLocation":"5622:28:13","nodeType":"ErrorDefinition","parameters":{"id":2271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2268,"mutability":"mutable","name":"operator","nameLocation":"5659:8:13","nodeType":"VariableDeclaration","scope":2272,"src":"5651:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2267,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2270,"mutability":"mutable","name":"owner","nameLocation":"5677:5:13","nodeType":"VariableDeclaration","scope":2272,"src":"5669:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2269,"name":"address","nodeType":"ElementaryTypeName","src":"5669:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:33:13"},"src":"5616:68:13"},{"documentation":{"id":2273,"nodeType":"StructuredDocumentation","src":"5690:174:13","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":2277,"name":"ERC1155InvalidApprover","nameLocation":"5875:22:13","nodeType":"ErrorDefinition","parameters":{"id":2276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2275,"mutability":"mutable","name":"approver","nameLocation":"5906:8:13","nodeType":"VariableDeclaration","scope":2277,"src":"5898:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2274,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5897:18:13"},"src":"5869:47:13"},{"documentation":{"id":2278,"nodeType":"StructuredDocumentation","src":"5922:197:13","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":2282,"name":"ERC1155InvalidOperator","nameLocation":"6130:22:13","nodeType":"ErrorDefinition","parameters":{"id":2281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2280,"mutability":"mutable","name":"operator","nameLocation":"6161:8:13","nodeType":"VariableDeclaration","scope":2282,"src":"6153:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2279,"name":"address","nodeType":"ElementaryTypeName","src":"6153:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6152:18:13"},"src":"6124:47:13"},{"documentation":{"id":2283,"nodeType":"StructuredDocumentation","src":"6177:280:13","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":2289,"name":"ERC1155InvalidArrayLength","nameLocation":"6468:25:13","nodeType":"ErrorDefinition","parameters":{"id":2288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2285,"mutability":"mutable","name":"idsLength","nameLocation":"6502:9:13","nodeType":"VariableDeclaration","scope":2289,"src":"6494:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2284,"name":"uint256","nodeType":"ElementaryTypeName","src":"6494:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2287,"mutability":"mutable","name":"valuesLength","nameLocation":"6521:12:13","nodeType":"VariableDeclaration","scope":2289,"src":"6513:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2286,"name":"uint256","nodeType":"ElementaryTypeName","src":"6513:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6493:41:13"},"src":"6462:73:13"}],"scope":2291,"src":"4430:2107:13","usedErrors":[2255,2260,2265,2272,2277,2282,2289],"usedEvents":[]}],"src":"112:6426:13"},"id":13},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[2368]},"id":2369,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2292,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"106:25:14"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":2293,"nodeType":"StructuredDocumentation","src":"133:71:14","text":" @dev Interface of the ERC-20 standard as defined in the ERC."},"fullyImplemented":false,"id":2368,"linearizedBaseContracts":[2368],"name":"IERC20","nameLocation":"215:6:14","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":2294,"nodeType":"StructuredDocumentation","src":"228:158:14","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":2302,"name":"Transfer","nameLocation":"397:8:14","nodeType":"EventDefinition","parameters":{"id":2301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2296,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"422:4:14","nodeType":"VariableDeclaration","scope":2302,"src":"406:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2295,"name":"address","nodeType":"ElementaryTypeName","src":"406:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2298,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"444:2:14","nodeType":"VariableDeclaration","scope":2302,"src":"428:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2297,"name":"address","nodeType":"ElementaryTypeName","src":"428:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2300,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"456:5:14","nodeType":"VariableDeclaration","scope":2302,"src":"448:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2299,"name":"uint256","nodeType":"ElementaryTypeName","src":"448:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"405:57:14"},"src":"391:72:14"},{"anonymous":false,"documentation":{"id":2303,"nodeType":"StructuredDocumentation","src":"469:148:14","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":2311,"name":"Approval","nameLocation":"628:8:14","nodeType":"EventDefinition","parameters":{"id":2310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2305,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"653:5:14","nodeType":"VariableDeclaration","scope":2311,"src":"637:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2304,"name":"address","nodeType":"ElementaryTypeName","src":"637:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2307,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"676:7:14","nodeType":"VariableDeclaration","scope":2311,"src":"660:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2306,"name":"address","nodeType":"ElementaryTypeName","src":"660:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2309,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"693:5:14","nodeType":"VariableDeclaration","scope":2311,"src":"685:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2308,"name":"uint256","nodeType":"ElementaryTypeName","src":"685:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"636:63:14"},"src":"622:78:14"},{"documentation":{"id":2312,"nodeType":"StructuredDocumentation","src":"706:65:14","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":2317,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"785:11:14","nodeType":"FunctionDefinition","parameters":{"id":2313,"nodeType":"ParameterList","parameters":[],"src":"796:2:14"},"returnParameters":{"id":2316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2315,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2317,"src":"822:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2314,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:9:14"},"scope":2368,"src":"776:55:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2318,"nodeType":"StructuredDocumentation","src":"837:71:14","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":2325,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"922:9:14","nodeType":"FunctionDefinition","parameters":{"id":2321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2320,"mutability":"mutable","name":"account","nameLocation":"940:7:14","nodeType":"VariableDeclaration","scope":2325,"src":"932:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2319,"name":"address","nodeType":"ElementaryTypeName","src":"932:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"931:17:14"},"returnParameters":{"id":2324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2323,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2325,"src":"972:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2322,"name":"uint256","nodeType":"ElementaryTypeName","src":"972:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"971:9:14"},"scope":2368,"src":"913:68:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2326,"nodeType":"StructuredDocumentation","src":"987:213:14","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":2335,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1214:8:14","nodeType":"FunctionDefinition","parameters":{"id":2331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2328,"mutability":"mutable","name":"to","nameLocation":"1231:2:14","nodeType":"VariableDeclaration","scope":2335,"src":"1223:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2327,"name":"address","nodeType":"ElementaryTypeName","src":"1223:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2330,"mutability":"mutable","name":"value","nameLocation":"1243:5:14","nodeType":"VariableDeclaration","scope":2335,"src":"1235:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2329,"name":"uint256","nodeType":"ElementaryTypeName","src":"1235:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1222:27:14"},"returnParameters":{"id":2334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2333,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2335,"src":"1268:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2332,"name":"bool","nodeType":"ElementaryTypeName","src":"1268:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1267:6:14"},"scope":2368,"src":"1205:69:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2336,"nodeType":"StructuredDocumentation","src":"1280:264:14","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":2345,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1558:9:14","nodeType":"FunctionDefinition","parameters":{"id":2341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2338,"mutability":"mutable","name":"owner","nameLocation":"1576:5:14","nodeType":"VariableDeclaration","scope":2345,"src":"1568:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2337,"name":"address","nodeType":"ElementaryTypeName","src":"1568:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2340,"mutability":"mutable","name":"spender","nameLocation":"1591:7:14","nodeType":"VariableDeclaration","scope":2345,"src":"1583:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2339,"name":"address","nodeType":"ElementaryTypeName","src":"1583:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1567:32:14"},"returnParameters":{"id":2344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2343,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2345,"src":"1623:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2342,"name":"uint256","nodeType":"ElementaryTypeName","src":"1623:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1622:9:14"},"scope":2368,"src":"1549:83:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2346,"nodeType":"StructuredDocumentation","src":"1638:667:14","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":2355,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2319:7:14","nodeType":"FunctionDefinition","parameters":{"id":2351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2348,"mutability":"mutable","name":"spender","nameLocation":"2335:7:14","nodeType":"VariableDeclaration","scope":2355,"src":"2327:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2347,"name":"address","nodeType":"ElementaryTypeName","src":"2327:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2350,"mutability":"mutable","name":"value","nameLocation":"2352:5:14","nodeType":"VariableDeclaration","scope":2355,"src":"2344:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2349,"name":"uint256","nodeType":"ElementaryTypeName","src":"2344:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2326:32:14"},"returnParameters":{"id":2354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2353,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2355,"src":"2377:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2352,"name":"bool","nodeType":"ElementaryTypeName","src":"2377:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2376:6:14"},"scope":2368,"src":"2310:73:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2356,"nodeType":"StructuredDocumentation","src":"2389:297:14","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":2367,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2700:12:14","nodeType":"FunctionDefinition","parameters":{"id":2363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2358,"mutability":"mutable","name":"from","nameLocation":"2721:4:14","nodeType":"VariableDeclaration","scope":2367,"src":"2713:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2357,"name":"address","nodeType":"ElementaryTypeName","src":"2713:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2360,"mutability":"mutable","name":"to","nameLocation":"2735:2:14","nodeType":"VariableDeclaration","scope":2367,"src":"2727:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2359,"name":"address","nodeType":"ElementaryTypeName","src":"2727:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2362,"mutability":"mutable","name":"value","nameLocation":"2747:5:14","nodeType":"VariableDeclaration","scope":2367,"src":"2739:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2361,"name":"uint256","nodeType":"ElementaryTypeName","src":"2739:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2712:41:14"},"returnParameters":{"id":2366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2365,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2367,"src":"2772:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2364,"name":"bool","nodeType":"ElementaryTypeName","src":"2772:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2771:6:14"},"scope":2368,"src":"2691:87:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2369,"src":"205:2575:14","usedErrors":[],"usedEvents":[2302,2311]}],"src":"106:2675:14"},"id":14},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[2368],"IERC20Metadata":[2394]},"id":2395,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2370,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"125:24:15"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":2372,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2395,"sourceUnit":2369,"src":"151:37:15","symbolAliases":[{"foreign":{"id":2371,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2368,"src":"159:6:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2374,"name":"IERC20","nameLocations":["306:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":2368,"src":"306:6:15"},"id":2375,"nodeType":"InheritanceSpecifier","src":"306:6:15"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":2373,"nodeType":"StructuredDocumentation","src":"190:87:15","text":" @dev Interface for the optional metadata functions from the ERC-20 standard."},"fullyImplemented":false,"id":2394,"linearizedBaseContracts":[2394,2368],"name":"IERC20Metadata","nameLocation":"288:14:15","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2376,"nodeType":"StructuredDocumentation","src":"319:54:15","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":2381,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"387:4:15","nodeType":"FunctionDefinition","parameters":{"id":2377,"nodeType":"ParameterList","parameters":[],"src":"391:2:15"},"returnParameters":{"id":2380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2379,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2381,"src":"417:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2378,"name":"string","nodeType":"ElementaryTypeName","src":"417:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"416:15:15"},"scope":2394,"src":"378:54:15","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2382,"nodeType":"StructuredDocumentation","src":"438:56:15","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":2387,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"508:6:15","nodeType":"FunctionDefinition","parameters":{"id":2383,"nodeType":"ParameterList","parameters":[],"src":"514:2:15"},"returnParameters":{"id":2386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2385,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2387,"src":"540:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2384,"name":"string","nodeType":"ElementaryTypeName","src":"540:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"539:15:15"},"scope":2394,"src":"499:56:15","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2388,"nodeType":"StructuredDocumentation","src":"561:65:15","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":2393,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"640:8:15","nodeType":"FunctionDefinition","parameters":{"id":2389,"nodeType":"ParameterList","parameters":[],"src":"648:2:15"},"returnParameters":{"id":2392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2391,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2393,"src":"674:5:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2390,"name":"uint8","nodeType":"ElementaryTypeName","src":"674:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"673:7:15"},"scope":2394,"src":"631:50:15","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2395,"src":"278:405:15","usedErrors":[],"usedEvents":[2302,2311]}],"src":"125:559:15"},"id":15},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","exportedSymbols":{"IERC20Permit":[2430]},"id":2431,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2396,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"123:25:16"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Permit","contractDependencies":[],"contractKind":"interface","documentation":{"id":2397,"nodeType":"StructuredDocumentation","src":"150:1965:16","text":" @dev Interface of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."},"fullyImplemented":false,"id":2430,"linearizedBaseContracts":[2430],"name":"IERC20Permit","nameLocation":"2126:12:16","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2398,"nodeType":"StructuredDocumentation","src":"2145:850:16","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."},"functionSelector":"d505accf","id":2415,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"3009:6:16","nodeType":"FunctionDefinition","parameters":{"id":2413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2400,"mutability":"mutable","name":"owner","nameLocation":"3033:5:16","nodeType":"VariableDeclaration","scope":2415,"src":"3025:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2399,"name":"address","nodeType":"ElementaryTypeName","src":"3025:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2402,"mutability":"mutable","name":"spender","nameLocation":"3056:7:16","nodeType":"VariableDeclaration","scope":2415,"src":"3048:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2401,"name":"address","nodeType":"ElementaryTypeName","src":"3048:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2404,"mutability":"mutable","name":"value","nameLocation":"3081:5:16","nodeType":"VariableDeclaration","scope":2415,"src":"3073:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2403,"name":"uint256","nodeType":"ElementaryTypeName","src":"3073:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2406,"mutability":"mutable","name":"deadline","nameLocation":"3104:8:16","nodeType":"VariableDeclaration","scope":2415,"src":"3096:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2405,"name":"uint256","nodeType":"ElementaryTypeName","src":"3096:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2408,"mutability":"mutable","name":"v","nameLocation":"3128:1:16","nodeType":"VariableDeclaration","scope":2415,"src":"3122:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2407,"name":"uint8","nodeType":"ElementaryTypeName","src":"3122:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2410,"mutability":"mutable","name":"r","nameLocation":"3147:1:16","nodeType":"VariableDeclaration","scope":2415,"src":"3139:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2409,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3139:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2412,"mutability":"mutable","name":"s","nameLocation":"3166:1:16","nodeType":"VariableDeclaration","scope":2415,"src":"3158:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2411,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3158:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3015:158:16"},"returnParameters":{"id":2414,"nodeType":"ParameterList","parameters":[],"src":"3182:0:16"},"scope":2430,"src":"3000:183:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2416,"nodeType":"StructuredDocumentation","src":"3189:294:16","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":2423,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"3497:6:16","nodeType":"FunctionDefinition","parameters":{"id":2419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2418,"mutability":"mutable","name":"owner","nameLocation":"3512:5:16","nodeType":"VariableDeclaration","scope":2423,"src":"3504:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2417,"name":"address","nodeType":"ElementaryTypeName","src":"3504:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3503:15:16"},"returnParameters":{"id":2422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2421,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2423,"src":"3542:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2420,"name":"uint256","nodeType":"ElementaryTypeName","src":"3542:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3541:9:16"},"scope":2430,"src":"3488:63:16","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2424,"nodeType":"StructuredDocumentation","src":"3557:128:16","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":2429,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"3752:16:16","nodeType":"FunctionDefinition","parameters":{"id":2425,"nodeType":"ParameterList","parameters":[],"src":"3768:2:16"},"returnParameters":{"id":2428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2427,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2429,"src":"3794:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2426,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3794:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3793:9:16"},"scope":2430,"src":"3743:60:16","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2431,"src":"2116:1689:16","usedErrors":[],"usedEvents":[]}],"src":"123:3683:16"},"id":16},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","exportedSymbols":{"IERC1363":[2120],"IERC20":[2368],"SafeERC20":[2894]},"id":2895,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2432,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:17"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":2434,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2895,"sourceUnit":2369,"src":"141:37:17","symbolAliases":[{"foreign":{"id":2433,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2368,"src":"149:6:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1363.sol","file":"../../../interfaces/IERC1363.sol","id":2436,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2895,"sourceUnit":2121,"src":"179:58:17","symbolAliases":[{"foreign":{"id":2435,"name":"IERC1363","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2120,"src":"187:8:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SafeERC20","contractDependencies":[],"contractKind":"library","documentation":{"id":2437,"nodeType":"StructuredDocumentation","src":"239:458:17","text":" @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."},"fullyImplemented":true,"id":2894,"linearizedBaseContracts":[2894],"name":"SafeERC20","nameLocation":"706:9:17","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2438,"nodeType":"StructuredDocumentation","src":"722:65:17","text":" @dev An operation with an ERC-20 token failed."},"errorSelector":"5274afe7","id":2442,"name":"SafeERC20FailedOperation","nameLocation":"798:24:17","nodeType":"ErrorDefinition","parameters":{"id":2441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2440,"mutability":"mutable","name":"token","nameLocation":"831:5:17","nodeType":"VariableDeclaration","scope":2442,"src":"823:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2439,"name":"address","nodeType":"ElementaryTypeName","src":"823:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"822:15:17"},"src":"792:46:17"},{"documentation":{"id":2443,"nodeType":"StructuredDocumentation","src":"844:71:17","text":" @dev Indicates a failed `decreaseAllowance` request."},"errorSelector":"e570110f","id":2451,"name":"SafeERC20FailedDecreaseAllowance","nameLocation":"926:32:17","nodeType":"ErrorDefinition","parameters":{"id":2450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2445,"mutability":"mutable","name":"spender","nameLocation":"967:7:17","nodeType":"VariableDeclaration","scope":2451,"src":"959:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2444,"name":"address","nodeType":"ElementaryTypeName","src":"959:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2447,"mutability":"mutable","name":"currentAllowance","nameLocation":"984:16:17","nodeType":"VariableDeclaration","scope":2451,"src":"976:24:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2446,"name":"uint256","nodeType":"ElementaryTypeName","src":"976:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2449,"mutability":"mutable","name":"requestedDecrease","nameLocation":"1010:17:17","nodeType":"VariableDeclaration","scope":2451,"src":"1002:25:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2448,"name":"uint256","nodeType":"ElementaryTypeName","src":"1002:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"958:70:17"},"src":"920:109:17"},{"body":{"id":2474,"nodeType":"Block","src":"1291:88:17","statements":[{"expression":{"arguments":[{"id":2463,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2455,"src":"1321:5:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2368","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":2466,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2455,"src":"1343:5:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2368","typeString":"contract IERC20"}},"id":2467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1349:8:17","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":2335,"src":"1343:14:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":2468,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2457,"src":"1360:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2469,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2459,"src":"1364:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2470,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1359:11:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":2464,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1328:3:17","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2465,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1332:10:17","memberName":"encodeCall","nodeType":"MemberAccess","src":"1328:14:17","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1328:43:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$2368","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2462,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2852,"src":"1301:19:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$2368_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":2472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1301:71:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2473,"nodeType":"ExpressionStatement","src":"1301:71:17"}]},"documentation":{"id":2452,"nodeType":"StructuredDocumentation","src":"1035:179:17","text":" @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":2475,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nameLocation":"1228:12:17","nodeType":"FunctionDefinition","parameters":{"id":2460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2455,"mutability":"mutable","name":"token","nameLocation":"1248:5:17","nodeType":"VariableDeclaration","scope":2475,"src":"1241:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2368","typeString":"contract IERC20"},"typeName":{"id":2454,"nodeType":"UserDefinedTypeName","pathNode":{"id":2453,"name":"IERC20","nameLocations":["1241:6:17"],"nodeType":"IdentifierPath","referencedDeclaration":2368,"src":"1241:6:17"},"referencedDeclaration":2368,"src":"1241:6:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2368","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":2457,"mutability":"mutable","name":"to","nameLocation":"1263:2:17","nodeType":"VariableDeclaration","scope":2475,"src":"1255:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2456,"name":"address","nodeType":"ElementaryTypeName","src":"1255:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2459,"mutability":"mutable","name":"value","nameLocation":"1275:5:17","nodeType":"VariableDeclaration","scope":2475,"src":"1267:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2458,"name":"uint256","nodeType":"ElementaryTypeName","src":"1267:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1240:41:17"},"returnParameters":{"id":2461,"nodeType":"ParameterList","parameters":[],"src":"1291:0:17"},"scope":2894,"src":"1219:160:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2501,"nodeType":"Block","src":"1708:98:17","statements":[{"expression":{"arguments":[{"id":2489,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2479,"src":"1738:5:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2368","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":2492,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2479,"src":"1760:5:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2368","typeString":"contract IERC20"}},"id":2493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1766:12:17","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":2367,"src":"1760:18:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},{"components":[{"id":2494,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2481,"src":"1781:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2495,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"1787:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2496,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2485,"src":"1791:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2497,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1780:17:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}],"expression":{"id":2490,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1745:3:17","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2491,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1749:10:17","memberName":"encodeCall","nodeType":"MemberAccess","src":"1745:14:17","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1745:53:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$2368","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2488,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2852,"src":"1718:19:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$2368_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":2499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1718:81:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2500,"nodeType":"ExpressionStatement","src":"1718:81:17"}]},"documentation":{"id":2476,"nodeType":"StructuredDocumentation","src":"1385:228:17","text":" @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."},"id":2502,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1627:16:17","nodeType":"FunctionDefinition","parameters":{"id":2486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2479,"mutability":"mutable","name":"token","nameLocation":"1651:5:17","nodeType":"VariableDeclaration","scope":2502,"src":"1644:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2368","typeString":"contract IERC20"},"typeName":{"id":2478,"nodeType":"UserDefinedTypeName","pathNode":{"id":2477,"name":"IERC20","nameLocations":["1644:6:17"],"nodeType":"IdentifierPath","referencedDeclaration":2368,"src":"1644:6:17"},"referencedDeclaration":2368,"src":"1644:6:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2368","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":2481,"mutability":"mutable","name":"from","nameLocation":"1666:4:17","nodeType":"VariableDeclaration","scope":2502,"src":"1658:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2480,"name":"address","nodeType":"ElementaryTypeName","src":"1658:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2483,"mutability":"mutable","name":"to","nameLocation":"1680:2:17","nodeType":"VariableDeclaration","scope":2502,"src":"1672:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2482,"name":"address","nodeType":"ElementaryTypeName","src":"1672:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2485,"mutability":"mutable","name":"value","nameLocation":"1692:5:17","nodeType":"VariableDeclaration","scope":2502,"src":"1684:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2484,"name":"uint256","nodeType":"ElementaryTypeName","src":"1684:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1643:55:17"},"returnParameters":{"id":2487,"nodeType":"ParameterList","parameters":[],"src":"1708:0:17"},"scope":2894,"src":"1618:188:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2527,"nodeType":"Block","src":"2033:99:17","statements":[{"expression":{"arguments":[{"id":2516,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2506,"src":"2074:5:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2368","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":2519,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2506,"src":"2096:5:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2368","typeString":"contract IERC20"}},"id":2520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2102:8:17","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":2335,"src":"2096:14:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":2521,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2508,"src":"2113:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2522,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2510,"src":"2117:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2523,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2112:11:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":2517,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2081:3:17","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2518,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2085:10:17","memberName":"encodeCall","nodeType":"MemberAccess","src":"2081:14:17","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2081:43:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$2368","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2515,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2893,"src":"2050:23:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$2368_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":2525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2050:75:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2514,"id":2526,"nodeType":"Return","src":"2043:82:17"}]},"documentation":{"id":2503,"nodeType":"StructuredDocumentation","src":"1812:126:17","text":" @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful."},"id":2528,"implemented":true,"kind":"function","modifiers":[],"name":"trySafeTransfer","nameLocation":"1952:15:17","nodeType":"FunctionDefinition","parameters":{"id":2511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2506,"mutability":"mutable","name":"token","nameLocation":"1975:5:17","nodeType":"VariableDeclaration","scope":2528,"src":"1968:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2368","typeString":"contract IERC20"},"typeName":{"id":2505,"nodeType":"UserDefinedTypeName","pathNode":{"id":2504,"name":"IERC20","nameLocations":["1968:6:17"],"nodeType":"IdentifierPath","referencedDeclaration":2368,"src":"1968:6:17"},"referencedDeclaration":2368,"src":"1968:6:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2368","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":2508,"mutability":"mutable","name":"to","nameLocation":"1990:2:17","nodeType":"VariableDeclaration","scope":2528,"src":"1982:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2507,"name":"address","nodeType":"ElementaryTypeName","src":"1982:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2510,"mutability":"mutable","name":"value","nameLocation":"2002:5:17","nodeType":"VariableDeclaration","scope":2528,"src":"1994:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2509,"name":"uint256","nodeType":"ElementaryTypeName","src":"1994:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1967:41:17"},"returnParameters":{"id":2514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2513,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2528,"src":"2027:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2512,"name":"bool","nodeType":"ElementaryTypeName","src":"2027:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2026:6:17"},"scope":2894,"src":"1943:189:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2556,"nodeType":"Block","src":"2381:109:17","statements":[{"expression":{"arguments":[{"id":2544,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2532,"src":"2422:5:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2368","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":2547,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2532,"src":"2444:5:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2368","typeString":"contract IERC20"}},"id":2548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2450:12:17","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":2367,"src":"2444:18:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},{"components":[{"id":2549,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2534,"src":"2465:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2550,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2536,"src":"2471:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2551,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2538,"src":"2475:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2552,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2464:17:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}],"expression":{"id":2545,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2429:3:17","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2546,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2433:10:17","memberName":"encodeCall","nodeType":"MemberAccess","src":"2429:14:17","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2429:53:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$2368","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2543,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2893,"src":"2398:23:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$2368_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":2554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2398:85:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2542,"id":2555,"nodeType":"Return","src":"2391:92:17"}]},"documentation":{"id":2529,"nodeType":"StructuredDocumentation","src":"2138:130:17","text":" @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful."},"id":2557,"implemented":true,"kind":"function","modifiers":[],"name":"trySafeTransferFrom","nameLocation":"2282:19:17","nodeType":"FunctionDefinition","parameters":{"id":2539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2532,"mutability":"mutable","name":"token","nameLocation":"2309:5:17","nodeType":"VariableDeclaration","scope":2557,"src":"2302:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2368","typeString":"contract IERC20"},"typeName":{"id":2531,"nodeType":"UserDefinedTypeName","pathNode":{"id":2530,"name":"IERC20","nameLocations":["2302:6:17"],"nodeType":"IdentifierPath","referencedDeclaration":2368,"src":"2302:6:17"},"referencedDeclaration":2368,"src":"2302:6:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2368","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":2534,"mutability":"mutable","name":"from","nameLocation":"2324:4:17","nodeType":"VariableDeclaration","scope":2557,"src":"2316:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2533,"name":"address","nodeType":"ElementaryTypeName","src":"2316:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2536,"mutability":"mutable","name":"to","nameLocation":"2338:2:17","nodeType":"VariableDeclaration","scope":2557,"src":"2330:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2535,"name":"address","nodeType":"ElementaryTypeName","src":"2330:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2538,"mutability":"mutable","name":"value","nameLocation":"2350:5:17","nodeType":"VariableDeclaration","scope":2557,"src":"2342:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2537,"name":"uint256","nodeType":"ElementaryTypeName","src":"2342:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2301:55:17"},"returnParameters":{"id":2542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2541,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2557,"src":"2375:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2540,"name":"bool","nodeType":"ElementaryTypeName","src":"2375:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2374:6:17"},"scope":2894,"src":"2273:217:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2587,"nodeType":"Block","src":"3232:139:17","statements":[{"assignments":[2569],"declarations":[{"constant":false,"id":2569,"mutability":"mutable","name":"oldAllowance","nameLocation":"3250:12:17","nodeType":"VariableDeclaration","scope":2587,"src":"3242:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2568,"name":"uint256","nodeType":"ElementaryTypeName","src":"3242:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2578,"initialValue":{"arguments":[{"arguments":[{"id":2574,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3289:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$2894","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$2894","typeString":"library SafeERC20"}],"id":2573,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3281:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2572,"name":"address","nodeType":"ElementaryTypeName","src":"3281:7:17","typeDescriptions":{}}},"id":2575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3281:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2576,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2563,"src":"3296:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2570,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2561,"src":"3265:5:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2368","typeString":"contract IERC20"}},"id":2571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3271:9:17","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":2345,"src":"3265:15:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":2577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3265:39:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3242:62:17"},{"expression":{"arguments":[{"id":2580,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2561,"src":"3327:5:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2368","typeString":"contract IERC20"}},{"id":2581,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2563,"src":"3334:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2582,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2569,"src":"3343:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2583,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2565,"src":"3358:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3343:20:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$2368","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2579,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2678,"src":"3314:12:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$2368_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":2585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3314:50:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2586,"nodeType":"ExpressionStatement","src":"3314:50:17"}]},"documentation":{"id":2558,"nodeType":"StructuredDocumentation","src":"2496:645:17","text":" @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."},"id":2588,"implemented":true,"kind":"function","modifiers":[],"name":"safeIncreaseAllowance","nameLocation":"3155:21:17","nodeType":"FunctionDefinition","parameters":{"id":2566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2561,"mutability":"mutable","name":"token","nameLocation":"3184:5:17","nodeType":"VariableDeclaration","scope":2588,"src":"3177:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2368","typeString":"contract IERC20"},"typeName":{"id":2560,"nodeType":"UserDefinedTypeName","pathNode":{"id":2559,"name":"IERC20","nameLocations":["3177:6:17"],"nodeType":"IdentifierPath","referencedDeclaration":2368,"src":"3177:6:17"},"referencedDeclaration":2368,"src":"3177:6:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2368","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":2563,"mutability":"mutable","name":"spender","nameLocation":"3199:7:17","nodeType":"VariableDeclaration","scope":2588,"src":"3191:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2562,"name":"address","nodeType":"ElementaryTypeName","src":"3191:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2565,"mutability":"mutable","name":"value","nameLocation":"3216:5:17","nodeType":"VariableDeclaration","scope":2588,"src":"3208:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2564,"name":"uint256","nodeType":"ElementaryTypeName","src":"3208:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3176:46:17"},"returnParameters":{"id":2567,"nodeType":"ParameterList","parameters":[],"src":"3232:0:17"},"scope":2894,"src":"3146:225:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2630,"nodeType":"Block","src":"4137:370:17","statements":[{"id":2629,"nodeType":"UncheckedBlock","src":"4147:354:17","statements":[{"assignments":[2600],"declarations":[{"constant":false,"id":2600,"mutability":"mutable","name":"currentAllowance","nameLocation":"4179:16:17","nodeType":"VariableDeclaration","scope":2629,"src":"4171:24:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2599,"name":"uint256","nodeType":"ElementaryTypeName","src":"4171:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2609,"initialValue":{"arguments":[{"arguments":[{"id":2605,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4222:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$2894","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$2894","typeString":"library SafeERC20"}],"id":2604,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4214:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2603,"name":"address","nodeType":"ElementaryTypeName","src":"4214:7:17","typeDescriptions":{}}},"id":2606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4214:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2607,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2594,"src":"4229:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2601,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2592,"src":"4198:5:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2368","typeString":"contract IERC20"}},"id":2602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4204:9:17","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":2345,"src":"4198:15:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":2608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4198:39:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4171:66:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2610,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"4255:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2611,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2596,"src":"4274:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4255:36:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2620,"nodeType":"IfStatement","src":"4251:160:17","trueBody":{"id":2619,"nodeType":"Block","src":"4293:118:17","statements":[{"errorCall":{"arguments":[{"id":2614,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2594,"src":"4351:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2615,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"4360:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2616,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2596,"src":"4378:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2613,"name":"SafeERC20FailedDecreaseAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2451,"src":"4318:32:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":2617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4318:78:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2618,"nodeType":"RevertStatement","src":"4311:85:17"}]}},{"expression":{"arguments":[{"id":2622,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2592,"src":"4437:5:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2368","typeString":"contract IERC20"}},{"id":2623,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2594,"src":"4444:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2624,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"4453:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2625,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2596,"src":"4472:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4453:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$2368","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2621,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2678,"src":"4424:12:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$2368_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":2627,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4424:66:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2628,"nodeType":"ExpressionStatement","src":"4424:66:17"}]}]},"documentation":{"id":2589,"nodeType":"StructuredDocumentation","src":"3377:657:17","text":" @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."},"id":2631,"implemented":true,"kind":"function","modifiers":[],"name":"safeDecreaseAllowance","nameLocation":"4048:21:17","nodeType":"FunctionDefinition","parameters":{"id":2597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2592,"mutability":"mutable","name":"token","nameLocation":"4077:5:17","nodeType":"VariableDeclaration","scope":2631,"src":"4070:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2368","typeString":"contract IERC20"},"typeName":{"id":2591,"nodeType":"UserDefinedTypeName","pathNode":{"id":2590,"name":"IERC20","nameLocations":["4070:6:17"],"nodeType":"IdentifierPath","referencedDeclaration":2368,"src":"4070:6:17"},"referencedDeclaration":2368,"src":"4070:6:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2368","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":2594,"mutability":"mutable","name":"spender","nameLocation":"4092:7:17","nodeType":"VariableDeclaration","scope":2631,"src":"4084:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2593,"name":"address","nodeType":"ElementaryTypeName","src":"4084:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2596,"mutability":"mutable","name":"requestedDecrease","nameLocation":"4109:17:17","nodeType":"VariableDeclaration","scope":2631,"src":"4101:25:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2595,"name":"uint256","nodeType":"ElementaryTypeName","src":"4101:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4069:58:17"},"returnParameters":{"id":2598,"nodeType":"ParameterList","parameters":[],"src":"4137:0:17"},"scope":2894,"src":"4039:468:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2677,"nodeType":"Block","src":"5161:303:17","statements":[{"assignments":[2643],"declarations":[{"constant":false,"id":2643,"mutability":"mutable","name":"approvalCall","nameLocation":"5184:12:17","nodeType":"VariableDeclaration","scope":2677,"src":"5171:25:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2642,"name":"bytes","nodeType":"ElementaryTypeName","src":"5171:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2652,"initialValue":{"arguments":[{"expression":{"id":2646,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2635,"src":"5214:5:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2368","typeString":"contract IERC20"}},"id":2647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5220:7:17","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":2355,"src":"5214:13:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":2648,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2637,"src":"5230:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2649,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2639,"src":"5239:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2650,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5229:16:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":2644,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5199:3:17","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2645,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5203:10:17","memberName":"encodeCall","nodeType":"MemberAccess","src":"5199:14:17","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5199:47:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"5171:75:17"},{"condition":{"id":2657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5261:45:17","subExpression":{"arguments":[{"id":2654,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2635,"src":"5286:5:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2368","typeString":"contract IERC20"}},{"id":2655,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2643,"src":"5293:12:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$2368","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2653,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2893,"src":"5262:23:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$2368_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":2656,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5262:44:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2676,"nodeType":"IfStatement","src":"5257:201:17","trueBody":{"id":2675,"nodeType":"Block","src":"5308:150:17","statements":[{"expression":{"arguments":[{"id":2659,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2635,"src":"5342:5:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2368","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":2662,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2635,"src":"5364:5:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2368","typeString":"contract IERC20"}},"id":2663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5370:7:17","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":2355,"src":"5364:13:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":2664,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2637,"src":"5380:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":2665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5389:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2666,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5379:12:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_rational_0_by_1_$","typeString":"tuple(address,int_const 0)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_rational_0_by_1_$","typeString":"tuple(address,int_const 0)"}],"expression":{"id":2660,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5349:3:17","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2661,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5353:10:17","memberName":"encodeCall","nodeType":"MemberAccess","src":"5349:14:17","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5349:43:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$2368","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2658,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2852,"src":"5322:19:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$2368_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":2668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5322:71:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2669,"nodeType":"ExpressionStatement","src":"5322:71:17"},{"expression":{"arguments":[{"id":2671,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2635,"src":"5427:5:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2368","typeString":"contract IERC20"}},{"id":2672,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2643,"src":"5434:12:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$2368","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2670,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2852,"src":"5407:19:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$2368_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":2673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5407:40:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2674,"nodeType":"ExpressionStatement","src":"5407:40:17"}]}}]},"documentation":{"id":2632,"nodeType":"StructuredDocumentation","src":"4513:566:17","text":" @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."},"id":2678,"implemented":true,"kind":"function","modifiers":[],"name":"forceApprove","nameLocation":"5093:12:17","nodeType":"FunctionDefinition","parameters":{"id":2640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2635,"mutability":"mutable","name":"token","nameLocation":"5113:5:17","nodeType":"VariableDeclaration","scope":2678,"src":"5106:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2368","typeString":"contract IERC20"},"typeName":{"id":2634,"nodeType":"UserDefinedTypeName","pathNode":{"id":2633,"name":"IERC20","nameLocations":["5106:6:17"],"nodeType":"IdentifierPath","referencedDeclaration":2368,"src":"5106:6:17"},"referencedDeclaration":2368,"src":"5106:6:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2368","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":2637,"mutability":"mutable","name":"spender","nameLocation":"5128:7:17","nodeType":"VariableDeclaration","scope":2678,"src":"5120:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2636,"name":"address","nodeType":"ElementaryTypeName","src":"5120:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2639,"mutability":"mutable","name":"value","nameLocation":"5145:5:17","nodeType":"VariableDeclaration","scope":2678,"src":"5137:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2638,"name":"uint256","nodeType":"ElementaryTypeName","src":"5137:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5105:46:17"},"returnParameters":{"id":2641,"nodeType":"ParameterList","parameters":[],"src":"5161:0:17"},"scope":2894,"src":"5084:380:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2720,"nodeType":"Block","src":"5911:219:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2691,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2684,"src":"5925:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5928:4:17","memberName":"code","nodeType":"MemberAccess","src":"5925:7:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5933:6:17","memberName":"length","nodeType":"MemberAccess","src":"5925:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5943:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5925:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":2709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6011:39:17","subExpression":{"arguments":[{"id":2705,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2684,"src":"6034:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2706,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2686,"src":"6038:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2707,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2688,"src":"6045:4:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2703,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2682,"src":"6012:5:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$2120","typeString":"contract IERC1363"}},"id":2704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6018:15:17","memberName":"transferAndCall","nodeType":"MemberAccess","referencedDeclaration":2071,"src":"6012:21:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,uint256,bytes memory) external returns (bool)"}},"id":2708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6012:38:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2718,"nodeType":"IfStatement","src":"6007:117:17","trueBody":{"id":2717,"nodeType":"Block","src":"6052:72:17","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":2713,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2682,"src":"6106:5:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$2120","typeString":"contract IERC1363"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$2120","typeString":"contract IERC1363"}],"id":2712,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6098:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2711,"name":"address","nodeType":"ElementaryTypeName","src":"6098:7:17","typeDescriptions":{}}},"id":2714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6098:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2710,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2442,"src":"6073:24:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6073:40:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2716,"nodeType":"RevertStatement","src":"6066:47:17"}]}},"id":2719,"nodeType":"IfStatement","src":"5921:203:17","trueBody":{"id":2702,"nodeType":"Block","src":"5946:55:17","statements":[{"expression":{"arguments":[{"id":2697,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2682,"src":"5973:5:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$2120","typeString":"contract IERC1363"}},{"id":2698,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2684,"src":"5980:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2699,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2686,"src":"5984:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$2120","typeString":"contract IERC1363"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2696,"name":"safeTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2475,"src":"5960:12:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$2368_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":2700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5960:30:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2701,"nodeType":"ExpressionStatement","src":"5960:30:17"}]}}]},"documentation":{"id":2679,"nodeType":"StructuredDocumentation","src":"5470:333:17","text":" @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."},"id":2721,"implemented":true,"kind":"function","modifiers":[],"name":"transferAndCallRelaxed","nameLocation":"5817:22:17","nodeType":"FunctionDefinition","parameters":{"id":2689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2682,"mutability":"mutable","name":"token","nameLocation":"5849:5:17","nodeType":"VariableDeclaration","scope":2721,"src":"5840:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$2120","typeString":"contract IERC1363"},"typeName":{"id":2681,"nodeType":"UserDefinedTypeName","pathNode":{"id":2680,"name":"IERC1363","nameLocations":["5840:8:17"],"nodeType":"IdentifierPath","referencedDeclaration":2120,"src":"5840:8:17"},"referencedDeclaration":2120,"src":"5840:8:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$2120","typeString":"contract IERC1363"}},"visibility":"internal"},{"constant":false,"id":2684,"mutability":"mutable","name":"to","nameLocation":"5864:2:17","nodeType":"VariableDeclaration","scope":2721,"src":"5856:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2683,"name":"address","nodeType":"ElementaryTypeName","src":"5856:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2686,"mutability":"mutable","name":"value","nameLocation":"5876:5:17","nodeType":"VariableDeclaration","scope":2721,"src":"5868:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2685,"name":"uint256","nodeType":"ElementaryTypeName","src":"5868:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2688,"mutability":"mutable","name":"data","nameLocation":"5896:4:17","nodeType":"VariableDeclaration","scope":2721,"src":"5883:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2687,"name":"bytes","nodeType":"ElementaryTypeName","src":"5883:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5839:62:17"},"returnParameters":{"id":2690,"nodeType":"ParameterList","parameters":[],"src":"5911:0:17"},"scope":2894,"src":"5808:322:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2767,"nodeType":"Block","src":"6649:239:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2736,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2729,"src":"6663:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6666:4:17","memberName":"code","nodeType":"MemberAccess","src":"6663:7:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6671:6:17","memberName":"length","nodeType":"MemberAccess","src":"6663:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6681:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6663:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":2756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6759:49:17","subExpression":{"arguments":[{"id":2751,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2727,"src":"6786:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2752,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2729,"src":"6792:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2753,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2731,"src":"6796:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2754,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2733,"src":"6803:4:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2749,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2725,"src":"6760:5:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$2120","typeString":"contract IERC1363"}},"id":2750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6766:19:17","memberName":"transferFromAndCall","nodeType":"MemberAccess","referencedDeclaration":2097,"src":"6760:25:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) external returns (bool)"}},"id":2755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6760:48:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2765,"nodeType":"IfStatement","src":"6755:127:17","trueBody":{"id":2764,"nodeType":"Block","src":"6810:72:17","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":2760,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2725,"src":"6864:5:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$2120","typeString":"contract IERC1363"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$2120","typeString":"contract IERC1363"}],"id":2759,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6856:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2758,"name":"address","nodeType":"ElementaryTypeName","src":"6856:7:17","typeDescriptions":{}}},"id":2761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6856:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2757,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2442,"src":"6831:24:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6831:40:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2763,"nodeType":"RevertStatement","src":"6824:47:17"}]}},"id":2766,"nodeType":"IfStatement","src":"6659:223:17","trueBody":{"id":2748,"nodeType":"Block","src":"6684:65:17","statements":[{"expression":{"arguments":[{"id":2742,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2725,"src":"6715:5:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$2120","typeString":"contract IERC1363"}},{"id":2743,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2727,"src":"6722:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2744,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2729,"src":"6728:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2745,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2731,"src":"6732:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$2120","typeString":"contract IERC1363"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2741,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2502,"src":"6698:16:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$2368_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":2746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6698:40:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2747,"nodeType":"ExpressionStatement","src":"6698:40:17"}]}}]},"documentation":{"id":2722,"nodeType":"StructuredDocumentation","src":"6136:341:17","text":" @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."},"id":2768,"implemented":true,"kind":"function","modifiers":[],"name":"transferFromAndCallRelaxed","nameLocation":"6491:26:17","nodeType":"FunctionDefinition","parameters":{"id":2734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2725,"mutability":"mutable","name":"token","nameLocation":"6536:5:17","nodeType":"VariableDeclaration","scope":2768,"src":"6527:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$2120","typeString":"contract IERC1363"},"typeName":{"id":2724,"nodeType":"UserDefinedTypeName","pathNode":{"id":2723,"name":"IERC1363","nameLocations":["6527:8:17"],"nodeType":"IdentifierPath","referencedDeclaration":2120,"src":"6527:8:17"},"referencedDeclaration":2120,"src":"6527:8:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$2120","typeString":"contract IERC1363"}},"visibility":"internal"},{"constant":false,"id":2727,"mutability":"mutable","name":"from","nameLocation":"6559:4:17","nodeType":"VariableDeclaration","scope":2768,"src":"6551:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2726,"name":"address","nodeType":"ElementaryTypeName","src":"6551:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2729,"mutability":"mutable","name":"to","nameLocation":"6581:2:17","nodeType":"VariableDeclaration","scope":2768,"src":"6573:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2728,"name":"address","nodeType":"ElementaryTypeName","src":"6573:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2731,"mutability":"mutable","name":"value","nameLocation":"6601:5:17","nodeType":"VariableDeclaration","scope":2768,"src":"6593:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2730,"name":"uint256","nodeType":"ElementaryTypeName","src":"6593:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2733,"mutability":"mutable","name":"data","nameLocation":"6629:4:17","nodeType":"VariableDeclaration","scope":2768,"src":"6616:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2732,"name":"bytes","nodeType":"ElementaryTypeName","src":"6616:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6517:122:17"},"returnParameters":{"id":2735,"nodeType":"ParameterList","parameters":[],"src":"6649:0:17"},"scope":2894,"src":"6482:406:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2810,"nodeType":"Block","src":"7655:218:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2781,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2774,"src":"7669:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7672:4:17","memberName":"code","nodeType":"MemberAccess","src":"7669:7:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7677:6:17","memberName":"length","nodeType":"MemberAccess","src":"7669:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7687:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7669:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":2799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7755:38:17","subExpression":{"arguments":[{"id":2795,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2774,"src":"7777:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2796,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2776,"src":"7781:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2797,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2778,"src":"7788:4:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2793,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2772,"src":"7756:5:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$2120","typeString":"contract IERC1363"}},"id":2794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7762:14:17","memberName":"approveAndCall","nodeType":"MemberAccess","referencedDeclaration":2119,"src":"7756:20:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,uint256,bytes memory) external returns (bool)"}},"id":2798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7756:37:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2808,"nodeType":"IfStatement","src":"7751:116:17","trueBody":{"id":2807,"nodeType":"Block","src":"7795:72:17","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":2803,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2772,"src":"7849:5:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$2120","typeString":"contract IERC1363"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$2120","typeString":"contract IERC1363"}],"id":2802,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7841:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2801,"name":"address","nodeType":"ElementaryTypeName","src":"7841:7:17","typeDescriptions":{}}},"id":2804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7841:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2800,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2442,"src":"7816:24:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7816:40:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2806,"nodeType":"RevertStatement","src":"7809:47:17"}]}},"id":2809,"nodeType":"IfStatement","src":"7665:202:17","trueBody":{"id":2792,"nodeType":"Block","src":"7690:55:17","statements":[{"expression":{"arguments":[{"id":2787,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2772,"src":"7717:5:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$2120","typeString":"contract IERC1363"}},{"id":2788,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2774,"src":"7724:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2789,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2776,"src":"7728:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$2120","typeString":"contract IERC1363"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2786,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2678,"src":"7704:12:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$2368_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":2790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7704:30:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2791,"nodeType":"ExpressionStatement","src":"7704:30:17"}]}}]},"documentation":{"id":2769,"nodeType":"StructuredDocumentation","src":"6894:654:17","text":" @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."},"id":2811,"implemented":true,"kind":"function","modifiers":[],"name":"approveAndCallRelaxed","nameLocation":"7562:21:17","nodeType":"FunctionDefinition","parameters":{"id":2779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2772,"mutability":"mutable","name":"token","nameLocation":"7593:5:17","nodeType":"VariableDeclaration","scope":2811,"src":"7584:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$2120","typeString":"contract IERC1363"},"typeName":{"id":2771,"nodeType":"UserDefinedTypeName","pathNode":{"id":2770,"name":"IERC1363","nameLocations":["7584:8:17"],"nodeType":"IdentifierPath","referencedDeclaration":2120,"src":"7584:8:17"},"referencedDeclaration":2120,"src":"7584:8:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$2120","typeString":"contract IERC1363"}},"visibility":"internal"},{"constant":false,"id":2774,"mutability":"mutable","name":"to","nameLocation":"7608:2:17","nodeType":"VariableDeclaration","scope":2811,"src":"7600:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2773,"name":"address","nodeType":"ElementaryTypeName","src":"7600:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2776,"mutability":"mutable","name":"value","nameLocation":"7620:5:17","nodeType":"VariableDeclaration","scope":2811,"src":"7612:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2775,"name":"uint256","nodeType":"ElementaryTypeName","src":"7612:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2778,"mutability":"mutable","name":"data","nameLocation":"7640:4:17","nodeType":"VariableDeclaration","scope":2811,"src":"7627:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2777,"name":"bytes","nodeType":"ElementaryTypeName","src":"7627:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7583:62:17"},"returnParameters":{"id":2780,"nodeType":"ParameterList","parameters":[],"src":"7655:0:17"},"scope":2894,"src":"7553:320:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2851,"nodeType":"Block","src":"8440:650:17","statements":[{"assignments":[2821],"declarations":[{"constant":false,"id":2821,"mutability":"mutable","name":"returnSize","nameLocation":"8458:10:17","nodeType":"VariableDeclaration","scope":2851,"src":"8450:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2820,"name":"uint256","nodeType":"ElementaryTypeName","src":"8450:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2822,"nodeType":"VariableDeclarationStatement","src":"8450:18:17"},{"assignments":[2824],"declarations":[{"constant":false,"id":2824,"mutability":"mutable","name":"returnValue","nameLocation":"8486:11:17","nodeType":"VariableDeclaration","scope":2851,"src":"8478:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2823,"name":"uint256","nodeType":"ElementaryTypeName","src":"8478:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2825,"nodeType":"VariableDeclarationStatement","src":"8478:19:17"},{"AST":{"nativeSrc":"8532:396:17","nodeType":"YulBlock","src":"8532:396:17","statements":[{"nativeSrc":"8546:75:17","nodeType":"YulVariableDeclaration","src":"8546:75:17","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"8566:3:17","nodeType":"YulIdentifier","src":"8566:3:17"},"nativeSrc":"8566:5:17","nodeType":"YulFunctionCall","src":"8566:5:17"},{"name":"token","nativeSrc":"8573:5:17","nodeType":"YulIdentifier","src":"8573:5:17"},{"kind":"number","nativeSrc":"8580:1:17","nodeType":"YulLiteral","src":"8580:1:17","type":"","value":"0"},{"arguments":[{"name":"data","nativeSrc":"8587:4:17","nodeType":"YulIdentifier","src":"8587:4:17"},{"kind":"number","nativeSrc":"8593:4:17","nodeType":"YulLiteral","src":"8593:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"8583:3:17","nodeType":"YulIdentifier","src":"8583:3:17"},"nativeSrc":"8583:15:17","nodeType":"YulFunctionCall","src":"8583:15:17"},{"arguments":[{"name":"data","nativeSrc":"8606:4:17","nodeType":"YulIdentifier","src":"8606:4:17"}],"functionName":{"name":"mload","nativeSrc":"8600:5:17","nodeType":"YulIdentifier","src":"8600:5:17"},"nativeSrc":"8600:11:17","nodeType":"YulFunctionCall","src":"8600:11:17"},{"kind":"number","nativeSrc":"8613:1:17","nodeType":"YulLiteral","src":"8613:1:17","type":"","value":"0"},{"kind":"number","nativeSrc":"8616:4:17","nodeType":"YulLiteral","src":"8616:4:17","type":"","value":"0x20"}],"functionName":{"name":"call","nativeSrc":"8561:4:17","nodeType":"YulIdentifier","src":"8561:4:17"},"nativeSrc":"8561:60:17","nodeType":"YulFunctionCall","src":"8561:60:17"},"variables":[{"name":"success","nativeSrc":"8550:7:17","nodeType":"YulTypedName","src":"8550:7:17","type":""}]},{"body":{"nativeSrc":"8682:157:17","nodeType":"YulBlock","src":"8682:157:17","statements":[{"nativeSrc":"8700:22:17","nodeType":"YulVariableDeclaration","src":"8700:22:17","value":{"arguments":[{"kind":"number","nativeSrc":"8717:4:17","nodeType":"YulLiteral","src":"8717:4:17","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"8711:5:17","nodeType":"YulIdentifier","src":"8711:5:17"},"nativeSrc":"8711:11:17","nodeType":"YulFunctionCall","src":"8711:11:17"},"variables":[{"name":"ptr","nativeSrc":"8704:3:17","nodeType":"YulTypedName","src":"8704:3:17","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"8754:3:17","nodeType":"YulIdentifier","src":"8754:3:17"},{"kind":"number","nativeSrc":"8759:1:17","nodeType":"YulLiteral","src":"8759:1:17","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"8762:14:17","nodeType":"YulIdentifier","src":"8762:14:17"},"nativeSrc":"8762:16:17","nodeType":"YulFunctionCall","src":"8762:16:17"}],"functionName":{"name":"returndatacopy","nativeSrc":"8739:14:17","nodeType":"YulIdentifier","src":"8739:14:17"},"nativeSrc":"8739:40:17","nodeType":"YulFunctionCall","src":"8739:40:17"},"nativeSrc":"8739:40:17","nodeType":"YulExpressionStatement","src":"8739:40:17"},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"8803:3:17","nodeType":"YulIdentifier","src":"8803:3:17"},{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"8808:14:17","nodeType":"YulIdentifier","src":"8808:14:17"},"nativeSrc":"8808:16:17","nodeType":"YulFunctionCall","src":"8808:16:17"}],"functionName":{"name":"revert","nativeSrc":"8796:6:17","nodeType":"YulIdentifier","src":"8796:6:17"},"nativeSrc":"8796:29:17","nodeType":"YulFunctionCall","src":"8796:29:17"},"nativeSrc":"8796:29:17","nodeType":"YulExpressionStatement","src":"8796:29:17"}]},"condition":{"arguments":[{"name":"success","nativeSrc":"8673:7:17","nodeType":"YulIdentifier","src":"8673:7:17"}],"functionName":{"name":"iszero","nativeSrc":"8666:6:17","nodeType":"YulIdentifier","src":"8666:6:17"},"nativeSrc":"8666:15:17","nodeType":"YulFunctionCall","src":"8666:15:17"},"nativeSrc":"8663:176:17","nodeType":"YulIf","src":"8663:176:17"},{"nativeSrc":"8852:30:17","nodeType":"YulAssignment","src":"8852:30:17","value":{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"8866:14:17","nodeType":"YulIdentifier","src":"8866:14:17"},"nativeSrc":"8866:16:17","nodeType":"YulFunctionCall","src":"8866:16:17"},"variableNames":[{"name":"returnSize","nativeSrc":"8852:10:17","nodeType":"YulIdentifier","src":"8852:10:17"}]},{"nativeSrc":"8895:23:17","nodeType":"YulAssignment","src":"8895:23:17","value":{"arguments":[{"kind":"number","nativeSrc":"8916:1:17","nodeType":"YulLiteral","src":"8916:1:17","type":"","value":"0"}],"functionName":{"name":"mload","nativeSrc":"8910:5:17","nodeType":"YulIdentifier","src":"8910:5:17"},"nativeSrc":"8910:8:17","nodeType":"YulFunctionCall","src":"8910:8:17"},"variableNames":[{"name":"returnValue","nativeSrc":"8895:11:17","nodeType":"YulIdentifier","src":"8895:11:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2817,"isOffset":false,"isSlot":false,"src":"8587:4:17","valueSize":1},{"declaration":2817,"isOffset":false,"isSlot":false,"src":"8606:4:17","valueSize":1},{"declaration":2821,"isOffset":false,"isSlot":false,"src":"8852:10:17","valueSize":1},{"declaration":2824,"isOffset":false,"isSlot":false,"src":"8895:11:17","valueSize":1},{"declaration":2815,"isOffset":false,"isSlot":false,"src":"8573:5:17","valueSize":1}],"flags":["memory-safe"],"id":2826,"nodeType":"InlineAssembly","src":"8507:421:17"},{"condition":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2827,"name":"returnSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2821,"src":"8942:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8956:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8942:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2838,"name":"returnValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2824,"src":"8994:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":2839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9009:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8994:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8942:68:17","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":2832,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2815,"src":"8968:5:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2368","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$2368","typeString":"contract IERC20"}],"id":2831,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8960:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2830,"name":"address","nodeType":"ElementaryTypeName","src":"8960:7:17","typeDescriptions":{}}},"id":2833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8960:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8975:4:17","memberName":"code","nodeType":"MemberAccess","src":"8960:19:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8980:6:17","memberName":"length","nodeType":"MemberAccess","src":"8960:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8990:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8960:31:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2850,"nodeType":"IfStatement","src":"8938:146:17","trueBody":{"id":2849,"nodeType":"Block","src":"9012:72:17","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":2845,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2815,"src":"9066:5:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2368","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$2368","typeString":"contract IERC20"}],"id":2844,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9058:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2843,"name":"address","nodeType":"ElementaryTypeName","src":"9058:7:17","typeDescriptions":{}}},"id":2846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9058:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2842,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2442,"src":"9033:24:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9033:40:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2848,"nodeType":"RevertStatement","src":"9026:47:17"}]}}]},"documentation":{"id":2812,"nodeType":"StructuredDocumentation","src":"7879:486:17","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."},"id":2852,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturn","nameLocation":"8379:19:17","nodeType":"FunctionDefinition","parameters":{"id":2818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2815,"mutability":"mutable","name":"token","nameLocation":"8406:5:17","nodeType":"VariableDeclaration","scope":2852,"src":"8399:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2368","typeString":"contract IERC20"},"typeName":{"id":2814,"nodeType":"UserDefinedTypeName","pathNode":{"id":2813,"name":"IERC20","nameLocations":["8399:6:17"],"nodeType":"IdentifierPath","referencedDeclaration":2368,"src":"8399:6:17"},"referencedDeclaration":2368,"src":"8399:6:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2368","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":2817,"mutability":"mutable","name":"data","nameLocation":"8426:4:17","nodeType":"VariableDeclaration","scope":2852,"src":"8413:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2816,"name":"bytes","nodeType":"ElementaryTypeName","src":"8413:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8398:33:17"},"returnParameters":{"id":2819,"nodeType":"ParameterList","parameters":[],"src":"8440:0:17"},"scope":2894,"src":"8370:720:17","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2892,"nodeType":"Block","src":"9681:391:17","statements":[{"assignments":[2864],"declarations":[{"constant":false,"id":2864,"mutability":"mutable","name":"success","nameLocation":"9696:7:17","nodeType":"VariableDeclaration","scope":2892,"src":"9691:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2863,"name":"bool","nodeType":"ElementaryTypeName","src":"9691:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2865,"nodeType":"VariableDeclarationStatement","src":"9691:12:17"},{"assignments":[2867],"declarations":[{"constant":false,"id":2867,"mutability":"mutable","name":"returnSize","nameLocation":"9721:10:17","nodeType":"VariableDeclaration","scope":2892,"src":"9713:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2866,"name":"uint256","nodeType":"ElementaryTypeName","src":"9713:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2868,"nodeType":"VariableDeclarationStatement","src":"9713:18:17"},{"assignments":[2870],"declarations":[{"constant":false,"id":2870,"mutability":"mutable","name":"returnValue","nameLocation":"9749:11:17","nodeType":"VariableDeclaration","scope":2892,"src":"9741:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2869,"name":"uint256","nodeType":"ElementaryTypeName","src":"9741:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2871,"nodeType":"VariableDeclarationStatement","src":"9741:19:17"},{"AST":{"nativeSrc":"9795:174:17","nodeType":"YulBlock","src":"9795:174:17","statements":[{"nativeSrc":"9809:71:17","nodeType":"YulAssignment","src":"9809:71:17","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"9825:3:17","nodeType":"YulIdentifier","src":"9825:3:17"},"nativeSrc":"9825:5:17","nodeType":"YulFunctionCall","src":"9825:5:17"},{"name":"token","nativeSrc":"9832:5:17","nodeType":"YulIdentifier","src":"9832:5:17"},{"kind":"number","nativeSrc":"9839:1:17","nodeType":"YulLiteral","src":"9839:1:17","type":"","value":"0"},{"arguments":[{"name":"data","nativeSrc":"9846:4:17","nodeType":"YulIdentifier","src":"9846:4:17"},{"kind":"number","nativeSrc":"9852:4:17","nodeType":"YulLiteral","src":"9852:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"9842:3:17","nodeType":"YulIdentifier","src":"9842:3:17"},"nativeSrc":"9842:15:17","nodeType":"YulFunctionCall","src":"9842:15:17"},{"arguments":[{"name":"data","nativeSrc":"9865:4:17","nodeType":"YulIdentifier","src":"9865:4:17"}],"functionName":{"name":"mload","nativeSrc":"9859:5:17","nodeType":"YulIdentifier","src":"9859:5:17"},"nativeSrc":"9859:11:17","nodeType":"YulFunctionCall","src":"9859:11:17"},{"kind":"number","nativeSrc":"9872:1:17","nodeType":"YulLiteral","src":"9872:1:17","type":"","value":"0"},{"kind":"number","nativeSrc":"9875:4:17","nodeType":"YulLiteral","src":"9875:4:17","type":"","value":"0x20"}],"functionName":{"name":"call","nativeSrc":"9820:4:17","nodeType":"YulIdentifier","src":"9820:4:17"},"nativeSrc":"9820:60:17","nodeType":"YulFunctionCall","src":"9820:60:17"},"variableNames":[{"name":"success","nativeSrc":"9809:7:17","nodeType":"YulIdentifier","src":"9809:7:17"}]},{"nativeSrc":"9893:30:17","nodeType":"YulAssignment","src":"9893:30:17","value":{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"9907:14:17","nodeType":"YulIdentifier","src":"9907:14:17"},"nativeSrc":"9907:16:17","nodeType":"YulFunctionCall","src":"9907:16:17"},"variableNames":[{"name":"returnSize","nativeSrc":"9893:10:17","nodeType":"YulIdentifier","src":"9893:10:17"}]},{"nativeSrc":"9936:23:17","nodeType":"YulAssignment","src":"9936:23:17","value":{"arguments":[{"kind":"number","nativeSrc":"9957:1:17","nodeType":"YulLiteral","src":"9957:1:17","type":"","value":"0"}],"functionName":{"name":"mload","nativeSrc":"9951:5:17","nodeType":"YulIdentifier","src":"9951:5:17"},"nativeSrc":"9951:8:17","nodeType":"YulFunctionCall","src":"9951:8:17"},"variableNames":[{"name":"returnValue","nativeSrc":"9936:11:17","nodeType":"YulIdentifier","src":"9936:11:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2858,"isOffset":false,"isSlot":false,"src":"9846:4:17","valueSize":1},{"declaration":2858,"isOffset":false,"isSlot":false,"src":"9865:4:17","valueSize":1},{"declaration":2867,"isOffset":false,"isSlot":false,"src":"9893:10:17","valueSize":1},{"declaration":2870,"isOffset":false,"isSlot":false,"src":"9936:11:17","valueSize":1},{"declaration":2864,"isOffset":false,"isSlot":false,"src":"9809:7:17","valueSize":1},{"declaration":2856,"isOffset":false,"isSlot":false,"src":"9832:5:17","valueSize":1}],"flags":["memory-safe"],"id":2872,"nodeType":"InlineAssembly","src":"9770:199:17"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2873,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2864,"src":"9985:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2874,"name":"returnSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2867,"src":"9997:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10011:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9997:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2885,"name":"returnValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2870,"src":"10048:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":2886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10063:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10048:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9997:67:17","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":2879,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2856,"src":"10023:5:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2368","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$2368","typeString":"contract IERC20"}],"id":2878,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10015:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2877,"name":"address","nodeType":"ElementaryTypeName","src":"10015:7:17","typeDescriptions":{}}},"id":2880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10015:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10030:4:17","memberName":"code","nodeType":"MemberAccess","src":"10015:19:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10035:6:17","memberName":"length","nodeType":"MemberAccess","src":"10015:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10044:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10015:30:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2889,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9996:69:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9985:80:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2862,"id":2891,"nodeType":"Return","src":"9978:87:17"}]},"documentation":{"id":2853,"nodeType":"StructuredDocumentation","src":"9096:491:17","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."},"id":2893,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturnBool","nameLocation":"9601:23:17","nodeType":"FunctionDefinition","parameters":{"id":2859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2856,"mutability":"mutable","name":"token","nameLocation":"9632:5:17","nodeType":"VariableDeclaration","scope":2893,"src":"9625:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2368","typeString":"contract IERC20"},"typeName":{"id":2855,"nodeType":"UserDefinedTypeName","pathNode":{"id":2854,"name":"IERC20","nameLocations":["9625:6:17"],"nodeType":"IdentifierPath","referencedDeclaration":2368,"src":"9625:6:17"},"referencedDeclaration":2368,"src":"9625:6:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2368","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":2858,"mutability":"mutable","name":"data","nameLocation":"9652:4:17","nodeType":"VariableDeclaration","scope":2893,"src":"9639:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2857,"name":"bytes","nodeType":"ElementaryTypeName","src":"9639:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9624:33:17"},"returnParameters":{"id":2862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2861,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2893,"src":"9675:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2860,"name":"bool","nodeType":"ElementaryTypeName","src":"9675:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9674:6:17"},"scope":2894,"src":"9592:480:17","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":2895,"src":"698:9376:17","usedErrors":[2442,2451],"usedEvents":[]}],"src":"115:9960:17"},"id":17},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[2946]},"id":2947,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2896,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:18"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":2897,"nodeType":"StructuredDocumentation","src":"125:489:18","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":2946,"linearizedBaseContracts":[2946],"name":"Panic","nameLocation":"665:5:18","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":2898,"nodeType":"StructuredDocumentation","src":"677:36:18","text":"@dev generic / unspecified error"},"id":2901,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:18","nodeType":"VariableDeclaration","scope":2946,"src":"718:40:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2899,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":2900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":2902,"nodeType":"StructuredDocumentation","src":"764:37:18","text":"@dev used by the assert() builtin"},"id":2905,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:18","nodeType":"VariableDeclaration","scope":2946,"src":"806:39:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2903,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":2904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":2906,"nodeType":"StructuredDocumentation","src":"851:41:18","text":"@dev arithmetic underflow or overflow"},"id":2909,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:18","nodeType":"VariableDeclaration","scope":2946,"src":"897:47:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2907,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":2908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:18","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":2910,"nodeType":"StructuredDocumentation","src":"950:35:18","text":"@dev division or modulo by zero"},"id":2913,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:18","nodeType":"VariableDeclaration","scope":2946,"src":"990:49:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2911,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":2912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:18","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":2914,"nodeType":"StructuredDocumentation","src":"1045:30:18","text":"@dev enum conversion error"},"id":2917,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:18","nodeType":"VariableDeclaration","scope":2946,"src":"1080:54:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2915,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":2916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:18","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":2918,"nodeType":"StructuredDocumentation","src":"1140:36:18","text":"@dev invalid encoding in storage"},"id":2921,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:18","nodeType":"VariableDeclaration","scope":2946,"src":"1181:55:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2919,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":2920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:18","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":2922,"nodeType":"StructuredDocumentation","src":"1242:24:18","text":"@dev empty array pop"},"id":2925,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:18","nodeType":"VariableDeclaration","scope":2946,"src":"1271:48:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2923,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":2924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:18","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":2926,"nodeType":"StructuredDocumentation","src":"1325:35:18","text":"@dev array out of bounds access"},"id":2929,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:18","nodeType":"VariableDeclaration","scope":2946,"src":"1365:52:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2927,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":2928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:18","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":2930,"nodeType":"StructuredDocumentation","src":"1423:65:18","text":"@dev resource error (too large allocation or too large array)"},"id":2933,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:18","nodeType":"VariableDeclaration","scope":2946,"src":"1493:47:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2931,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":2932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:18","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":2934,"nodeType":"StructuredDocumentation","src":"1546:42:18","text":"@dev calling invalid internal function"},"id":2937,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:18","nodeType":"VariableDeclaration","scope":2946,"src":"1593:58:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2935,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":2936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:18","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":2944,"nodeType":"Block","src":"1819:151:18","statements":[{"AST":{"nativeSrc":"1854:110:18","nodeType":"YulBlock","src":"1854:110:18","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1875:4:18","nodeType":"YulLiteral","src":"1875:4:18","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1881:10:18","nodeType":"YulLiteral","src":"1881:10:18","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nativeSrc":"1868:6:18","nodeType":"YulIdentifier","src":"1868:6:18"},"nativeSrc":"1868:24:18","nodeType":"YulFunctionCall","src":"1868:24:18"},"nativeSrc":"1868:24:18","nodeType":"YulExpressionStatement","src":"1868:24:18"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1912:4:18","nodeType":"YulLiteral","src":"1912:4:18","type":"","value":"0x20"},{"name":"code","nativeSrc":"1918:4:18","nodeType":"YulIdentifier","src":"1918:4:18"}],"functionName":{"name":"mstore","nativeSrc":"1905:6:18","nodeType":"YulIdentifier","src":"1905:6:18"},"nativeSrc":"1905:18:18","nodeType":"YulFunctionCall","src":"1905:18:18"},"nativeSrc":"1905:18:18","nodeType":"YulExpressionStatement","src":"1905:18:18"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1943:4:18","nodeType":"YulLiteral","src":"1943:4:18","type":"","value":"0x1c"},{"kind":"number","nativeSrc":"1949:4:18","nodeType":"YulLiteral","src":"1949:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1936:6:18","nodeType":"YulIdentifier","src":"1936:6:18"},"nativeSrc":"1936:18:18","nodeType":"YulFunctionCall","src":"1936:18:18"},"nativeSrc":"1936:18:18","nodeType":"YulExpressionStatement","src":"1936:18:18"}]},"evmVersion":"paris","externalReferences":[{"declaration":2940,"isOffset":false,"isSlot":false,"src":"1918:4:18","valueSize":1}],"flags":["memory-safe"],"id":2943,"nodeType":"InlineAssembly","src":"1829:135:18"}]},"documentation":{"id":2938,"nodeType":"StructuredDocumentation","src":"1658:113:18","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":2945,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:18","nodeType":"FunctionDefinition","parameters":{"id":2941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2940,"mutability":"mutable","name":"code","nameLocation":"1799:4:18","nodeType":"VariableDeclaration","scope":2945,"src":"1791:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2939,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:18"},"returnParameters":{"id":2942,"nodeType":"ParameterList","parameters":[],"src":"1819:0:18"},"scope":2946,"src":"1776:194:18","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2947,"src":"657:1315:18","usedErrors":[],"usedEvents":[]}],"src":"99:1874:18"},"id":18},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[6415],"SafeCast":[8180],"SignedMath":[8324],"Strings":[4348]},"id":4349,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2948,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:19"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":2950,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4349,"sourceUnit":6416,"src":"127:37:19","symbolAliases":[{"foreign":{"id":2949,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6415,"src":"135:4:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./math/SafeCast.sol","id":2952,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4349,"sourceUnit":8181,"src":"165:45:19","symbolAliases":[{"foreign":{"id":2951,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8180,"src":"173:8:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":2954,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4349,"sourceUnit":8325,"src":"211:49:19","symbolAliases":[{"foreign":{"id":2953,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8324,"src":"219:10:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":2955,"nodeType":"StructuredDocumentation","src":"262:34:19","text":" @dev String operations."},"fullyImplemented":true,"id":4348,"linearizedBaseContracts":[4348],"name":"Strings","nameLocation":"305:7:19","nodeType":"ContractDefinition","nodes":[{"global":false,"id":2957,"libraryName":{"id":2956,"name":"SafeCast","nameLocations":["325:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":8180,"src":"325:8:19"},"nodeType":"UsingForDirective","src":"319:21:19"},{"constant":true,"id":2960,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"371:10:19","nodeType":"VariableDeclaration","scope":4348,"src":"346:56:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":2958,"name":"bytes16","nodeType":"ElementaryTypeName","src":"346:7:19","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":2959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"384:18:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":2963,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"431:14:19","nodeType":"VariableDeclaration","scope":4348,"src":"408:42:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2961,"name":"uint8","nodeType":"ElementaryTypeName","src":"408:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":2962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"448:2:19","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"constant":true,"id":2999,"mutability":"constant","name":"SPECIAL_CHARS_LOOKUP","nameLocation":"481:20:19","nodeType":"VariableDeclaration","scope":4348,"src":"456:302:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2964,"name":"uint256","nodeType":"ElementaryTypeName","src":"456:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"},"id":2998,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"},"id":2993,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"},"id":2988,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"},"id":2983,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"},"id":2978,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"},"id":2973,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":2967,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"513:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783038","id":2966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"518:4:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"513:9:19","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":2968,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"512:11:19","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"},"id":2971,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"552:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783039","id":2970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"557:4:19","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"552:9:19","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}}],"id":2972,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"551:11:19","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}},"src":"512:50:19","typeDescriptions":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"},"id":2976,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"585:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783061","id":2975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"590:4:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"585:9:19","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}}],"id":2977,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"584:11:19","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}},"src":"512:83:19","typeDescriptions":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"},"id":2981,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"622:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783063","id":2980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"627:4:19","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"622:9:19","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}}],"id":2982,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"621:11:19","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}},"src":"512:120:19","typeDescriptions":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"},"id":2986,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"661:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783064","id":2985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"666:4:19","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"661:9:19","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}}],"id":2987,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"660:11:19","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}},"src":"512:159:19","typeDescriptions":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"},"id":2991,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"706:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783232","id":2990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"711:4:19","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"706:9:19","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}}],"id":2992,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"705:11:19","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}},"src":"512:204:19","typeDescriptions":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"},"id":2996,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"748:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783563","id":2995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"753:4:19","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"748:9:19","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}}],"id":2997,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"747:11:19","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}},"src":"512:246:19","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"}},"visibility":"private"},{"documentation":{"id":3000,"nodeType":"StructuredDocumentation","src":"778:81:19","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":3006,"name":"StringsInsufficientHexLength","nameLocation":"870:28:19","nodeType":"ErrorDefinition","parameters":{"id":3005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3002,"mutability":"mutable","name":"value","nameLocation":"907:5:19","nodeType":"VariableDeclaration","scope":3006,"src":"899:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3001,"name":"uint256","nodeType":"ElementaryTypeName","src":"899:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3004,"mutability":"mutable","name":"length","nameLocation":"922:6:19","nodeType":"VariableDeclaration","scope":3006,"src":"914:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3003,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"898:31:19"},"src":"864:66:19"},{"documentation":{"id":3007,"nodeType":"StructuredDocumentation","src":"936:108:19","text":" @dev The string being parsed contains characters that are not in scope of the given base."},"errorSelector":"94e2737e","id":3009,"name":"StringsInvalidChar","nameLocation":"1055:18:19","nodeType":"ErrorDefinition","parameters":{"id":3008,"nodeType":"ParameterList","parameters":[],"src":"1073:2:19"},"src":"1049:27:19"},{"documentation":{"id":3010,"nodeType":"StructuredDocumentation","src":"1082:84:19","text":" @dev The string being parsed is not a properly formatted address."},"errorSelector":"1d15ae44","id":3012,"name":"StringsInvalidAddressFormat","nameLocation":"1177:27:19","nodeType":"ErrorDefinition","parameters":{"id":3011,"nodeType":"ParameterList","parameters":[],"src":"1204:2:19"},"src":"1171:36:19"},{"body":{"id":3059,"nodeType":"Block","src":"1379:563:19","statements":[{"id":3058,"nodeType":"UncheckedBlock","src":"1389:547:19","statements":[{"assignments":[3021],"declarations":[{"constant":false,"id":3021,"mutability":"mutable","name":"length","nameLocation":"1421:6:19","nodeType":"VariableDeclaration","scope":3058,"src":"1413:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3020,"name":"uint256","nodeType":"ElementaryTypeName","src":"1413:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3028,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3024,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3015,"src":"1441:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3022,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6415,"src":"1430:4:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6415_$","typeString":"type(library Math)"}},"id":3023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1435:5:19","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":6247,"src":"1430:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1430:17:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1450:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1430:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1413:38:19"},{"assignments":[3030],"declarations":[{"constant":false,"id":3030,"mutability":"mutable","name":"buffer","nameLocation":"1479:6:19","nodeType":"VariableDeclaration","scope":3058,"src":"1465:20:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3029,"name":"string","nodeType":"ElementaryTypeName","src":"1465:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":3035,"initialValue":{"arguments":[{"id":3033,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3021,"src":"1499:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3032,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1488:10:19","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":3031,"name":"string","nodeType":"ElementaryTypeName","src":"1492:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":3034,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1488:18:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1465:41:19"},{"assignments":[3037],"declarations":[{"constant":false,"id":3037,"mutability":"mutable","name":"ptr","nameLocation":"1528:3:19","nodeType":"VariableDeclaration","scope":3058,"src":"1520:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3036,"name":"uint256","nodeType":"ElementaryTypeName","src":"1520:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3038,"nodeType":"VariableDeclarationStatement","src":"1520:11:19"},{"AST":{"nativeSrc":"1570:69:19","nodeType":"YulBlock","src":"1570:69:19","statements":[{"nativeSrc":"1588:37:19","nodeType":"YulAssignment","src":"1588:37:19","value":{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"1603:6:19","nodeType":"YulIdentifier","src":"1603:6:19"},{"kind":"number","nativeSrc":"1611:4:19","nodeType":"YulLiteral","src":"1611:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1599:3:19","nodeType":"YulIdentifier","src":"1599:3:19"},"nativeSrc":"1599:17:19","nodeType":"YulFunctionCall","src":"1599:17:19"},{"name":"length","nativeSrc":"1618:6:19","nodeType":"YulIdentifier","src":"1618:6:19"}],"functionName":{"name":"add","nativeSrc":"1595:3:19","nodeType":"YulIdentifier","src":"1595:3:19"},"nativeSrc":"1595:30:19","nodeType":"YulFunctionCall","src":"1595:30:19"},"variableNames":[{"name":"ptr","nativeSrc":"1588:3:19","nodeType":"YulIdentifier","src":"1588:3:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3030,"isOffset":false,"isSlot":false,"src":"1603:6:19","valueSize":1},{"declaration":3021,"isOffset":false,"isSlot":false,"src":"1618:6:19","valueSize":1},{"declaration":3037,"isOffset":false,"isSlot":false,"src":"1588:3:19","valueSize":1}],"flags":["memory-safe"],"id":3039,"nodeType":"InlineAssembly","src":"1545:94:19"},{"body":{"id":3054,"nodeType":"Block","src":"1665:234:19","statements":[{"expression":{"id":3042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1683:5:19","subExpression":{"id":3041,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3037,"src":"1683:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3043,"nodeType":"ExpressionStatement","src":"1683:5:19"},{"AST":{"nativeSrc":"1731:86:19","nodeType":"YulBlock","src":"1731:86:19","statements":[{"expression":{"arguments":[{"name":"ptr","nativeSrc":"1761:3:19","nodeType":"YulIdentifier","src":"1761:3:19"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1775:5:19","nodeType":"YulIdentifier","src":"1775:5:19"},{"kind":"number","nativeSrc":"1782:2:19","nodeType":"YulLiteral","src":"1782:2:19","type":"","value":"10"}],"functionName":{"name":"mod","nativeSrc":"1771:3:19","nodeType":"YulIdentifier","src":"1771:3:19"},"nativeSrc":"1771:14:19","nodeType":"YulFunctionCall","src":"1771:14:19"},{"name":"HEX_DIGITS","nativeSrc":"1787:10:19","nodeType":"YulIdentifier","src":"1787:10:19"}],"functionName":{"name":"byte","nativeSrc":"1766:4:19","nodeType":"YulIdentifier","src":"1766:4:19"},"nativeSrc":"1766:32:19","nodeType":"YulFunctionCall","src":"1766:32:19"}],"functionName":{"name":"mstore8","nativeSrc":"1753:7:19","nodeType":"YulIdentifier","src":"1753:7:19"},"nativeSrc":"1753:46:19","nodeType":"YulFunctionCall","src":"1753:46:19"},"nativeSrc":"1753:46:19","nodeType":"YulExpressionStatement","src":"1753:46:19"}]},"evmVersion":"paris","externalReferences":[{"declaration":2960,"isOffset":false,"isSlot":false,"src":"1787:10:19","valueSize":1},{"declaration":3037,"isOffset":false,"isSlot":false,"src":"1761:3:19","valueSize":1},{"declaration":3015,"isOffset":false,"isSlot":false,"src":"1775:5:19","valueSize":1}],"flags":["memory-safe"],"id":3044,"nodeType":"InlineAssembly","src":"1706:111:19"},{"expression":{"id":3047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3045,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3015,"src":"1834:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":3046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1843:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1834:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3048,"nodeType":"ExpressionStatement","src":"1834:11:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3049,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3015,"src":"1867:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1876:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1867:10:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3053,"nodeType":"IfStatement","src":"1863:21:19","trueBody":{"id":3052,"nodeType":"Break","src":"1879:5:19"}}]},"condition":{"hexValue":"74727565","id":3040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1659:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":3055,"nodeType":"WhileStatement","src":"1652:247:19"},{"expression":{"id":3056,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3030,"src":"1919:6:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3019,"id":3057,"nodeType":"Return","src":"1912:13:19"}]}]},"documentation":{"id":3013,"nodeType":"StructuredDocumentation","src":"1213:90:19","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":3060,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1317:8:19","nodeType":"FunctionDefinition","parameters":{"id":3016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3015,"mutability":"mutable","name":"value","nameLocation":"1334:5:19","nodeType":"VariableDeclaration","scope":3060,"src":"1326:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3014,"name":"uint256","nodeType":"ElementaryTypeName","src":"1326:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1325:15:19"},"returnParameters":{"id":3019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3018,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3060,"src":"1364:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3017,"name":"string","nodeType":"ElementaryTypeName","src":"1364:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1363:15:19"},"scope":4348,"src":"1308:634:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3085,"nodeType":"Block","src":"2118:92:19","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3071,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3063,"src":"2149:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":3072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2157:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2149:9:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":3075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2167:2:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":3076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2149:20:19","trueExpression":{"hexValue":"2d","id":3074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2161:3:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":3080,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3063,"src":"2195:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":3078,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8324,"src":"2180:10:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$8324_$","typeString":"type(library SignedMath)"}},"id":3079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2191:3:19","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":8323,"src":"2180:14:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":3081,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2180:21:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3077,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3060,"src":"2171:8:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":3082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2171:31:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":3069,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2135:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3068,"name":"string","nodeType":"ElementaryTypeName","src":"2135:6:19","typeDescriptions":{}}},"id":3070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2142:6:19","memberName":"concat","nodeType":"MemberAccess","src":"2135:13:19","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":3083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2135:68:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3067,"id":3084,"nodeType":"Return","src":"2128:75:19"}]},"documentation":{"id":3061,"nodeType":"StructuredDocumentation","src":"1948:89:19","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":3086,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"2051:14:19","nodeType":"FunctionDefinition","parameters":{"id":3064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3063,"mutability":"mutable","name":"value","nameLocation":"2073:5:19","nodeType":"VariableDeclaration","scope":3086,"src":"2066:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3062,"name":"int256","nodeType":"ElementaryTypeName","src":"2066:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"2065:14:19"},"returnParameters":{"id":3067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3066,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3086,"src":"2103:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3065,"name":"string","nodeType":"ElementaryTypeName","src":"2103:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2102:15:19"},"scope":4348,"src":"2042:168:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3105,"nodeType":"Block","src":"2389:100:19","statements":[{"id":3104,"nodeType":"UncheckedBlock","src":"2399:84:19","statements":[{"expression":{"arguments":[{"id":3095,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3089,"src":"2442:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3098,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3089,"src":"2461:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3096,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6415,"src":"2449:4:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6415_$","typeString":"type(library Math)"}},"id":3097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2454:6:19","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":6358,"src":"2449:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2449:18:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2470:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2449:22:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3094,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[3106,3189,3209],"referencedDeclaration":3189,"src":"2430:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":3102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2430:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3093,"id":3103,"nodeType":"Return","src":"2423:49:19"}]}]},"documentation":{"id":3087,"nodeType":"StructuredDocumentation","src":"2216:94:19","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":3106,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2324:11:19","nodeType":"FunctionDefinition","parameters":{"id":3090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3089,"mutability":"mutable","name":"value","nameLocation":"2344:5:19","nodeType":"VariableDeclaration","scope":3106,"src":"2336:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3088,"name":"uint256","nodeType":"ElementaryTypeName","src":"2336:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2335:15:19"},"returnParameters":{"id":3093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3092,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3106,"src":"2374:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3091,"name":"string","nodeType":"ElementaryTypeName","src":"2374:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2373:15:19"},"scope":4348,"src":"2315:174:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3188,"nodeType":"Block","src":"2702:435:19","statements":[{"assignments":[3117],"declarations":[{"constant":false,"id":3117,"mutability":"mutable","name":"localValue","nameLocation":"2720:10:19","nodeType":"VariableDeclaration","scope":3188,"src":"2712:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3116,"name":"uint256","nodeType":"ElementaryTypeName","src":"2712:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3119,"initialValue":{"id":3118,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3109,"src":"2733:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2712:26:19"},{"assignments":[3121],"declarations":[{"constant":false,"id":3121,"mutability":"mutable","name":"buffer","nameLocation":"2761:6:19","nodeType":"VariableDeclaration","scope":3188,"src":"2748:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3120,"name":"bytes","nodeType":"ElementaryTypeName","src":"2748:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3130,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2780:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3125,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3111,"src":"2784:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2780:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":3127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2793:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2780:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3123,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2770:9:19","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":3122,"name":"bytes","nodeType":"ElementaryTypeName","src":"2774:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":3129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2770:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2748:47:19"},{"expression":{"id":3135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3131,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3121,"src":"2805:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3133,"indexExpression":{"hexValue":"30","id":3132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2812:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2805:9:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2817:3:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2805:15:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3136,"nodeType":"ExpressionStatement","src":"2805:15:19"},{"expression":{"id":3141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3137,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3121,"src":"2830:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3139,"indexExpression":{"hexValue":"31","id":3138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2837:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2830:9:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":3140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2842:3:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2830:15:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3142,"nodeType":"ExpressionStatement","src":"2830:15:19"},{"body":{"id":3171,"nodeType":"Block","src":"2900:95:19","statements":[{"expression":{"id":3165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3157,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3121,"src":"2914:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3159,"indexExpression":{"id":3158,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3144,"src":"2921:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2914:9:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":3160,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2960,"src":"2926:10:19","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":3164,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3161,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3117,"src":"2937:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":3162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2950:3:19","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2937:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2926:28:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2914:40:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3166,"nodeType":"ExpressionStatement","src":"2914:40:19"},{"expression":{"id":3169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3167,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3117,"src":"2968:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2983:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2968:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3170,"nodeType":"ExpressionStatement","src":"2968:16:19"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3151,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3144,"src":"2888:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":3152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2892:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2888:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3172,"initializationExpression":{"assignments":[3144],"declarations":[{"constant":false,"id":3144,"mutability":"mutable","name":"i","nameLocation":"2868:1:19","nodeType":"VariableDeclaration","scope":3172,"src":"2860:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3143,"name":"uint256","nodeType":"ElementaryTypeName","src":"2860:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3150,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2872:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3146,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3111,"src":"2876:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2872:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2885:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2872:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2860:26:19"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":3155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2895:3:19","subExpression":{"id":3154,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3144,"src":"2897:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3156,"nodeType":"ExpressionStatement","src":"2895:3:19"},"nodeType":"ForStatement","src":"2855:140:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3173,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3117,"src":"3008:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3022:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3008:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3182,"nodeType":"IfStatement","src":"3004:96:19","trueBody":{"id":3181,"nodeType":"Block","src":"3025:75:19","statements":[{"errorCall":{"arguments":[{"id":3177,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3109,"src":"3075:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3178,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3111,"src":"3082:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3176,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3006,"src":"3046:28:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":3179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3046:43:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3180,"nodeType":"RevertStatement","src":"3039:50:19"}]}},{"expression":{"arguments":[{"id":3185,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3121,"src":"3123:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3184,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3116:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3183,"name":"string","nodeType":"ElementaryTypeName","src":"3116:6:19","typeDescriptions":{}}},"id":3186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3116:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3115,"id":3187,"nodeType":"Return","src":"3109:21:19"}]},"documentation":{"id":3107,"nodeType":"StructuredDocumentation","src":"2495:112:19","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":3189,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2621:11:19","nodeType":"FunctionDefinition","parameters":{"id":3112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3109,"mutability":"mutable","name":"value","nameLocation":"2641:5:19","nodeType":"VariableDeclaration","scope":3189,"src":"2633:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3108,"name":"uint256","nodeType":"ElementaryTypeName","src":"2633:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3111,"mutability":"mutable","name":"length","nameLocation":"2656:6:19","nodeType":"VariableDeclaration","scope":3189,"src":"2648:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3110,"name":"uint256","nodeType":"ElementaryTypeName","src":"2648:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2632:31:19"},"returnParameters":{"id":3115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3114,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3189,"src":"2687:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3113,"name":"string","nodeType":"ElementaryTypeName","src":"2687:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2686:15:19"},"scope":4348,"src":"2612:525:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3208,"nodeType":"Block","src":"3369:75:19","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":3202,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"3414:4:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3201,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3406:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3200,"name":"uint160","nodeType":"ElementaryTypeName","src":"3406:7:19","typeDescriptions":{}}},"id":3203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3406:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3199,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3398:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3198,"name":"uint256","nodeType":"ElementaryTypeName","src":"3398:7:19","typeDescriptions":{}}},"id":3204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3398:22:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3205,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2963,"src":"3422:14:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":3197,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[3106,3189,3209],"referencedDeclaration":3189,"src":"3386:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":3206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3386:51:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3196,"id":3207,"nodeType":"Return","src":"3379:58:19"}]},"documentation":{"id":3190,"nodeType":"StructuredDocumentation","src":"3143:148:19","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":3209,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"3305:11:19","nodeType":"FunctionDefinition","parameters":{"id":3193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3192,"mutability":"mutable","name":"addr","nameLocation":"3325:4:19","nodeType":"VariableDeclaration","scope":3209,"src":"3317:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3191,"name":"address","nodeType":"ElementaryTypeName","src":"3317:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3316:14:19"},"returnParameters":{"id":3196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3195,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3209,"src":"3354:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3194,"name":"string","nodeType":"ElementaryTypeName","src":"3354:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3353:15:19"},"scope":4348,"src":"3296:148:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3273,"nodeType":"Block","src":"3701:642:19","statements":[{"assignments":[3218],"declarations":[{"constant":false,"id":3218,"mutability":"mutable","name":"buffer","nameLocation":"3724:6:19","nodeType":"VariableDeclaration","scope":3273,"src":"3711:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3217,"name":"bytes","nodeType":"ElementaryTypeName","src":"3711:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3225,"initialValue":{"arguments":[{"arguments":[{"id":3222,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3212,"src":"3751:4:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3221,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[3106,3189,3209],"referencedDeclaration":3209,"src":"3739:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":3223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3739:17:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3220,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3733:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3219,"name":"bytes","nodeType":"ElementaryTypeName","src":"3733:5:19","typeDescriptions":{}}},"id":3224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3733:24:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3711:46:19"},{"assignments":[3227],"declarations":[{"constant":false,"id":3227,"mutability":"mutable","name":"hashValue","nameLocation":"3850:9:19","nodeType":"VariableDeclaration","scope":3273,"src":"3842:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3226,"name":"uint256","nodeType":"ElementaryTypeName","src":"3842:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3228,"nodeType":"VariableDeclarationStatement","src":"3842:17:19"},{"AST":{"nativeSrc":"3894:78:19","nodeType":"YulBlock","src":"3894:78:19","statements":[{"nativeSrc":"3908:54:19","nodeType":"YulAssignment","src":"3908:54:19","value":{"arguments":[{"kind":"number","nativeSrc":"3925:2:19","nodeType":"YulLiteral","src":"3925:2:19","type":"","value":"96"},{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"3943:6:19","nodeType":"YulIdentifier","src":"3943:6:19"},{"kind":"number","nativeSrc":"3951:4:19","nodeType":"YulLiteral","src":"3951:4:19","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"3939:3:19","nodeType":"YulIdentifier","src":"3939:3:19"},"nativeSrc":"3939:17:19","nodeType":"YulFunctionCall","src":"3939:17:19"},{"kind":"number","nativeSrc":"3958:2:19","nodeType":"YulLiteral","src":"3958:2:19","type":"","value":"40"}],"functionName":{"name":"keccak256","nativeSrc":"3929:9:19","nodeType":"YulIdentifier","src":"3929:9:19"},"nativeSrc":"3929:32:19","nodeType":"YulFunctionCall","src":"3929:32:19"}],"functionName":{"name":"shr","nativeSrc":"3921:3:19","nodeType":"YulIdentifier","src":"3921:3:19"},"nativeSrc":"3921:41:19","nodeType":"YulFunctionCall","src":"3921:41:19"},"variableNames":[{"name":"hashValue","nativeSrc":"3908:9:19","nodeType":"YulIdentifier","src":"3908:9:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3218,"isOffset":false,"isSlot":false,"src":"3943:6:19","valueSize":1},{"declaration":3227,"isOffset":false,"isSlot":false,"src":"3908:9:19","valueSize":1}],"flags":["memory-safe"],"id":3229,"nodeType":"InlineAssembly","src":"3869:103:19"},{"body":{"id":3266,"nodeType":"Block","src":"4015:291:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3240,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3227,"src":"4121:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":3241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4133:3:19","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"4121:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"37","id":3243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4139:1:19","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"4121:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":3247,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3218,"src":"4150:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3249,"indexExpression":{"id":3248,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3231,"src":"4157:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4150:9:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3246,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4144:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3245,"name":"uint8","nodeType":"ElementaryTypeName","src":"4144:5:19","typeDescriptions":{}}},"id":3250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4144:16:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":3251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4163:2:19","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"4144:21:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4121:44:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3261,"nodeType":"IfStatement","src":"4117:150:19","trueBody":{"id":3260,"nodeType":"Block","src":"4167:100:19","statements":[{"expression":{"id":3258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3254,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3218,"src":"4235:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3256,"indexExpression":{"id":3255,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3231,"src":"4242:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4235:9:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"^=","rightHandSide":{"hexValue":"30783230","id":3257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4248:4:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"4235:17:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3259,"nodeType":"ExpressionStatement","src":"4235:17:19"}]}},{"expression":{"id":3264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3262,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3227,"src":"4280:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4294:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"4280:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3265,"nodeType":"ExpressionStatement","src":"4280:15:19"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3234,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3231,"src":"4003:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":3235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4007:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4003:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3267,"initializationExpression":{"assignments":[3231],"declarations":[{"constant":false,"id":3231,"mutability":"mutable","name":"i","nameLocation":"3995:1:19","nodeType":"VariableDeclaration","scope":3267,"src":"3987:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3230,"name":"uint256","nodeType":"ElementaryTypeName","src":"3987:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3233,"initialValue":{"hexValue":"3431","id":3232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3999:2:19","typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"nodeType":"VariableDeclarationStatement","src":"3987:14:19"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":3238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"4010:3:19","subExpression":{"id":3237,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3231,"src":"4012:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3239,"nodeType":"ExpressionStatement","src":"4010:3:19"},"nodeType":"ForStatement","src":"3982:324:19"},{"expression":{"arguments":[{"id":3270,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3218,"src":"4329:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3269,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4322:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3268,"name":"string","nodeType":"ElementaryTypeName","src":"4322:6:19","typeDescriptions":{}}},"id":3271,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4322:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3216,"id":3272,"nodeType":"Return","src":"4315:21:19"}]},"documentation":{"id":3210,"nodeType":"StructuredDocumentation","src":"3450:165:19","text":" @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."},"id":3274,"implemented":true,"kind":"function","modifiers":[],"name":"toChecksumHexString","nameLocation":"3629:19:19","nodeType":"FunctionDefinition","parameters":{"id":3213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3212,"mutability":"mutable","name":"addr","nameLocation":"3657:4:19","nodeType":"VariableDeclaration","scope":3274,"src":"3649:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3211,"name":"address","nodeType":"ElementaryTypeName","src":"3649:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3648:14:19"},"returnParameters":{"id":3216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3215,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3274,"src":"3686:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3214,"name":"string","nodeType":"ElementaryTypeName","src":"3686:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3685:15:19"},"scope":4348,"src":"3620:723:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3310,"nodeType":"Block","src":"4498:104:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3286,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3277,"src":"4521:1:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3285,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4515:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3284,"name":"bytes","nodeType":"ElementaryTypeName","src":"4515:5:19","typeDescriptions":{}}},"id":3287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4515:8:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4524:6:19","memberName":"length","nodeType":"MemberAccess","src":"4515:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":3291,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3279,"src":"4540:1:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3290,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4534:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3289,"name":"bytes","nodeType":"ElementaryTypeName","src":"4534:5:19","typeDescriptions":{}}},"id":3292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4534:8:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4543:6:19","memberName":"length","nodeType":"MemberAccess","src":"4534:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4515:34:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":3298,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3277,"src":"4569:1:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3297,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4563:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3296,"name":"bytes","nodeType":"ElementaryTypeName","src":"4563:5:19","typeDescriptions":{}}},"id":3299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4563:8:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3295,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4553:9:19","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4553:19:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":3304,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3279,"src":"4592:1:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3303,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4586:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3302,"name":"bytes","nodeType":"ElementaryTypeName","src":"4586:5:19","typeDescriptions":{}}},"id":3305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4586:8:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3301,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4576:9:19","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4576:19:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4553:42:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4515:80:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3283,"id":3309,"nodeType":"Return","src":"4508:87:19"}]},"documentation":{"id":3275,"nodeType":"StructuredDocumentation","src":"4349:66:19","text":" @dev Returns true if the two strings are equal."},"id":3311,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"4429:5:19","nodeType":"FunctionDefinition","parameters":{"id":3280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3277,"mutability":"mutable","name":"a","nameLocation":"4449:1:19","nodeType":"VariableDeclaration","scope":3311,"src":"4435:15:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3276,"name":"string","nodeType":"ElementaryTypeName","src":"4435:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3279,"mutability":"mutable","name":"b","nameLocation":"4466:1:19","nodeType":"VariableDeclaration","scope":3311,"src":"4452:15:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3278,"name":"string","nodeType":"ElementaryTypeName","src":"4452:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4434:34:19"},"returnParameters":{"id":3283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3282,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3311,"src":"4492:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3281,"name":"bool","nodeType":"ElementaryTypeName","src":"4492:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4491:6:19"},"scope":4348,"src":"4420:182:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3329,"nodeType":"Block","src":"4899:64:19","statements":[{"expression":{"arguments":[{"id":3320,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3314,"src":"4926:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4933:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3324,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3314,"src":"4942:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3323,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4936:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3322,"name":"bytes","nodeType":"ElementaryTypeName","src":"4936:5:19","typeDescriptions":{}}},"id":3325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4936:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4949:6:19","memberName":"length","nodeType":"MemberAccess","src":"4936:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3319,"name":"parseUint","nodeType":"Identifier","overloadedDeclarations":[3330,3361],"referencedDeclaration":3361,"src":"4916:9:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":3327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4916:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3318,"id":3328,"nodeType":"Return","src":"4909:47:19"}]},"documentation":{"id":3312,"nodeType":"StructuredDocumentation","src":"4608:214:19","text":" @dev Parse a decimal string and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":3330,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"4836:9:19","nodeType":"FunctionDefinition","parameters":{"id":3315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3314,"mutability":"mutable","name":"input","nameLocation":"4860:5:19","nodeType":"VariableDeclaration","scope":3330,"src":"4846:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3313,"name":"string","nodeType":"ElementaryTypeName","src":"4846:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4845:21:19"},"returnParameters":{"id":3318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3317,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3330,"src":"4890:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3316,"name":"uint256","nodeType":"ElementaryTypeName","src":"4890:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4889:9:19"},"scope":4348,"src":"4827:136:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3360,"nodeType":"Block","src":"5368:153:19","statements":[{"assignments":[3343,3345],"declarations":[{"constant":false,"id":3343,"mutability":"mutable","name":"success","nameLocation":"5384:7:19","nodeType":"VariableDeclaration","scope":3360,"src":"5379:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3342,"name":"bool","nodeType":"ElementaryTypeName","src":"5379:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3345,"mutability":"mutable","name":"value","nameLocation":"5401:5:19","nodeType":"VariableDeclaration","scope":3360,"src":"5393:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3344,"name":"uint256","nodeType":"ElementaryTypeName","src":"5393:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3351,"initialValue":{"arguments":[{"id":3347,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3333,"src":"5423:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3348,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3335,"src":"5430:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3349,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3337,"src":"5437:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3346,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[3382,3419],"referencedDeclaration":3419,"src":"5410:12:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5410:31:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"5378:63:19"},{"condition":{"id":3353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5455:8:19","subExpression":{"id":3352,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3343,"src":"5456:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3357,"nodeType":"IfStatement","src":"5451:41:19","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3354,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3009,"src":"5472:18:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5472:20:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3356,"nodeType":"RevertStatement","src":"5465:27:19"}},{"expression":{"id":3358,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3345,"src":"5509:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3341,"id":3359,"nodeType":"Return","src":"5502:12:19"}]},"documentation":{"id":3331,"nodeType":"StructuredDocumentation","src":"4969:294:19","text":" @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":3361,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"5277:9:19","nodeType":"FunctionDefinition","parameters":{"id":3338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3333,"mutability":"mutable","name":"input","nameLocation":"5301:5:19","nodeType":"VariableDeclaration","scope":3361,"src":"5287:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3332,"name":"string","nodeType":"ElementaryTypeName","src":"5287:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3335,"mutability":"mutable","name":"begin","nameLocation":"5316:5:19","nodeType":"VariableDeclaration","scope":3361,"src":"5308:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3334,"name":"uint256","nodeType":"ElementaryTypeName","src":"5308:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3337,"mutability":"mutable","name":"end","nameLocation":"5331:3:19","nodeType":"VariableDeclaration","scope":3361,"src":"5323:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3336,"name":"uint256","nodeType":"ElementaryTypeName","src":"5323:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5286:49:19"},"returnParameters":{"id":3341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3340,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3361,"src":"5359:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3339,"name":"uint256","nodeType":"ElementaryTypeName","src":"5359:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5358:9:19"},"scope":4348,"src":"5268:253:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3381,"nodeType":"Block","src":"5842:83:19","statements":[{"expression":{"arguments":[{"id":3372,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3364,"src":"5888:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5895:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3376,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3364,"src":"5904:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3375,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3374,"name":"bytes","nodeType":"ElementaryTypeName","src":"5898:5:19","typeDescriptions":{}}},"id":3377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5911:6:19","memberName":"length","nodeType":"MemberAccess","src":"5898:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3371,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3489,"src":"5859:28:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5859:59:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3370,"id":3380,"nodeType":"Return","src":"5852:66:19"}]},"documentation":{"id":3362,"nodeType":"StructuredDocumentation","src":"5527:215:19","text":" @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":3382,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"5756:12:19","nodeType":"FunctionDefinition","parameters":{"id":3365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3364,"mutability":"mutable","name":"input","nameLocation":"5783:5:19","nodeType":"VariableDeclaration","scope":3382,"src":"5769:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3363,"name":"string","nodeType":"ElementaryTypeName","src":"5769:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5768:21:19"},"returnParameters":{"id":3370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3367,"mutability":"mutable","name":"success","nameLocation":"5818:7:19","nodeType":"VariableDeclaration","scope":3382,"src":"5813:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3366,"name":"bool","nodeType":"ElementaryTypeName","src":"5813:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3369,"mutability":"mutable","name":"value","nameLocation":"5835:5:19","nodeType":"VariableDeclaration","scope":3382,"src":"5827:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3368,"name":"uint256","nodeType":"ElementaryTypeName","src":"5827:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5812:29:19"},"scope":4348,"src":"5747:178:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3418,"nodeType":"Block","src":"6327:144:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3396,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3389,"src":"6341:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3399,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3385,"src":"6353:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3398,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6347:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3397,"name":"bytes","nodeType":"ElementaryTypeName","src":"6347:5:19","typeDescriptions":{}}},"id":3400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6347:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6360:6:19","memberName":"length","nodeType":"MemberAccess","src":"6347:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6341:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3403,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3387,"src":"6370:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3404,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3389,"src":"6378:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6370:11:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6341:40:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3411,"nodeType":"IfStatement","src":"6337:63:19","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6391:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6398:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3409,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6390:10:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3395,"id":3410,"nodeType":"Return","src":"6383:17:19"}},{"expression":{"arguments":[{"id":3413,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3385,"src":"6446:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3414,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3387,"src":"6453:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3415,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3389,"src":"6460:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3412,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3489,"src":"6417:28:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6417:47:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3395,"id":3417,"nodeType":"Return","src":"6410:54:19"}]},"documentation":{"id":3383,"nodeType":"StructuredDocumentation","src":"5931:238:19","text":" @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":3419,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"6183:12:19","nodeType":"FunctionDefinition","parameters":{"id":3390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3385,"mutability":"mutable","name":"input","nameLocation":"6219:5:19","nodeType":"VariableDeclaration","scope":3419,"src":"6205:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3384,"name":"string","nodeType":"ElementaryTypeName","src":"6205:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3387,"mutability":"mutable","name":"begin","nameLocation":"6242:5:19","nodeType":"VariableDeclaration","scope":3419,"src":"6234:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3386,"name":"uint256","nodeType":"ElementaryTypeName","src":"6234:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3389,"mutability":"mutable","name":"end","nameLocation":"6265:3:19","nodeType":"VariableDeclaration","scope":3419,"src":"6257:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3388,"name":"uint256","nodeType":"ElementaryTypeName","src":"6257:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6195:79:19"},"returnParameters":{"id":3395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3392,"mutability":"mutable","name":"success","nameLocation":"6303:7:19","nodeType":"VariableDeclaration","scope":3419,"src":"6298:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3391,"name":"bool","nodeType":"ElementaryTypeName","src":"6298:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3394,"mutability":"mutable","name":"value","nameLocation":"6320:5:19","nodeType":"VariableDeclaration","scope":3419,"src":"6312:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3393,"name":"uint256","nodeType":"ElementaryTypeName","src":"6312:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6297:29:19"},"scope":4348,"src":"6174:297:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3488,"nodeType":"Block","src":"6874:347:19","statements":[{"assignments":[3434],"declarations":[{"constant":false,"id":3434,"mutability":"mutable","name":"buffer","nameLocation":"6897:6:19","nodeType":"VariableDeclaration","scope":3488,"src":"6884:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3433,"name":"bytes","nodeType":"ElementaryTypeName","src":"6884:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3439,"initialValue":{"arguments":[{"id":3437,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3422,"src":"6912:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3436,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6906:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3435,"name":"bytes","nodeType":"ElementaryTypeName","src":"6906:5:19","typeDescriptions":{}}},"id":3438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6906:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6884:34:19"},{"assignments":[3441],"declarations":[{"constant":false,"id":3441,"mutability":"mutable","name":"result","nameLocation":"6937:6:19","nodeType":"VariableDeclaration","scope":3488,"src":"6929:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3440,"name":"uint256","nodeType":"ElementaryTypeName","src":"6929:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3443,"initialValue":{"hexValue":"30","id":3442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6946:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6929:18:19"},{"body":{"id":3482,"nodeType":"Block","src":"6995:189:19","statements":[{"assignments":[3455],"declarations":[{"constant":false,"id":3455,"mutability":"mutable","name":"chr","nameLocation":"7015:3:19","nodeType":"VariableDeclaration","scope":3482,"src":"7009:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3454,"name":"uint8","nodeType":"ElementaryTypeName","src":"7009:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3465,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":3460,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3434,"src":"7064:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3461,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3445,"src":"7072:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3459,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4347,"src":"7041:22:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7041:33:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3458,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7034:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3457,"name":"bytes1","nodeType":"ElementaryTypeName","src":"7034:6:19","typeDescriptions":{}}},"id":3463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7034:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3456,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4169,"src":"7021:12:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":3464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7021:55:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"7009:67:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3466,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3455,"src":"7094:3:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"39","id":3467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7100:1:19","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},"src":"7094:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3473,"nodeType":"IfStatement","src":"7090:30:19","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7111:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7118:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3471,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"7110:10:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3432,"id":3472,"nodeType":"Return","src":"7103:17:19"}},{"expression":{"id":3476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3474,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3441,"src":"7134:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3130","id":3475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7144:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"7134:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3477,"nodeType":"ExpressionStatement","src":"7134:12:19"},{"expression":{"id":3480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3478,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3441,"src":"7160:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3479,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3455,"src":"7170:3:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"7160:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3481,"nodeType":"ExpressionStatement","src":"7160:13:19"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3448,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3445,"src":"6981:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3449,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3426,"src":"6985:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6981:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3483,"initializationExpression":{"assignments":[3445],"declarations":[{"constant":false,"id":3445,"mutability":"mutable","name":"i","nameLocation":"6970:1:19","nodeType":"VariableDeclaration","scope":3483,"src":"6962:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3444,"name":"uint256","nodeType":"ElementaryTypeName","src":"6962:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3447,"initialValue":{"id":3446,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3424,"src":"6974:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6962:17:19"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"6990:3:19","subExpression":{"id":3451,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3445,"src":"6992:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3453,"nodeType":"ExpressionStatement","src":"6990:3:19"},"nodeType":"ForStatement","src":"6957:227:19"},{"expression":{"components":[{"hexValue":"74727565","id":3484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7201:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3485,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3441,"src":"7207:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3486,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7200:14:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3432,"id":3487,"nodeType":"Return","src":"7193:21:19"}]},"documentation":{"id":3420,"nodeType":"StructuredDocumentation","src":"6477:224:19","text":" @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":3489,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseUintUncheckedBounds","nameLocation":"6715:28:19","nodeType":"FunctionDefinition","parameters":{"id":3427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3422,"mutability":"mutable","name":"input","nameLocation":"6767:5:19","nodeType":"VariableDeclaration","scope":3489,"src":"6753:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3421,"name":"string","nodeType":"ElementaryTypeName","src":"6753:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3424,"mutability":"mutable","name":"begin","nameLocation":"6790:5:19","nodeType":"VariableDeclaration","scope":3489,"src":"6782:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3423,"name":"uint256","nodeType":"ElementaryTypeName","src":"6782:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3426,"mutability":"mutable","name":"end","nameLocation":"6813:3:19","nodeType":"VariableDeclaration","scope":3489,"src":"6805:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3425,"name":"uint256","nodeType":"ElementaryTypeName","src":"6805:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6743:79:19"},"returnParameters":{"id":3432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3429,"mutability":"mutable","name":"success","nameLocation":"6850:7:19","nodeType":"VariableDeclaration","scope":3489,"src":"6845:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3428,"name":"bool","nodeType":"ElementaryTypeName","src":"6845:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3431,"mutability":"mutable","name":"value","nameLocation":"6867:5:19","nodeType":"VariableDeclaration","scope":3489,"src":"6859:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3430,"name":"uint256","nodeType":"ElementaryTypeName","src":"6859:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6844:29:19"},"scope":4348,"src":"6706:515:19","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3507,"nodeType":"Block","src":"7518:63:19","statements":[{"expression":{"arguments":[{"id":3498,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3492,"src":"7544:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7551:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3502,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3492,"src":"7560:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3501,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7554:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3500,"name":"bytes","nodeType":"ElementaryTypeName","src":"7554:5:19","typeDescriptions":{}}},"id":3503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7554:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7567:6:19","memberName":"length","nodeType":"MemberAccess","src":"7554:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3497,"name":"parseInt","nodeType":"Identifier","overloadedDeclarations":[3508,3539],"referencedDeclaration":3539,"src":"7535:8:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (int256)"}},"id":3505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7535:39:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3496,"id":3506,"nodeType":"Return","src":"7528:46:19"}]},"documentation":{"id":3490,"nodeType":"StructuredDocumentation","src":"7227:216:19","text":" @dev Parse a decimal string and returns the value as a `int256`.\n Requirements:\n - The string must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":3508,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7457:8:19","nodeType":"FunctionDefinition","parameters":{"id":3493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3492,"mutability":"mutable","name":"input","nameLocation":"7480:5:19","nodeType":"VariableDeclaration","scope":3508,"src":"7466:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3491,"name":"string","nodeType":"ElementaryTypeName","src":"7466:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7465:21:19"},"returnParameters":{"id":3496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3495,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3508,"src":"7510:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3494,"name":"int256","nodeType":"ElementaryTypeName","src":"7510:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7509:8:19"},"scope":4348,"src":"7448:133:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3538,"nodeType":"Block","src":"7986:151:19","statements":[{"assignments":[3521,3523],"declarations":[{"constant":false,"id":3521,"mutability":"mutable","name":"success","nameLocation":"8002:7:19","nodeType":"VariableDeclaration","scope":3538,"src":"7997:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3520,"name":"bool","nodeType":"ElementaryTypeName","src":"7997:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3523,"mutability":"mutable","name":"value","nameLocation":"8018:5:19","nodeType":"VariableDeclaration","scope":3538,"src":"8011:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3522,"name":"int256","nodeType":"ElementaryTypeName","src":"8011:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3529,"initialValue":{"arguments":[{"id":3525,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3511,"src":"8039:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3526,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3513,"src":"8046:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3527,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3515,"src":"8053:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3524,"name":"tryParseInt","nodeType":"Identifier","overloadedDeclarations":[3560,3602],"referencedDeclaration":3602,"src":"8027:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":3528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8027:30:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"nodeType":"VariableDeclarationStatement","src":"7996:61:19"},{"condition":{"id":3531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8071:8:19","subExpression":{"id":3530,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3521,"src":"8072:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3535,"nodeType":"IfStatement","src":"8067:41:19","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3532,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3009,"src":"8088:18:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8088:20:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3534,"nodeType":"RevertStatement","src":"8081:27:19"}},{"expression":{"id":3536,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3523,"src":"8125:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3519,"id":3537,"nodeType":"Return","src":"8118:12:19"}]},"documentation":{"id":3509,"nodeType":"StructuredDocumentation","src":"7587:296:19","text":" @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":3539,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7897:8:19","nodeType":"FunctionDefinition","parameters":{"id":3516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3511,"mutability":"mutable","name":"input","nameLocation":"7920:5:19","nodeType":"VariableDeclaration","scope":3539,"src":"7906:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3510,"name":"string","nodeType":"ElementaryTypeName","src":"7906:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3513,"mutability":"mutable","name":"begin","nameLocation":"7935:5:19","nodeType":"VariableDeclaration","scope":3539,"src":"7927:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3512,"name":"uint256","nodeType":"ElementaryTypeName","src":"7927:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3515,"mutability":"mutable","name":"end","nameLocation":"7950:3:19","nodeType":"VariableDeclaration","scope":3539,"src":"7942:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3514,"name":"uint256","nodeType":"ElementaryTypeName","src":"7942:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7905:49:19"},"returnParameters":{"id":3519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3518,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3539,"src":"7978:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3517,"name":"int256","nodeType":"ElementaryTypeName","src":"7978:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7977:8:19"},"scope":4348,"src":"7888:249:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3559,"nodeType":"Block","src":"8528:82:19","statements":[{"expression":{"arguments":[{"id":3550,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3542,"src":"8573:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8580:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3554,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3542,"src":"8589:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3553,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8583:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3552,"name":"bytes","nodeType":"ElementaryTypeName","src":"8583:5:19","typeDescriptions":{}}},"id":3555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8583:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8596:6:19","memberName":"length","nodeType":"MemberAccess","src":"8583:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3549,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3723,"src":"8545:27:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":3557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8545:58:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":3548,"id":3558,"nodeType":"Return","src":"8538:65:19"}]},"documentation":{"id":3540,"nodeType":"StructuredDocumentation","src":"8143:287:19","text":" @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":3560,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8444:11:19","nodeType":"FunctionDefinition","parameters":{"id":3543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3542,"mutability":"mutable","name":"input","nameLocation":"8470:5:19","nodeType":"VariableDeclaration","scope":3560,"src":"8456:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3541,"name":"string","nodeType":"ElementaryTypeName","src":"8456:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8455:21:19"},"returnParameters":{"id":3548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3545,"mutability":"mutable","name":"success","nameLocation":"8505:7:19","nodeType":"VariableDeclaration","scope":3560,"src":"8500:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3544,"name":"bool","nodeType":"ElementaryTypeName","src":"8500:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3547,"mutability":"mutable","name":"value","nameLocation":"8521:5:19","nodeType":"VariableDeclaration","scope":3560,"src":"8514:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3546,"name":"int256","nodeType":"ElementaryTypeName","src":"8514:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8499:28:19"},"scope":4348,"src":"8435:175:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"constant":true,"id":3565,"mutability":"constant","name":"ABS_MIN_INT256","nameLocation":"8641:14:19","nodeType":"VariableDeclaration","scope":4348,"src":"8616:50:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3561,"name":"uint256","nodeType":"ElementaryTypeName","src":"8616:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"},"id":3564,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8658:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"323535","id":3563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8663:3:19","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"8658:8:19","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"}},"visibility":"private"},{"body":{"id":3601,"nodeType":"Block","src":"9132:143:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3579,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3572,"src":"9146:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3582,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3568,"src":"9158:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3581,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9152:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3580,"name":"bytes","nodeType":"ElementaryTypeName","src":"9152:5:19","typeDescriptions":{}}},"id":3583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9152:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9165:6:19","memberName":"length","nodeType":"MemberAccess","src":"9152:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9146:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3586,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3570,"src":"9175:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3587,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3572,"src":"9183:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9175:11:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9146:40:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3594,"nodeType":"IfStatement","src":"9142:63:19","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9196:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9203:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3592,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"9195:10:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3578,"id":3593,"nodeType":"Return","src":"9188:17:19"}},{"expression":{"arguments":[{"id":3596,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3568,"src":"9250:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3597,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3570,"src":"9257:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3598,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3572,"src":"9264:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3595,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3723,"src":"9222:27:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":3599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9222:46:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":3578,"id":3600,"nodeType":"Return","src":"9215:53:19"}]},"documentation":{"id":3566,"nodeType":"StructuredDocumentation","src":"8673:303:19","text":" @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character or if the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":3602,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8990:11:19","nodeType":"FunctionDefinition","parameters":{"id":3573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3568,"mutability":"mutable","name":"input","nameLocation":"9025:5:19","nodeType":"VariableDeclaration","scope":3602,"src":"9011:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3567,"name":"string","nodeType":"ElementaryTypeName","src":"9011:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3570,"mutability":"mutable","name":"begin","nameLocation":"9048:5:19","nodeType":"VariableDeclaration","scope":3602,"src":"9040:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3569,"name":"uint256","nodeType":"ElementaryTypeName","src":"9040:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3572,"mutability":"mutable","name":"end","nameLocation":"9071:3:19","nodeType":"VariableDeclaration","scope":3602,"src":"9063:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3571,"name":"uint256","nodeType":"ElementaryTypeName","src":"9063:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9001:79:19"},"returnParameters":{"id":3578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3575,"mutability":"mutable","name":"success","nameLocation":"9109:7:19","nodeType":"VariableDeclaration","scope":3602,"src":"9104:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3574,"name":"bool","nodeType":"ElementaryTypeName","src":"9104:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3577,"mutability":"mutable","name":"value","nameLocation":"9125:5:19","nodeType":"VariableDeclaration","scope":3602,"src":"9118:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3576,"name":"int256","nodeType":"ElementaryTypeName","src":"9118:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9103:28:19"},"scope":4348,"src":"8981:294:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3722,"nodeType":"Block","src":"9675:812:19","statements":[{"assignments":[3617],"declarations":[{"constant":false,"id":3617,"mutability":"mutable","name":"buffer","nameLocation":"9698:6:19","nodeType":"VariableDeclaration","scope":3722,"src":"9685:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3616,"name":"bytes","nodeType":"ElementaryTypeName","src":"9685:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3622,"initialValue":{"arguments":[{"id":3620,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3605,"src":"9713:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3619,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9707:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3618,"name":"bytes","nodeType":"ElementaryTypeName","src":"9707:5:19","typeDescriptions":{}}},"id":3621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9707:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"9685:34:19"},{"assignments":[3624],"declarations":[{"constant":false,"id":3624,"mutability":"mutable","name":"sign","nameLocation":"9783:4:19","nodeType":"VariableDeclaration","scope":3722,"src":"9776:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":3623,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9776:6:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":3640,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3625,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3607,"src":"9790:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3626,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3609,"src":"9799:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9790:12:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"arguments":[{"id":3635,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3617,"src":"9847:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3636,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3607,"src":"9855:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3634,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4347,"src":"9824:22:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9824:37:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3633,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9817:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3632,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9817:6:19","typeDescriptions":{}}},"id":3638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9817:45:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9790:72:19","trueExpression":{"arguments":[{"hexValue":"30","id":3630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9812:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3629,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9805:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3628,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9805:6:19","typeDescriptions":{}}},"id":3631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9805:9:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"9776:86:19"},{"assignments":[3642],"declarations":[{"constant":false,"id":3642,"mutability":"mutable","name":"positiveSign","nameLocation":"9948:12:19","nodeType":"VariableDeclaration","scope":3722,"src":"9943:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3641,"name":"bool","nodeType":"ElementaryTypeName","src":"9943:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3649,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3643,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3624,"src":"9963:4:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2b","id":3646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9978:3:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""},"value":"+"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""}],"id":3645,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9971:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3644,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9971:6:19","typeDescriptions":{}}},"id":3647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9971:11:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9963:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9943:39:19"},{"assignments":[3651],"declarations":[{"constant":false,"id":3651,"mutability":"mutable","name":"negativeSign","nameLocation":"9997:12:19","nodeType":"VariableDeclaration","scope":3722,"src":"9992:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3650,"name":"bool","nodeType":"ElementaryTypeName","src":"9992:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3658,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3652,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3624,"src":"10012:4:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2d","id":3655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10027:3:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""}],"id":3654,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10020:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3653,"name":"bytes1","nodeType":"ElementaryTypeName","src":"10020:6:19","typeDescriptions":{}}},"id":3656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10020:11:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"10012:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9992:39:19"},{"assignments":[3660],"declarations":[{"constant":false,"id":3660,"mutability":"mutable","name":"offset","nameLocation":"10049:6:19","nodeType":"VariableDeclaration","scope":3722,"src":"10041:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3659,"name":"uint256","nodeType":"ElementaryTypeName","src":"10041:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3667,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3661,"name":"positiveSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3642,"src":"10059:12:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":3662,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3651,"src":"10075:12:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10059:28:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3664,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10058:30:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10089:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8179,"src":"10058:37:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":3666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10058:39:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10041:56:19"},{"assignments":[3669,3671],"declarations":[{"constant":false,"id":3669,"mutability":"mutable","name":"absSuccess","nameLocation":"10114:10:19","nodeType":"VariableDeclaration","scope":3722,"src":"10109:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3668,"name":"bool","nodeType":"ElementaryTypeName","src":"10109:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3671,"mutability":"mutable","name":"absValue","nameLocation":"10134:8:19","nodeType":"VariableDeclaration","scope":3722,"src":"10126:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3670,"name":"uint256","nodeType":"ElementaryTypeName","src":"10126:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3679,"initialValue":{"arguments":[{"id":3673,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3605,"src":"10159:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3674,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3607,"src":"10166:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3675,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3660,"src":"10174:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10166:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3677,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3609,"src":"10182:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3672,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[3382,3419],"referencedDeclaration":3419,"src":"10146:12:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10146:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"10108:78:19"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3680,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3669,"src":"10201:10:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3681,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3671,"src":"10215:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3682,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3565,"src":"10226:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10215:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10201:39:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3700,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3669,"src":"10343:10:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":3701,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3651,"src":"10357:12:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10343:26:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3703,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3671,"src":"10373:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3704,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3565,"src":"10385:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10373:26:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10343:56:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10471:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10478:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3718,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10470:10:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3615,"id":3719,"nodeType":"Return","src":"10463:17:19"},"id":3720,"nodeType":"IfStatement","src":"10339:141:19","trueBody":{"id":3715,"nodeType":"Block","src":"10401:56:19","statements":[{"expression":{"components":[{"hexValue":"74727565","id":3707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10423:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"arguments":[{"id":3710,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10434:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3709,"name":"int256","nodeType":"ElementaryTypeName","src":"10434:6:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":3708,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10429:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10429:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":3712,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10442:3:19","memberName":"min","nodeType":"MemberAccess","src":"10429:16:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3713,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10422:24:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":3615,"id":3714,"nodeType":"Return","src":"10415:31:19"}]}},"id":3721,"nodeType":"IfStatement","src":"10197:283:19","trueBody":{"id":3699,"nodeType":"Block","src":"10242:91:19","statements":[{"expression":{"components":[{"hexValue":"74727565","id":3685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10264:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"condition":{"id":3686,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3651,"src":"10270:12:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":3694,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3671,"src":"10312:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3693,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10305:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3692,"name":"int256","nodeType":"ElementaryTypeName","src":"10305:6:19","typeDescriptions":{}}},"id":3695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10305:16:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10270:51:19","trueExpression":{"id":3691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"10285:17:19","subExpression":{"arguments":[{"id":3689,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3671,"src":"10293:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3688,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10286:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3687,"name":"int256","nodeType":"ElementaryTypeName","src":"10286:6:19","typeDescriptions":{}}},"id":3690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10286:16:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3697,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10263:59:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":3615,"id":3698,"nodeType":"Return","src":"10256:66:19"}]}}]},"documentation":{"id":3603,"nodeType":"StructuredDocumentation","src":"9281:223:19","text":" @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":3723,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseIntUncheckedBounds","nameLocation":"9518:27:19","nodeType":"FunctionDefinition","parameters":{"id":3610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3605,"mutability":"mutable","name":"input","nameLocation":"9569:5:19","nodeType":"VariableDeclaration","scope":3723,"src":"9555:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3604,"name":"string","nodeType":"ElementaryTypeName","src":"9555:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3607,"mutability":"mutable","name":"begin","nameLocation":"9592:5:19","nodeType":"VariableDeclaration","scope":3723,"src":"9584:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3606,"name":"uint256","nodeType":"ElementaryTypeName","src":"9584:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3609,"mutability":"mutable","name":"end","nameLocation":"9615:3:19","nodeType":"VariableDeclaration","scope":3723,"src":"9607:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3608,"name":"uint256","nodeType":"ElementaryTypeName","src":"9607:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9545:79:19"},"returnParameters":{"id":3615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3612,"mutability":"mutable","name":"success","nameLocation":"9652:7:19","nodeType":"VariableDeclaration","scope":3723,"src":"9647:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3611,"name":"bool","nodeType":"ElementaryTypeName","src":"9647:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3614,"mutability":"mutable","name":"value","nameLocation":"9668:5:19","nodeType":"VariableDeclaration","scope":3723,"src":"9661:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3613,"name":"int256","nodeType":"ElementaryTypeName","src":"9661:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9646:28:19"},"scope":4348,"src":"9509:978:19","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3741,"nodeType":"Block","src":"10832:67:19","statements":[{"expression":{"arguments":[{"id":3732,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3726,"src":"10862:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10869:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3736,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3726,"src":"10878:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3735,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10872:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3734,"name":"bytes","nodeType":"ElementaryTypeName","src":"10872:5:19","typeDescriptions":{}}},"id":3737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10872:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10885:6:19","memberName":"length","nodeType":"MemberAccess","src":"10872:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3731,"name":"parseHexUint","nodeType":"Identifier","overloadedDeclarations":[3742,3773],"referencedDeclaration":3773,"src":"10849:12:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":3739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10849:43:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3730,"id":3740,"nodeType":"Return","src":"10842:50:19"}]},"documentation":{"id":3724,"nodeType":"StructuredDocumentation","src":"10493:259:19","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":3742,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"10766:12:19","nodeType":"FunctionDefinition","parameters":{"id":3727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3726,"mutability":"mutable","name":"input","nameLocation":"10793:5:19","nodeType":"VariableDeclaration","scope":3742,"src":"10779:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3725,"name":"string","nodeType":"ElementaryTypeName","src":"10779:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10778:21:19"},"returnParameters":{"id":3730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3729,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3742,"src":"10823:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3728,"name":"uint256","nodeType":"ElementaryTypeName","src":"10823:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10822:9:19"},"scope":4348,"src":"10757:142:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3772,"nodeType":"Block","src":"11320:156:19","statements":[{"assignments":[3755,3757],"declarations":[{"constant":false,"id":3755,"mutability":"mutable","name":"success","nameLocation":"11336:7:19","nodeType":"VariableDeclaration","scope":3772,"src":"11331:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3754,"name":"bool","nodeType":"ElementaryTypeName","src":"11331:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3757,"mutability":"mutable","name":"value","nameLocation":"11353:5:19","nodeType":"VariableDeclaration","scope":3772,"src":"11345:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3756,"name":"uint256","nodeType":"ElementaryTypeName","src":"11345:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3763,"initialValue":{"arguments":[{"id":3759,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3745,"src":"11378:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3760,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3747,"src":"11385:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3761,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3749,"src":"11392:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3758,"name":"tryParseHexUint","nodeType":"Identifier","overloadedDeclarations":[3794,3831],"referencedDeclaration":3831,"src":"11362:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11362:34:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11330:66:19"},{"condition":{"id":3765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11410:8:19","subExpression":{"id":3764,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3755,"src":"11411:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3769,"nodeType":"IfStatement","src":"11406:41:19","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3766,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3009,"src":"11427:18:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11427:20:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3768,"nodeType":"RevertStatement","src":"11420:27:19"}},{"expression":{"id":3770,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3757,"src":"11464:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3753,"id":3771,"nodeType":"Return","src":"11457:12:19"}]},"documentation":{"id":3743,"nodeType":"StructuredDocumentation","src":"10905:307:19","text":" @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":3773,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"11226:12:19","nodeType":"FunctionDefinition","parameters":{"id":3750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3745,"mutability":"mutable","name":"input","nameLocation":"11253:5:19","nodeType":"VariableDeclaration","scope":3773,"src":"11239:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3744,"name":"string","nodeType":"ElementaryTypeName","src":"11239:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3747,"mutability":"mutable","name":"begin","nameLocation":"11268:5:19","nodeType":"VariableDeclaration","scope":3773,"src":"11260:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3746,"name":"uint256","nodeType":"ElementaryTypeName","src":"11260:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3749,"mutability":"mutable","name":"end","nameLocation":"11283:3:19","nodeType":"VariableDeclaration","scope":3773,"src":"11275:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3748,"name":"uint256","nodeType":"ElementaryTypeName","src":"11275:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11238:49:19"},"returnParameters":{"id":3753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3752,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3773,"src":"11311:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3751,"name":"uint256","nodeType":"ElementaryTypeName","src":"11311:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11310:9:19"},"scope":4348,"src":"11217:259:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3793,"nodeType":"Block","src":"11803:86:19","statements":[{"expression":{"arguments":[{"id":3784,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3776,"src":"11852:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11859:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3788,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3776,"src":"11868:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3787,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11862:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3786,"name":"bytes","nodeType":"ElementaryTypeName","src":"11862:5:19","typeDescriptions":{}}},"id":3789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11862:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11875:6:19","memberName":"length","nodeType":"MemberAccess","src":"11862:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3783,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3934,"src":"11820:31:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11820:62:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3782,"id":3792,"nodeType":"Return","src":"11813:69:19"}]},"documentation":{"id":3774,"nodeType":"StructuredDocumentation","src":"11482:218:19","text":" @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":3794,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"11714:15:19","nodeType":"FunctionDefinition","parameters":{"id":3777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3776,"mutability":"mutable","name":"input","nameLocation":"11744:5:19","nodeType":"VariableDeclaration","scope":3794,"src":"11730:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3775,"name":"string","nodeType":"ElementaryTypeName","src":"11730:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11729:21:19"},"returnParameters":{"id":3782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3779,"mutability":"mutable","name":"success","nameLocation":"11779:7:19","nodeType":"VariableDeclaration","scope":3794,"src":"11774:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3778,"name":"bool","nodeType":"ElementaryTypeName","src":"11774:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3781,"mutability":"mutable","name":"value","nameLocation":"11796:5:19","nodeType":"VariableDeclaration","scope":3794,"src":"11788:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3780,"name":"uint256","nodeType":"ElementaryTypeName","src":"11788:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11773:29:19"},"scope":4348,"src":"11705:184:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3830,"nodeType":"Block","src":"12297:147:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3808,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3801,"src":"12311:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3811,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3797,"src":"12323:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3810,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12317:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3809,"name":"bytes","nodeType":"ElementaryTypeName","src":"12317:5:19","typeDescriptions":{}}},"id":3812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12317:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12330:6:19","memberName":"length","nodeType":"MemberAccess","src":"12317:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12311:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3815,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3799,"src":"12340:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3816,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3801,"src":"12348:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12340:11:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12311:40:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3823,"nodeType":"IfStatement","src":"12307:63:19","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12361:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12368:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3821,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"12360:10:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3807,"id":3822,"nodeType":"Return","src":"12353:17:19"}},{"expression":{"arguments":[{"id":3825,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3797,"src":"12419:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3826,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3799,"src":"12426:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3827,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3801,"src":"12433:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3824,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3934,"src":"12387:31:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12387:50:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3807,"id":3829,"nodeType":"Return","src":"12380:57:19"}]},"documentation":{"id":3795,"nodeType":"StructuredDocumentation","src":"11895:241:19","text":" @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":3831,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"12150:15:19","nodeType":"FunctionDefinition","parameters":{"id":3802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3797,"mutability":"mutable","name":"input","nameLocation":"12189:5:19","nodeType":"VariableDeclaration","scope":3831,"src":"12175:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3796,"name":"string","nodeType":"ElementaryTypeName","src":"12175:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3799,"mutability":"mutable","name":"begin","nameLocation":"12212:5:19","nodeType":"VariableDeclaration","scope":3831,"src":"12204:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3798,"name":"uint256","nodeType":"ElementaryTypeName","src":"12204:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3801,"mutability":"mutable","name":"end","nameLocation":"12235:3:19","nodeType":"VariableDeclaration","scope":3831,"src":"12227:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3800,"name":"uint256","nodeType":"ElementaryTypeName","src":"12227:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12165:79:19"},"returnParameters":{"id":3807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3804,"mutability":"mutable","name":"success","nameLocation":"12273:7:19","nodeType":"VariableDeclaration","scope":3831,"src":"12268:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3803,"name":"bool","nodeType":"ElementaryTypeName","src":"12268:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3806,"mutability":"mutable","name":"value","nameLocation":"12290:5:19","nodeType":"VariableDeclaration","scope":3831,"src":"12282:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3805,"name":"uint256","nodeType":"ElementaryTypeName","src":"12282:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12267:29:19"},"scope":4348,"src":"12141:303:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3933,"nodeType":"Block","src":"12853:881:19","statements":[{"assignments":[3846],"declarations":[{"constant":false,"id":3846,"mutability":"mutable","name":"buffer","nameLocation":"12876:6:19","nodeType":"VariableDeclaration","scope":3933,"src":"12863:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3845,"name":"bytes","nodeType":"ElementaryTypeName","src":"12863:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3851,"initialValue":{"arguments":[{"id":3849,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3834,"src":"12891:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3848,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12885:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3847,"name":"bytes","nodeType":"ElementaryTypeName","src":"12885:5:19","typeDescriptions":{}}},"id":3850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12885:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"12863:34:19"},{"assignments":[3853],"declarations":[{"constant":false,"id":3853,"mutability":"mutable","name":"hasPrefix","nameLocation":"12950:9:19","nodeType":"VariableDeclaration","scope":3933,"src":"12945:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3852,"name":"bool","nodeType":"ElementaryTypeName","src":"12945:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3873,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3854,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3838,"src":"12963:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3855,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3836,"src":"12969:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12977:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12969:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12963:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3859,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12962:17:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":3871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":3863,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3846,"src":"13013:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3864,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3836,"src":"13021:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3862,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4347,"src":"12990:22:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12990:37:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3861,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12983:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3860,"name":"bytes2","nodeType":"ElementaryTypeName","src":"12983:6:19","typeDescriptions":{}}},"id":3866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12983:45:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":3869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13039:4:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":3868,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13032:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3867,"name":"bytes2","nodeType":"ElementaryTypeName","src":"13032:6:19","typeDescriptions":{}}},"id":3870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13032:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"12983:61:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12962:82:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"12945:99:19"},{"assignments":[3875],"declarations":[{"constant":false,"id":3875,"mutability":"mutable","name":"offset","nameLocation":"13133:6:19","nodeType":"VariableDeclaration","scope":3933,"src":"13125:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3874,"name":"uint256","nodeType":"ElementaryTypeName","src":"13125:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3881,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3876,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3853,"src":"13142:9:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13152:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8179,"src":"13142:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":3878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13142:18:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":3879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13163:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"13142:22:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13125:39:19"},{"assignments":[3883],"declarations":[{"constant":false,"id":3883,"mutability":"mutable","name":"result","nameLocation":"13183:6:19","nodeType":"VariableDeclaration","scope":3933,"src":"13175:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3882,"name":"uint256","nodeType":"ElementaryTypeName","src":"13175:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3885,"initialValue":{"hexValue":"30","id":3884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13192:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13175:18:19"},{"body":{"id":3927,"nodeType":"Block","src":"13250:447:19","statements":[{"assignments":[3899],"declarations":[{"constant":false,"id":3899,"mutability":"mutable","name":"chr","nameLocation":"13270:3:19","nodeType":"VariableDeclaration","scope":3927,"src":"13264:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3898,"name":"uint8","nodeType":"ElementaryTypeName","src":"13264:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3909,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":3904,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3846,"src":"13319:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3905,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3887,"src":"13327:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3903,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4347,"src":"13296:22:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13296:33:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3902,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13289:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3901,"name":"bytes1","nodeType":"ElementaryTypeName","src":"13289:6:19","typeDescriptions":{}}},"id":3907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13289:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3900,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4169,"src":"13276:12:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":3908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13276:55:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"13264:67:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3910,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3899,"src":"13349:3:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3135","id":3911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13355:2:19","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"15"},"src":"13349:8:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3917,"nodeType":"IfStatement","src":"13345:31:19","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13367:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13374:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3915,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"13366:10:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3844,"id":3916,"nodeType":"Return","src":"13359:17:19"}},{"expression":{"id":3920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3918,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3883,"src":"13390:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3136","id":3919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13400:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"13390:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3921,"nodeType":"ExpressionStatement","src":"13390:12:19"},{"id":3926,"nodeType":"UncheckedBlock","src":"13416:271:19","statements":[{"expression":{"id":3924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3922,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3883,"src":"13659:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3923,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3899,"src":"13669:3:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13659:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3925,"nodeType":"ExpressionStatement","src":"13659:13:19"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3892,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3887,"src":"13236:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3893,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3838,"src":"13240:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13236:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3928,"initializationExpression":{"assignments":[3887],"declarations":[{"constant":false,"id":3887,"mutability":"mutable","name":"i","nameLocation":"13216:1:19","nodeType":"VariableDeclaration","scope":3928,"src":"13208:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3886,"name":"uint256","nodeType":"ElementaryTypeName","src":"13208:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3891,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3888,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3836,"src":"13220:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3889,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3875,"src":"13228:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13220:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13208:26:19"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"13245:3:19","subExpression":{"id":3895,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3887,"src":"13247:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3897,"nodeType":"ExpressionStatement","src":"13245:3:19"},"nodeType":"ForStatement","src":"13203:494:19"},{"expression":{"components":[{"hexValue":"74727565","id":3929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13714:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3930,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3883,"src":"13720:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3931,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13713:14:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3844,"id":3932,"nodeType":"Return","src":"13706:21:19"}]},"documentation":{"id":3832,"nodeType":"StructuredDocumentation","src":"12450:227:19","text":" @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":3934,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseHexUintUncheckedBounds","nameLocation":"12691:31:19","nodeType":"FunctionDefinition","parameters":{"id":3839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3834,"mutability":"mutable","name":"input","nameLocation":"12746:5:19","nodeType":"VariableDeclaration","scope":3934,"src":"12732:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3833,"name":"string","nodeType":"ElementaryTypeName","src":"12732:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3836,"mutability":"mutable","name":"begin","nameLocation":"12769:5:19","nodeType":"VariableDeclaration","scope":3934,"src":"12761:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3835,"name":"uint256","nodeType":"ElementaryTypeName","src":"12761:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3838,"mutability":"mutable","name":"end","nameLocation":"12792:3:19","nodeType":"VariableDeclaration","scope":3934,"src":"12784:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3837,"name":"uint256","nodeType":"ElementaryTypeName","src":"12784:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12722:79:19"},"returnParameters":{"id":3844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3841,"mutability":"mutable","name":"success","nameLocation":"12829:7:19","nodeType":"VariableDeclaration","scope":3934,"src":"12824:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3840,"name":"bool","nodeType":"ElementaryTypeName","src":"12824:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3843,"mutability":"mutable","name":"value","nameLocation":"12846:5:19","nodeType":"VariableDeclaration","scope":3934,"src":"12838:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3842,"name":"uint256","nodeType":"ElementaryTypeName","src":"12838:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12823:29:19"},"scope":4348,"src":"12682:1052:19","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3952,"nodeType":"Block","src":"14032:67:19","statements":[{"expression":{"arguments":[{"id":3943,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3937,"src":"14062:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14069:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3947,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3937,"src":"14078:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3946,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14072:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3945,"name":"bytes","nodeType":"ElementaryTypeName","src":"14072:5:19","typeDescriptions":{}}},"id":3948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14072:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14085:6:19","memberName":"length","nodeType":"MemberAccess","src":"14072:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3942,"name":"parseAddress","nodeType":"Identifier","overloadedDeclarations":[3953,3984],"referencedDeclaration":3984,"src":"14049:12:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (address)"}},"id":3950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14049:43:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3941,"id":3951,"nodeType":"Return","src":"14042:50:19"}]},"documentation":{"id":3935,"nodeType":"StructuredDocumentation","src":"13740:212:19","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":3953,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"13966:12:19","nodeType":"FunctionDefinition","parameters":{"id":3938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3937,"mutability":"mutable","name":"input","nameLocation":"13993:5:19","nodeType":"VariableDeclaration","scope":3953,"src":"13979:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3936,"name":"string","nodeType":"ElementaryTypeName","src":"13979:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13978:21:19"},"returnParameters":{"id":3941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3940,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3953,"src":"14023:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3939,"name":"address","nodeType":"ElementaryTypeName","src":"14023:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14022:9:19"},"scope":4348,"src":"13957:142:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3983,"nodeType":"Block","src":"14472:165:19","statements":[{"assignments":[3966,3968],"declarations":[{"constant":false,"id":3966,"mutability":"mutable","name":"success","nameLocation":"14488:7:19","nodeType":"VariableDeclaration","scope":3983,"src":"14483:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3965,"name":"bool","nodeType":"ElementaryTypeName","src":"14483:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3968,"mutability":"mutable","name":"value","nameLocation":"14505:5:19","nodeType":"VariableDeclaration","scope":3983,"src":"14497:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3967,"name":"address","nodeType":"ElementaryTypeName","src":"14497:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3974,"initialValue":{"arguments":[{"id":3970,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3956,"src":"14530:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3971,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3958,"src":"14537:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3972,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3960,"src":"14544:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3969,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[4005,4109],"referencedDeclaration":4109,"src":"14514:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":3973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14514:34:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"nodeType":"VariableDeclarationStatement","src":"14482:66:19"},{"condition":{"id":3976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14562:8:19","subExpression":{"id":3975,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3966,"src":"14563:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3980,"nodeType":"IfStatement","src":"14558:50:19","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3977,"name":"StringsInvalidAddressFormat","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3012,"src":"14579:27:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14579:29:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3979,"nodeType":"RevertStatement","src":"14572:36:19"}},{"expression":{"id":3981,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3968,"src":"14625:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3964,"id":3982,"nodeType":"Return","src":"14618:12:19"}]},"documentation":{"id":3954,"nodeType":"StructuredDocumentation","src":"14105:259:19","text":" @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":3984,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"14378:12:19","nodeType":"FunctionDefinition","parameters":{"id":3961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3956,"mutability":"mutable","name":"input","nameLocation":"14405:5:19","nodeType":"VariableDeclaration","scope":3984,"src":"14391:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3955,"name":"string","nodeType":"ElementaryTypeName","src":"14391:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3958,"mutability":"mutable","name":"begin","nameLocation":"14420:5:19","nodeType":"VariableDeclaration","scope":3984,"src":"14412:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3957,"name":"uint256","nodeType":"ElementaryTypeName","src":"14412:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3960,"mutability":"mutable","name":"end","nameLocation":"14435:3:19","nodeType":"VariableDeclaration","scope":3984,"src":"14427:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3959,"name":"uint256","nodeType":"ElementaryTypeName","src":"14427:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14390:49:19"},"returnParameters":{"id":3964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3963,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3984,"src":"14463:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3962,"name":"address","nodeType":"ElementaryTypeName","src":"14463:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14462:9:19"},"scope":4348,"src":"14369:268:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4004,"nodeType":"Block","src":"14944:70:19","statements":[{"expression":{"arguments":[{"id":3995,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3987,"src":"14977:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14984:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3999,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3987,"src":"14993:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3998,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14987:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3997,"name":"bytes","nodeType":"ElementaryTypeName","src":"14987:5:19","typeDescriptions":{}}},"id":4000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14987:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15000:6:19","memberName":"length","nodeType":"MemberAccess","src":"14987:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3994,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[4005,4109],"referencedDeclaration":4109,"src":"14961:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":4002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14961:46:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3993,"id":4003,"nodeType":"Return","src":"14954:53:19"}]},"documentation":{"id":3985,"nodeType":"StructuredDocumentation","src":"14643:198:19","text":" @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n formatted address. See {parseAddress-string} requirements."},"id":4005,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"14855:15:19","nodeType":"FunctionDefinition","parameters":{"id":3988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3987,"mutability":"mutable","name":"input","nameLocation":"14885:5:19","nodeType":"VariableDeclaration","scope":4005,"src":"14871:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3986,"name":"string","nodeType":"ElementaryTypeName","src":"14871:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14870:21:19"},"returnParameters":{"id":3993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3990,"mutability":"mutable","name":"success","nameLocation":"14920:7:19","nodeType":"VariableDeclaration","scope":4005,"src":"14915:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3989,"name":"bool","nodeType":"ElementaryTypeName","src":"14915:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3992,"mutability":"mutable","name":"value","nameLocation":"14937:5:19","nodeType":"VariableDeclaration","scope":4005,"src":"14929:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3991,"name":"address","nodeType":"ElementaryTypeName","src":"14929:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14914:29:19"},"scope":4348,"src":"14846:168:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4108,"nodeType":"Block","src":"15407:733:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4019,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4012,"src":"15421:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4022,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4008,"src":"15433:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4021,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15427:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4020,"name":"bytes","nodeType":"ElementaryTypeName","src":"15427:5:19","typeDescriptions":{}}},"id":4023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15427:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15440:6:19","memberName":"length","nodeType":"MemberAccess","src":"15427:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15421:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4026,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4010,"src":"15450:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4027,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4012,"src":"15458:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15450:11:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15421:40:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4037,"nodeType":"IfStatement","src":"15417:72:19","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15471:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":4033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15486:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4032,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15478:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4031,"name":"address","nodeType":"ElementaryTypeName","src":"15478:7:19","typeDescriptions":{}}},"id":4034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15478:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":4035,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15470:19:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":4018,"id":4036,"nodeType":"Return","src":"15463:26:19"}},{"assignments":[4039],"declarations":[{"constant":false,"id":4039,"mutability":"mutable","name":"hasPrefix","nameLocation":"15505:9:19","nodeType":"VariableDeclaration","scope":4108,"src":"15500:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4038,"name":"bool","nodeType":"ElementaryTypeName","src":"15500:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":4062,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4040,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4012,"src":"15518:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4041,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4010,"src":"15524:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15532:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15524:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15518:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":4045,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15517:17:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":4060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"id":4051,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4008,"src":"15574:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4050,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15568:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4049,"name":"bytes","nodeType":"ElementaryTypeName","src":"15568:5:19","typeDescriptions":{}}},"id":4052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15568:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4053,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4010,"src":"15582:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4048,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4347,"src":"15545:22:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":4054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15545:43:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4047,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15538:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":4046,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15538:6:19","typeDescriptions":{}}},"id":4055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15538:51:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":4058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15600:4:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":4057,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15593:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":4056,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15593:6:19","typeDescriptions":{}}},"id":4059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15593:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"15538:67:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15517:88:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"15500:105:19"},{"assignments":[4064],"declarations":[{"constant":false,"id":4064,"mutability":"mutable","name":"expectedLength","nameLocation":"15694:14:19","nodeType":"VariableDeclaration","scope":4108,"src":"15686:22:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4063,"name":"uint256","nodeType":"ElementaryTypeName","src":"15686:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4072,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3430","id":4065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15711:2:19","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4066,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4039,"src":"15716:9:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15726:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8179,"src":"15716:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":4068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15716:18:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":4069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15737:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15716:22:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15711:27:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15686:52:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4073,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4012,"src":"15803:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4074,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4010,"src":"15809:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15803:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4076,"name":"expectedLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4064,"src":"15818:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15803:29:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4106,"nodeType":"Block","src":"16083:51:19","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":4099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16105:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":4102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16120:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4101,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16112:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4100,"name":"address","nodeType":"ElementaryTypeName","src":"16112:7:19","typeDescriptions":{}}},"id":4103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16112:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":4104,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16104:19:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":4018,"id":4105,"nodeType":"Return","src":"16097:26:19"}]},"id":4107,"nodeType":"IfStatement","src":"15799:335:19","trueBody":{"id":4098,"nodeType":"Block","src":"15834:243:19","statements":[{"assignments":[4079,4081],"declarations":[{"constant":false,"id":4079,"mutability":"mutable","name":"s","nameLocation":"15955:1:19","nodeType":"VariableDeclaration","scope":4098,"src":"15950:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4078,"name":"bool","nodeType":"ElementaryTypeName","src":"15950:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4081,"mutability":"mutable","name":"v","nameLocation":"15966:1:19","nodeType":"VariableDeclaration","scope":4098,"src":"15958:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4080,"name":"uint256","nodeType":"ElementaryTypeName","src":"15958:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4087,"initialValue":{"arguments":[{"id":4083,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4008,"src":"16003:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4084,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4010,"src":"16010:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4085,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4012,"src":"16017:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4082,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3934,"src":"15971:31:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":4086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15971:50:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"15949:72:19"},{"expression":{"components":[{"id":4088,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4079,"src":"16043:1:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"arguments":[{"id":4093,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4081,"src":"16062:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4092,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16054:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4091,"name":"uint160","nodeType":"ElementaryTypeName","src":"16054:7:19","typeDescriptions":{}}},"id":4094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":4090,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16046:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4089,"name":"address","nodeType":"ElementaryTypeName","src":"16046:7:19","typeDescriptions":{}}},"id":4095,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16046:19:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":4096,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16042:24:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":4018,"id":4097,"nodeType":"Return","src":"16035:31:19"}]}}]},"documentation":{"id":4006,"nodeType":"StructuredDocumentation","src":"15020:226:19","text":" @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n formatted address. See {parseAddress-string-uint256-uint256} requirements."},"id":4109,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"15260:15:19","nodeType":"FunctionDefinition","parameters":{"id":4013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4008,"mutability":"mutable","name":"input","nameLocation":"15299:5:19","nodeType":"VariableDeclaration","scope":4109,"src":"15285:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4007,"name":"string","nodeType":"ElementaryTypeName","src":"15285:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4010,"mutability":"mutable","name":"begin","nameLocation":"15322:5:19","nodeType":"VariableDeclaration","scope":4109,"src":"15314:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4009,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4012,"mutability":"mutable","name":"end","nameLocation":"15345:3:19","nodeType":"VariableDeclaration","scope":4109,"src":"15337:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4011,"name":"uint256","nodeType":"ElementaryTypeName","src":"15337:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15275:79:19"},"returnParameters":{"id":4018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4015,"mutability":"mutable","name":"success","nameLocation":"15383:7:19","nodeType":"VariableDeclaration","scope":4109,"src":"15378:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4014,"name":"bool","nodeType":"ElementaryTypeName","src":"15378:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4017,"mutability":"mutable","name":"value","nameLocation":"15400:5:19","nodeType":"VariableDeclaration","scope":4109,"src":"15392:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4016,"name":"address","nodeType":"ElementaryTypeName","src":"15392:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15377:29:19"},"scope":4348,"src":"15251:889:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4168,"nodeType":"Block","src":"16209:461:19","statements":[{"assignments":[4117],"declarations":[{"constant":false,"id":4117,"mutability":"mutable","name":"value","nameLocation":"16225:5:19","nodeType":"VariableDeclaration","scope":4168,"src":"16219:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4116,"name":"uint8","nodeType":"ElementaryTypeName","src":"16219:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":4122,"initialValue":{"arguments":[{"id":4120,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4111,"src":"16239:3:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":4119,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16233:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4118,"name":"uint8","nodeType":"ElementaryTypeName","src":"16233:5:19","typeDescriptions":{}}},"id":4121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16233:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"16219:24:19"},{"id":4165,"nodeType":"UncheckedBlock","src":"16403:238:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4123,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4117,"src":"16431:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3437","id":4124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16439:2:19","typeDescriptions":{"typeIdentifier":"t_rational_47_by_1","typeString":"int_const 47"},"value":"47"},"src":"16431:10:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4126,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4117,"src":"16445:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3538","id":4127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16453:2:19","typeDescriptions":{"typeIdentifier":"t_rational_58_by_1","typeString":"int_const 58"},"value":"58"},"src":"16445:10:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16431:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4134,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4117,"src":"16491:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":4135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16499:2:19","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"16491:10:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4137,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4117,"src":"16505:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"313033","id":4138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16513:3:19","typeDescriptions":{"typeIdentifier":"t_rational_103_by_1","typeString":"int_const 103"},"value":"103"},"src":"16505:11:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16491:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4145,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4117,"src":"16552:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3634","id":4146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16560:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"16552:10:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4148,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4117,"src":"16566:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3731","id":4149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16574:2:19","typeDescriptions":{"typeIdentifier":"t_rational_71_by_1","typeString":"int_const 71"},"value":"71"},"src":"16566:10:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16552:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"expression":{"arguments":[{"id":4158,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16620:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4157,"name":"uint8","nodeType":"ElementaryTypeName","src":"16620:5:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":4156,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16615:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16615:11:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":4160,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16627:3:19","memberName":"max","nodeType":"MemberAccess","src":"16615:15:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":4115,"id":4161,"nodeType":"Return","src":"16608:22:19"},"id":4162,"nodeType":"IfStatement","src":"16548:82:19","trueBody":{"expression":{"id":4154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4152,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4117,"src":"16578:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3535","id":4153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16587:2:19","typeDescriptions":{"typeIdentifier":"t_rational_55_by_1","typeString":"int_const 55"},"value":"55"},"src":"16578:11:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":4155,"nodeType":"ExpressionStatement","src":"16578:11:19"}},"id":4163,"nodeType":"IfStatement","src":"16487:143:19","trueBody":{"expression":{"id":4143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4141,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4117,"src":"16518:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3837","id":4142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16527:2:19","typeDescriptions":{"typeIdentifier":"t_rational_87_by_1","typeString":"int_const 87"},"value":"87"},"src":"16518:11:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":4144,"nodeType":"ExpressionStatement","src":"16518:11:19"}},"id":4164,"nodeType":"IfStatement","src":"16427:203:19","trueBody":{"expression":{"id":4132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4130,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4117,"src":"16457:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3438","id":4131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16466:2:19","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"16457:11:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":4133,"nodeType":"ExpressionStatement","src":"16457:11:19"}}]},{"expression":{"id":4166,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4117,"src":"16658:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":4115,"id":4167,"nodeType":"Return","src":"16651:12:19"}]},"id":4169,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseChr","nameLocation":"16155:12:19","nodeType":"FunctionDefinition","parameters":{"id":4112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4111,"mutability":"mutable","name":"chr","nameLocation":"16175:3:19","nodeType":"VariableDeclaration","scope":4169,"src":"16168:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":4110,"name":"bytes1","nodeType":"ElementaryTypeName","src":"16168:6:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"src":"16167:12:19"},"returnParameters":{"id":4115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4114,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4169,"src":"16202:5:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4113,"name":"uint8","nodeType":"ElementaryTypeName","src":"16202:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16201:7:19"},"scope":4348,"src":"16146:524:19","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4334,"nodeType":"Block","src":"17336:1331:19","statements":[{"assignments":[4178],"declarations":[{"constant":false,"id":4178,"mutability":"mutable","name":"buffer","nameLocation":"17359:6:19","nodeType":"VariableDeclaration","scope":4334,"src":"17346:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4177,"name":"bytes","nodeType":"ElementaryTypeName","src":"17346:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4183,"initialValue":{"arguments":[{"id":4181,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4172,"src":"17374:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4180,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17368:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4179,"name":"bytes","nodeType":"ElementaryTypeName","src":"17368:5:19","typeDescriptions":{}}},"id":4182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17368:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17346:34:19"},{"assignments":[4185],"declarations":[{"constant":false,"id":4185,"mutability":"mutable","name":"output","nameLocation":"17403:6:19","nodeType":"VariableDeclaration","scope":4334,"src":"17390:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4184,"name":"bytes","nodeType":"ElementaryTypeName","src":"17390:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4193,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17422:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":4189,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4178,"src":"17426:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17433:6:19","memberName":"length","nodeType":"MemberAccess","src":"17426:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17422:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4187,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"17412:9:19","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":4186,"name":"bytes","nodeType":"ElementaryTypeName","src":"17416:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":4192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17412:28:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17390:50:19"},{"assignments":[4195],"declarations":[{"constant":false,"id":4195,"mutability":"mutable","name":"outputLength","nameLocation":"17481:12:19","nodeType":"VariableDeclaration","scope":4334,"src":"17473:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4194,"name":"uint256","nodeType":"ElementaryTypeName","src":"17473:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4197,"initialValue":{"hexValue":"30","id":4196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17496:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17473:24:19"},{"body":{"id":4326,"nodeType":"Block","src":"17548:854:19","statements":[{"assignments":[4209],"declarations":[{"constant":false,"id":4209,"mutability":"mutable","name":"char","nameLocation":"17569:4:19","nodeType":"VariableDeclaration","scope":4326,"src":"17562:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":4208,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17562:6:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":4217,"initialValue":{"arguments":[{"arguments":[{"id":4213,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4178,"src":"17606:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4214,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4199,"src":"17614:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4212,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4347,"src":"17583:22:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":4215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17583:33:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4211,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17576:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":4210,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17576:6:19","typeDescriptions":{}}},"id":4216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17576:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"17562:55:19"},{"condition":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4218,"name":"SPECIAL_CHARS_LOOKUP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2999,"src":"17637:20:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17661:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"arguments":[{"id":4222,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4209,"src":"17672:4:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":4221,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17666:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4220,"name":"uint8","nodeType":"ElementaryTypeName","src":"17666:5:19","typeDescriptions":{}}},"id":4223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17666:11:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"17661:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4225,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17660:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17637:41:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4227,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17636:43:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17683:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17636:48:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":4230,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17635:50:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4324,"nodeType":"Block","src":"18330:62:19","statements":[{"expression":{"id":4322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4317,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4185,"src":"18348:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4320,"indexExpression":{"id":4319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18355:14:19","subExpression":{"id":4318,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4195,"src":"18355:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18348:22:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4321,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4209,"src":"18373:4:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"18348:29:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4323,"nodeType":"ExpressionStatement","src":"18348:29:19"}]},"id":4325,"nodeType":"IfStatement","src":"17631:761:19","trueBody":{"id":4316,"nodeType":"Block","src":"17687:637:19","statements":[{"expression":{"id":4236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4231,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4185,"src":"17705:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4234,"indexExpression":{"id":4233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17712:14:19","subExpression":{"id":4232,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4195,"src":"17712:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17705:22:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":4235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17730:4:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"17705:29:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4237,"nodeType":"ExpressionStatement","src":"17705:29:19"},{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4238,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4209,"src":"17756:4:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783038","id":4239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17764:4:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"17756:12:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4248,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4209,"src":"17825:4:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783039","id":4249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17833:4:19","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"17825:12:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4258,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4209,"src":"17894:4:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783061","id":4259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17902:4:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"17894:12:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4268,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4209,"src":"17963:4:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783063","id":4269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17971:4:19","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"17963:12:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4278,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4209,"src":"18032:4:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783064","id":4279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18040:4:19","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"18032:12:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4288,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4209,"src":"18101:4:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783563","id":4289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18109:4:19","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"18101:12:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4298,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4209,"src":"18171:4:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783232","id":4299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18179:4:19","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"18171:12:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4309,"nodeType":"IfStatement","src":"18167:143:19","trueBody":{"id":4308,"nodeType":"Block","src":"18185:125:19","statements":[{"expression":{"id":4306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4301,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4185,"src":"18263:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4304,"indexExpression":{"id":4303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18270:14:19","subExpression":{"id":4302,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4195,"src":"18270:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18263:22:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"22","id":4305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18288:3:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0","typeString":"literal_string \"\"\""},"value":"\""},"src":"18263:28:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4307,"nodeType":"ExpressionStatement","src":"18263:28:19"}]}},"id":4310,"nodeType":"IfStatement","src":"18097:213:19","trueBody":{"expression":{"id":4296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4291,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4185,"src":"18115:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4294,"indexExpression":{"id":4293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18122:14:19","subExpression":{"id":4292,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4195,"src":"18122:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18115:22:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":4295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18140:4:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"18115:29:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4297,"nodeType":"ExpressionStatement","src":"18115:29:19"}},"id":4311,"nodeType":"IfStatement","src":"18028:282:19","trueBody":{"expression":{"id":4286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4281,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4185,"src":"18046:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4284,"indexExpression":{"id":4283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18053:14:19","subExpression":{"id":4282,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4195,"src":"18053:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18046:22:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"72","id":4285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18071:3:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_414f72a4d550cad29f17d9d99a4af64b3776ec5538cd440cef0f03fef2e9e010","typeString":"literal_string \"r\""},"value":"r"},"src":"18046:28:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4287,"nodeType":"ExpressionStatement","src":"18046:28:19"}},"id":4312,"nodeType":"IfStatement","src":"17959:351:19","trueBody":{"expression":{"id":4276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4271,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4185,"src":"17977:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4274,"indexExpression":{"id":4273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17984:14:19","subExpression":{"id":4272,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4195,"src":"17984:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17977:22:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66","id":4275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18002:3:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_d1e8aeb79500496ef3dc2e57ba746a8315d048b7a664a2bf948db4fa91960483","typeString":"literal_string \"f\""},"value":"f"},"src":"17977:28:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4277,"nodeType":"ExpressionStatement","src":"17977:28:19"}},"id":4313,"nodeType":"IfStatement","src":"17890:420:19","trueBody":{"expression":{"id":4266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4261,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4185,"src":"17908:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4264,"indexExpression":{"id":4263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17915:14:19","subExpression":{"id":4262,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4195,"src":"17915:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17908:22:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"6e","id":4265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17933:3:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_4b4ecedb4964a40fe416b16c7bd8b46092040ec42ef0aa69e59f09872f105cf3","typeString":"literal_string \"n\""},"value":"n"},"src":"17908:28:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4267,"nodeType":"ExpressionStatement","src":"17908:28:19"}},"id":4314,"nodeType":"IfStatement","src":"17821:489:19","trueBody":{"expression":{"id":4256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4251,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4185,"src":"17839:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4254,"indexExpression":{"id":4253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17846:14:19","subExpression":{"id":4252,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4195,"src":"17846:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17839:22:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74","id":4255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17864:3:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_cac1bb71f0a97c8ac94ca9546b43178a9ad254c7b757ac07433aa6df35cd8089","typeString":"literal_string \"t\""},"value":"t"},"src":"17839:28:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4257,"nodeType":"ExpressionStatement","src":"17839:28:19"}},"id":4315,"nodeType":"IfStatement","src":"17752:558:19","trueBody":{"expression":{"id":4246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4241,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4185,"src":"17770:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4244,"indexExpression":{"id":4243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17777:14:19","subExpression":{"id":4242,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4195,"src":"17777:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17770:22:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"62","id":4245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17795:3:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_b5553de315e0edf504d9150af82dafa5c4667fa618ed0a6f19c69b41166c5510","typeString":"literal_string \"b\""},"value":"b"},"src":"17770:28:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4247,"nodeType":"ExpressionStatement","src":"17770:28:19"}}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4201,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4199,"src":"17524:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4202,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4178,"src":"17528:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17535:6:19","memberName":"length","nodeType":"MemberAccess","src":"17528:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17524:17:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4327,"initializationExpression":{"assignments":[4199],"declarations":[{"constant":false,"id":4199,"mutability":"mutable","name":"i","nameLocation":"17521:1:19","nodeType":"VariableDeclaration","scope":4327,"src":"17513:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4198,"name":"uint256","nodeType":"ElementaryTypeName","src":"17513:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4200,"nodeType":"VariableDeclarationStatement","src":"17513:9:19"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17543:3:19","subExpression":{"id":4205,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4199,"src":"17545:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4207,"nodeType":"ExpressionStatement","src":"17543:3:19"},"nodeType":"ForStatement","src":"17508:894:19"},{"AST":{"nativeSrc":"18500:129:19","nodeType":"YulBlock","src":"18500:129:19","statements":[{"expression":{"arguments":[{"name":"output","nativeSrc":"18521:6:19","nodeType":"YulIdentifier","src":"18521:6:19"},{"name":"outputLength","nativeSrc":"18529:12:19","nodeType":"YulIdentifier","src":"18529:12:19"}],"functionName":{"name":"mstore","nativeSrc":"18514:6:19","nodeType":"YulIdentifier","src":"18514:6:19"},"nativeSrc":"18514:28:19","nodeType":"YulFunctionCall","src":"18514:28:19"},"nativeSrc":"18514:28:19","nodeType":"YulExpressionStatement","src":"18514:28:19"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"18562:4:19","nodeType":"YulLiteral","src":"18562:4:19","type":"","value":"0x40"},{"arguments":[{"name":"output","nativeSrc":"18572:6:19","nodeType":"YulIdentifier","src":"18572:6:19"},{"arguments":[{"kind":"number","nativeSrc":"18584:1:19","nodeType":"YulLiteral","src":"18584:1:19","type":"","value":"5"},{"arguments":[{"kind":"number","nativeSrc":"18591:1:19","nodeType":"YulLiteral","src":"18591:1:19","type":"","value":"5"},{"arguments":[{"name":"outputLength","nativeSrc":"18598:12:19","nodeType":"YulIdentifier","src":"18598:12:19"},{"kind":"number","nativeSrc":"18612:2:19","nodeType":"YulLiteral","src":"18612:2:19","type":"","value":"63"}],"functionName":{"name":"add","nativeSrc":"18594:3:19","nodeType":"YulIdentifier","src":"18594:3:19"},"nativeSrc":"18594:21:19","nodeType":"YulFunctionCall","src":"18594:21:19"}],"functionName":{"name":"shr","nativeSrc":"18587:3:19","nodeType":"YulIdentifier","src":"18587:3:19"},"nativeSrc":"18587:29:19","nodeType":"YulFunctionCall","src":"18587:29:19"}],"functionName":{"name":"shl","nativeSrc":"18580:3:19","nodeType":"YulIdentifier","src":"18580:3:19"},"nativeSrc":"18580:37:19","nodeType":"YulFunctionCall","src":"18580:37:19"}],"functionName":{"name":"add","nativeSrc":"18568:3:19","nodeType":"YulIdentifier","src":"18568:3:19"},"nativeSrc":"18568:50:19","nodeType":"YulFunctionCall","src":"18568:50:19"}],"functionName":{"name":"mstore","nativeSrc":"18555:6:19","nodeType":"YulIdentifier","src":"18555:6:19"},"nativeSrc":"18555:64:19","nodeType":"YulFunctionCall","src":"18555:64:19"},"nativeSrc":"18555:64:19","nodeType":"YulExpressionStatement","src":"18555:64:19"}]},"evmVersion":"paris","externalReferences":[{"declaration":4185,"isOffset":false,"isSlot":false,"src":"18521:6:19","valueSize":1},{"declaration":4185,"isOffset":false,"isSlot":false,"src":"18572:6:19","valueSize":1},{"declaration":4195,"isOffset":false,"isSlot":false,"src":"18529:12:19","valueSize":1},{"declaration":4195,"isOffset":false,"isSlot":false,"src":"18598:12:19","valueSize":1}],"flags":["memory-safe"],"id":4328,"nodeType":"InlineAssembly","src":"18475:154:19"},{"expression":{"arguments":[{"id":4331,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4185,"src":"18653:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4330,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18646:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":4329,"name":"string","nodeType":"ElementaryTypeName","src":"18646:6:19","typeDescriptions":{}}},"id":4332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18646:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4176,"id":4333,"nodeType":"Return","src":"18639:21:19"}]},"documentation":{"id":4170,"nodeType":"StructuredDocumentation","src":"16676:576:19","text":" @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n characters that are not in this range, but other tooling may provide different results."},"id":4335,"implemented":true,"kind":"function","modifiers":[],"name":"escapeJSON","nameLocation":"17266:10:19","nodeType":"FunctionDefinition","parameters":{"id":4173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4172,"mutability":"mutable","name":"input","nameLocation":"17291:5:19","nodeType":"VariableDeclaration","scope":4335,"src":"17277:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4171,"name":"string","nodeType":"ElementaryTypeName","src":"17277:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17276:21:19"},"returnParameters":{"id":4176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4175,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4335,"src":"17321:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4174,"name":"string","nodeType":"ElementaryTypeName","src":"17321:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17320:15:19"},"scope":4348,"src":"17257:1410:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4346,"nodeType":"Block","src":"19052:225:19","statements":[{"AST":{"nativeSrc":"19201:70:19","nodeType":"YulBlock","src":"19201:70:19","statements":[{"nativeSrc":"19215:46:19","nodeType":"YulAssignment","src":"19215:46:19","value":{"arguments":[{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"19238:6:19","nodeType":"YulIdentifier","src":"19238:6:19"},{"kind":"number","nativeSrc":"19246:4:19","nodeType":"YulLiteral","src":"19246:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"19234:3:19","nodeType":"YulIdentifier","src":"19234:3:19"},"nativeSrc":"19234:17:19","nodeType":"YulFunctionCall","src":"19234:17:19"},{"name":"offset","nativeSrc":"19253:6:19","nodeType":"YulIdentifier","src":"19253:6:19"}],"functionName":{"name":"add","nativeSrc":"19230:3:19","nodeType":"YulIdentifier","src":"19230:3:19"},"nativeSrc":"19230:30:19","nodeType":"YulFunctionCall","src":"19230:30:19"}],"functionName":{"name":"mload","nativeSrc":"19224:5:19","nodeType":"YulIdentifier","src":"19224:5:19"},"nativeSrc":"19224:37:19","nodeType":"YulFunctionCall","src":"19224:37:19"},"variableNames":[{"name":"value","nativeSrc":"19215:5:19","nodeType":"YulIdentifier","src":"19215:5:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4338,"isOffset":false,"isSlot":false,"src":"19238:6:19","valueSize":1},{"declaration":4340,"isOffset":false,"isSlot":false,"src":"19253:6:19","valueSize":1},{"declaration":4343,"isOffset":false,"isSlot":false,"src":"19215:5:19","valueSize":1}],"flags":["memory-safe"],"id":4345,"nodeType":"InlineAssembly","src":"19176:95:19"}]},"documentation":{"id":4336,"nodeType":"StructuredDocumentation","src":"18673:268:19","text":" @dev Reads a bytes32 from a bytes array without bounds checking.\n NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n assembly block as such would prevent some optimizations."},"id":4347,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeReadBytesOffset","nameLocation":"18955:22:19","nodeType":"FunctionDefinition","parameters":{"id":4341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4338,"mutability":"mutable","name":"buffer","nameLocation":"18991:6:19","nodeType":"VariableDeclaration","scope":4347,"src":"18978:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4337,"name":"bytes","nodeType":"ElementaryTypeName","src":"18978:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4340,"mutability":"mutable","name":"offset","nameLocation":"19007:6:19","nodeType":"VariableDeclaration","scope":4347,"src":"18999:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4339,"name":"uint256","nodeType":"ElementaryTypeName","src":"18999:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18977:37:19"},"returnParameters":{"id":4344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4343,"mutability":"mutable","name":"value","nameLocation":"19045:5:19","nodeType":"VariableDeclaration","scope":4347,"src":"19037:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4342,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19037:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19036:15:19"},"scope":4348,"src":"18946:331:19","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":4349,"src":"297:18982:19","usedErrors":[3006,3009,3012],"usedEvents":[]}],"src":"101:19179:19"},"id":19},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[4696]},"id":4697,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4350,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:20"},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":4351,"nodeType":"StructuredDocumentation","src":"138:205:20","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":4696,"linearizedBaseContracts":[4696],"name":"ECDSA","nameLocation":"352:5:20","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":4356,"members":[{"id":4352,"name":"NoError","nameLocation":"392:7:20","nodeType":"EnumValue","src":"392:7:20"},{"id":4353,"name":"InvalidSignature","nameLocation":"409:16:20","nodeType":"EnumValue","src":"409:16:20"},{"id":4354,"name":"InvalidSignatureLength","nameLocation":"435:22:20","nodeType":"EnumValue","src":"435:22:20"},{"id":4355,"name":"InvalidSignatureS","nameLocation":"467:17:20","nodeType":"EnumValue","src":"467:17:20"}],"name":"RecoverError","nameLocation":"369:12:20","nodeType":"EnumDefinition","src":"364:126:20"},{"documentation":{"id":4357,"nodeType":"StructuredDocumentation","src":"496:63:20","text":" @dev The signature derives the `address(0)`."},"errorSelector":"f645eedf","id":4359,"name":"ECDSAInvalidSignature","nameLocation":"570:21:20","nodeType":"ErrorDefinition","parameters":{"id":4358,"nodeType":"ParameterList","parameters":[],"src":"591:2:20"},"src":"564:30:20"},{"documentation":{"id":4360,"nodeType":"StructuredDocumentation","src":"600:60:20","text":" @dev The signature has an invalid length."},"errorSelector":"fce698f7","id":4364,"name":"ECDSAInvalidSignatureLength","nameLocation":"671:27:20","nodeType":"ErrorDefinition","parameters":{"id":4363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4362,"mutability":"mutable","name":"length","nameLocation":"707:6:20","nodeType":"VariableDeclaration","scope":4364,"src":"699:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4361,"name":"uint256","nodeType":"ElementaryTypeName","src":"699:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"698:16:20"},"src":"665:50:20"},{"documentation":{"id":4365,"nodeType":"StructuredDocumentation","src":"721:85:20","text":" @dev The signature has an S value that is in the upper half order."},"errorSelector":"d78bce0c","id":4369,"name":"ECDSAInvalidSignatureS","nameLocation":"817:22:20","nodeType":"ErrorDefinition","parameters":{"id":4368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4367,"mutability":"mutable","name":"s","nameLocation":"848:1:20","nodeType":"VariableDeclaration","scope":4369,"src":"840:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4366,"name":"bytes32","nodeType":"ElementaryTypeName","src":"840:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"839:11:20"},"src":"811:40:20"},{"body":{"id":4421,"nodeType":"Block","src":"2285:622:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4384,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4374,"src":"2299:9:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2309:6:20","memberName":"length","nodeType":"MemberAccess","src":"2299:16:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":4386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2319:2:20","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2299:22:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4419,"nodeType":"Block","src":"2793:108:20","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":4408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2823:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4407,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2815:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4406,"name":"address","nodeType":"ElementaryTypeName","src":"2815:7:20","typeDescriptions":{}}},"id":4409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2815:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4410,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4356,"src":"2827:12:20","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$4356_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4411,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2840:22:20","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":4354,"src":"2827:35:20","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4356","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"expression":{"id":4414,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4374,"src":"2872:9:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2882:6:20","memberName":"length","nodeType":"MemberAccess","src":"2872:16:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4413,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2864:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4412,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2864:7:20","typeDescriptions":{}}},"id":4416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2864:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":4417,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2814:76:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4356_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":4383,"id":4418,"nodeType":"Return","src":"2807:83:20"}]},"id":4420,"nodeType":"IfStatement","src":"2295:606:20","trueBody":{"id":4405,"nodeType":"Block","src":"2323:464:20","statements":[{"assignments":[4389],"declarations":[{"constant":false,"id":4389,"mutability":"mutable","name":"r","nameLocation":"2345:1:20","nodeType":"VariableDeclaration","scope":4405,"src":"2337:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4388,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2337:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4390,"nodeType":"VariableDeclarationStatement","src":"2337:9:20"},{"assignments":[4392],"declarations":[{"constant":false,"id":4392,"mutability":"mutable","name":"s","nameLocation":"2368:1:20","nodeType":"VariableDeclaration","scope":4405,"src":"2360:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4391,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2360:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4393,"nodeType":"VariableDeclarationStatement","src":"2360:9:20"},{"assignments":[4395],"declarations":[{"constant":false,"id":4395,"mutability":"mutable","name":"v","nameLocation":"2389:1:20","nodeType":"VariableDeclaration","scope":4405,"src":"2383:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4394,"name":"uint8","nodeType":"ElementaryTypeName","src":"2383:5:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":4396,"nodeType":"VariableDeclarationStatement","src":"2383:7:20"},{"AST":{"nativeSrc":"2560:171:20","nodeType":"YulBlock","src":"2560:171:20","statements":[{"nativeSrc":"2578:32:20","nodeType":"YulAssignment","src":"2578:32:20","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2593:9:20","nodeType":"YulIdentifier","src":"2593:9:20"},{"kind":"number","nativeSrc":"2604:4:20","nodeType":"YulLiteral","src":"2604:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2589:3:20","nodeType":"YulIdentifier","src":"2589:3:20"},"nativeSrc":"2589:20:20","nodeType":"YulFunctionCall","src":"2589:20:20"}],"functionName":{"name":"mload","nativeSrc":"2583:5:20","nodeType":"YulIdentifier","src":"2583:5:20"},"nativeSrc":"2583:27:20","nodeType":"YulFunctionCall","src":"2583:27:20"},"variableNames":[{"name":"r","nativeSrc":"2578:1:20","nodeType":"YulIdentifier","src":"2578:1:20"}]},{"nativeSrc":"2627:32:20","nodeType":"YulAssignment","src":"2627:32:20","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2642:9:20","nodeType":"YulIdentifier","src":"2642:9:20"},{"kind":"number","nativeSrc":"2653:4:20","nodeType":"YulLiteral","src":"2653:4:20","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"2638:3:20","nodeType":"YulIdentifier","src":"2638:3:20"},"nativeSrc":"2638:20:20","nodeType":"YulFunctionCall","src":"2638:20:20"}],"functionName":{"name":"mload","nativeSrc":"2632:5:20","nodeType":"YulIdentifier","src":"2632:5:20"},"nativeSrc":"2632:27:20","nodeType":"YulFunctionCall","src":"2632:27:20"},"variableNames":[{"name":"s","nativeSrc":"2627:1:20","nodeType":"YulIdentifier","src":"2627:1:20"}]},{"nativeSrc":"2676:41:20","nodeType":"YulAssignment","src":"2676:41:20","value":{"arguments":[{"kind":"number","nativeSrc":"2686:1:20","nodeType":"YulLiteral","src":"2686:1:20","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2699:9:20","nodeType":"YulIdentifier","src":"2699:9:20"},{"kind":"number","nativeSrc":"2710:4:20","nodeType":"YulLiteral","src":"2710:4:20","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"2695:3:20","nodeType":"YulIdentifier","src":"2695:3:20"},"nativeSrc":"2695:20:20","nodeType":"YulFunctionCall","src":"2695:20:20"}],"functionName":{"name":"mload","nativeSrc":"2689:5:20","nodeType":"YulIdentifier","src":"2689:5:20"},"nativeSrc":"2689:27:20","nodeType":"YulFunctionCall","src":"2689:27:20"}],"functionName":{"name":"byte","nativeSrc":"2681:4:20","nodeType":"YulIdentifier","src":"2681:4:20"},"nativeSrc":"2681:36:20","nodeType":"YulFunctionCall","src":"2681:36:20"},"variableNames":[{"name":"v","nativeSrc":"2676:1:20","nodeType":"YulIdentifier","src":"2676:1:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4389,"isOffset":false,"isSlot":false,"src":"2578:1:20","valueSize":1},{"declaration":4392,"isOffset":false,"isSlot":false,"src":"2627:1:20","valueSize":1},{"declaration":4374,"isOffset":false,"isSlot":false,"src":"2593:9:20","valueSize":1},{"declaration":4374,"isOffset":false,"isSlot":false,"src":"2642:9:20","valueSize":1},{"declaration":4374,"isOffset":false,"isSlot":false,"src":"2699:9:20","valueSize":1},{"declaration":4395,"isOffset":false,"isSlot":false,"src":"2676:1:20","valueSize":1}],"flags":["memory-safe"],"id":4397,"nodeType":"InlineAssembly","src":"2535:196:20"},{"expression":{"arguments":[{"id":4399,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4372,"src":"2762:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4400,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4395,"src":"2768:1:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":4401,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4389,"src":"2771:1:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4402,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"2774:1:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4398,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[4422,4502,4610],"referencedDeclaration":4610,"src":"2751:10:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$4356_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":4403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2751:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4356_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":4383,"id":4404,"nodeType":"Return","src":"2744:32:20"}]}}]},"documentation":{"id":4370,"nodeType":"StructuredDocumentation","src":"857:1267:20","text":" @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"},"id":4422,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2138:10:20","nodeType":"FunctionDefinition","parameters":{"id":4375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4372,"mutability":"mutable","name":"hash","nameLocation":"2166:4:20","nodeType":"VariableDeclaration","scope":4422,"src":"2158:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4371,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2158:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4374,"mutability":"mutable","name":"signature","nameLocation":"2193:9:20","nodeType":"VariableDeclaration","scope":4422,"src":"2180:22:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4373,"name":"bytes","nodeType":"ElementaryTypeName","src":"2180:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2148:60:20"},"returnParameters":{"id":4383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4377,"mutability":"mutable","name":"recovered","nameLocation":"2240:9:20","nodeType":"VariableDeclaration","scope":4422,"src":"2232:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4376,"name":"address","nodeType":"ElementaryTypeName","src":"2232:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4380,"mutability":"mutable","name":"err","nameLocation":"2264:3:20","nodeType":"VariableDeclaration","scope":4422,"src":"2251:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4356","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":4379,"nodeType":"UserDefinedTypeName","pathNode":{"id":4378,"name":"RecoverError","nameLocations":["2251:12:20"],"nodeType":"IdentifierPath","referencedDeclaration":4356,"src":"2251:12:20"},"referencedDeclaration":4356,"src":"2251:12:20","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4356","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":4382,"mutability":"mutable","name":"errArg","nameLocation":"2277:6:20","nodeType":"VariableDeclaration","scope":4422,"src":"2269:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4381,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2269:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2231:53:20"},"scope":4696,"src":"2129:778:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4451,"nodeType":"Block","src":"3801:168:20","statements":[{"assignments":[4433,4436,4438],"declarations":[{"constant":false,"id":4433,"mutability":"mutable","name":"recovered","nameLocation":"3820:9:20","nodeType":"VariableDeclaration","scope":4451,"src":"3812:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4432,"name":"address","nodeType":"ElementaryTypeName","src":"3812:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4436,"mutability":"mutable","name":"error","nameLocation":"3844:5:20","nodeType":"VariableDeclaration","scope":4451,"src":"3831:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4356","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":4435,"nodeType":"UserDefinedTypeName","pathNode":{"id":4434,"name":"RecoverError","nameLocations":["3831:12:20"],"nodeType":"IdentifierPath","referencedDeclaration":4356,"src":"3831:12:20"},"referencedDeclaration":4356,"src":"3831:12:20","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4356","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":4438,"mutability":"mutable","name":"errorArg","nameLocation":"3859:8:20","nodeType":"VariableDeclaration","scope":4451,"src":"3851:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4437,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3851:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4443,"initialValue":{"arguments":[{"id":4440,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4425,"src":"3882:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4441,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4427,"src":"3888:9:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4439,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[4422,4502,4610],"referencedDeclaration":4422,"src":"3871:10:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$4356_$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":4442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3871:27:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4356_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"3811:87:20"},{"expression":{"arguments":[{"id":4445,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4436,"src":"3920:5:20","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4356","typeString":"enum ECDSA.RecoverError"}},{"id":4446,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4438,"src":"3927:8:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$4356","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4444,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4695,"src":"3908:11:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$4356_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":4447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3908:28:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4448,"nodeType":"ExpressionStatement","src":"3908:28:20"},{"expression":{"id":4449,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4433,"src":"3953:9:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4431,"id":4450,"nodeType":"Return","src":"3946:16:20"}]},"documentation":{"id":4423,"nodeType":"StructuredDocumentation","src":"2913:796:20","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."},"id":4452,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3723:7:20","nodeType":"FunctionDefinition","parameters":{"id":4428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4425,"mutability":"mutable","name":"hash","nameLocation":"3739:4:20","nodeType":"VariableDeclaration","scope":4452,"src":"3731:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4424,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3731:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4427,"mutability":"mutable","name":"signature","nameLocation":"3758:9:20","nodeType":"VariableDeclaration","scope":4452,"src":"3745:22:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4426,"name":"bytes","nodeType":"ElementaryTypeName","src":"3745:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3730:38:20"},"returnParameters":{"id":4431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4430,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4452,"src":"3792:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4429,"name":"address","nodeType":"ElementaryTypeName","src":"3792:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3791:9:20"},"scope":4696,"src":"3714:255:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4501,"nodeType":"Block","src":"4348:342:20","statements":[{"id":4500,"nodeType":"UncheckedBlock","src":"4358:326:20","statements":[{"assignments":[4470],"declarations":[{"constant":false,"id":4470,"mutability":"mutable","name":"s","nameLocation":"4390:1:20","nodeType":"VariableDeclaration","scope":4500,"src":"4382:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4469,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4382:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4477,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":4476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4471,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4459,"src":"4394:2:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":4474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4407:66:20","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":4473,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4399:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4472,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4399:7:20","typeDescriptions":{}}},"id":4475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4399:75:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4394:80:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4382:92:20"},{"assignments":[4479],"declarations":[{"constant":false,"id":4479,"mutability":"mutable","name":"v","nameLocation":"4591:1:20","nodeType":"VariableDeclaration","scope":4500,"src":"4585:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4478,"name":"uint8","nodeType":"ElementaryTypeName","src":"4585:5:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":4492,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4484,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4459,"src":"4610:2:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4483,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4602:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4482,"name":"uint256","nodeType":"ElementaryTypeName","src":"4602:7:20","typeDescriptions":{}}},"id":4485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4602:11:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":4486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4617:3:20","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4602:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4488,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4601:20:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":4489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4624:2:20","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4601:25:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4481,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4595:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4480,"name":"uint8","nodeType":"ElementaryTypeName","src":"4595:5:20","typeDescriptions":{}}},"id":4491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4595:32:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4585:42:20"},{"expression":{"arguments":[{"id":4494,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4455,"src":"4659:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4495,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4479,"src":"4665:1:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":4496,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4457,"src":"4668:1:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4497,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4470,"src":"4671:1:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4493,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[4422,4502,4610],"referencedDeclaration":4610,"src":"4648:10:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$4356_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":4498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4648:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4356_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":4468,"id":4499,"nodeType":"Return","src":"4641:32:20"}]}]},"documentation":{"id":4453,"nodeType":"StructuredDocumentation","src":"3975:205:20","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]"},"id":4502,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4194:10:20","nodeType":"FunctionDefinition","parameters":{"id":4460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4455,"mutability":"mutable","name":"hash","nameLocation":"4222:4:20","nodeType":"VariableDeclaration","scope":4502,"src":"4214:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4454,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4214:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4457,"mutability":"mutable","name":"r","nameLocation":"4244:1:20","nodeType":"VariableDeclaration","scope":4502,"src":"4236:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4456,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4236:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4459,"mutability":"mutable","name":"vs","nameLocation":"4263:2:20","nodeType":"VariableDeclaration","scope":4502,"src":"4255:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4458,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4255:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4204:67:20"},"returnParameters":{"id":4468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4462,"mutability":"mutable","name":"recovered","nameLocation":"4303:9:20","nodeType":"VariableDeclaration","scope":4502,"src":"4295:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4461,"name":"address","nodeType":"ElementaryTypeName","src":"4295:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4465,"mutability":"mutable","name":"err","nameLocation":"4327:3:20","nodeType":"VariableDeclaration","scope":4502,"src":"4314:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4356","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":4464,"nodeType":"UserDefinedTypeName","pathNode":{"id":4463,"name":"RecoverError","nameLocations":["4314:12:20"],"nodeType":"IdentifierPath","referencedDeclaration":4356,"src":"4314:12:20"},"referencedDeclaration":4356,"src":"4314:12:20","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4356","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":4467,"mutability":"mutable","name":"errArg","nameLocation":"4340:6:20","nodeType":"VariableDeclaration","scope":4502,"src":"4332:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4466,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4332:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4294:53:20"},"scope":4696,"src":"4185:505:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4534,"nodeType":"Block","src":"4903:164:20","statements":[{"assignments":[4515,4518,4520],"declarations":[{"constant":false,"id":4515,"mutability":"mutable","name":"recovered","nameLocation":"4922:9:20","nodeType":"VariableDeclaration","scope":4534,"src":"4914:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4514,"name":"address","nodeType":"ElementaryTypeName","src":"4914:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4518,"mutability":"mutable","name":"error","nameLocation":"4946:5:20","nodeType":"VariableDeclaration","scope":4534,"src":"4933:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4356","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":4517,"nodeType":"UserDefinedTypeName","pathNode":{"id":4516,"name":"RecoverError","nameLocations":["4933:12:20"],"nodeType":"IdentifierPath","referencedDeclaration":4356,"src":"4933:12:20"},"referencedDeclaration":4356,"src":"4933:12:20","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4356","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":4520,"mutability":"mutable","name":"errorArg","nameLocation":"4961:8:20","nodeType":"VariableDeclaration","scope":4534,"src":"4953:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4519,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4953:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4526,"initialValue":{"arguments":[{"id":4522,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4505,"src":"4984:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4523,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4507,"src":"4990:1:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4524,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4509,"src":"4993:2:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4521,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[4422,4502,4610],"referencedDeclaration":4502,"src":"4973:10:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$4356_$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":4525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4973:23:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4356_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"4913:83:20"},{"expression":{"arguments":[{"id":4528,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4518,"src":"5018:5:20","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4356","typeString":"enum ECDSA.RecoverError"}},{"id":4529,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4520,"src":"5025:8:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$4356","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4527,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4695,"src":"5006:11:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$4356_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":4530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5006:28:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4531,"nodeType":"ExpressionStatement","src":"5006:28:20"},{"expression":{"id":4532,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4515,"src":"5051:9:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4513,"id":4533,"nodeType":"Return","src":"5044:16:20"}]},"documentation":{"id":4503,"nodeType":"StructuredDocumentation","src":"4696:116:20","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."},"id":4535,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4826:7:20","nodeType":"FunctionDefinition","parameters":{"id":4510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4505,"mutability":"mutable","name":"hash","nameLocation":"4842:4:20","nodeType":"VariableDeclaration","scope":4535,"src":"4834:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4504,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4834:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4507,"mutability":"mutable","name":"r","nameLocation":"4856:1:20","nodeType":"VariableDeclaration","scope":4535,"src":"4848:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4506,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4848:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4509,"mutability":"mutable","name":"vs","nameLocation":"4867:2:20","nodeType":"VariableDeclaration","scope":4535,"src":"4859:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4508,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4859:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4833:37:20"},"returnParameters":{"id":4513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4512,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4535,"src":"4894:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4511,"name":"address","nodeType":"ElementaryTypeName","src":"4894:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4893:9:20"},"scope":4696,"src":"4817:250:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4609,"nodeType":"Block","src":"5382:1372:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4556,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4544,"src":"6278:1:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4555,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6270:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4554,"name":"uint256","nodeType":"ElementaryTypeName","src":"6270:7:20","typeDescriptions":{}}},"id":4557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6270:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":4558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6283:66:20","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6270:79:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4570,"nodeType":"IfStatement","src":"6266:164:20","trueBody":{"id":4569,"nodeType":"Block","src":"6351:79:20","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":4562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6381:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4561,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6373:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4560,"name":"address","nodeType":"ElementaryTypeName","src":"6373:7:20","typeDescriptions":{}}},"id":4563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6373:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4564,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4356,"src":"6385:12:20","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$4356_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4565,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6398:17:20","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":4355,"src":"6385:30:20","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4356","typeString":"enum ECDSA.RecoverError"}},{"id":4566,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4544,"src":"6417:1:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":4567,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6372:47:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4356_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":4553,"id":4568,"nodeType":"Return","src":"6365:54:20"}]}},{"assignments":[4572],"declarations":[{"constant":false,"id":4572,"mutability":"mutable","name":"signer","nameLocation":"6532:6:20","nodeType":"VariableDeclaration","scope":4609,"src":"6524:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4571,"name":"address","nodeType":"ElementaryTypeName","src":"6524:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4579,"initialValue":{"arguments":[{"id":4574,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4538,"src":"6551:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4575,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4540,"src":"6557:1:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":4576,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4542,"src":"6560:1:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4577,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4544,"src":"6563:1:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4573,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6541:9:20","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":4578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6541:24:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6524:41:20"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4580,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4572,"src":"6579:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":4583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6597:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4582,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6589:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4581,"name":"address","nodeType":"ElementaryTypeName","src":"6589:7:20","typeDescriptions":{}}},"id":4584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6589:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6579:20:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4599,"nodeType":"IfStatement","src":"6575:113:20","trueBody":{"id":4598,"nodeType":"Block","src":"6601:87:20","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":4588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6631:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4587,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6623:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4586,"name":"address","nodeType":"ElementaryTypeName","src":"6623:7:20","typeDescriptions":{}}},"id":4589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6623:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4590,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4356,"src":"6635:12:20","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$4356_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4591,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6648:16:20","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":4353,"src":"6635:29:20","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4356","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":4594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6674:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4593,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6666:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4592,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6666:7:20","typeDescriptions":{}}},"id":4595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6666:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":4596,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6622:55:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4356_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":4553,"id":4597,"nodeType":"Return","src":"6615:62:20"}]}},{"expression":{"components":[{"id":4600,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4572,"src":"6706:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4601,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4356,"src":"6714:12:20","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$4356_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4602,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6727:7:20","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":4352,"src":"6714:20:20","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4356","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":4605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6744:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4604,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6736:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4603,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6736:7:20","typeDescriptions":{}}},"id":4606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6736:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":4607,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6705:42:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4356_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":4553,"id":4608,"nodeType":"Return","src":"6698:49:20"}]},"documentation":{"id":4536,"nodeType":"StructuredDocumentation","src":"5073:125:20","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":4610,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5212:10:20","nodeType":"FunctionDefinition","parameters":{"id":4545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4538,"mutability":"mutable","name":"hash","nameLocation":"5240:4:20","nodeType":"VariableDeclaration","scope":4610,"src":"5232:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4537,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5232:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4540,"mutability":"mutable","name":"v","nameLocation":"5260:1:20","nodeType":"VariableDeclaration","scope":4610,"src":"5254:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4539,"name":"uint8","nodeType":"ElementaryTypeName","src":"5254:5:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4542,"mutability":"mutable","name":"r","nameLocation":"5279:1:20","nodeType":"VariableDeclaration","scope":4610,"src":"5271:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4541,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5271:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4544,"mutability":"mutable","name":"s","nameLocation":"5298:1:20","nodeType":"VariableDeclaration","scope":4610,"src":"5290:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4543,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5290:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5222:83:20"},"returnParameters":{"id":4553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4547,"mutability":"mutable","name":"recovered","nameLocation":"5337:9:20","nodeType":"VariableDeclaration","scope":4610,"src":"5329:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4546,"name":"address","nodeType":"ElementaryTypeName","src":"5329:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4550,"mutability":"mutable","name":"err","nameLocation":"5361:3:20","nodeType":"VariableDeclaration","scope":4610,"src":"5348:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4356","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":4549,"nodeType":"UserDefinedTypeName","pathNode":{"id":4548,"name":"RecoverError","nameLocations":["5348:12:20"],"nodeType":"IdentifierPath","referencedDeclaration":4356,"src":"5348:12:20"},"referencedDeclaration":4356,"src":"5348:12:20","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4356","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":4552,"mutability":"mutable","name":"errArg","nameLocation":"5374:6:20","nodeType":"VariableDeclaration","scope":4610,"src":"5366:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4551,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5366:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5328:53:20"},"scope":4696,"src":"5203:1551:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4645,"nodeType":"Block","src":"6981:166:20","statements":[{"assignments":[4625,4628,4630],"declarations":[{"constant":false,"id":4625,"mutability":"mutable","name":"recovered","nameLocation":"7000:9:20","nodeType":"VariableDeclaration","scope":4645,"src":"6992:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4624,"name":"address","nodeType":"ElementaryTypeName","src":"6992:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4628,"mutability":"mutable","name":"error","nameLocation":"7024:5:20","nodeType":"VariableDeclaration","scope":4645,"src":"7011:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4356","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":4627,"nodeType":"UserDefinedTypeName","pathNode":{"id":4626,"name":"RecoverError","nameLocations":["7011:12:20"],"nodeType":"IdentifierPath","referencedDeclaration":4356,"src":"7011:12:20"},"referencedDeclaration":4356,"src":"7011:12:20","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4356","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":4630,"mutability":"mutable","name":"errorArg","nameLocation":"7039:8:20","nodeType":"VariableDeclaration","scope":4645,"src":"7031:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4629,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7031:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4637,"initialValue":{"arguments":[{"id":4632,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4613,"src":"7062:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4633,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4615,"src":"7068:1:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":4634,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4617,"src":"7071:1:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4635,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4619,"src":"7074:1:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4631,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[4422,4502,4610],"referencedDeclaration":4610,"src":"7051:10:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$4356_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":4636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7051:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4356_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"6991:85:20"},{"expression":{"arguments":[{"id":4639,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4628,"src":"7098:5:20","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4356","typeString":"enum ECDSA.RecoverError"}},{"id":4640,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4630,"src":"7105:8:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$4356","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4638,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4695,"src":"7086:11:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$4356_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":4641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7086:28:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4642,"nodeType":"ExpressionStatement","src":"7086:28:20"},{"expression":{"id":4643,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4625,"src":"7131:9:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4623,"id":4644,"nodeType":"Return","src":"7124:16:20"}]},"documentation":{"id":4611,"nodeType":"StructuredDocumentation","src":"6760:122:20","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":4646,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6896:7:20","nodeType":"FunctionDefinition","parameters":{"id":4620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4613,"mutability":"mutable","name":"hash","nameLocation":"6912:4:20","nodeType":"VariableDeclaration","scope":4646,"src":"6904:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4612,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6904:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4615,"mutability":"mutable","name":"v","nameLocation":"6924:1:20","nodeType":"VariableDeclaration","scope":4646,"src":"6918:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4614,"name":"uint8","nodeType":"ElementaryTypeName","src":"6918:5:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4617,"mutability":"mutable","name":"r","nameLocation":"6935:1:20","nodeType":"VariableDeclaration","scope":4646,"src":"6927:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4616,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6927:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4619,"mutability":"mutable","name":"s","nameLocation":"6946:1:20","nodeType":"VariableDeclaration","scope":4646,"src":"6938:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4618,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6938:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6903:45:20"},"returnParameters":{"id":4623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4622,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4646,"src":"6972:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4621,"name":"address","nodeType":"ElementaryTypeName","src":"6972:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6971:9:20"},"scope":4696,"src":"6887:260:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4694,"nodeType":"Block","src":"7352:460:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$4356","typeString":"enum ECDSA.RecoverError"},"id":4658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4655,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4650,"src":"7366:5:20","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4356","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4656,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4356,"src":"7375:12:20","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$4356_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4657,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7388:7:20","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":4352,"src":"7375:20:20","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4356","typeString":"enum ECDSA.RecoverError"}},"src":"7366:29:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$4356","typeString":"enum ECDSA.RecoverError"},"id":4664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4661,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4650,"src":"7462:5:20","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4356","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4662,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4356,"src":"7471:12:20","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$4356_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4663,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7484:16:20","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":4353,"src":"7471:29:20","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4356","typeString":"enum ECDSA.RecoverError"}},"src":"7462:38:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$4356","typeString":"enum ECDSA.RecoverError"},"id":4672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4669,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4650,"src":"7567:5:20","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4356","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4670,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4356,"src":"7576:12:20","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$4356_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4671,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7589:22:20","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":4354,"src":"7576:35:20","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4356","typeString":"enum ECDSA.RecoverError"}},"src":"7567:44:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$4356","typeString":"enum ECDSA.RecoverError"},"id":4684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4681,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4650,"src":"7701:5:20","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4356","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4682,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4356,"src":"7710:12:20","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$4356_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4683,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7723:17:20","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":4355,"src":"7710:30:20","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4356","typeString":"enum ECDSA.RecoverError"}},"src":"7701:39:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4690,"nodeType":"IfStatement","src":"7697:109:20","trueBody":{"id":4689,"nodeType":"Block","src":"7742:64:20","statements":[{"errorCall":{"arguments":[{"id":4686,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4652,"src":"7786:8:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4685,"name":"ECDSAInvalidSignatureS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4369,"src":"7763:22:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":4687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7763:32:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4688,"nodeType":"RevertStatement","src":"7756:39:20"}]}},"id":4691,"nodeType":"IfStatement","src":"7563:243:20","trueBody":{"id":4680,"nodeType":"Block","src":"7613:78:20","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":4676,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4652,"src":"7670:8:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4675,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7662:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4674,"name":"uint256","nodeType":"ElementaryTypeName","src":"7662:7:20","typeDescriptions":{}}},"id":4677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7662:17:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4673,"name":"ECDSAInvalidSignatureLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4364,"src":"7634:27:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7634:46:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4679,"nodeType":"RevertStatement","src":"7627:53:20"}]}},"id":4692,"nodeType":"IfStatement","src":"7458:348:20","trueBody":{"id":4668,"nodeType":"Block","src":"7502:55:20","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4665,"name":"ECDSAInvalidSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4359,"src":"7523:21:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7523:23:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4667,"nodeType":"RevertStatement","src":"7516:30:20"}]}},"id":4693,"nodeType":"IfStatement","src":"7362:444:20","trueBody":{"id":4660,"nodeType":"Block","src":"7397:55:20","statements":[{"functionReturnParameters":4654,"id":4659,"nodeType":"Return","src":"7411:7:20"}]}}]},"documentation":{"id":4647,"nodeType":"StructuredDocumentation","src":"7153:122:20","text":" @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."},"id":4695,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"7289:11:20","nodeType":"FunctionDefinition","parameters":{"id":4653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4650,"mutability":"mutable","name":"error","nameLocation":"7314:5:20","nodeType":"VariableDeclaration","scope":4695,"src":"7301:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4356","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":4649,"nodeType":"UserDefinedTypeName","pathNode":{"id":4648,"name":"RecoverError","nameLocations":["7301:12:20"],"nodeType":"IdentifierPath","referencedDeclaration":4356,"src":"7301:12:20"},"referencedDeclaration":4356,"src":"7301:12:20","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4356","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":4652,"mutability":"mutable","name":"errorArg","nameLocation":"7329:8:20","nodeType":"VariableDeclaration","scope":4695,"src":"7321:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4651,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7321:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7300:38:20"},"returnParameters":{"id":4654,"nodeType":"ParameterList","parameters":[],"src":"7352:0:20"},"scope":4696,"src":"7280:532:20","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":4697,"src":"344:7470:20","usedErrors":[4359,4364,4369],"usedEvents":[]}],"src":"112:7703:20"},"id":20},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","exportedSymbols":{"MessageHashUtils":[4782],"Strings":[4348]},"id":4783,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4698,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:21"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":4700,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4783,"sourceUnit":4349,"src":"149:39:21","symbolAliases":[{"foreign":{"id":4699,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4348,"src":"157:7:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"MessageHashUtils","contractDependencies":[],"contractKind":"library","documentation":{"id":4701,"nodeType":"StructuredDocumentation","src":"190:330:21","text":" @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."},"fullyImplemented":true,"id":4782,"linearizedBaseContracts":[4782],"name":"MessageHashUtils","nameLocation":"529:16:21","nodeType":"ContractDefinition","nodes":[{"body":{"id":4710,"nodeType":"Block","src":"1339:341:21","statements":[{"AST":{"nativeSrc":"1374:300:21","nodeType":"YulBlock","src":"1374:300:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1395:4:21","nodeType":"YulLiteral","src":"1395:4:21","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nativeSrc":"1401:34:21","nodeType":"YulLiteral","src":"1401:34:21","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nativeSrc":"1388:6:21","nodeType":"YulIdentifier","src":"1388:6:21"},"nativeSrc":"1388:48:21","nodeType":"YulFunctionCall","src":"1388:48:21"},"nativeSrc":"1388:48:21","nodeType":"YulExpressionStatement","src":"1388:48:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1497:4:21","nodeType":"YulLiteral","src":"1497:4:21","type":"","value":"0x1c"},{"name":"messageHash","nativeSrc":"1503:11:21","nodeType":"YulIdentifier","src":"1503:11:21"}],"functionName":{"name":"mstore","nativeSrc":"1490:6:21","nodeType":"YulIdentifier","src":"1490:6:21"},"nativeSrc":"1490:25:21","nodeType":"YulFunctionCall","src":"1490:25:21"},"nativeSrc":"1490:25:21","nodeType":"YulExpressionStatement","src":"1490:25:21"},{"nativeSrc":"1569:31:21","nodeType":"YulAssignment","src":"1569:31:21","value":{"arguments":[{"kind":"number","nativeSrc":"1589:4:21","nodeType":"YulLiteral","src":"1589:4:21","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1595:4:21","nodeType":"YulLiteral","src":"1595:4:21","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nativeSrc":"1579:9:21","nodeType":"YulIdentifier","src":"1579:9:21"},"nativeSrc":"1579:21:21","nodeType":"YulFunctionCall","src":"1579:21:21"},"variableNames":[{"name":"digest","nativeSrc":"1569:6:21","nodeType":"YulIdentifier","src":"1569:6:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4707,"isOffset":false,"isSlot":false,"src":"1569:6:21","valueSize":1},{"declaration":4704,"isOffset":false,"isSlot":false,"src":"1503:11:21","valueSize":1}],"flags":["memory-safe"],"id":4709,"nodeType":"InlineAssembly","src":"1349:325:21"}]},"documentation":{"id":4702,"nodeType":"StructuredDocumentation","src":"552:690:21","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."},"id":4711,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"1256:22:21","nodeType":"FunctionDefinition","parameters":{"id":4705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4704,"mutability":"mutable","name":"messageHash","nameLocation":"1287:11:21","nodeType":"VariableDeclaration","scope":4711,"src":"1279:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4703,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1279:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1278:21:21"},"returnParameters":{"id":4708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4707,"mutability":"mutable","name":"digest","nameLocation":"1331:6:21","nodeType":"VariableDeclaration","scope":4711,"src":"1323:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4706,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1323:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1322:16:21"},"scope":4782,"src":"1247:433:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4736,"nodeType":"Block","src":"2257:143:21","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":4723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2309:32:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"arguments":[{"expression":{"id":4728,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4714,"src":"2366:7:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2374:6:21","memberName":"length","nodeType":"MemberAccess","src":"2366:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4726,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4348,"src":"2349:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$4348_$","typeString":"type(library Strings)"}},"id":4727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2357:8:21","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":3060,"src":"2349:16:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":4730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2349:32:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4725,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2343:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4724,"name":"bytes","nodeType":"ElementaryTypeName","src":"2343:5:21","typeDescriptions":{}}},"id":4731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2343:39:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4732,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4714,"src":"2384:7:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4721,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2296:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4720,"name":"bytes","nodeType":"ElementaryTypeName","src":"2296:5:21","typeDescriptions":{}}},"id":4722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2302:6:21","memberName":"concat","nodeType":"MemberAccess","src":"2296:12:21","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2296:96:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4719,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2286:9:21","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2286:107:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4718,"id":4735,"nodeType":"Return","src":"2267:126:21"}]},"documentation":{"id":4712,"nodeType":"StructuredDocumentation","src":"1686:480:21","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."},"id":4737,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"2180:22:21","nodeType":"FunctionDefinition","parameters":{"id":4715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4714,"mutability":"mutable","name":"message","nameLocation":"2216:7:21","nodeType":"VariableDeclaration","scope":4737,"src":"2203:20:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4713,"name":"bytes","nodeType":"ElementaryTypeName","src":"2203:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2202:22:21"},"returnParameters":{"id":4718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4717,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4737,"src":"2248:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4716,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2248:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2247:9:21"},"scope":4782,"src":"2171:229:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4756,"nodeType":"Block","src":"2854:80:21","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":4750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"2898:10:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":4751,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4740,"src":"2910:9:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4752,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4742,"src":"2921:4:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4748,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2881:3:21","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4749,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2885:12:21","memberName":"encodePacked","nodeType":"MemberAccess","src":"2881:16:21","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2881:45:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4747,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2871:9:21","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2871:56:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4746,"id":4755,"nodeType":"Return","src":"2864:63:21"}]},"documentation":{"id":4738,"nodeType":"StructuredDocumentation","src":"2406:332:21","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."},"id":4757,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"2752:31:21","nodeType":"FunctionDefinition","parameters":{"id":4743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4740,"mutability":"mutable","name":"validator","nameLocation":"2792:9:21","nodeType":"VariableDeclaration","scope":4757,"src":"2784:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4739,"name":"address","nodeType":"ElementaryTypeName","src":"2784:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4742,"mutability":"mutable","name":"data","nameLocation":"2816:4:21","nodeType":"VariableDeclaration","scope":4757,"src":"2803:17:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4741,"name":"bytes","nodeType":"ElementaryTypeName","src":"2803:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2783:38:21"},"returnParameters":{"id":4746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4745,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4757,"src":"2845:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4744,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2845:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2844:9:21"},"scope":4782,"src":"2743:191:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4768,"nodeType":"Block","src":"3216:216:21","statements":[{"AST":{"nativeSrc":"3251:175:21","nodeType":"YulBlock","src":"3251:175:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3272:4:21","nodeType":"YulLiteral","src":"3272:4:21","type":"","value":"0x00"},{"hexValue":"1900","kind":"string","nativeSrc":"3278:10:21","nodeType":"YulLiteral","src":"3278:10:21","type":"","value":"\u0019\u0000"}],"functionName":{"name":"mstore","nativeSrc":"3265:6:21","nodeType":"YulIdentifier","src":"3265:6:21"},"nativeSrc":"3265:24:21","nodeType":"YulFunctionCall","src":"3265:24:21"},"nativeSrc":"3265:24:21","nodeType":"YulExpressionStatement","src":"3265:24:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3309:4:21","nodeType":"YulLiteral","src":"3309:4:21","type":"","value":"0x02"},{"arguments":[{"kind":"number","nativeSrc":"3319:2:21","nodeType":"YulLiteral","src":"3319:2:21","type":"","value":"96"},{"name":"validator","nativeSrc":"3323:9:21","nodeType":"YulIdentifier","src":"3323:9:21"}],"functionName":{"name":"shl","nativeSrc":"3315:3:21","nodeType":"YulIdentifier","src":"3315:3:21"},"nativeSrc":"3315:18:21","nodeType":"YulFunctionCall","src":"3315:18:21"}],"functionName":{"name":"mstore","nativeSrc":"3302:6:21","nodeType":"YulIdentifier","src":"3302:6:21"},"nativeSrc":"3302:32:21","nodeType":"YulFunctionCall","src":"3302:32:21"},"nativeSrc":"3302:32:21","nodeType":"YulExpressionStatement","src":"3302:32:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3354:4:21","nodeType":"YulLiteral","src":"3354:4:21","type":"","value":"0x16"},{"name":"messageHash","nativeSrc":"3360:11:21","nodeType":"YulIdentifier","src":"3360:11:21"}],"functionName":{"name":"mstore","nativeSrc":"3347:6:21","nodeType":"YulIdentifier","src":"3347:6:21"},"nativeSrc":"3347:25:21","nodeType":"YulFunctionCall","src":"3347:25:21"},"nativeSrc":"3347:25:21","nodeType":"YulExpressionStatement","src":"3347:25:21"},{"nativeSrc":"3385:31:21","nodeType":"YulAssignment","src":"3385:31:21","value":{"arguments":[{"kind":"number","nativeSrc":"3405:4:21","nodeType":"YulLiteral","src":"3405:4:21","type":"","value":"0x00"},{"kind":"number","nativeSrc":"3411:4:21","nodeType":"YulLiteral","src":"3411:4:21","type":"","value":"0x36"}],"functionName":{"name":"keccak256","nativeSrc":"3395:9:21","nodeType":"YulIdentifier","src":"3395:9:21"},"nativeSrc":"3395:21:21","nodeType":"YulFunctionCall","src":"3395:21:21"},"variableNames":[{"name":"digest","nativeSrc":"3385:6:21","nodeType":"YulIdentifier","src":"3385:6:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4765,"isOffset":false,"isSlot":false,"src":"3385:6:21","valueSize":1},{"declaration":4762,"isOffset":false,"isSlot":false,"src":"3360:11:21","valueSize":1},{"declaration":4760,"isOffset":false,"isSlot":false,"src":"3323:9:21","valueSize":1}],"flags":["memory-safe"],"id":4767,"nodeType":"InlineAssembly","src":"3226:200:21"}]},"documentation":{"id":4758,"nodeType":"StructuredDocumentation","src":"2940:129:21","text":" @dev Variant of {toDataWithIntendedValidatorHash-address-bytes} optimized for cases where `data` is a bytes32."},"id":4769,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"3083:31:21","nodeType":"FunctionDefinition","parameters":{"id":4763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4760,"mutability":"mutable","name":"validator","nameLocation":"3132:9:21","nodeType":"VariableDeclaration","scope":4769,"src":"3124:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4759,"name":"address","nodeType":"ElementaryTypeName","src":"3124:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4762,"mutability":"mutable","name":"messageHash","nameLocation":"3159:11:21","nodeType":"VariableDeclaration","scope":4769,"src":"3151:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4761,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3151:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3114:62:21"},"returnParameters":{"id":4766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4765,"mutability":"mutable","name":"digest","nameLocation":"3208:6:21","nodeType":"VariableDeclaration","scope":4769,"src":"3200:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4764,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3200:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3199:16:21"},"scope":4782,"src":"3074:358:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4780,"nodeType":"Block","src":"3983:265:21","statements":[{"AST":{"nativeSrc":"4018:224:21","nodeType":"YulBlock","src":"4018:224:21","statements":[{"nativeSrc":"4032:22:21","nodeType":"YulVariableDeclaration","src":"4032:22:21","value":{"arguments":[{"kind":"number","nativeSrc":"4049:4:21","nodeType":"YulLiteral","src":"4049:4:21","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"4043:5:21","nodeType":"YulIdentifier","src":"4043:5:21"},"nativeSrc":"4043:11:21","nodeType":"YulFunctionCall","src":"4043:11:21"},"variables":[{"name":"ptr","nativeSrc":"4036:3:21","nodeType":"YulTypedName","src":"4036:3:21","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"4074:3:21","nodeType":"YulIdentifier","src":"4074:3:21"},{"hexValue":"1901","kind":"string","nativeSrc":"4079:10:21","nodeType":"YulLiteral","src":"4079:10:21","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nativeSrc":"4067:6:21","nodeType":"YulIdentifier","src":"4067:6:21"},"nativeSrc":"4067:23:21","nodeType":"YulFunctionCall","src":"4067:23:21"},"nativeSrc":"4067:23:21","nodeType":"YulExpressionStatement","src":"4067:23:21"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"4114:3:21","nodeType":"YulIdentifier","src":"4114:3:21"},{"kind":"number","nativeSrc":"4119:4:21","nodeType":"YulLiteral","src":"4119:4:21","type":"","value":"0x02"}],"functionName":{"name":"add","nativeSrc":"4110:3:21","nodeType":"YulIdentifier","src":"4110:3:21"},"nativeSrc":"4110:14:21","nodeType":"YulFunctionCall","src":"4110:14:21"},{"name":"domainSeparator","nativeSrc":"4126:15:21","nodeType":"YulIdentifier","src":"4126:15:21"}],"functionName":{"name":"mstore","nativeSrc":"4103:6:21","nodeType":"YulIdentifier","src":"4103:6:21"},"nativeSrc":"4103:39:21","nodeType":"YulFunctionCall","src":"4103:39:21"},"nativeSrc":"4103:39:21","nodeType":"YulExpressionStatement","src":"4103:39:21"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"4166:3:21","nodeType":"YulIdentifier","src":"4166:3:21"},{"kind":"number","nativeSrc":"4171:4:21","nodeType":"YulLiteral","src":"4171:4:21","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"4162:3:21","nodeType":"YulIdentifier","src":"4162:3:21"},"nativeSrc":"4162:14:21","nodeType":"YulFunctionCall","src":"4162:14:21"},{"name":"structHash","nativeSrc":"4178:10:21","nodeType":"YulIdentifier","src":"4178:10:21"}],"functionName":{"name":"mstore","nativeSrc":"4155:6:21","nodeType":"YulIdentifier","src":"4155:6:21"},"nativeSrc":"4155:34:21","nodeType":"YulFunctionCall","src":"4155:34:21"},"nativeSrc":"4155:34:21","nodeType":"YulExpressionStatement","src":"4155:34:21"},{"nativeSrc":"4202:30:21","nodeType":"YulAssignment","src":"4202:30:21","value":{"arguments":[{"name":"ptr","nativeSrc":"4222:3:21","nodeType":"YulIdentifier","src":"4222:3:21"},{"kind":"number","nativeSrc":"4227:4:21","nodeType":"YulLiteral","src":"4227:4:21","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nativeSrc":"4212:9:21","nodeType":"YulIdentifier","src":"4212:9:21"},"nativeSrc":"4212:20:21","nodeType":"YulFunctionCall","src":"4212:20:21"},"variableNames":[{"name":"digest","nativeSrc":"4202:6:21","nodeType":"YulIdentifier","src":"4202:6:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4777,"isOffset":false,"isSlot":false,"src":"4202:6:21","valueSize":1},{"declaration":4772,"isOffset":false,"isSlot":false,"src":"4126:15:21","valueSize":1},{"declaration":4774,"isOffset":false,"isSlot":false,"src":"4178:10:21","valueSize":1}],"flags":["memory-safe"],"id":4779,"nodeType":"InlineAssembly","src":"3993:249:21"}]},"documentation":{"id":4770,"nodeType":"StructuredDocumentation","src":"3438:431:21","text":" @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."},"id":4781,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"3883:15:21","nodeType":"FunctionDefinition","parameters":{"id":4775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4772,"mutability":"mutable","name":"domainSeparator","nameLocation":"3907:15:21","nodeType":"VariableDeclaration","scope":4781,"src":"3899:23:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4771,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3899:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4774,"mutability":"mutable","name":"structHash","nameLocation":"3932:10:21","nodeType":"VariableDeclaration","scope":4781,"src":"3924:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4773,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3924:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3898:45:21"},"returnParameters":{"id":4778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4777,"mutability":"mutable","name":"digest","nameLocation":"3975:6:21","nodeType":"VariableDeclaration","scope":4781,"src":"3967:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4776,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3967:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3966:16:21"},"scope":4782,"src":"3874:374:21","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4783,"src":"521:3729:21","usedErrors":[],"usedEvents":[]}],"src":"123:4128:21"},"id":21},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[4794]},"id":4795,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4784,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"115:25:22"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":4785,"nodeType":"StructuredDocumentation","src":"142:280:22","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":4794,"linearizedBaseContracts":[4794],"name":"IERC165","nameLocation":"433:7:22","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4786,"nodeType":"StructuredDocumentation","src":"447:340:22","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":4793,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"801:17:22","nodeType":"FunctionDefinition","parameters":{"id":4789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4788,"mutability":"mutable","name":"interfaceId","nameLocation":"826:11:22","nodeType":"VariableDeclaration","scope":4793,"src":"819:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":4787,"name":"bytes4","nodeType":"ElementaryTypeName","src":"819:6:22","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"818:20:22"},"returnParameters":{"id":4792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4791,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4793,"src":"862:4:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4790,"name":"bool","nodeType":"ElementaryTypeName","src":"862:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"861:6:22"},"scope":4794,"src":"792:76:22","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4795,"src":"423:447:22","usedErrors":[],"usedEvents":[]}],"src":"115:756:22"},"id":22},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[6415],"Panic":[2946],"SafeCast":[8180]},"id":6416,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4796,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:23"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":4798,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6416,"sourceUnit":2947,"src":"129:35:23","symbolAliases":[{"foreign":{"id":4797,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2946,"src":"137:5:23","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":4800,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6416,"sourceUnit":8181,"src":"165:40:23","symbolAliases":[{"foreign":{"id":4799,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8180,"src":"173:8:23","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":4801,"nodeType":"StructuredDocumentation","src":"207:73:23","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":6415,"linearizedBaseContracts":[6415],"name":"Math","nameLocation":"289:4:23","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":4806,"members":[{"id":4802,"name":"Floor","nameLocation":"324:5:23","nodeType":"EnumValue","src":"324:5:23"},{"id":4803,"name":"Ceil","nameLocation":"367:4:23","nodeType":"EnumValue","src":"367:4:23"},{"id":4804,"name":"Trunc","nameLocation":"409:5:23","nodeType":"EnumValue","src":"409:5:23"},{"id":4805,"name":"Expand","nameLocation":"439:6:23","nodeType":"EnumValue","src":"439:6:23"}],"name":"Rounding","nameLocation":"305:8:23","nodeType":"EnumDefinition","src":"300:169:23"},{"body":{"id":4819,"nodeType":"Block","src":"731:112:23","statements":[{"AST":{"nativeSrc":"766:71:23","nodeType":"YulBlock","src":"766:71:23","statements":[{"nativeSrc":"780:16:23","nodeType":"YulAssignment","src":"780:16:23","value":{"arguments":[{"name":"a","nativeSrc":"791:1:23","nodeType":"YulIdentifier","src":"791:1:23"},{"name":"b","nativeSrc":"794:1:23","nodeType":"YulIdentifier","src":"794:1:23"}],"functionName":{"name":"add","nativeSrc":"787:3:23","nodeType":"YulIdentifier","src":"787:3:23"},"nativeSrc":"787:9:23","nodeType":"YulFunctionCall","src":"787:9:23"},"variableNames":[{"name":"low","nativeSrc":"780:3:23","nodeType":"YulIdentifier","src":"780:3:23"}]},{"nativeSrc":"809:18:23","nodeType":"YulAssignment","src":"809:18:23","value":{"arguments":[{"name":"low","nativeSrc":"820:3:23","nodeType":"YulIdentifier","src":"820:3:23"},{"name":"a","nativeSrc":"825:1:23","nodeType":"YulIdentifier","src":"825:1:23"}],"functionName":{"name":"lt","nativeSrc":"817:2:23","nodeType":"YulIdentifier","src":"817:2:23"},"nativeSrc":"817:10:23","nodeType":"YulFunctionCall","src":"817:10:23"},"variableNames":[{"name":"high","nativeSrc":"809:4:23","nodeType":"YulIdentifier","src":"809:4:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4809,"isOffset":false,"isSlot":false,"src":"791:1:23","valueSize":1},{"declaration":4809,"isOffset":false,"isSlot":false,"src":"825:1:23","valueSize":1},{"declaration":4811,"isOffset":false,"isSlot":false,"src":"794:1:23","valueSize":1},{"declaration":4814,"isOffset":false,"isSlot":false,"src":"809:4:23","valueSize":1},{"declaration":4816,"isOffset":false,"isSlot":false,"src":"780:3:23","valueSize":1},{"declaration":4816,"isOffset":false,"isSlot":false,"src":"820:3:23","valueSize":1}],"flags":["memory-safe"],"id":4818,"nodeType":"InlineAssembly","src":"741:96:23"}]},"documentation":{"id":4807,"nodeType":"StructuredDocumentation","src":"475:163:23","text":" @dev Return the 512-bit addition of two uint256.\n The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low."},"id":4820,"implemented":true,"kind":"function","modifiers":[],"name":"add512","nameLocation":"652:6:23","nodeType":"FunctionDefinition","parameters":{"id":4812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4809,"mutability":"mutable","name":"a","nameLocation":"667:1:23","nodeType":"VariableDeclaration","scope":4820,"src":"659:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4808,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4811,"mutability":"mutable","name":"b","nameLocation":"678:1:23","nodeType":"VariableDeclaration","scope":4820,"src":"670:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4810,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"658:22:23"},"returnParameters":{"id":4817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4814,"mutability":"mutable","name":"high","nameLocation":"712:4:23","nodeType":"VariableDeclaration","scope":4820,"src":"704:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4813,"name":"uint256","nodeType":"ElementaryTypeName","src":"704:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4816,"mutability":"mutable","name":"low","nameLocation":"726:3:23","nodeType":"VariableDeclaration","scope":4820,"src":"718:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4815,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"703:27:23"},"scope":6415,"src":"643:200:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4833,"nodeType":"Block","src":"1115:462:23","statements":[{"AST":{"nativeSrc":"1437:134:23","nodeType":"YulBlock","src":"1437:134:23","statements":[{"nativeSrc":"1451:30:23","nodeType":"YulVariableDeclaration","src":"1451:30:23","value":{"arguments":[{"name":"a","nativeSrc":"1468:1:23","nodeType":"YulIdentifier","src":"1468:1:23"},{"name":"b","nativeSrc":"1471:1:23","nodeType":"YulIdentifier","src":"1471:1:23"},{"arguments":[{"kind":"number","nativeSrc":"1478:1:23","nodeType":"YulLiteral","src":"1478:1:23","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"1474:3:23","nodeType":"YulIdentifier","src":"1474:3:23"},"nativeSrc":"1474:6:23","nodeType":"YulFunctionCall","src":"1474:6:23"}],"functionName":{"name":"mulmod","nativeSrc":"1461:6:23","nodeType":"YulIdentifier","src":"1461:6:23"},"nativeSrc":"1461:20:23","nodeType":"YulFunctionCall","src":"1461:20:23"},"variables":[{"name":"mm","nativeSrc":"1455:2:23","nodeType":"YulTypedName","src":"1455:2:23","type":""}]},{"nativeSrc":"1494:16:23","nodeType":"YulAssignment","src":"1494:16:23","value":{"arguments":[{"name":"a","nativeSrc":"1505:1:23","nodeType":"YulIdentifier","src":"1505:1:23"},{"name":"b","nativeSrc":"1508:1:23","nodeType":"YulIdentifier","src":"1508:1:23"}],"functionName":{"name":"mul","nativeSrc":"1501:3:23","nodeType":"YulIdentifier","src":"1501:3:23"},"nativeSrc":"1501:9:23","nodeType":"YulFunctionCall","src":"1501:9:23"},"variableNames":[{"name":"low","nativeSrc":"1494:3:23","nodeType":"YulIdentifier","src":"1494:3:23"}]},{"nativeSrc":"1523:38:23","nodeType":"YulAssignment","src":"1523:38:23","value":{"arguments":[{"arguments":[{"name":"mm","nativeSrc":"1539:2:23","nodeType":"YulIdentifier","src":"1539:2:23"},{"name":"low","nativeSrc":"1543:3:23","nodeType":"YulIdentifier","src":"1543:3:23"}],"functionName":{"name":"sub","nativeSrc":"1535:3:23","nodeType":"YulIdentifier","src":"1535:3:23"},"nativeSrc":"1535:12:23","nodeType":"YulFunctionCall","src":"1535:12:23"},{"arguments":[{"name":"mm","nativeSrc":"1552:2:23","nodeType":"YulIdentifier","src":"1552:2:23"},{"name":"low","nativeSrc":"1556:3:23","nodeType":"YulIdentifier","src":"1556:3:23"}],"functionName":{"name":"lt","nativeSrc":"1549:2:23","nodeType":"YulIdentifier","src":"1549:2:23"},"nativeSrc":"1549:11:23","nodeType":"YulFunctionCall","src":"1549:11:23"}],"functionName":{"name":"sub","nativeSrc":"1531:3:23","nodeType":"YulIdentifier","src":"1531:3:23"},"nativeSrc":"1531:30:23","nodeType":"YulFunctionCall","src":"1531:30:23"},"variableNames":[{"name":"high","nativeSrc":"1523:4:23","nodeType":"YulIdentifier","src":"1523:4:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4823,"isOffset":false,"isSlot":false,"src":"1468:1:23","valueSize":1},{"declaration":4823,"isOffset":false,"isSlot":false,"src":"1505:1:23","valueSize":1},{"declaration":4825,"isOffset":false,"isSlot":false,"src":"1471:1:23","valueSize":1},{"declaration":4825,"isOffset":false,"isSlot":false,"src":"1508:1:23","valueSize":1},{"declaration":4828,"isOffset":false,"isSlot":false,"src":"1523:4:23","valueSize":1},{"declaration":4830,"isOffset":false,"isSlot":false,"src":"1494:3:23","valueSize":1},{"declaration":4830,"isOffset":false,"isSlot":false,"src":"1543:3:23","valueSize":1},{"declaration":4830,"isOffset":false,"isSlot":false,"src":"1556:3:23","valueSize":1}],"flags":["memory-safe"],"id":4832,"nodeType":"InlineAssembly","src":"1412:159:23"}]},"documentation":{"id":4821,"nodeType":"StructuredDocumentation","src":"849:173:23","text":" @dev Return the 512-bit multiplication of two uint256.\n The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low."},"id":4834,"implemented":true,"kind":"function","modifiers":[],"name":"mul512","nameLocation":"1036:6:23","nodeType":"FunctionDefinition","parameters":{"id":4826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4823,"mutability":"mutable","name":"a","nameLocation":"1051:1:23","nodeType":"VariableDeclaration","scope":4834,"src":"1043:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4822,"name":"uint256","nodeType":"ElementaryTypeName","src":"1043:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4825,"mutability":"mutable","name":"b","nameLocation":"1062:1:23","nodeType":"VariableDeclaration","scope":4834,"src":"1054:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4824,"name":"uint256","nodeType":"ElementaryTypeName","src":"1054:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1042:22:23"},"returnParameters":{"id":4831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4828,"mutability":"mutable","name":"high","nameLocation":"1096:4:23","nodeType":"VariableDeclaration","scope":4834,"src":"1088:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4827,"name":"uint256","nodeType":"ElementaryTypeName","src":"1088:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4830,"mutability":"mutable","name":"low","nameLocation":"1110:3:23","nodeType":"VariableDeclaration","scope":4834,"src":"1102:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4829,"name":"uint256","nodeType":"ElementaryTypeName","src":"1102:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1087:27:23"},"scope":6415,"src":"1027:550:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4868,"nodeType":"Block","src":"1784:149:23","statements":[{"id":4867,"nodeType":"UncheckedBlock","src":"1794:133:23","statements":[{"assignments":[4847],"declarations":[{"constant":false,"id":4847,"mutability":"mutable","name":"c","nameLocation":"1826:1:23","nodeType":"VariableDeclaration","scope":4867,"src":"1818:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4846,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4851,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4848,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4837,"src":"1830:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4849,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4839,"src":"1834:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1830:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1818:17:23"},{"expression":{"id":4856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4852,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4842,"src":"1849:7:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4853,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4847,"src":"1859:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4854,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4837,"src":"1864:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1859:6:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1849:16:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4857,"nodeType":"ExpressionStatement","src":"1849:16:23"},{"expression":{"id":4865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4858,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4844,"src":"1879:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4859,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4847,"src":"1888:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4862,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4842,"src":"1908:7:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4860,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8180,"src":"1892:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8180_$","typeString":"type(library SafeCast)"}},"id":4861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1901:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8179,"src":"1892:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1892:24:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1888:28:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1879:37:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4866,"nodeType":"ExpressionStatement","src":"1879:37:23"}]}]},"documentation":{"id":4835,"nodeType":"StructuredDocumentation","src":"1583:105:23","text":" @dev Returns the addition of two unsigned integers, with a success flag (no overflow)."},"id":4869,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"1702:6:23","nodeType":"FunctionDefinition","parameters":{"id":4840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4837,"mutability":"mutable","name":"a","nameLocation":"1717:1:23","nodeType":"VariableDeclaration","scope":4869,"src":"1709:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4836,"name":"uint256","nodeType":"ElementaryTypeName","src":"1709:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4839,"mutability":"mutable","name":"b","nameLocation":"1728:1:23","nodeType":"VariableDeclaration","scope":4869,"src":"1720:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4838,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1708:22:23"},"returnParameters":{"id":4845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4842,"mutability":"mutable","name":"success","nameLocation":"1759:7:23","nodeType":"VariableDeclaration","scope":4869,"src":"1754:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4841,"name":"bool","nodeType":"ElementaryTypeName","src":"1754:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4844,"mutability":"mutable","name":"result","nameLocation":"1776:6:23","nodeType":"VariableDeclaration","scope":4869,"src":"1768:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4843,"name":"uint256","nodeType":"ElementaryTypeName","src":"1768:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1753:30:23"},"scope":6415,"src":"1693:240:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4903,"nodeType":"Block","src":"2143:149:23","statements":[{"id":4902,"nodeType":"UncheckedBlock","src":"2153:133:23","statements":[{"assignments":[4882],"declarations":[{"constant":false,"id":4882,"mutability":"mutable","name":"c","nameLocation":"2185:1:23","nodeType":"VariableDeclaration","scope":4902,"src":"2177:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4881,"name":"uint256","nodeType":"ElementaryTypeName","src":"2177:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4886,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4883,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4872,"src":"2189:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4884,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4874,"src":"2193:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2189:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2177:17:23"},{"expression":{"id":4891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4887,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4877,"src":"2208:7:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4888,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4882,"src":"2218:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4889,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4872,"src":"2223:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2218:6:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2208:16:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4892,"nodeType":"ExpressionStatement","src":"2208:16:23"},{"expression":{"id":4900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4893,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4879,"src":"2238:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4894,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4882,"src":"2247:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4897,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4877,"src":"2267:7:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4895,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8180,"src":"2251:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8180_$","typeString":"type(library SafeCast)"}},"id":4896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2260:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8179,"src":"2251:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2251:24:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2247:28:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2238:37:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4901,"nodeType":"ExpressionStatement","src":"2238:37:23"}]}]},"documentation":{"id":4870,"nodeType":"StructuredDocumentation","src":"1939:108:23","text":" @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow)."},"id":4904,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"2061:6:23","nodeType":"FunctionDefinition","parameters":{"id":4875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4872,"mutability":"mutable","name":"a","nameLocation":"2076:1:23","nodeType":"VariableDeclaration","scope":4904,"src":"2068:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4871,"name":"uint256","nodeType":"ElementaryTypeName","src":"2068:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4874,"mutability":"mutable","name":"b","nameLocation":"2087:1:23","nodeType":"VariableDeclaration","scope":4904,"src":"2079:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4873,"name":"uint256","nodeType":"ElementaryTypeName","src":"2079:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2067:22:23"},"returnParameters":{"id":4880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4877,"mutability":"mutable","name":"success","nameLocation":"2118:7:23","nodeType":"VariableDeclaration","scope":4904,"src":"2113:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4876,"name":"bool","nodeType":"ElementaryTypeName","src":"2113:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4879,"mutability":"mutable","name":"result","nameLocation":"2135:6:23","nodeType":"VariableDeclaration","scope":4904,"src":"2127:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4878,"name":"uint256","nodeType":"ElementaryTypeName","src":"2127:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2112:30:23"},"scope":6415,"src":"2052:240:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4933,"nodeType":"Block","src":"2505:391:23","statements":[{"id":4932,"nodeType":"UncheckedBlock","src":"2515:375:23","statements":[{"assignments":[4917],"declarations":[{"constant":false,"id":4917,"mutability":"mutable","name":"c","nameLocation":"2547:1:23","nodeType":"VariableDeclaration","scope":4932,"src":"2539:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4916,"name":"uint256","nodeType":"ElementaryTypeName","src":"2539:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4921,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4918,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4907,"src":"2551:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4919,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4909,"src":"2555:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2551:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2539:17:23"},{"AST":{"nativeSrc":"2595:188:23","nodeType":"YulBlock","src":"2595:188:23","statements":[{"nativeSrc":"2727:42:23","nodeType":"YulAssignment","src":"2727:42:23","value":{"arguments":[{"arguments":[{"arguments":[{"name":"c","nativeSrc":"2748:1:23","nodeType":"YulIdentifier","src":"2748:1:23"},{"name":"a","nativeSrc":"2751:1:23","nodeType":"YulIdentifier","src":"2751:1:23"}],"functionName":{"name":"div","nativeSrc":"2744:3:23","nodeType":"YulIdentifier","src":"2744:3:23"},"nativeSrc":"2744:9:23","nodeType":"YulFunctionCall","src":"2744:9:23"},{"name":"b","nativeSrc":"2755:1:23","nodeType":"YulIdentifier","src":"2755:1:23"}],"functionName":{"name":"eq","nativeSrc":"2741:2:23","nodeType":"YulIdentifier","src":"2741:2:23"},"nativeSrc":"2741:16:23","nodeType":"YulFunctionCall","src":"2741:16:23"},{"arguments":[{"name":"a","nativeSrc":"2766:1:23","nodeType":"YulIdentifier","src":"2766:1:23"}],"functionName":{"name":"iszero","nativeSrc":"2759:6:23","nodeType":"YulIdentifier","src":"2759:6:23"},"nativeSrc":"2759:9:23","nodeType":"YulFunctionCall","src":"2759:9:23"}],"functionName":{"name":"or","nativeSrc":"2738:2:23","nodeType":"YulIdentifier","src":"2738:2:23"},"nativeSrc":"2738:31:23","nodeType":"YulFunctionCall","src":"2738:31:23"},"variableNames":[{"name":"success","nativeSrc":"2727:7:23","nodeType":"YulIdentifier","src":"2727:7:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4907,"isOffset":false,"isSlot":false,"src":"2751:1:23","valueSize":1},{"declaration":4907,"isOffset":false,"isSlot":false,"src":"2766:1:23","valueSize":1},{"declaration":4909,"isOffset":false,"isSlot":false,"src":"2755:1:23","valueSize":1},{"declaration":4917,"isOffset":false,"isSlot":false,"src":"2748:1:23","valueSize":1},{"declaration":4912,"isOffset":false,"isSlot":false,"src":"2727:7:23","valueSize":1}],"flags":["memory-safe"],"id":4922,"nodeType":"InlineAssembly","src":"2570:213:23"},{"expression":{"id":4930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4923,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4914,"src":"2842:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4924,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4917,"src":"2851:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4927,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4912,"src":"2871:7:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4925,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8180,"src":"2855:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8180_$","typeString":"type(library SafeCast)"}},"id":4926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2864:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8179,"src":"2855:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2855:24:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2851:28:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2842:37:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4931,"nodeType":"ExpressionStatement","src":"2842:37:23"}]}]},"documentation":{"id":4905,"nodeType":"StructuredDocumentation","src":"2298:111:23","text":" @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow)."},"id":4934,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"2423:6:23","nodeType":"FunctionDefinition","parameters":{"id":4910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4907,"mutability":"mutable","name":"a","nameLocation":"2438:1:23","nodeType":"VariableDeclaration","scope":4934,"src":"2430:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4906,"name":"uint256","nodeType":"ElementaryTypeName","src":"2430:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4909,"mutability":"mutable","name":"b","nameLocation":"2449:1:23","nodeType":"VariableDeclaration","scope":4934,"src":"2441:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4908,"name":"uint256","nodeType":"ElementaryTypeName","src":"2441:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2429:22:23"},"returnParameters":{"id":4915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4912,"mutability":"mutable","name":"success","nameLocation":"2480:7:23","nodeType":"VariableDeclaration","scope":4934,"src":"2475:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4911,"name":"bool","nodeType":"ElementaryTypeName","src":"2475:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4914,"mutability":"mutable","name":"result","nameLocation":"2497:6:23","nodeType":"VariableDeclaration","scope":4934,"src":"2489:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4913,"name":"uint256","nodeType":"ElementaryTypeName","src":"2489:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2474:30:23"},"scope":6415,"src":"2414:482:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4954,"nodeType":"Block","src":"3111:231:23","statements":[{"id":4953,"nodeType":"UncheckedBlock","src":"3121:215:23","statements":[{"expression":{"id":4950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4946,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4942,"src":"3145:7:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4947,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4939,"src":"3155:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3159:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3155:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3145:15:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4951,"nodeType":"ExpressionStatement","src":"3145:15:23"},{"AST":{"nativeSrc":"3199:127:23","nodeType":"YulBlock","src":"3199:127:23","statements":[{"nativeSrc":"3293:19:23","nodeType":"YulAssignment","src":"3293:19:23","value":{"arguments":[{"name":"a","nativeSrc":"3307:1:23","nodeType":"YulIdentifier","src":"3307:1:23"},{"name":"b","nativeSrc":"3310:1:23","nodeType":"YulIdentifier","src":"3310:1:23"}],"functionName":{"name":"div","nativeSrc":"3303:3:23","nodeType":"YulIdentifier","src":"3303:3:23"},"nativeSrc":"3303:9:23","nodeType":"YulFunctionCall","src":"3303:9:23"},"variableNames":[{"name":"result","nativeSrc":"3293:6:23","nodeType":"YulIdentifier","src":"3293:6:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4937,"isOffset":false,"isSlot":false,"src":"3307:1:23","valueSize":1},{"declaration":4939,"isOffset":false,"isSlot":false,"src":"3310:1:23","valueSize":1},{"declaration":4944,"isOffset":false,"isSlot":false,"src":"3293:6:23","valueSize":1}],"flags":["memory-safe"],"id":4952,"nodeType":"InlineAssembly","src":"3174:152:23"}]}]},"documentation":{"id":4935,"nodeType":"StructuredDocumentation","src":"2902:113:23","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":4955,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"3029:6:23","nodeType":"FunctionDefinition","parameters":{"id":4940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4937,"mutability":"mutable","name":"a","nameLocation":"3044:1:23","nodeType":"VariableDeclaration","scope":4955,"src":"3036:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4936,"name":"uint256","nodeType":"ElementaryTypeName","src":"3036:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4939,"mutability":"mutable","name":"b","nameLocation":"3055:1:23","nodeType":"VariableDeclaration","scope":4955,"src":"3047:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4938,"name":"uint256","nodeType":"ElementaryTypeName","src":"3047:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3035:22:23"},"returnParameters":{"id":4945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4942,"mutability":"mutable","name":"success","nameLocation":"3086:7:23","nodeType":"VariableDeclaration","scope":4955,"src":"3081:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4941,"name":"bool","nodeType":"ElementaryTypeName","src":"3081:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4944,"mutability":"mutable","name":"result","nameLocation":"3103:6:23","nodeType":"VariableDeclaration","scope":4955,"src":"3095:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4943,"name":"uint256","nodeType":"ElementaryTypeName","src":"3095:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3080:30:23"},"scope":6415,"src":"3020:322:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4975,"nodeType":"Block","src":"3567:231:23","statements":[{"id":4974,"nodeType":"UncheckedBlock","src":"3577:215:23","statements":[{"expression":{"id":4971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4967,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4963,"src":"3601:7:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4968,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4960,"src":"3611:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3615:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3611:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3601:15:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4972,"nodeType":"ExpressionStatement","src":"3601:15:23"},{"AST":{"nativeSrc":"3655:127:23","nodeType":"YulBlock","src":"3655:127:23","statements":[{"nativeSrc":"3749:19:23","nodeType":"YulAssignment","src":"3749:19:23","value":{"arguments":[{"name":"a","nativeSrc":"3763:1:23","nodeType":"YulIdentifier","src":"3763:1:23"},{"name":"b","nativeSrc":"3766:1:23","nodeType":"YulIdentifier","src":"3766:1:23"}],"functionName":{"name":"mod","nativeSrc":"3759:3:23","nodeType":"YulIdentifier","src":"3759:3:23"},"nativeSrc":"3759:9:23","nodeType":"YulFunctionCall","src":"3759:9:23"},"variableNames":[{"name":"result","nativeSrc":"3749:6:23","nodeType":"YulIdentifier","src":"3749:6:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4958,"isOffset":false,"isSlot":false,"src":"3763:1:23","valueSize":1},{"declaration":4960,"isOffset":false,"isSlot":false,"src":"3766:1:23","valueSize":1},{"declaration":4965,"isOffset":false,"isSlot":false,"src":"3749:6:23","valueSize":1}],"flags":["memory-safe"],"id":4973,"nodeType":"InlineAssembly","src":"3630:152:23"}]}]},"documentation":{"id":4956,"nodeType":"StructuredDocumentation","src":"3348:123:23","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":4976,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"3485:6:23","nodeType":"FunctionDefinition","parameters":{"id":4961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4958,"mutability":"mutable","name":"a","nameLocation":"3500:1:23","nodeType":"VariableDeclaration","scope":4976,"src":"3492:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4957,"name":"uint256","nodeType":"ElementaryTypeName","src":"3492:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4960,"mutability":"mutable","name":"b","nameLocation":"3511:1:23","nodeType":"VariableDeclaration","scope":4976,"src":"3503:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4959,"name":"uint256","nodeType":"ElementaryTypeName","src":"3503:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3491:22:23"},"returnParameters":{"id":4966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4963,"mutability":"mutable","name":"success","nameLocation":"3542:7:23","nodeType":"VariableDeclaration","scope":4976,"src":"3537:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4962,"name":"bool","nodeType":"ElementaryTypeName","src":"3537:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4965,"mutability":"mutable","name":"result","nameLocation":"3559:6:23","nodeType":"VariableDeclaration","scope":4976,"src":"3551:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4964,"name":"uint256","nodeType":"ElementaryTypeName","src":"3551:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3536:30:23"},"scope":6415,"src":"3476:322:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5005,"nodeType":"Block","src":"3989:122:23","statements":[{"assignments":[4987,4989],"declarations":[{"constant":false,"id":4987,"mutability":"mutable","name":"success","nameLocation":"4005:7:23","nodeType":"VariableDeclaration","scope":5005,"src":"4000:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4986,"name":"bool","nodeType":"ElementaryTypeName","src":"4000:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4989,"mutability":"mutable","name":"result","nameLocation":"4022:6:23","nodeType":"VariableDeclaration","scope":5005,"src":"4014:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4988,"name":"uint256","nodeType":"ElementaryTypeName","src":"4014:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4994,"initialValue":{"arguments":[{"id":4991,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4979,"src":"4039:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4992,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4981,"src":"4042:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4990,"name":"tryAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4869,"src":"4032:6:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":4993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4032:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"3999:45:23"},{"expression":{"arguments":[{"id":4996,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4987,"src":"4069:7:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4997,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4989,"src":"4078:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":5000,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4091:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4999,"name":"uint256","nodeType":"ElementaryTypeName","src":"4091:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":4998,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4086:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4086:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":5002,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4100:3:23","memberName":"max","nodeType":"MemberAccess","src":"4086:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4995,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5083,"src":"4061:7:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":5003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4061:43:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4985,"id":5004,"nodeType":"Return","src":"4054:50:23"}]},"documentation":{"id":4977,"nodeType":"StructuredDocumentation","src":"3804:103:23","text":" @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":5006,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingAdd","nameLocation":"3921:13:23","nodeType":"FunctionDefinition","parameters":{"id":4982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4979,"mutability":"mutable","name":"a","nameLocation":"3943:1:23","nodeType":"VariableDeclaration","scope":5006,"src":"3935:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4978,"name":"uint256","nodeType":"ElementaryTypeName","src":"3935:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4981,"mutability":"mutable","name":"b","nameLocation":"3954:1:23","nodeType":"VariableDeclaration","scope":5006,"src":"3946:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4980,"name":"uint256","nodeType":"ElementaryTypeName","src":"3946:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3934:22:23"},"returnParameters":{"id":4985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4984,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5006,"src":"3980:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4983,"name":"uint256","nodeType":"ElementaryTypeName","src":"3980:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3979:9:23"},"scope":6415,"src":"3912:199:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5025,"nodeType":"Block","src":"4294:73:23","statements":[{"assignments":[null,5017],"declarations":[null,{"constant":false,"id":5017,"mutability":"mutable","name":"result","nameLocation":"4315:6:23","nodeType":"VariableDeclaration","scope":5025,"src":"4307:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5016,"name":"uint256","nodeType":"ElementaryTypeName","src":"4307:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5022,"initialValue":{"arguments":[{"id":5019,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5009,"src":"4332:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5020,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5011,"src":"4335:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5018,"name":"trySub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4904,"src":"4325:6:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":5021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4325:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4304:33:23"},{"expression":{"id":5023,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5017,"src":"4354:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5015,"id":5024,"nodeType":"Return","src":"4347:13:23"}]},"documentation":{"id":5007,"nodeType":"StructuredDocumentation","src":"4117:95:23","text":" @dev Unsigned saturating subtraction, bounds to zero instead of overflowing."},"id":5026,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingSub","nameLocation":"4226:13:23","nodeType":"FunctionDefinition","parameters":{"id":5012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5009,"mutability":"mutable","name":"a","nameLocation":"4248:1:23","nodeType":"VariableDeclaration","scope":5026,"src":"4240:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5008,"name":"uint256","nodeType":"ElementaryTypeName","src":"4240:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5011,"mutability":"mutable","name":"b","nameLocation":"4259:1:23","nodeType":"VariableDeclaration","scope":5026,"src":"4251:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5010,"name":"uint256","nodeType":"ElementaryTypeName","src":"4251:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4239:22:23"},"returnParameters":{"id":5015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5014,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5026,"src":"4285:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5013,"name":"uint256","nodeType":"ElementaryTypeName","src":"4285:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4284:9:23"},"scope":6415,"src":"4217:150:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5055,"nodeType":"Block","src":"4564:122:23","statements":[{"assignments":[5037,5039],"declarations":[{"constant":false,"id":5037,"mutability":"mutable","name":"success","nameLocation":"4580:7:23","nodeType":"VariableDeclaration","scope":5055,"src":"4575:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5036,"name":"bool","nodeType":"ElementaryTypeName","src":"4575:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5039,"mutability":"mutable","name":"result","nameLocation":"4597:6:23","nodeType":"VariableDeclaration","scope":5055,"src":"4589:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5038,"name":"uint256","nodeType":"ElementaryTypeName","src":"4589:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5044,"initialValue":{"arguments":[{"id":5041,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5029,"src":"4614:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5042,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5031,"src":"4617:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5040,"name":"tryMul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4934,"src":"4607:6:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":5043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4607:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4574:45:23"},{"expression":{"arguments":[{"id":5046,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5037,"src":"4644:7:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":5047,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5039,"src":"4653:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":5050,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4666:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5049,"name":"uint256","nodeType":"ElementaryTypeName","src":"4666:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":5048,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4661:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4661:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":5052,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4675:3:23","memberName":"max","nodeType":"MemberAccess","src":"4661:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5045,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5083,"src":"4636:7:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":5053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4636:43:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5035,"id":5054,"nodeType":"Return","src":"4629:50:23"}]},"documentation":{"id":5027,"nodeType":"StructuredDocumentation","src":"4373:109:23","text":" @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":5056,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingMul","nameLocation":"4496:13:23","nodeType":"FunctionDefinition","parameters":{"id":5032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5029,"mutability":"mutable","name":"a","nameLocation":"4518:1:23","nodeType":"VariableDeclaration","scope":5056,"src":"4510:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5028,"name":"uint256","nodeType":"ElementaryTypeName","src":"4510:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5031,"mutability":"mutable","name":"b","nameLocation":"4529:1:23","nodeType":"VariableDeclaration","scope":5056,"src":"4521:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5030,"name":"uint256","nodeType":"ElementaryTypeName","src":"4521:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4509:22:23"},"returnParameters":{"id":5035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5034,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5056,"src":"4555:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5033,"name":"uint256","nodeType":"ElementaryTypeName","src":"4555:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4554:9:23"},"scope":6415,"src":"4487:199:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5082,"nodeType":"Block","src":"5158:207:23","statements":[{"id":5081,"nodeType":"UncheckedBlock","src":"5168:191:23","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5068,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5063,"src":"5306:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5069,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5061,"src":"5312:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":5070,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5063,"src":"5316:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5312:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5072,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5311:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":5075,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5059,"src":"5337:9:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5073,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8180,"src":"5321:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8180_$","typeString":"type(library SafeCast)"}},"id":5074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5330:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8179,"src":"5321:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5321:26:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5311:36:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5078,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5310:38:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5306:42:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5067,"id":5080,"nodeType":"Return","src":"5299:49:23"}]}]},"documentation":{"id":5057,"nodeType":"StructuredDocumentation","src":"4692:374:23","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":5083,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"5080:7:23","nodeType":"FunctionDefinition","parameters":{"id":5064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5059,"mutability":"mutable","name":"condition","nameLocation":"5093:9:23","nodeType":"VariableDeclaration","scope":5083,"src":"5088:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5058,"name":"bool","nodeType":"ElementaryTypeName","src":"5088:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5061,"mutability":"mutable","name":"a","nameLocation":"5112:1:23","nodeType":"VariableDeclaration","scope":5083,"src":"5104:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5060,"name":"uint256","nodeType":"ElementaryTypeName","src":"5104:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5063,"mutability":"mutable","name":"b","nameLocation":"5123:1:23","nodeType":"VariableDeclaration","scope":5083,"src":"5115:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5062,"name":"uint256","nodeType":"ElementaryTypeName","src":"5115:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5087:38:23"},"returnParameters":{"id":5067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5066,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5083,"src":"5149:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5065,"name":"uint256","nodeType":"ElementaryTypeName","src":"5149:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5148:9:23"},"scope":6415,"src":"5071:294:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5101,"nodeType":"Block","src":"5502:44:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5094,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"5527:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5095,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5088,"src":"5531:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5527:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":5097,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"5534:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5098,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5088,"src":"5537:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5093,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5083,"src":"5519:7:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":5099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5519:20:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5092,"id":5100,"nodeType":"Return","src":"5512:27:23"}]},"documentation":{"id":5084,"nodeType":"StructuredDocumentation","src":"5371:59:23","text":" @dev Returns the largest of two numbers."},"id":5102,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"5444:3:23","nodeType":"FunctionDefinition","parameters":{"id":5089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5086,"mutability":"mutable","name":"a","nameLocation":"5456:1:23","nodeType":"VariableDeclaration","scope":5102,"src":"5448:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5085,"name":"uint256","nodeType":"ElementaryTypeName","src":"5448:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5088,"mutability":"mutable","name":"b","nameLocation":"5467:1:23","nodeType":"VariableDeclaration","scope":5102,"src":"5459:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5087,"name":"uint256","nodeType":"ElementaryTypeName","src":"5459:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5447:22:23"},"returnParameters":{"id":5092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5091,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5102,"src":"5493:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5090,"name":"uint256","nodeType":"ElementaryTypeName","src":"5493:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5492:9:23"},"scope":6415,"src":"5435:111:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5120,"nodeType":"Block","src":"5684:44:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5113,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5105,"src":"5709:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5114,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5107,"src":"5713:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5709:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":5116,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5105,"src":"5716:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5117,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5107,"src":"5719:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5112,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5083,"src":"5701:7:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":5118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5701:20:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5111,"id":5119,"nodeType":"Return","src":"5694:27:23"}]},"documentation":{"id":5103,"nodeType":"StructuredDocumentation","src":"5552:60:23","text":" @dev Returns the smallest of two numbers."},"id":5121,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"5626:3:23","nodeType":"FunctionDefinition","parameters":{"id":5108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5105,"mutability":"mutable","name":"a","nameLocation":"5638:1:23","nodeType":"VariableDeclaration","scope":5121,"src":"5630:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5104,"name":"uint256","nodeType":"ElementaryTypeName","src":"5630:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5107,"mutability":"mutable","name":"b","nameLocation":"5649:1:23","nodeType":"VariableDeclaration","scope":5121,"src":"5641:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5106,"name":"uint256","nodeType":"ElementaryTypeName","src":"5641:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5629:22:23"},"returnParameters":{"id":5111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5110,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5121,"src":"5675:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5109,"name":"uint256","nodeType":"ElementaryTypeName","src":"5675:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:9:23"},"scope":6415,"src":"5617:111:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5143,"nodeType":"Block","src":"5912:82:23","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5131,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5124,"src":"5967:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":5132,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5126,"src":"5971:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5967:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5134,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5966:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5135,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5124,"src":"5977:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":5136,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5126,"src":"5981:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5977:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5138,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5976:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":5139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5986:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"5976:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5966:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5130,"id":5142,"nodeType":"Return","src":"5959:28:23"}]},"documentation":{"id":5122,"nodeType":"StructuredDocumentation","src":"5734:102:23","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":5144,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"5850:7:23","nodeType":"FunctionDefinition","parameters":{"id":5127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5124,"mutability":"mutable","name":"a","nameLocation":"5866:1:23","nodeType":"VariableDeclaration","scope":5144,"src":"5858:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5123,"name":"uint256","nodeType":"ElementaryTypeName","src":"5858:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5126,"mutability":"mutable","name":"b","nameLocation":"5877:1:23","nodeType":"VariableDeclaration","scope":5144,"src":"5869:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5125,"name":"uint256","nodeType":"ElementaryTypeName","src":"5869:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5857:22:23"},"returnParameters":{"id":5130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5129,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5144,"src":"5903:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5128,"name":"uint256","nodeType":"ElementaryTypeName","src":"5903:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5902:9:23"},"scope":6415,"src":"5841:153:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5184,"nodeType":"Block","src":"6286:633:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5154,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5149,"src":"6300:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6305:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6300:6:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5165,"nodeType":"IfStatement","src":"6296:150:23","trueBody":{"id":5164,"nodeType":"Block","src":"6308:138:23","statements":[{"expression":{"arguments":[{"expression":{"id":5160,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2946,"src":"6412:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2946_$","typeString":"type(library Panic)"}},"id":5161,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6418:16:23","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2913,"src":"6412:22:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5157,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2946,"src":"6400:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2946_$","typeString":"type(library Panic)"}},"id":5159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6406:5:23","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2945,"src":"6400:11:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6400:35:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5163,"nodeType":"ExpressionStatement","src":"6400:35:23"}]}},{"id":5183,"nodeType":"UncheckedBlock","src":"6829:84:23","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5168,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5147,"src":"6876:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6880:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6876:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5166,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8180,"src":"6860:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8180_$","typeString":"type(library SafeCast)"}},"id":5167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6869:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8179,"src":"6860:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6860:22:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5172,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5147,"src":"6887:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6891:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6887:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5175,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6886:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5176,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5149,"src":"6896:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6886:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":5178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6900:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6886:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5180,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6885:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6860:42:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5153,"id":5182,"nodeType":"Return","src":"6853:49:23"}]}]},"documentation":{"id":5145,"nodeType":"StructuredDocumentation","src":"6000:210:23","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":5185,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"6224:7:23","nodeType":"FunctionDefinition","parameters":{"id":5150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5147,"mutability":"mutable","name":"a","nameLocation":"6240:1:23","nodeType":"VariableDeclaration","scope":5185,"src":"6232:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5146,"name":"uint256","nodeType":"ElementaryTypeName","src":"6232:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5149,"mutability":"mutable","name":"b","nameLocation":"6251:1:23","nodeType":"VariableDeclaration","scope":5185,"src":"6243:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5148,"name":"uint256","nodeType":"ElementaryTypeName","src":"6243:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6231:22:23"},"returnParameters":{"id":5153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5152,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5185,"src":"6277:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5151,"name":"uint256","nodeType":"ElementaryTypeName","src":"6277:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6276:9:23"},"scope":6415,"src":"6215:704:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5320,"nodeType":"Block","src":"7340:3585:23","statements":[{"id":5319,"nodeType":"UncheckedBlock","src":"7350:3569:23","statements":[{"assignments":[5198,5200],"declarations":[{"constant":false,"id":5198,"mutability":"mutable","name":"high","nameLocation":"7383:4:23","nodeType":"VariableDeclaration","scope":5319,"src":"7375:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5197,"name":"uint256","nodeType":"ElementaryTypeName","src":"7375:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5200,"mutability":"mutable","name":"low","nameLocation":"7397:3:23","nodeType":"VariableDeclaration","scope":5319,"src":"7389:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5199,"name":"uint256","nodeType":"ElementaryTypeName","src":"7389:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5205,"initialValue":{"arguments":[{"id":5202,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5188,"src":"7411:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5203,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5190,"src":"7414:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5201,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4834,"src":"7404:6:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":5204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7404:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"7374:42:23"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5206,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5198,"src":"7498:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7506:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7498:9:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5214,"nodeType":"IfStatement","src":"7494:365:23","trueBody":{"id":5213,"nodeType":"Block","src":"7509:350:23","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5209,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5200,"src":"7827:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5210,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"7833:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7827:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5196,"id":5212,"nodeType":"Return","src":"7820:24:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5215,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"7969:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":5216,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5198,"src":"7984:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7969:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5233,"nodeType":"IfStatement","src":"7965:142:23","trueBody":{"id":5232,"nodeType":"Block","src":"7990:117:23","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5222,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"8028:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8043:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8028:16:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":5225,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2946,"src":"8046:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2946_$","typeString":"type(library Panic)"}},"id":5226,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8052:16:23","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2913,"src":"8046:22:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5227,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2946,"src":"8070:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2946_$","typeString":"type(library Panic)"}},"id":5228,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8076:14:23","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":2909,"src":"8070:20:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5221,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5083,"src":"8020:7:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":5229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8020:71:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5218,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2946,"src":"8008:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2946_$","typeString":"type(library Panic)"}},"id":5220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8014:5:23","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2945,"src":"8008:11:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8008:84:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5231,"nodeType":"ExpressionStatement","src":"8008:84:23"}]}},{"assignments":[5235],"declarations":[{"constant":false,"id":5235,"mutability":"mutable","name":"remainder","nameLocation":"8367:9:23","nodeType":"VariableDeclaration","scope":5319,"src":"8359:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5234,"name":"uint256","nodeType":"ElementaryTypeName","src":"8359:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5236,"nodeType":"VariableDeclarationStatement","src":"8359:17:23"},{"AST":{"nativeSrc":"8415:283:23","nodeType":"YulBlock","src":"8415:283:23","statements":[{"nativeSrc":"8484:38:23","nodeType":"YulAssignment","src":"8484:38:23","value":{"arguments":[{"name":"x","nativeSrc":"8504:1:23","nodeType":"YulIdentifier","src":"8504:1:23"},{"name":"y","nativeSrc":"8507:1:23","nodeType":"YulIdentifier","src":"8507:1:23"},{"name":"denominator","nativeSrc":"8510:11:23","nodeType":"YulIdentifier","src":"8510:11:23"}],"functionName":{"name":"mulmod","nativeSrc":"8497:6:23","nodeType":"YulIdentifier","src":"8497:6:23"},"nativeSrc":"8497:25:23","nodeType":"YulFunctionCall","src":"8497:25:23"},"variableNames":[{"name":"remainder","nativeSrc":"8484:9:23","nodeType":"YulIdentifier","src":"8484:9:23"}]},{"nativeSrc":"8604:37:23","nodeType":"YulAssignment","src":"8604:37:23","value":{"arguments":[{"name":"high","nativeSrc":"8616:4:23","nodeType":"YulIdentifier","src":"8616:4:23"},{"arguments":[{"name":"remainder","nativeSrc":"8625:9:23","nodeType":"YulIdentifier","src":"8625:9:23"},{"name":"low","nativeSrc":"8636:3:23","nodeType":"YulIdentifier","src":"8636:3:23"}],"functionName":{"name":"gt","nativeSrc":"8622:2:23","nodeType":"YulIdentifier","src":"8622:2:23"},"nativeSrc":"8622:18:23","nodeType":"YulFunctionCall","src":"8622:18:23"}],"functionName":{"name":"sub","nativeSrc":"8612:3:23","nodeType":"YulIdentifier","src":"8612:3:23"},"nativeSrc":"8612:29:23","nodeType":"YulFunctionCall","src":"8612:29:23"},"variableNames":[{"name":"high","nativeSrc":"8604:4:23","nodeType":"YulIdentifier","src":"8604:4:23"}]},{"nativeSrc":"8658:26:23","nodeType":"YulAssignment","src":"8658:26:23","value":{"arguments":[{"name":"low","nativeSrc":"8669:3:23","nodeType":"YulIdentifier","src":"8669:3:23"},{"name":"remainder","nativeSrc":"8674:9:23","nodeType":"YulIdentifier","src":"8674:9:23"}],"functionName":{"name":"sub","nativeSrc":"8665:3:23","nodeType":"YulIdentifier","src":"8665:3:23"},"nativeSrc":"8665:19:23","nodeType":"YulFunctionCall","src":"8665:19:23"},"variableNames":[{"name":"low","nativeSrc":"8658:3:23","nodeType":"YulIdentifier","src":"8658:3:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5192,"isOffset":false,"isSlot":false,"src":"8510:11:23","valueSize":1},{"declaration":5198,"isOffset":false,"isSlot":false,"src":"8604:4:23","valueSize":1},{"declaration":5198,"isOffset":false,"isSlot":false,"src":"8616:4:23","valueSize":1},{"declaration":5200,"isOffset":false,"isSlot":false,"src":"8636:3:23","valueSize":1},{"declaration":5200,"isOffset":false,"isSlot":false,"src":"8658:3:23","valueSize":1},{"declaration":5200,"isOffset":false,"isSlot":false,"src":"8669:3:23","valueSize":1},{"declaration":5235,"isOffset":false,"isSlot":false,"src":"8484:9:23","valueSize":1},{"declaration":5235,"isOffset":false,"isSlot":false,"src":"8625:9:23","valueSize":1},{"declaration":5235,"isOffset":false,"isSlot":false,"src":"8674:9:23","valueSize":1},{"declaration":5188,"isOffset":false,"isSlot":false,"src":"8504:1:23","valueSize":1},{"declaration":5190,"isOffset":false,"isSlot":false,"src":"8507:1:23","valueSize":1}],"flags":["memory-safe"],"id":5237,"nodeType":"InlineAssembly","src":"8390:308:23"},{"assignments":[5239],"declarations":[{"constant":false,"id":5239,"mutability":"mutable","name":"twos","nameLocation":"8910:4:23","nodeType":"VariableDeclaration","scope":5319,"src":"8902:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5238,"name":"uint256","nodeType":"ElementaryTypeName","src":"8902:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5246,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5240,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"8917:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":5241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8932:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5242,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"8936:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8932:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5244,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8931:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8917:31:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8902:46:23"},{"AST":{"nativeSrc":"8987:359:23","nodeType":"YulBlock","src":"8987:359:23","statements":[{"nativeSrc":"9052:37:23","nodeType":"YulAssignment","src":"9052:37:23","value":{"arguments":[{"name":"denominator","nativeSrc":"9071:11:23","nodeType":"YulIdentifier","src":"9071:11:23"},{"name":"twos","nativeSrc":"9084:4:23","nodeType":"YulIdentifier","src":"9084:4:23"}],"functionName":{"name":"div","nativeSrc":"9067:3:23","nodeType":"YulIdentifier","src":"9067:3:23"},"nativeSrc":"9067:22:23","nodeType":"YulFunctionCall","src":"9067:22:23"},"variableNames":[{"name":"denominator","nativeSrc":"9052:11:23","nodeType":"YulIdentifier","src":"9052:11:23"}]},{"nativeSrc":"9153:21:23","nodeType":"YulAssignment","src":"9153:21:23","value":{"arguments":[{"name":"low","nativeSrc":"9164:3:23","nodeType":"YulIdentifier","src":"9164:3:23"},{"name":"twos","nativeSrc":"9169:4:23","nodeType":"YulIdentifier","src":"9169:4:23"}],"functionName":{"name":"div","nativeSrc":"9160:3:23","nodeType":"YulIdentifier","src":"9160:3:23"},"nativeSrc":"9160:14:23","nodeType":"YulFunctionCall","src":"9160:14:23"},"variableNames":[{"name":"low","nativeSrc":"9153:3:23","nodeType":"YulIdentifier","src":"9153:3:23"}]},{"nativeSrc":"9293:39:23","nodeType":"YulAssignment","src":"9293:39:23","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"9313:1:23","nodeType":"YulLiteral","src":"9313:1:23","type":"","value":"0"},{"name":"twos","nativeSrc":"9316:4:23","nodeType":"YulIdentifier","src":"9316:4:23"}],"functionName":{"name":"sub","nativeSrc":"9309:3:23","nodeType":"YulIdentifier","src":"9309:3:23"},"nativeSrc":"9309:12:23","nodeType":"YulFunctionCall","src":"9309:12:23"},{"name":"twos","nativeSrc":"9323:4:23","nodeType":"YulIdentifier","src":"9323:4:23"}],"functionName":{"name":"div","nativeSrc":"9305:3:23","nodeType":"YulIdentifier","src":"9305:3:23"},"nativeSrc":"9305:23:23","nodeType":"YulFunctionCall","src":"9305:23:23"},{"kind":"number","nativeSrc":"9330:1:23","nodeType":"YulLiteral","src":"9330:1:23","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"9301:3:23","nodeType":"YulIdentifier","src":"9301:3:23"},"nativeSrc":"9301:31:23","nodeType":"YulFunctionCall","src":"9301:31:23"},"variableNames":[{"name":"twos","nativeSrc":"9293:4:23","nodeType":"YulIdentifier","src":"9293:4:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5192,"isOffset":false,"isSlot":false,"src":"9052:11:23","valueSize":1},{"declaration":5192,"isOffset":false,"isSlot":false,"src":"9071:11:23","valueSize":1},{"declaration":5200,"isOffset":false,"isSlot":false,"src":"9153:3:23","valueSize":1},{"declaration":5200,"isOffset":false,"isSlot":false,"src":"9164:3:23","valueSize":1},{"declaration":5239,"isOffset":false,"isSlot":false,"src":"9084:4:23","valueSize":1},{"declaration":5239,"isOffset":false,"isSlot":false,"src":"9169:4:23","valueSize":1},{"declaration":5239,"isOffset":false,"isSlot":false,"src":"9293:4:23","valueSize":1},{"declaration":5239,"isOffset":false,"isSlot":false,"src":"9316:4:23","valueSize":1},{"declaration":5239,"isOffset":false,"isSlot":false,"src":"9323:4:23","valueSize":1}],"flags":["memory-safe"],"id":5247,"nodeType":"InlineAssembly","src":"8962:384:23"},{"expression":{"id":5252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5248,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5200,"src":"9409:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5249,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5198,"src":"9416:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5250,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5239,"src":"9423:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9416:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9409:18:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5253,"nodeType":"ExpressionStatement","src":"9409:18:23"},{"assignments":[5255],"declarations":[{"constant":false,"id":5255,"mutability":"mutable","name":"inverse","nameLocation":"9770:7:23","nodeType":"VariableDeclaration","scope":5319,"src":"9762:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5254,"name":"uint256","nodeType":"ElementaryTypeName","src":"9762:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5262,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":5256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9781:1:23","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5257,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"9785:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9781:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5259,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9780:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":5260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9800:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9780:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9762:39:23"},{"expression":{"id":5269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5263,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5255,"src":"10018:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10029:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5265,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"10033:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5266,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5255,"src":"10047:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10033:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10029:25:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10018:36:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5270,"nodeType":"ExpressionStatement","src":"10018:36:23"},{"expression":{"id":5277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5271,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5255,"src":"10088:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10099:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5273,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"10103:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5274,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5255,"src":"10117:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10099:25:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10088:36:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5278,"nodeType":"ExpressionStatement","src":"10088:36:23"},{"expression":{"id":5285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5279,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5255,"src":"10160:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10171:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5281,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"10175:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5282,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5255,"src":"10189:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10175:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10171:25:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10160:36:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5286,"nodeType":"ExpressionStatement","src":"10160:36:23"},{"expression":{"id":5293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5287,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5255,"src":"10231:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10242:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5289,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"10246:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5290,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5255,"src":"10260:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10246:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10242:25:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10231:36:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5294,"nodeType":"ExpressionStatement","src":"10231:36:23"},{"expression":{"id":5301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5295,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5255,"src":"10304:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10315:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5297,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"10319:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5298,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5255,"src":"10333:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10319:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10315:25:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10304:36:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5302,"nodeType":"ExpressionStatement","src":"10304:36:23"},{"expression":{"id":5309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5303,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5255,"src":"10378:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10389:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5305,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"10393:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5306,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5255,"src":"10407:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10393:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10389:25:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10378:36:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5310,"nodeType":"ExpressionStatement","src":"10378:36:23"},{"expression":{"id":5315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5311,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5195,"src":"10859:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5312,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5200,"src":"10868:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5313,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5255,"src":"10874:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10868:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10859:22:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5316,"nodeType":"ExpressionStatement","src":"10859:22:23"},{"expression":{"id":5317,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5195,"src":"10902:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5196,"id":5318,"nodeType":"Return","src":"10895:13:23"}]}]},"documentation":{"id":5186,"nodeType":"StructuredDocumentation","src":"6925:312:23","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":5321,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"7251:6:23","nodeType":"FunctionDefinition","parameters":{"id":5193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5188,"mutability":"mutable","name":"x","nameLocation":"7266:1:23","nodeType":"VariableDeclaration","scope":5321,"src":"7258:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5187,"name":"uint256","nodeType":"ElementaryTypeName","src":"7258:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5190,"mutability":"mutable","name":"y","nameLocation":"7277:1:23","nodeType":"VariableDeclaration","scope":5321,"src":"7269:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5189,"name":"uint256","nodeType":"ElementaryTypeName","src":"7269:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5192,"mutability":"mutable","name":"denominator","nameLocation":"7288:11:23","nodeType":"VariableDeclaration","scope":5321,"src":"7280:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5191,"name":"uint256","nodeType":"ElementaryTypeName","src":"7280:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7257:43:23"},"returnParameters":{"id":5196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5195,"mutability":"mutable","name":"result","nameLocation":"7332:6:23","nodeType":"VariableDeclaration","scope":5321,"src":"7324:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5194,"name":"uint256","nodeType":"ElementaryTypeName","src":"7324:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7323:16:23"},"scope":6415,"src":"7242:3683:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5357,"nodeType":"Block","src":"11164:128:23","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5337,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5324,"src":"11188:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5338,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5326,"src":"11191:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5339,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5328,"src":"11194:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5336,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[5321,5358],"referencedDeclaration":5321,"src":"11181:6:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":5340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11181:25:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5344,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5331,"src":"11242:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4806","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4806","typeString":"enum Math.Rounding"}],"id":5343,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6414,"src":"11225:16:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4806_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11225:26:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5347,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5324,"src":"11262:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5348,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5326,"src":"11265:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5349,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5328,"src":"11268:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5346,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"11255:6:23","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":5350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11255:25:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11283:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11255:29:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11225:59:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5341,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8180,"src":"11209:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8180_$","typeString":"type(library SafeCast)"}},"id":5342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11218:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8179,"src":"11209:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11209:76:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11181:104:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5335,"id":5356,"nodeType":"Return","src":"11174:111:23"}]},"documentation":{"id":5322,"nodeType":"StructuredDocumentation","src":"10931:118:23","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":5358,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"11063:6:23","nodeType":"FunctionDefinition","parameters":{"id":5332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5324,"mutability":"mutable","name":"x","nameLocation":"11078:1:23","nodeType":"VariableDeclaration","scope":5358,"src":"11070:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5323,"name":"uint256","nodeType":"ElementaryTypeName","src":"11070:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5326,"mutability":"mutable","name":"y","nameLocation":"11089:1:23","nodeType":"VariableDeclaration","scope":5358,"src":"11081:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5325,"name":"uint256","nodeType":"ElementaryTypeName","src":"11081:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5328,"mutability":"mutable","name":"denominator","nameLocation":"11100:11:23","nodeType":"VariableDeclaration","scope":5358,"src":"11092:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5327,"name":"uint256","nodeType":"ElementaryTypeName","src":"11092:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5331,"mutability":"mutable","name":"rounding","nameLocation":"11122:8:23","nodeType":"VariableDeclaration","scope":5358,"src":"11113:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4806","typeString":"enum Math.Rounding"},"typeName":{"id":5330,"nodeType":"UserDefinedTypeName","pathNode":{"id":5329,"name":"Rounding","nameLocations":["11113:8:23"],"nodeType":"IdentifierPath","referencedDeclaration":4806,"src":"11113:8:23"},"referencedDeclaration":4806,"src":"11113:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4806","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11069:62:23"},"returnParameters":{"id":5335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5334,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5358,"src":"11155:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5333,"name":"uint256","nodeType":"ElementaryTypeName","src":"11155:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11154:9:23"},"scope":6415,"src":"11054:238:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5407,"nodeType":"Block","src":"11500:245:23","statements":[{"id":5406,"nodeType":"UncheckedBlock","src":"11510:229:23","statements":[{"assignments":[5371,5373],"declarations":[{"constant":false,"id":5371,"mutability":"mutable","name":"high","nameLocation":"11543:4:23","nodeType":"VariableDeclaration","scope":5406,"src":"11535:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5370,"name":"uint256","nodeType":"ElementaryTypeName","src":"11535:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5373,"mutability":"mutable","name":"low","nameLocation":"11557:3:23","nodeType":"VariableDeclaration","scope":5406,"src":"11549:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5372,"name":"uint256","nodeType":"ElementaryTypeName","src":"11549:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5378,"initialValue":{"arguments":[{"id":5375,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5361,"src":"11571:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5376,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5363,"src":"11574:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5374,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4834,"src":"11564:6:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":5377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11564:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11534:42:23"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5379,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5371,"src":"11594:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11602:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":5381,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5365,"src":"11607:1:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11602:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11594:14:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5392,"nodeType":"IfStatement","src":"11590:86:23","trueBody":{"id":5391,"nodeType":"Block","src":"11610:66:23","statements":[{"expression":{"arguments":[{"expression":{"id":5387,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2946,"src":"11640:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2946_$","typeString":"type(library Panic)"}},"id":5388,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11646:14:23","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":2909,"src":"11640:20:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5384,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2946,"src":"11628:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2946_$","typeString":"type(library Panic)"}},"id":5386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11634:5:23","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2945,"src":"11628:11:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11628:33:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5390,"nodeType":"ExpressionStatement","src":"11628:33:23"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5393,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5371,"src":"11697:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":5396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"323536","id":5394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11706:3:23","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5395,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5365,"src":"11712:1:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11706:7:23","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"id":5397,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11705:9:23","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"11697:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5399,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11696:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5400,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5373,"src":"11719:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5401,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5365,"src":"11726:1:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11719:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5403,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11718:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11696:32:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5369,"id":5405,"nodeType":"Return","src":"11689:39:23"}]}]},"documentation":{"id":5359,"nodeType":"StructuredDocumentation","src":"11298:111:23","text":" @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256."},"id":5408,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11423:6:23","nodeType":"FunctionDefinition","parameters":{"id":5366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5361,"mutability":"mutable","name":"x","nameLocation":"11438:1:23","nodeType":"VariableDeclaration","scope":5408,"src":"11430:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5360,"name":"uint256","nodeType":"ElementaryTypeName","src":"11430:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5363,"mutability":"mutable","name":"y","nameLocation":"11449:1:23","nodeType":"VariableDeclaration","scope":5408,"src":"11441:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5362,"name":"uint256","nodeType":"ElementaryTypeName","src":"11441:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5365,"mutability":"mutable","name":"n","nameLocation":"11458:1:23","nodeType":"VariableDeclaration","scope":5408,"src":"11452:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5364,"name":"uint8","nodeType":"ElementaryTypeName","src":"11452:5:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"11429:31:23"},"returnParameters":{"id":5369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5368,"mutability":"mutable","name":"result","nameLocation":"11492:6:23","nodeType":"VariableDeclaration","scope":5408,"src":"11484:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5367,"name":"uint256","nodeType":"ElementaryTypeName","src":"11484:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11483:16:23"},"scope":6415,"src":"11414:331:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5446,"nodeType":"Block","src":"11963:113:23","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5424,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5411,"src":"11987:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5425,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5413,"src":"11990:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5426,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5415,"src":"11993:1:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":5423,"name":"mulShr","nodeType":"Identifier","overloadedDeclarations":[5408,5447],"referencedDeclaration":5408,"src":"11980:6:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint8_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint8) pure returns (uint256)"}},"id":5427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11980:15:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5431,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5418,"src":"12031:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4806","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4806","typeString":"enum Math.Rounding"}],"id":5430,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6414,"src":"12014:16:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4806_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12014:26:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5434,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5411,"src":"12051:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5435,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5413,"src":"12054:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12057:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":5437,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5415,"src":"12062:1:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12057:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5433,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"12044:6:23","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":5439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12044:20:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12067:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12044:24:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12014:54:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5428,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8180,"src":"11998:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8180_$","typeString":"type(library SafeCast)"}},"id":5429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12007:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8179,"src":"11998:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11998:71:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11980:89:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5422,"id":5445,"nodeType":"Return","src":"11973:96:23"}]},"documentation":{"id":5409,"nodeType":"StructuredDocumentation","src":"11751:109:23","text":" @dev Calculates x * y >> n with full precision, following the selected rounding direction."},"id":5447,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11874:6:23","nodeType":"FunctionDefinition","parameters":{"id":5419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5411,"mutability":"mutable","name":"x","nameLocation":"11889:1:23","nodeType":"VariableDeclaration","scope":5447,"src":"11881:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5410,"name":"uint256","nodeType":"ElementaryTypeName","src":"11881:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5413,"mutability":"mutable","name":"y","nameLocation":"11900:1:23","nodeType":"VariableDeclaration","scope":5447,"src":"11892:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5412,"name":"uint256","nodeType":"ElementaryTypeName","src":"11892:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5415,"mutability":"mutable","name":"n","nameLocation":"11909:1:23","nodeType":"VariableDeclaration","scope":5447,"src":"11903:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5414,"name":"uint8","nodeType":"ElementaryTypeName","src":"11903:5:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5418,"mutability":"mutable","name":"rounding","nameLocation":"11921:8:23","nodeType":"VariableDeclaration","scope":5447,"src":"11912:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4806","typeString":"enum Math.Rounding"},"typeName":{"id":5417,"nodeType":"UserDefinedTypeName","pathNode":{"id":5416,"name":"Rounding","nameLocations":["11912:8:23"],"nodeType":"IdentifierPath","referencedDeclaration":4806,"src":"11912:8:23"},"referencedDeclaration":4806,"src":"11912:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4806","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11880:50:23"},"returnParameters":{"id":5422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5421,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5447,"src":"11954:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5420,"name":"uint256","nodeType":"ElementaryTypeName","src":"11954:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11953:9:23"},"scope":6415,"src":"11865:211:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5543,"nodeType":"Block","src":"12710:1849:23","statements":[{"id":5542,"nodeType":"UncheckedBlock","src":"12720:1833:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5457,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5452,"src":"12748:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12753:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12748:6:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5462,"nodeType":"IfStatement","src":"12744:20:23","trueBody":{"expression":{"hexValue":"30","id":5460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":5456,"id":5461,"nodeType":"Return","src":"12756:8:23"}},{"assignments":[5464],"declarations":[{"constant":false,"id":5464,"mutability":"mutable","name":"remainder","nameLocation":"13243:9:23","nodeType":"VariableDeclaration","scope":5542,"src":"13235:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5463,"name":"uint256","nodeType":"ElementaryTypeName","src":"13235:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5468,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5465,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5450,"src":"13255:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":5466,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5452,"src":"13259:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13255:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13235:25:23"},{"assignments":[5470],"declarations":[{"constant":false,"id":5470,"mutability":"mutable","name":"gcd","nameLocation":"13282:3:23","nodeType":"VariableDeclaration","scope":5542,"src":"13274:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5469,"name":"uint256","nodeType":"ElementaryTypeName","src":"13274:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5472,"initialValue":{"id":5471,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5452,"src":"13288:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13274:15:23"},{"assignments":[5474],"declarations":[{"constant":false,"id":5474,"mutability":"mutable","name":"x","nameLocation":"13432:1:23","nodeType":"VariableDeclaration","scope":5542,"src":"13425:8:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5473,"name":"int256","nodeType":"ElementaryTypeName","src":"13425:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":5476,"initialValue":{"hexValue":"30","id":5475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13436:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13425:12:23"},{"assignments":[5478],"declarations":[{"constant":false,"id":5478,"mutability":"mutable","name":"y","nameLocation":"13458:1:23","nodeType":"VariableDeclaration","scope":5542,"src":"13451:8:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5477,"name":"int256","nodeType":"ElementaryTypeName","src":"13451:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":5480,"initialValue":{"hexValue":"31","id":5479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13462:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"13451:12:23"},{"body":{"id":5517,"nodeType":"Block","src":"13501:882:23","statements":[{"assignments":[5485],"declarations":[{"constant":false,"id":5485,"mutability":"mutable","name":"quotient","nameLocation":"13527:8:23","nodeType":"VariableDeclaration","scope":5517,"src":"13519:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5484,"name":"uint256","nodeType":"ElementaryTypeName","src":"13519:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5489,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5486,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5470,"src":"13538:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5487,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5464,"src":"13544:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13538:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13519:34:23"},{"expression":{"id":5500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":5490,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5470,"src":"13573:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5491,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5464,"src":"13578:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5492,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13572:16:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":5493,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5464,"src":"13678:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5494,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5470,"src":"13923:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5495,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5464,"src":"13929:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5496,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5485,"src":"13941:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13929:20:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13923:26:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5499,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13591:376:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"13572:395:23","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5501,"nodeType":"ExpressionStatement","src":"13572:395:23"},{"expression":{"id":5515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":5502,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5474,"src":"13987:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":5503,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5478,"src":"13990:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5504,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13986:6:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":5505,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5478,"src":"14072:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5506,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5474,"src":"14326:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5507,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5478,"src":"14330:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":5510,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5485,"src":"14341:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5509,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14334:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5508,"name":"int256","nodeType":"ElementaryTypeName","src":"14334:6:23","typeDescriptions":{}}},"id":5511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14334:16:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14330:20:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14326:24:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5514,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13995:373:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"13986:382:23","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5516,"nodeType":"ExpressionStatement","src":"13986:382:23"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5481,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5464,"src":"13485:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13498:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13485:14:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5518,"nodeType":"WhileStatement","src":"13478:905:23"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5519,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5470,"src":"14401:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":5520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14408:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14401:8:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5524,"nodeType":"IfStatement","src":"14397:22:23","trueBody":{"expression":{"hexValue":"30","id":5522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14418:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":5456,"id":5523,"nodeType":"Return","src":"14411:8:23"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5526,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5474,"src":"14470:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":5527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14474:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14470:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5529,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5452,"src":"14477:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":5533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"14489:2:23","subExpression":{"id":5532,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5474,"src":"14490:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5531,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14481:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5530,"name":"uint256","nodeType":"ElementaryTypeName","src":"14481:7:23","typeDescriptions":{}}},"id":5534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14481:11:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14477:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":5538,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5474,"src":"14502:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5537,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14494:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5536,"name":"uint256","nodeType":"ElementaryTypeName","src":"14494:7:23","typeDescriptions":{}}},"id":5539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14494:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5525,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5083,"src":"14462:7:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":5540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14462:43:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5456,"id":5541,"nodeType":"Return","src":"14455:50:23"}]}]},"documentation":{"id":5448,"nodeType":"StructuredDocumentation","src":"12082:553:23","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":5544,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"12649:6:23","nodeType":"FunctionDefinition","parameters":{"id":5453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5450,"mutability":"mutable","name":"a","nameLocation":"12664:1:23","nodeType":"VariableDeclaration","scope":5544,"src":"12656:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5449,"name":"uint256","nodeType":"ElementaryTypeName","src":"12656:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5452,"mutability":"mutable","name":"n","nameLocation":"12675:1:23","nodeType":"VariableDeclaration","scope":5544,"src":"12667:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5451,"name":"uint256","nodeType":"ElementaryTypeName","src":"12667:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12655:22:23"},"returnParameters":{"id":5456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5455,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5544,"src":"12701:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5454,"name":"uint256","nodeType":"ElementaryTypeName","src":"12701:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12700:9:23"},"scope":6415,"src":"12640:1919:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5564,"nodeType":"Block","src":"15159:82:23","statements":[{"id":5563,"nodeType":"UncheckedBlock","src":"15169:66:23","statements":[{"expression":{"arguments":[{"id":5556,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5547,"src":"15212:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5557,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5549,"src":"15215:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":5558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15219:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15215:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5560,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5549,"src":"15222:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5554,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6415,"src":"15200:4:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6415_$","typeString":"type(library Math)"}},"id":5555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15205:6:23","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":5601,"src":"15200:11:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":5561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15200:24:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5553,"id":5562,"nodeType":"Return","src":"15193:31:23"}]}]},"documentation":{"id":5545,"nodeType":"StructuredDocumentation","src":"14565:514:23","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":5565,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"15093:11:23","nodeType":"FunctionDefinition","parameters":{"id":5550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5547,"mutability":"mutable","name":"a","nameLocation":"15113:1:23","nodeType":"VariableDeclaration","scope":5565,"src":"15105:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5546,"name":"uint256","nodeType":"ElementaryTypeName","src":"15105:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5549,"mutability":"mutable","name":"p","nameLocation":"15124:1:23","nodeType":"VariableDeclaration","scope":5565,"src":"15116:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5548,"name":"uint256","nodeType":"ElementaryTypeName","src":"15116:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15104:22:23"},"returnParameters":{"id":5553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5552,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5565,"src":"15150:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5551,"name":"uint256","nodeType":"ElementaryTypeName","src":"15150:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15149:9:23"},"scope":6415,"src":"15084:157:23","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5600,"nodeType":"Block","src":"16011:174:23","statements":[{"assignments":[5578,5580],"declarations":[{"constant":false,"id":5578,"mutability":"mutable","name":"success","nameLocation":"16027:7:23","nodeType":"VariableDeclaration","scope":5600,"src":"16022:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5577,"name":"bool","nodeType":"ElementaryTypeName","src":"16022:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5580,"mutability":"mutable","name":"result","nameLocation":"16044:6:23","nodeType":"VariableDeclaration","scope":5600,"src":"16036:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5579,"name":"uint256","nodeType":"ElementaryTypeName","src":"16036:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5586,"initialValue":{"arguments":[{"id":5582,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5568,"src":"16064:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5583,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5570,"src":"16067:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5584,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5572,"src":"16070:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5581,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[5625,5707],"referencedDeclaration":5625,"src":"16054:9:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":5585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:18:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"16021:51:23"},{"condition":{"id":5588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16086:8:23","subExpression":{"id":5587,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5578,"src":"16087:7:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5597,"nodeType":"IfStatement","src":"16082:74:23","trueBody":{"id":5596,"nodeType":"Block","src":"16096:60:23","statements":[{"expression":{"arguments":[{"expression":{"id":5592,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2946,"src":"16122:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2946_$","typeString":"type(library Panic)"}},"id":5593,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16128:16:23","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2913,"src":"16122:22:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5589,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2946,"src":"16110:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2946_$","typeString":"type(library Panic)"}},"id":5591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16116:5:23","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2945,"src":"16110:11:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16110:35:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5595,"nodeType":"ExpressionStatement","src":"16110:35:23"}]}},{"expression":{"id":5598,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5580,"src":"16172:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5576,"id":5599,"nodeType":"Return","src":"16165:13:23"}]},"documentation":{"id":5566,"nodeType":"StructuredDocumentation","src":"15247:678:23","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":5601,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"15939:6:23","nodeType":"FunctionDefinition","parameters":{"id":5573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5568,"mutability":"mutable","name":"b","nameLocation":"15954:1:23","nodeType":"VariableDeclaration","scope":5601,"src":"15946:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5567,"name":"uint256","nodeType":"ElementaryTypeName","src":"15946:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5570,"mutability":"mutable","name":"e","nameLocation":"15965:1:23","nodeType":"VariableDeclaration","scope":5601,"src":"15957:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5569,"name":"uint256","nodeType":"ElementaryTypeName","src":"15957:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5572,"mutability":"mutable","name":"m","nameLocation":"15976:1:23","nodeType":"VariableDeclaration","scope":5601,"src":"15968:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5571,"name":"uint256","nodeType":"ElementaryTypeName","src":"15968:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15945:33:23"},"returnParameters":{"id":5576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5575,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5601,"src":"16002:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5574,"name":"uint256","nodeType":"ElementaryTypeName","src":"16002:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16001:9:23"},"scope":6415,"src":"15930:255:23","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5624,"nodeType":"Block","src":"17039:1493:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5615,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5608,"src":"17053:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17058:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17053:6:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5622,"nodeType":"IfStatement","src":"17049:29:23","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17069:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":5619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17076:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":5620,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"17068:10:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":5614,"id":5621,"nodeType":"Return","src":"17061:17:23"}},{"AST":{"nativeSrc":"17113:1413:23","nodeType":"YulBlock","src":"17113:1413:23","statements":[{"nativeSrc":"17127:22:23","nodeType":"YulVariableDeclaration","src":"17127:22:23","value":{"arguments":[{"kind":"number","nativeSrc":"17144:4:23","nodeType":"YulLiteral","src":"17144:4:23","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"17138:5:23","nodeType":"YulIdentifier","src":"17138:5:23"},"nativeSrc":"17138:11:23","nodeType":"YulFunctionCall","src":"17138:11:23"},"variables":[{"name":"ptr","nativeSrc":"17131:3:23","nodeType":"YulTypedName","src":"17131:3:23","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"18057:3:23","nodeType":"YulIdentifier","src":"18057:3:23"},{"kind":"number","nativeSrc":"18062:4:23","nodeType":"YulLiteral","src":"18062:4:23","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18050:6:23","nodeType":"YulIdentifier","src":"18050:6:23"},"nativeSrc":"18050:17:23","nodeType":"YulFunctionCall","src":"18050:17:23"},"nativeSrc":"18050:17:23","nodeType":"YulExpressionStatement","src":"18050:17:23"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18091:3:23","nodeType":"YulIdentifier","src":"18091:3:23"},{"kind":"number","nativeSrc":"18096:4:23","nodeType":"YulLiteral","src":"18096:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"18087:3:23","nodeType":"YulIdentifier","src":"18087:3:23"},"nativeSrc":"18087:14:23","nodeType":"YulFunctionCall","src":"18087:14:23"},{"kind":"number","nativeSrc":"18103:4:23","nodeType":"YulLiteral","src":"18103:4:23","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18080:6:23","nodeType":"YulIdentifier","src":"18080:6:23"},"nativeSrc":"18080:28:23","nodeType":"YulFunctionCall","src":"18080:28:23"},"nativeSrc":"18080:28:23","nodeType":"YulExpressionStatement","src":"18080:28:23"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18132:3:23","nodeType":"YulIdentifier","src":"18132:3:23"},{"kind":"number","nativeSrc":"18137:4:23","nodeType":"YulLiteral","src":"18137:4:23","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"18128:3:23","nodeType":"YulIdentifier","src":"18128:3:23"},"nativeSrc":"18128:14:23","nodeType":"YulFunctionCall","src":"18128:14:23"},{"kind":"number","nativeSrc":"18144:4:23","nodeType":"YulLiteral","src":"18144:4:23","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18121:6:23","nodeType":"YulIdentifier","src":"18121:6:23"},"nativeSrc":"18121:28:23","nodeType":"YulFunctionCall","src":"18121:28:23"},"nativeSrc":"18121:28:23","nodeType":"YulExpressionStatement","src":"18121:28:23"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18173:3:23","nodeType":"YulIdentifier","src":"18173:3:23"},{"kind":"number","nativeSrc":"18178:4:23","nodeType":"YulLiteral","src":"18178:4:23","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"18169:3:23","nodeType":"YulIdentifier","src":"18169:3:23"},"nativeSrc":"18169:14:23","nodeType":"YulFunctionCall","src":"18169:14:23"},{"name":"b","nativeSrc":"18185:1:23","nodeType":"YulIdentifier","src":"18185:1:23"}],"functionName":{"name":"mstore","nativeSrc":"18162:6:23","nodeType":"YulIdentifier","src":"18162:6:23"},"nativeSrc":"18162:25:23","nodeType":"YulFunctionCall","src":"18162:25:23"},"nativeSrc":"18162:25:23","nodeType":"YulExpressionStatement","src":"18162:25:23"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18211:3:23","nodeType":"YulIdentifier","src":"18211:3:23"},{"kind":"number","nativeSrc":"18216:4:23","nodeType":"YulLiteral","src":"18216:4:23","type":"","value":"0x80"}],"functionName":{"name":"add","nativeSrc":"18207:3:23","nodeType":"YulIdentifier","src":"18207:3:23"},"nativeSrc":"18207:14:23","nodeType":"YulFunctionCall","src":"18207:14:23"},{"name":"e","nativeSrc":"18223:1:23","nodeType":"YulIdentifier","src":"18223:1:23"}],"functionName":{"name":"mstore","nativeSrc":"18200:6:23","nodeType":"YulIdentifier","src":"18200:6:23"},"nativeSrc":"18200:25:23","nodeType":"YulFunctionCall","src":"18200:25:23"},"nativeSrc":"18200:25:23","nodeType":"YulExpressionStatement","src":"18200:25:23"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18249:3:23","nodeType":"YulIdentifier","src":"18249:3:23"},{"kind":"number","nativeSrc":"18254:4:23","nodeType":"YulLiteral","src":"18254:4:23","type":"","value":"0xa0"}],"functionName":{"name":"add","nativeSrc":"18245:3:23","nodeType":"YulIdentifier","src":"18245:3:23"},"nativeSrc":"18245:14:23","nodeType":"YulFunctionCall","src":"18245:14:23"},{"name":"m","nativeSrc":"18261:1:23","nodeType":"YulIdentifier","src":"18261:1:23"}],"functionName":{"name":"mstore","nativeSrc":"18238:6:23","nodeType":"YulIdentifier","src":"18238:6:23"},"nativeSrc":"18238:25:23","nodeType":"YulFunctionCall","src":"18238:25:23"},"nativeSrc":"18238:25:23","nodeType":"YulExpressionStatement","src":"18238:25:23"},{"nativeSrc":"18425:57:23","nodeType":"YulAssignment","src":"18425:57:23","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"18447:3:23","nodeType":"YulIdentifier","src":"18447:3:23"},"nativeSrc":"18447:5:23","nodeType":"YulFunctionCall","src":"18447:5:23"},{"kind":"number","nativeSrc":"18454:4:23","nodeType":"YulLiteral","src":"18454:4:23","type":"","value":"0x05"},{"name":"ptr","nativeSrc":"18460:3:23","nodeType":"YulIdentifier","src":"18460:3:23"},{"kind":"number","nativeSrc":"18465:4:23","nodeType":"YulLiteral","src":"18465:4:23","type":"","value":"0xc0"},{"kind":"number","nativeSrc":"18471:4:23","nodeType":"YulLiteral","src":"18471:4:23","type":"","value":"0x00"},{"kind":"number","nativeSrc":"18477:4:23","nodeType":"YulLiteral","src":"18477:4:23","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nativeSrc":"18436:10:23","nodeType":"YulIdentifier","src":"18436:10:23"},"nativeSrc":"18436:46:23","nodeType":"YulFunctionCall","src":"18436:46:23"},"variableNames":[{"name":"success","nativeSrc":"18425:7:23","nodeType":"YulIdentifier","src":"18425:7:23"}]},{"nativeSrc":"18495:21:23","nodeType":"YulAssignment","src":"18495:21:23","value":{"arguments":[{"kind":"number","nativeSrc":"18511:4:23","nodeType":"YulLiteral","src":"18511:4:23","type":"","value":"0x00"}],"functionName":{"name":"mload","nativeSrc":"18505:5:23","nodeType":"YulIdentifier","src":"18505:5:23"},"nativeSrc":"18505:11:23","nodeType":"YulFunctionCall","src":"18505:11:23"},"variableNames":[{"name":"result","nativeSrc":"18495:6:23","nodeType":"YulIdentifier","src":"18495:6:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5604,"isOffset":false,"isSlot":false,"src":"18185:1:23","valueSize":1},{"declaration":5606,"isOffset":false,"isSlot":false,"src":"18223:1:23","valueSize":1},{"declaration":5608,"isOffset":false,"isSlot":false,"src":"18261:1:23","valueSize":1},{"declaration":5613,"isOffset":false,"isSlot":false,"src":"18495:6:23","valueSize":1},{"declaration":5611,"isOffset":false,"isSlot":false,"src":"18425:7:23","valueSize":1}],"flags":["memory-safe"],"id":5623,"nodeType":"InlineAssembly","src":"17088:1438:23"}]},"documentation":{"id":5602,"nodeType":"StructuredDocumentation","src":"16191:738:23","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":5625,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16943:9:23","nodeType":"FunctionDefinition","parameters":{"id":5609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5604,"mutability":"mutable","name":"b","nameLocation":"16961:1:23","nodeType":"VariableDeclaration","scope":5625,"src":"16953:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5603,"name":"uint256","nodeType":"ElementaryTypeName","src":"16953:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5606,"mutability":"mutable","name":"e","nameLocation":"16972:1:23","nodeType":"VariableDeclaration","scope":5625,"src":"16964:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5605,"name":"uint256","nodeType":"ElementaryTypeName","src":"16964:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5608,"mutability":"mutable","name":"m","nameLocation":"16983:1:23","nodeType":"VariableDeclaration","scope":5625,"src":"16975:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5607,"name":"uint256","nodeType":"ElementaryTypeName","src":"16975:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16952:33:23"},"returnParameters":{"id":5614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5611,"mutability":"mutable","name":"success","nameLocation":"17014:7:23","nodeType":"VariableDeclaration","scope":5625,"src":"17009:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5610,"name":"bool","nodeType":"ElementaryTypeName","src":"17009:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5613,"mutability":"mutable","name":"result","nameLocation":"17031:6:23","nodeType":"VariableDeclaration","scope":5625,"src":"17023:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5612,"name":"uint256","nodeType":"ElementaryTypeName","src":"17023:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17008:30:23"},"scope":6415,"src":"16934:1598:23","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5660,"nodeType":"Block","src":"18729:179:23","statements":[{"assignments":[5638,5640],"declarations":[{"constant":false,"id":5638,"mutability":"mutable","name":"success","nameLocation":"18745:7:23","nodeType":"VariableDeclaration","scope":5660,"src":"18740:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5637,"name":"bool","nodeType":"ElementaryTypeName","src":"18740:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5640,"mutability":"mutable","name":"result","nameLocation":"18767:6:23","nodeType":"VariableDeclaration","scope":5660,"src":"18754:19:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5639,"name":"bytes","nodeType":"ElementaryTypeName","src":"18754:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5646,"initialValue":{"arguments":[{"id":5642,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5628,"src":"18787:1:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5643,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5630,"src":"18790:1:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5644,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5632,"src":"18793:1:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5641,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[5625,5707],"referencedDeclaration":5707,"src":"18777:9:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":5645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18777:18:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"18739:56:23"},{"condition":{"id":5648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"18809:8:23","subExpression":{"id":5647,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5638,"src":"18810:7:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5657,"nodeType":"IfStatement","src":"18805:74:23","trueBody":{"id":5656,"nodeType":"Block","src":"18819:60:23","statements":[{"expression":{"arguments":[{"expression":{"id":5652,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2946,"src":"18845:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2946_$","typeString":"type(library Panic)"}},"id":5653,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"18851:16:23","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2913,"src":"18845:22:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5649,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2946,"src":"18833:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2946_$","typeString":"type(library Panic)"}},"id":5651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18839:5:23","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2945,"src":"18833:11:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18833:35:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5655,"nodeType":"ExpressionStatement","src":"18833:35:23"}]}},{"expression":{"id":5658,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5640,"src":"18895:6:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":5636,"id":5659,"nodeType":"Return","src":"18888:13:23"}]},"documentation":{"id":5626,"nodeType":"StructuredDocumentation","src":"18538:85:23","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":5661,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"18637:6:23","nodeType":"FunctionDefinition","parameters":{"id":5633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5628,"mutability":"mutable","name":"b","nameLocation":"18657:1:23","nodeType":"VariableDeclaration","scope":5661,"src":"18644:14:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5627,"name":"bytes","nodeType":"ElementaryTypeName","src":"18644:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5630,"mutability":"mutable","name":"e","nameLocation":"18673:1:23","nodeType":"VariableDeclaration","scope":5661,"src":"18660:14:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5629,"name":"bytes","nodeType":"ElementaryTypeName","src":"18660:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5632,"mutability":"mutable","name":"m","nameLocation":"18689:1:23","nodeType":"VariableDeclaration","scope":5661,"src":"18676:14:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5631,"name":"bytes","nodeType":"ElementaryTypeName","src":"18676:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18643:48:23"},"returnParameters":{"id":5636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5635,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5661,"src":"18715:12:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5634,"name":"bytes","nodeType":"ElementaryTypeName","src":"18715:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18714:14:23"},"scope":6415,"src":"18628:280:23","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5706,"nodeType":"Block","src":"19162:771:23","statements":[{"condition":{"arguments":[{"id":5676,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5668,"src":"19187:1:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5675,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5740,"src":"19176:10:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":5677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19176:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5685,"nodeType":"IfStatement","src":"19172:47:23","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"19199:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":5681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19216:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5680,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"19206:9:23","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":5679,"name":"bytes","nodeType":"ElementaryTypeName","src":"19210:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":5682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19206:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":5683,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19198:21:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":5674,"id":5684,"nodeType":"Return","src":"19191:28:23"}},{"assignments":[5687],"declarations":[{"constant":false,"id":5687,"mutability":"mutable","name":"mLen","nameLocation":"19238:4:23","nodeType":"VariableDeclaration","scope":5706,"src":"19230:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5686,"name":"uint256","nodeType":"ElementaryTypeName","src":"19230:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5690,"initialValue":{"expression":{"id":5688,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5668,"src":"19245:1:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19247:6:23","memberName":"length","nodeType":"MemberAccess","src":"19245:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19230:23:23"},{"expression":{"id":5703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5691,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5673,"src":"19335:6:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":5694,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5664,"src":"19361:1:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19363:6:23","memberName":"length","nodeType":"MemberAccess","src":"19361:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5696,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5666,"src":"19371:1:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19373:6:23","memberName":"length","nodeType":"MemberAccess","src":"19371:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5698,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5687,"src":"19381:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5699,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5664,"src":"19387:1:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5700,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5666,"src":"19390:1:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5701,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5668,"src":"19393:1:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":5692,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"19344:3:23","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5693,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19348:12:23","memberName":"encodePacked","nodeType":"MemberAccess","src":"19344:16:23","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":5702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19344:51:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"19335:60:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5704,"nodeType":"ExpressionStatement","src":"19335:60:23"},{"AST":{"nativeSrc":"19431:496:23","nodeType":"YulBlock","src":"19431:496:23","statements":[{"nativeSrc":"19445:32:23","nodeType":"YulVariableDeclaration","src":"19445:32:23","value":{"arguments":[{"name":"result","nativeSrc":"19464:6:23","nodeType":"YulIdentifier","src":"19464:6:23"},{"kind":"number","nativeSrc":"19472:4:23","nodeType":"YulLiteral","src":"19472:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"19460:3:23","nodeType":"YulIdentifier","src":"19460:3:23"},"nativeSrc":"19460:17:23","nodeType":"YulFunctionCall","src":"19460:17:23"},"variables":[{"name":"dataPtr","nativeSrc":"19449:7:23","nodeType":"YulTypedName","src":"19449:7:23","type":""}]},{"nativeSrc":"19567:73:23","nodeType":"YulAssignment","src":"19567:73:23","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"19589:3:23","nodeType":"YulIdentifier","src":"19589:3:23"},"nativeSrc":"19589:5:23","nodeType":"YulFunctionCall","src":"19589:5:23"},{"kind":"number","nativeSrc":"19596:4:23","nodeType":"YulLiteral","src":"19596:4:23","type":"","value":"0x05"},{"name":"dataPtr","nativeSrc":"19602:7:23","nodeType":"YulIdentifier","src":"19602:7:23"},{"arguments":[{"name":"result","nativeSrc":"19617:6:23","nodeType":"YulIdentifier","src":"19617:6:23"}],"functionName":{"name":"mload","nativeSrc":"19611:5:23","nodeType":"YulIdentifier","src":"19611:5:23"},"nativeSrc":"19611:13:23","nodeType":"YulFunctionCall","src":"19611:13:23"},{"name":"dataPtr","nativeSrc":"19626:7:23","nodeType":"YulIdentifier","src":"19626:7:23"},{"name":"mLen","nativeSrc":"19635:4:23","nodeType":"YulIdentifier","src":"19635:4:23"}],"functionName":{"name":"staticcall","nativeSrc":"19578:10:23","nodeType":"YulIdentifier","src":"19578:10:23"},"nativeSrc":"19578:62:23","nodeType":"YulFunctionCall","src":"19578:62:23"},"variableNames":[{"name":"success","nativeSrc":"19567:7:23","nodeType":"YulIdentifier","src":"19567:7:23"}]},{"expression":{"arguments":[{"name":"result","nativeSrc":"19796:6:23","nodeType":"YulIdentifier","src":"19796:6:23"},{"name":"mLen","nativeSrc":"19804:4:23","nodeType":"YulIdentifier","src":"19804:4:23"}],"functionName":{"name":"mstore","nativeSrc":"19789:6:23","nodeType":"YulIdentifier","src":"19789:6:23"},"nativeSrc":"19789:20:23","nodeType":"YulFunctionCall","src":"19789:20:23"},"nativeSrc":"19789:20:23","nodeType":"YulExpressionStatement","src":"19789:20:23"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"19892:4:23","nodeType":"YulLiteral","src":"19892:4:23","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nativeSrc":"19902:7:23","nodeType":"YulIdentifier","src":"19902:7:23"},{"name":"mLen","nativeSrc":"19911:4:23","nodeType":"YulIdentifier","src":"19911:4:23"}],"functionName":{"name":"add","nativeSrc":"19898:3:23","nodeType":"YulIdentifier","src":"19898:3:23"},"nativeSrc":"19898:18:23","nodeType":"YulFunctionCall","src":"19898:18:23"}],"functionName":{"name":"mstore","nativeSrc":"19885:6:23","nodeType":"YulIdentifier","src":"19885:6:23"},"nativeSrc":"19885:32:23","nodeType":"YulFunctionCall","src":"19885:32:23"},"nativeSrc":"19885:32:23","nodeType":"YulExpressionStatement","src":"19885:32:23"}]},"evmVersion":"paris","externalReferences":[{"declaration":5687,"isOffset":false,"isSlot":false,"src":"19635:4:23","valueSize":1},{"declaration":5687,"isOffset":false,"isSlot":false,"src":"19804:4:23","valueSize":1},{"declaration":5687,"isOffset":false,"isSlot":false,"src":"19911:4:23","valueSize":1},{"declaration":5673,"isOffset":false,"isSlot":false,"src":"19464:6:23","valueSize":1},{"declaration":5673,"isOffset":false,"isSlot":false,"src":"19617:6:23","valueSize":1},{"declaration":5673,"isOffset":false,"isSlot":false,"src":"19796:6:23","valueSize":1},{"declaration":5671,"isOffset":false,"isSlot":false,"src":"19567:7:23","valueSize":1}],"flags":["memory-safe"],"id":5705,"nodeType":"InlineAssembly","src":"19406:521:23"}]},"documentation":{"id":5662,"nodeType":"StructuredDocumentation","src":"18914:88:23","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":5707,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"19016:9:23","nodeType":"FunctionDefinition","parameters":{"id":5669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5664,"mutability":"mutable","name":"b","nameLocation":"19048:1:23","nodeType":"VariableDeclaration","scope":5707,"src":"19035:14:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5663,"name":"bytes","nodeType":"ElementaryTypeName","src":"19035:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5666,"mutability":"mutable","name":"e","nameLocation":"19072:1:23","nodeType":"VariableDeclaration","scope":5707,"src":"19059:14:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5665,"name":"bytes","nodeType":"ElementaryTypeName","src":"19059:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5668,"mutability":"mutable","name":"m","nameLocation":"19096:1:23","nodeType":"VariableDeclaration","scope":5707,"src":"19083:14:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5667,"name":"bytes","nodeType":"ElementaryTypeName","src":"19083:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19025:78:23"},"returnParameters":{"id":5674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5671,"mutability":"mutable","name":"success","nameLocation":"19132:7:23","nodeType":"VariableDeclaration","scope":5707,"src":"19127:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5670,"name":"bool","nodeType":"ElementaryTypeName","src":"19127:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5673,"mutability":"mutable","name":"result","nameLocation":"19154:6:23","nodeType":"VariableDeclaration","scope":5707,"src":"19141:19:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5672,"name":"bytes","nodeType":"ElementaryTypeName","src":"19141:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19126:35:23"},"scope":6415,"src":"19007:926:23","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5739,"nodeType":"Block","src":"20088:176:23","statements":[{"body":{"id":5735,"nodeType":"Block","src":"20145:92:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":5730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":5726,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5710,"src":"20163:9:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5728,"indexExpression":{"id":5727,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5716,"src":"20173:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20163:12:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20179:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20163:17:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5734,"nodeType":"IfStatement","src":"20159:68:23","trueBody":{"id":5733,"nodeType":"Block","src":"20182:45:23","statements":[{"expression":{"hexValue":"66616c7365","id":5731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20207:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":5714,"id":5732,"nodeType":"Return","src":"20200:12:23"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5719,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5716,"src":"20118:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5720,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5710,"src":"20122:9:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20132:6:23","memberName":"length","nodeType":"MemberAccess","src":"20122:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20118:20:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5736,"initializationExpression":{"assignments":[5716],"declarations":[{"constant":false,"id":5716,"mutability":"mutable","name":"i","nameLocation":"20111:1:23","nodeType":"VariableDeclaration","scope":5736,"src":"20103:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5715,"name":"uint256","nodeType":"ElementaryTypeName","src":"20103:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5718,"initialValue":{"hexValue":"30","id":5717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20115:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"20103:13:23"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":5724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"20140:3:23","subExpression":{"id":5723,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5716,"src":"20142:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5725,"nodeType":"ExpressionStatement","src":"20140:3:23"},"nodeType":"ForStatement","src":"20098:139:23"},{"expression":{"hexValue":"74727565","id":5737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20253:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":5714,"id":5738,"nodeType":"Return","src":"20246:11:23"}]},"documentation":{"id":5708,"nodeType":"StructuredDocumentation","src":"19939:72:23","text":" @dev Returns whether the provided byte array is zero."},"id":5740,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"20025:10:23","nodeType":"FunctionDefinition","parameters":{"id":5711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5710,"mutability":"mutable","name":"byteArray","nameLocation":"20049:9:23","nodeType":"VariableDeclaration","scope":5740,"src":"20036:22:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5709,"name":"bytes","nodeType":"ElementaryTypeName","src":"20036:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"20035:24:23"},"returnParameters":{"id":5714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5713,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5740,"src":"20082:4:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5712,"name":"bool","nodeType":"ElementaryTypeName","src":"20082:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20081:6:23"},"scope":6415,"src":"20016:248:23","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":5958,"nodeType":"Block","src":"20624:5124:23","statements":[{"id":5957,"nodeType":"UncheckedBlock","src":"20634:5108:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5748,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5743,"src":"20728:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":5749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20733:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20728:6:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5754,"nodeType":"IfStatement","src":"20724:53:23","trueBody":{"id":5753,"nodeType":"Block","src":"20736:41:23","statements":[{"expression":{"id":5751,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5743,"src":"20761:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5747,"id":5752,"nodeType":"Return","src":"20754:8:23"}]}},{"assignments":[5756],"declarations":[{"constant":false,"id":5756,"mutability":"mutable","name":"aa","nameLocation":"21712:2:23","nodeType":"VariableDeclaration","scope":5957,"src":"21704:10:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5755,"name":"uint256","nodeType":"ElementaryTypeName","src":"21704:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5758,"initialValue":{"id":5757,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5743,"src":"21717:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21704:14:23"},{"assignments":[5760],"declarations":[{"constant":false,"id":5760,"mutability":"mutable","name":"xn","nameLocation":"21740:2:23","nodeType":"VariableDeclaration","scope":5957,"src":"21732:10:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5759,"name":"uint256","nodeType":"ElementaryTypeName","src":"21732:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5762,"initialValue":{"hexValue":"31","id":5761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21745:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"21732:14:23"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5763,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5756,"src":"21765:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":5766,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21772:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":5765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21777:3:23","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21772:8:23","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":5767,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21771:10:23","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"21765:16:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5778,"nodeType":"IfStatement","src":"21761:92:23","trueBody":{"id":5777,"nodeType":"Block","src":"21783:70:23","statements":[{"expression":{"id":5771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5769,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5756,"src":"21801:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":5770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21808:3:23","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21801:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5772,"nodeType":"ExpressionStatement","src":"21801:10:23"},{"expression":{"id":5775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5773,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5760,"src":"21829:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":5774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21836:2:23","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21829:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5776,"nodeType":"ExpressionStatement","src":"21829:9:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5779,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5756,"src":"21870:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":5782,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21877:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":5781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21882:2:23","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21877:7:23","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":5783,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21876:9:23","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"21870:15:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5794,"nodeType":"IfStatement","src":"21866:90:23","trueBody":{"id":5793,"nodeType":"Block","src":"21887:69:23","statements":[{"expression":{"id":5787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5785,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5756,"src":"21905:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":5786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21912:2:23","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21905:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5788,"nodeType":"ExpressionStatement","src":"21905:9:23"},{"expression":{"id":5791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5789,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5760,"src":"21932:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":5790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21939:2:23","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21932:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5792,"nodeType":"ExpressionStatement","src":"21932:9:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5795,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5756,"src":"21973:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":5798,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21980:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":5797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21985:2:23","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21980:7:23","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":5799,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21979:9:23","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"21973:15:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5810,"nodeType":"IfStatement","src":"21969:90:23","trueBody":{"id":5809,"nodeType":"Block","src":"21990:69:23","statements":[{"expression":{"id":5803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5801,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5756,"src":"22008:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":5802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22015:2:23","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"22008:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5804,"nodeType":"ExpressionStatement","src":"22008:9:23"},{"expression":{"id":5807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5805,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5760,"src":"22035:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":5806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22042:2:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22035:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5808,"nodeType":"ExpressionStatement","src":"22035:9:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5811,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5756,"src":"22076:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":5814,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22083:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":5813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22088:2:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22083:7:23","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":5815,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22082:9:23","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"22076:15:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5826,"nodeType":"IfStatement","src":"22072:89:23","trueBody":{"id":5825,"nodeType":"Block","src":"22093:68:23","statements":[{"expression":{"id":5819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5817,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5756,"src":"22111:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":5818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22118:2:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22111:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5820,"nodeType":"ExpressionStatement","src":"22111:9:23"},{"expression":{"id":5823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5821,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5760,"src":"22138:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":5822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22145:1:23","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22138:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5824,"nodeType":"ExpressionStatement","src":"22138:8:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5827,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5756,"src":"22178:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":5830,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22185:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":5829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22190:1:23","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22185:6:23","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":5831,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22184:8:23","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"22178:14:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5842,"nodeType":"IfStatement","src":"22174:87:23","trueBody":{"id":5841,"nodeType":"Block","src":"22194:67:23","statements":[{"expression":{"id":5835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5833,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5756,"src":"22212:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":5834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22219:1:23","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22212:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5836,"nodeType":"ExpressionStatement","src":"22212:8:23"},{"expression":{"id":5839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5837,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5760,"src":"22238:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":5838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22245:1:23","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22238:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5840,"nodeType":"ExpressionStatement","src":"22238:8:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5843,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5756,"src":"22278:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":5846,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22285:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":5845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22290:1:23","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22285:6:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":5847,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22284:8:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"22278:14:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5858,"nodeType":"IfStatement","src":"22274:87:23","trueBody":{"id":5857,"nodeType":"Block","src":"22294:67:23","statements":[{"expression":{"id":5851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5849,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5756,"src":"22312:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":5850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22319:1:23","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22312:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5852,"nodeType":"ExpressionStatement","src":"22312:8:23"},{"expression":{"id":5855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5853,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5760,"src":"22338:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":5854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22345:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22338:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5856,"nodeType":"ExpressionStatement","src":"22338:8:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5859,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5756,"src":"22378:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":5862,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22385:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":5861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22390:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22385:6:23","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":5863,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22384:8:23","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"22378:14:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5870,"nodeType":"IfStatement","src":"22374:61:23","trueBody":{"id":5869,"nodeType":"Block","src":"22394:41:23","statements":[{"expression":{"id":5867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5865,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5760,"src":"22412:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":5866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22419:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22412:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5868,"nodeType":"ExpressionStatement","src":"22412:8:23"}]}},{"expression":{"id":5878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5871,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5760,"src":"22855:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":5872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22861:1:23","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5873,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5760,"src":"22865:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22861:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5875,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22860:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22872:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22860:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22855:18:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5879,"nodeType":"ExpressionStatement","src":"22855:18:23"},{"expression":{"id":5889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5880,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5760,"src":"24760:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5881,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5760,"src":"24766:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5882,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5743,"src":"24771:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5883,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5760,"src":"24775:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24771:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24766:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5886,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24765:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24782:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24765:18:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24760:23:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5890,"nodeType":"ExpressionStatement","src":"24760:23:23"},{"expression":{"id":5900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5891,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5760,"src":"24869:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5892,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5760,"src":"24875:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5893,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5743,"src":"24880:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5894,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5760,"src":"24884:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24880:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24875:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5897,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24874:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24891:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24874:18:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24869:23:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5901,"nodeType":"ExpressionStatement","src":"24869:23:23"},{"expression":{"id":5911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5902,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5760,"src":"24980:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5903,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5760,"src":"24986:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5904,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5743,"src":"24991:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5905,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5760,"src":"24995:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24991:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24986:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5908,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24985:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25002:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24985:18:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24980:23:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5912,"nodeType":"ExpressionStatement","src":"24980:23:23"},{"expression":{"id":5922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5913,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5760,"src":"25089:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5914,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5760,"src":"25095:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5915,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5743,"src":"25100:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5916,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5760,"src":"25104:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25100:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25095:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5919,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25094:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25111:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25094:18:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25089:23:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5923,"nodeType":"ExpressionStatement","src":"25089:23:23"},{"expression":{"id":5933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5924,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5760,"src":"25199:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5925,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5760,"src":"25205:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5926,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5743,"src":"25210:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5927,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5760,"src":"25214:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25210:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25205:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5930,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25204:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25221:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25204:18:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25199:23:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5934,"nodeType":"ExpressionStatement","src":"25199:23:23"},{"expression":{"id":5944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5935,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5760,"src":"25309:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5936,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5760,"src":"25315:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5937,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5743,"src":"25320:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5938,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5760,"src":"25324:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25320:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25315:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5941,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25314:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25331:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25314:18:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25309:23:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5945,"nodeType":"ExpressionStatement","src":"25309:23:23"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5946,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5760,"src":"25698:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5949,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5760,"src":"25719:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5950,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5743,"src":"25724:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5951,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5760,"src":"25728:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25724:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25719:11:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5947,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8180,"src":"25703:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8180_$","typeString":"type(library SafeCast)"}},"id":5948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25712:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8179,"src":"25703:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25703:28:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25698:33:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5747,"id":5956,"nodeType":"Return","src":"25691:40:23"}]}]},"documentation":{"id":5741,"nodeType":"StructuredDocumentation","src":"20270:292:23","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":5959,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"20576:4:23","nodeType":"FunctionDefinition","parameters":{"id":5744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5743,"mutability":"mutable","name":"a","nameLocation":"20589:1:23","nodeType":"VariableDeclaration","scope":5959,"src":"20581:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5742,"name":"uint256","nodeType":"ElementaryTypeName","src":"20581:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20580:11:23"},"returnParameters":{"id":5747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5746,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5959,"src":"20615:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5745,"name":"uint256","nodeType":"ElementaryTypeName","src":"20615:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20614:9:23"},"scope":6415,"src":"20567:5181:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5992,"nodeType":"Block","src":"25921:171:23","statements":[{"id":5991,"nodeType":"UncheckedBlock","src":"25931:155:23","statements":[{"assignments":[5971],"declarations":[{"constant":false,"id":5971,"mutability":"mutable","name":"result","nameLocation":"25963:6:23","nodeType":"VariableDeclaration","scope":5991,"src":"25955:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5970,"name":"uint256","nodeType":"ElementaryTypeName","src":"25955:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5975,"initialValue":{"arguments":[{"id":5973,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5962,"src":"25977:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5972,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[5959,5993],"referencedDeclaration":5959,"src":"25972:4:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25972:7:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25955:24:23"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5976,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5971,"src":"26000:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5980,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5965,"src":"26042:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4806","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4806","typeString":"enum Math.Rounding"}],"id":5979,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6414,"src":"26025:16:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4806_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26025:26:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5982,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5971,"src":"26055:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5983,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5971,"src":"26064:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5985,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5962,"src":"26073:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26025:49:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5977,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8180,"src":"26009:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8180_$","typeString":"type(library SafeCast)"}},"id":5978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26018:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8179,"src":"26009:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26009:66:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26000:75:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5969,"id":5990,"nodeType":"Return","src":"25993:82:23"}]}]},"documentation":{"id":5960,"nodeType":"StructuredDocumentation","src":"25754:86:23","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":5993,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"25854:4:23","nodeType":"FunctionDefinition","parameters":{"id":5966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5962,"mutability":"mutable","name":"a","nameLocation":"25867:1:23","nodeType":"VariableDeclaration","scope":5993,"src":"25859:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5961,"name":"uint256","nodeType":"ElementaryTypeName","src":"25859:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5965,"mutability":"mutable","name":"rounding","nameLocation":"25879:8:23","nodeType":"VariableDeclaration","scope":5993,"src":"25870:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4806","typeString":"enum Math.Rounding"},"typeName":{"id":5964,"nodeType":"UserDefinedTypeName","pathNode":{"id":5963,"name":"Rounding","nameLocations":["25870:8:23"],"nodeType":"IdentifierPath","referencedDeclaration":4806,"src":"25870:8:23"},"referencedDeclaration":4806,"src":"25870:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4806","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"25858:30:23"},"returnParameters":{"id":5969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5968,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5993,"src":"25912:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5967,"name":"uint256","nodeType":"ElementaryTypeName","src":"25912:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25911:9:23"},"scope":6415,"src":"25845:247:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6083,"nodeType":"Block","src":"26281:2334:23","statements":[{"expression":{"id":6010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6001,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5999,"src":"26363:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6004,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5996,"src":"26383:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":6005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26387:34:23","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"26383:38:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6002,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8180,"src":"26367:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8180_$","typeString":"type(library SafeCast)"}},"id":6003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26376:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8179,"src":"26367:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26367:55:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":6008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26426:1:23","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"26367:60:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26363:64:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6011,"nodeType":"ExpressionStatement","src":"26363:64:23"},{"expression":{"id":6024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6012,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5999,"src":"26503:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6015,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5996,"src":"26525:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6016,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5999,"src":"26530:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26525:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6018,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26524:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":6019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26535:18:23","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"26524:29:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6013,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8180,"src":"26508:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8180_$","typeString":"type(library SafeCast)"}},"id":6014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26517:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8179,"src":"26508:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26508:46:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":6022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26558:1:23","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"26508:51:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26503:56:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6025,"nodeType":"ExpressionStatement","src":"26503:56:23"},{"expression":{"id":6038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6026,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5999,"src":"26634:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6029,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5996,"src":"26656:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6030,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5999,"src":"26661:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26656:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6032,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26655:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":6033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26666:10:23","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"26655:21:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6027,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8180,"src":"26639:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8180_$","typeString":"type(library SafeCast)"}},"id":6028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26648:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8179,"src":"26639:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6035,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26639:38:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":6036,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26681:1:23","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"26639:43:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26634:48:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6039,"nodeType":"ExpressionStatement","src":"26634:48:23"},{"expression":{"id":6052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6040,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5999,"src":"26757:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6043,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5996,"src":"26779:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6044,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5999,"src":"26784:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26779:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6046,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26778:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":6047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26789:6:23","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"26778:17:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6041,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8180,"src":"26762:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8180_$","typeString":"type(library SafeCast)"}},"id":6042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26771:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8179,"src":"26762:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26762:34:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":6050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26800:1:23","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"26762:39:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26757:44:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6053,"nodeType":"ExpressionStatement","src":"26757:44:23"},{"expression":{"id":6066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6054,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5999,"src":"26874:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6057,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5996,"src":"26896:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6058,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5999,"src":"26901:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26896:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6060,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26895:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":6061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26906:4:23","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"26895:15:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6055,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8180,"src":"26879:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8180_$","typeString":"type(library SafeCast)"}},"id":6056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26888:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8179,"src":"26879:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26879:32:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":6064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26915:1:23","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"26879:37:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26874:42:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6067,"nodeType":"ExpressionStatement","src":"26874:42:23"},{"expression":{"id":6080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6068,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5999,"src":"26988:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6071,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5996,"src":"27010:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6072,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5999,"src":"27015:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27010:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6074,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"27009:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866","id":6075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27020:3:23","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"27009:14:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6069,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8180,"src":"26993:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8180_$","typeString":"type(library SafeCast)"}},"id":6070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27002:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8179,"src":"26993:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26993:31:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":6078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27028:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26993:36:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26988:41:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6081,"nodeType":"ExpressionStatement","src":"26988:41:23"},{"AST":{"nativeSrc":"28490:119:23","nodeType":"YulBlock","src":"28490:119:23","statements":[{"nativeSrc":"28504:95:23","nodeType":"YulAssignment","src":"28504:95:23","value":{"arguments":[{"name":"r","nativeSrc":"28512:1:23","nodeType":"YulIdentifier","src":"28512:1:23"},{"arguments":[{"arguments":[{"name":"r","nativeSrc":"28524:1:23","nodeType":"YulIdentifier","src":"28524:1:23"},{"name":"x","nativeSrc":"28527:1:23","nodeType":"YulIdentifier","src":"28527:1:23"}],"functionName":{"name":"shr","nativeSrc":"28520:3:23","nodeType":"YulIdentifier","src":"28520:3:23"},"nativeSrc":"28520:9:23","nodeType":"YulFunctionCall","src":"28520:9:23"},{"kind":"number","nativeSrc":"28531:66:23","nodeType":"YulLiteral","src":"28531:66:23","type":"","value":"0x0000010102020202030303030303030300000000000000000000000000000000"}],"functionName":{"name":"byte","nativeSrc":"28515:4:23","nodeType":"YulIdentifier","src":"28515:4:23"},"nativeSrc":"28515:83:23","nodeType":"YulFunctionCall","src":"28515:83:23"}],"functionName":{"name":"or","nativeSrc":"28509:2:23","nodeType":"YulIdentifier","src":"28509:2:23"},"nativeSrc":"28509:90:23","nodeType":"YulFunctionCall","src":"28509:90:23"},"variableNames":[{"name":"r","nativeSrc":"28504:1:23","nodeType":"YulIdentifier","src":"28504:1:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5999,"isOffset":false,"isSlot":false,"src":"28504:1:23","valueSize":1},{"declaration":5999,"isOffset":false,"isSlot":false,"src":"28512:1:23","valueSize":1},{"declaration":5999,"isOffset":false,"isSlot":false,"src":"28524:1:23","valueSize":1},{"declaration":5996,"isOffset":false,"isSlot":false,"src":"28527:1:23","valueSize":1}],"flags":["memory-safe"],"id":6082,"nodeType":"InlineAssembly","src":"28465:144:23"}]},"documentation":{"id":5994,"nodeType":"StructuredDocumentation","src":"26098:119:23","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":6084,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"26231:4:23","nodeType":"FunctionDefinition","parameters":{"id":5997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5996,"mutability":"mutable","name":"x","nameLocation":"26244:1:23","nodeType":"VariableDeclaration","scope":6084,"src":"26236:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5995,"name":"uint256","nodeType":"ElementaryTypeName","src":"26236:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26235:11:23"},"returnParameters":{"id":6000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5999,"mutability":"mutable","name":"r","nameLocation":"26278:1:23","nodeType":"VariableDeclaration","scope":6084,"src":"26270:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5998,"name":"uint256","nodeType":"ElementaryTypeName","src":"26270:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26269:11:23"},"scope":6415,"src":"26222:2393:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6117,"nodeType":"Block","src":"28848:175:23","statements":[{"id":6116,"nodeType":"UncheckedBlock","src":"28858:159:23","statements":[{"assignments":[6096],"declarations":[{"constant":false,"id":6096,"mutability":"mutable","name":"result","nameLocation":"28890:6:23","nodeType":"VariableDeclaration","scope":6116,"src":"28882:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6095,"name":"uint256","nodeType":"ElementaryTypeName","src":"28882:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6100,"initialValue":{"arguments":[{"id":6098,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6087,"src":"28904:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6097,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[6084,6118],"referencedDeclaration":6084,"src":"28899:4:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":6099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28899:11:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"28882:28:23"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6101,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6096,"src":"28931:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6105,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6090,"src":"28973:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4806","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4806","typeString":"enum Math.Rounding"}],"id":6104,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6414,"src":"28956:16:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4806_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":6106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28956:26:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28986:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":6108,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6096,"src":"28991:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6110,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6087,"src":"29000:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"28956:49:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6102,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8180,"src":"28940:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8180_$","typeString":"type(library SafeCast)"}},"id":6103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"28949:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8179,"src":"28940:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28940:66:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28931:75:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6094,"id":6115,"nodeType":"Return","src":"28924:82:23"}]}]},"documentation":{"id":6085,"nodeType":"StructuredDocumentation","src":"28621:142:23","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":6118,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"28777:4:23","nodeType":"FunctionDefinition","parameters":{"id":6091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6087,"mutability":"mutable","name":"value","nameLocation":"28790:5:23","nodeType":"VariableDeclaration","scope":6118,"src":"28782:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6086,"name":"uint256","nodeType":"ElementaryTypeName","src":"28782:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6090,"mutability":"mutable","name":"rounding","nameLocation":"28806:8:23","nodeType":"VariableDeclaration","scope":6118,"src":"28797:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4806","typeString":"enum Math.Rounding"},"typeName":{"id":6089,"nodeType":"UserDefinedTypeName","pathNode":{"id":6088,"name":"Rounding","nameLocations":["28797:8:23"],"nodeType":"IdentifierPath","referencedDeclaration":4806,"src":"28797:8:23"},"referencedDeclaration":4806,"src":"28797:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4806","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28781:34:23"},"returnParameters":{"id":6094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6093,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6118,"src":"28839:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6092,"name":"uint256","nodeType":"ElementaryTypeName","src":"28839:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28838:9:23"},"scope":6415,"src":"28768:255:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6246,"nodeType":"Block","src":"29216:854:23","statements":[{"assignments":[6127],"declarations":[{"constant":false,"id":6127,"mutability":"mutable","name":"result","nameLocation":"29234:6:23","nodeType":"VariableDeclaration","scope":6246,"src":"29226:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6126,"name":"uint256","nodeType":"ElementaryTypeName","src":"29226:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6129,"initialValue":{"hexValue":"30","id":6128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29243:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"29226:18:23"},{"id":6243,"nodeType":"UncheckedBlock","src":"29254:787:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6130,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6121,"src":"29282:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":6133,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29291:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":6132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29297:2:23","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29291:8:23","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29282:17:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6146,"nodeType":"IfStatement","src":"29278:103:23","trueBody":{"id":6145,"nodeType":"Block","src":"29301:80:23","statements":[{"expression":{"id":6139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6135,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6121,"src":"29319:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":6138,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29328:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":6137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29334:2:23","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29328:8:23","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29319:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6140,"nodeType":"ExpressionStatement","src":"29319:17:23"},{"expression":{"id":6143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6141,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6127,"src":"29354:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":6142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29364:2:23","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29354:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6144,"nodeType":"ExpressionStatement","src":"29354:12:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6147,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6121,"src":"29398:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":6150,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29407:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":6149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29413:2:23","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29407:8:23","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29398:17:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6163,"nodeType":"IfStatement","src":"29394:103:23","trueBody":{"id":6162,"nodeType":"Block","src":"29417:80:23","statements":[{"expression":{"id":6156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6152,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6121,"src":"29435:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":6155,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29444:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":6154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29450:2:23","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29444:8:23","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29435:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6157,"nodeType":"ExpressionStatement","src":"29435:17:23"},{"expression":{"id":6160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6158,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6127,"src":"29470:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":6159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29480:2:23","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29470:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6161,"nodeType":"ExpressionStatement","src":"29470:12:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6164,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6121,"src":"29514:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":6167,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29523:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":6166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29529:2:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29523:8:23","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29514:17:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6180,"nodeType":"IfStatement","src":"29510:103:23","trueBody":{"id":6179,"nodeType":"Block","src":"29533:80:23","statements":[{"expression":{"id":6173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6169,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6121,"src":"29551:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":6172,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29560:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":6171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29566:2:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29560:8:23","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29551:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6174,"nodeType":"ExpressionStatement","src":"29551:17:23"},{"expression":{"id":6177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6175,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6127,"src":"29586:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":6176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29596:2:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29586:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6178,"nodeType":"ExpressionStatement","src":"29586:12:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6181,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6121,"src":"29630:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":6184,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29639:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":6183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29645:1:23","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29639:7:23","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29630:16:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6197,"nodeType":"IfStatement","src":"29626:100:23","trueBody":{"id":6196,"nodeType":"Block","src":"29648:78:23","statements":[{"expression":{"id":6190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6186,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6121,"src":"29666:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":6189,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29675:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":6188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29681:1:23","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29675:7:23","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29666:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6191,"nodeType":"ExpressionStatement","src":"29666:16:23"},{"expression":{"id":6194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6192,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6127,"src":"29700:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":6193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29710:1:23","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29700:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6195,"nodeType":"ExpressionStatement","src":"29700:11:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6198,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6121,"src":"29743:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":6201,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29752:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":6200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29758:1:23","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29752:7:23","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29743:16:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6214,"nodeType":"IfStatement","src":"29739:100:23","trueBody":{"id":6213,"nodeType":"Block","src":"29761:78:23","statements":[{"expression":{"id":6207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6203,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6121,"src":"29779:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":6206,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29788:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":6205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29794:1:23","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29788:7:23","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29779:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6208,"nodeType":"ExpressionStatement","src":"29779:16:23"},{"expression":{"id":6211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6209,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6127,"src":"29813:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":6210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29823:1:23","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29813:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6212,"nodeType":"ExpressionStatement","src":"29813:11:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6215,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6121,"src":"29856:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":6218,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29865:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":6217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29871:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29865:7:23","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29856:16:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6231,"nodeType":"IfStatement","src":"29852:100:23","trueBody":{"id":6230,"nodeType":"Block","src":"29874:78:23","statements":[{"expression":{"id":6224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6220,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6121,"src":"29892:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":6223,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29901:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":6222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29907:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29901:7:23","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29892:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6225,"nodeType":"ExpressionStatement","src":"29892:16:23"},{"expression":{"id":6228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6226,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6127,"src":"29926:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":6227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29936:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29926:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6229,"nodeType":"ExpressionStatement","src":"29926:11:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6232,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6121,"src":"29969:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":6235,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29978:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":6234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29984:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"29978:7:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"29969:16:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6242,"nodeType":"IfStatement","src":"29965:66:23","trueBody":{"id":6241,"nodeType":"Block","src":"29987:44:23","statements":[{"expression":{"id":6239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6237,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6127,"src":"30005:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":6238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30015:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"30005:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6240,"nodeType":"ExpressionStatement","src":"30005:11:23"}]}}]},{"expression":{"id":6244,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6127,"src":"30057:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6125,"id":6245,"nodeType":"Return","src":"30050:13:23"}]},"documentation":{"id":6119,"nodeType":"StructuredDocumentation","src":"29029:120:23","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":6247,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"29163:5:23","nodeType":"FunctionDefinition","parameters":{"id":6122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6121,"mutability":"mutable","name":"value","nameLocation":"29177:5:23","nodeType":"VariableDeclaration","scope":6247,"src":"29169:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6120,"name":"uint256","nodeType":"ElementaryTypeName","src":"29169:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29168:15:23"},"returnParameters":{"id":6125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6124,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6247,"src":"29207:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6123,"name":"uint256","nodeType":"ElementaryTypeName","src":"29207:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29206:9:23"},"scope":6415,"src":"29154:916:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6280,"nodeType":"Block","src":"30305:177:23","statements":[{"id":6279,"nodeType":"UncheckedBlock","src":"30315:161:23","statements":[{"assignments":[6259],"declarations":[{"constant":false,"id":6259,"mutability":"mutable","name":"result","nameLocation":"30347:6:23","nodeType":"VariableDeclaration","scope":6279,"src":"30339:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6258,"name":"uint256","nodeType":"ElementaryTypeName","src":"30339:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6263,"initialValue":{"arguments":[{"id":6261,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6250,"src":"30362:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6260,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[6247,6281],"referencedDeclaration":6247,"src":"30356:5:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":6262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30356:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"30339:29:23"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6264,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6259,"src":"30389:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6268,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6253,"src":"30431:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4806","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4806","typeString":"enum Math.Rounding"}],"id":6267,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6414,"src":"30414:16:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4806_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":6269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30414:26:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30444:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":6271,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6259,"src":"30450:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6273,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6250,"src":"30459:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:20:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"30414:50:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6265,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8180,"src":"30398:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8180_$","typeString":"type(library SafeCast)"}},"id":6266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30407:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8179,"src":"30398:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30398:67:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30389:76:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6257,"id":6278,"nodeType":"Return","src":"30382:83:23"}]}]},"documentation":{"id":6248,"nodeType":"StructuredDocumentation","src":"30076:143:23","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":6281,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"30233:5:23","nodeType":"FunctionDefinition","parameters":{"id":6254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6250,"mutability":"mutable","name":"value","nameLocation":"30247:5:23","nodeType":"VariableDeclaration","scope":6281,"src":"30239:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6249,"name":"uint256","nodeType":"ElementaryTypeName","src":"30239:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6253,"mutability":"mutable","name":"rounding","nameLocation":"30263:8:23","nodeType":"VariableDeclaration","scope":6281,"src":"30254:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4806","typeString":"enum Math.Rounding"},"typeName":{"id":6252,"nodeType":"UserDefinedTypeName","pathNode":{"id":6251,"name":"Rounding","nameLocations":["30254:8:23"],"nodeType":"IdentifierPath","referencedDeclaration":4806,"src":"30254:8:23"},"referencedDeclaration":4806,"src":"30254:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4806","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"30238:34:23"},"returnParameters":{"id":6257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6256,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6281,"src":"30296:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6255,"name":"uint256","nodeType":"ElementaryTypeName","src":"30296:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30295:9:23"},"scope":6415,"src":"30224:258:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6357,"nodeType":"Block","src":"30800:675:23","statements":[{"expression":{"id":6298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6289,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6287,"src":"30882:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6292,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6284,"src":"30902:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":6293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30906:34:23","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"30902:38:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6290,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8180,"src":"30886:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8180_$","typeString":"type(library SafeCast)"}},"id":6291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30895:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8179,"src":"30886:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30886:55:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":6296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30945:1:23","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"30886:60:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30882:64:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6299,"nodeType":"ExpressionStatement","src":"30882:64:23"},{"expression":{"id":6312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6300,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6287,"src":"31022:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6303,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6284,"src":"31044:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6304,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6287,"src":"31049:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31044:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6306,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31043:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":6307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31054:18:23","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"31043:29:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6301,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8180,"src":"31027:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8180_$","typeString":"type(library SafeCast)"}},"id":6302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31036:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8179,"src":"31027:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31027:46:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":6310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31077:1:23","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"31027:51:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31022:56:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6313,"nodeType":"ExpressionStatement","src":"31022:56:23"},{"expression":{"id":6326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6314,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6287,"src":"31153:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6317,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6284,"src":"31175:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6318,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6287,"src":"31180:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31175:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6320,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31174:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":6321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31185:10:23","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"31174:21:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6315,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8180,"src":"31158:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8180_$","typeString":"type(library SafeCast)"}},"id":6316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31167:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8179,"src":"31158:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31158:38:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":6324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31200:1:23","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"31158:43:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31153:48:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6327,"nodeType":"ExpressionStatement","src":"31153:48:23"},{"expression":{"id":6340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6328,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6287,"src":"31276:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6331,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6284,"src":"31298:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6332,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6287,"src":"31303:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31298:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6334,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31297:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":6335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31308:6:23","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"31297:17:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6329,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8180,"src":"31281:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8180_$","typeString":"type(library SafeCast)"}},"id":6330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31290:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8179,"src":"31281:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31281:34:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":6338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31319:1:23","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"31281:39:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31276:44:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6341,"nodeType":"ExpressionStatement","src":"31276:44:23"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6342,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6287,"src":"31426:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"33","id":6343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31431:1:23","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31426:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6345,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31425:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6348,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6284,"src":"31453:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6349,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6287,"src":"31458:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31453:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6351,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31452:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":6352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31463:4:23","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"31452:15:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6346,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8180,"src":"31436:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8180_$","typeString":"type(library SafeCast)"}},"id":6347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31445:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8179,"src":"31436:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31436:32:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31425:43:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6288,"id":6356,"nodeType":"Return","src":"31418:50:23"}]},"documentation":{"id":6282,"nodeType":"StructuredDocumentation","src":"30488:246:23","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":6358,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"30748:6:23","nodeType":"FunctionDefinition","parameters":{"id":6285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6284,"mutability":"mutable","name":"x","nameLocation":"30763:1:23","nodeType":"VariableDeclaration","scope":6358,"src":"30755:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6283,"name":"uint256","nodeType":"ElementaryTypeName","src":"30755:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30754:11:23"},"returnParameters":{"id":6288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6287,"mutability":"mutable","name":"r","nameLocation":"30797:1:23","nodeType":"VariableDeclaration","scope":6358,"src":"30789:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6286,"name":"uint256","nodeType":"ElementaryTypeName","src":"30789:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30788:11:23"},"scope":6415,"src":"30739:736:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6394,"nodeType":"Block","src":"31712:184:23","statements":[{"id":6393,"nodeType":"UncheckedBlock","src":"31722:168:23","statements":[{"assignments":[6370],"declarations":[{"constant":false,"id":6370,"mutability":"mutable","name":"result","nameLocation":"31754:6:23","nodeType":"VariableDeclaration","scope":6393,"src":"31746:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6369,"name":"uint256","nodeType":"ElementaryTypeName","src":"31746:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6374,"initialValue":{"arguments":[{"id":6372,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6361,"src":"31770:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6371,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[6358,6395],"referencedDeclaration":6358,"src":"31763:6:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":6373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31763:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"31746:30:23"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6375,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6370,"src":"31797:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6379,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6364,"src":"31839:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4806","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4806","typeString":"enum Math.Rounding"}],"id":6378,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6414,"src":"31822:16:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4806_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":6380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31822:26:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31852:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6382,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6370,"src":"31858:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":6383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31868:1:23","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31858:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6385,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31857:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:18:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6387,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6361,"src":"31873:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:26:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"31822:56:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6376,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8180,"src":"31806:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8180_$","typeString":"type(library SafeCast)"}},"id":6377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31815:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8179,"src":"31806:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31806:73:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31797:82:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6368,"id":6392,"nodeType":"Return","src":"31790:89:23"}]}]},"documentation":{"id":6359,"nodeType":"StructuredDocumentation","src":"31481:144:23","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":6395,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"31639:6:23","nodeType":"FunctionDefinition","parameters":{"id":6365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6361,"mutability":"mutable","name":"value","nameLocation":"31654:5:23","nodeType":"VariableDeclaration","scope":6395,"src":"31646:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6360,"name":"uint256","nodeType":"ElementaryTypeName","src":"31646:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6364,"mutability":"mutable","name":"rounding","nameLocation":"31670:8:23","nodeType":"VariableDeclaration","scope":6395,"src":"31661:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4806","typeString":"enum Math.Rounding"},"typeName":{"id":6363,"nodeType":"UserDefinedTypeName","pathNode":{"id":6362,"name":"Rounding","nameLocations":["31661:8:23"],"nodeType":"IdentifierPath","referencedDeclaration":4806,"src":"31661:8:23"},"referencedDeclaration":4806,"src":"31661:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4806","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"31645:34:23"},"returnParameters":{"id":6368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6367,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6395,"src":"31703:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6366,"name":"uint256","nodeType":"ElementaryTypeName","src":"31703:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"31702:9:23"},"scope":6415,"src":"31630:266:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6413,"nodeType":"Block","src":"32094:48:23","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":6411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":6409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6406,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6399,"src":"32117:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4806","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4806","typeString":"enum Math.Rounding"}],"id":6405,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32111:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6404,"name":"uint8","nodeType":"ElementaryTypeName","src":"32111:5:23","typeDescriptions":{}}},"id":6407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32111:15:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":6408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32129:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"32111:19:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":6410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32134:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"32111:24:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6403,"id":6412,"nodeType":"Return","src":"32104:31:23"}]},"documentation":{"id":6396,"nodeType":"StructuredDocumentation","src":"31902:113:23","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":6414,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"32029:16:23","nodeType":"FunctionDefinition","parameters":{"id":6400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6399,"mutability":"mutable","name":"rounding","nameLocation":"32055:8:23","nodeType":"VariableDeclaration","scope":6414,"src":"32046:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4806","typeString":"enum Math.Rounding"},"typeName":{"id":6398,"nodeType":"UserDefinedTypeName","pathNode":{"id":6397,"name":"Rounding","nameLocations":["32046:8:23"],"nodeType":"IdentifierPath","referencedDeclaration":4806,"src":"32046:8:23"},"referencedDeclaration":4806,"src":"32046:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4806","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"32045:19:23"},"returnParameters":{"id":6403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6402,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6414,"src":"32088:4:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6401,"name":"bool","nodeType":"ElementaryTypeName","src":"32088:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"32087:6:23"},"scope":6415,"src":"32020:122:23","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6416,"src":"281:31863:23","usedErrors":[],"usedEvents":[]}],"src":"103:32042:23"},"id":23},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[8180]},"id":8181,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6417,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:24"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":6418,"nodeType":"StructuredDocumentation","src":"218:550:24","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":8180,"linearizedBaseContracts":[8180],"name":"SafeCast","nameLocation":"777:8:24","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":6419,"nodeType":"StructuredDocumentation","src":"792:68:24","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":6425,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:24","nodeType":"ErrorDefinition","parameters":{"id":6424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6421,"mutability":"mutable","name":"bits","nameLocation":"908:4:24","nodeType":"VariableDeclaration","scope":6425,"src":"902:10:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6420,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":6423,"mutability":"mutable","name":"value","nameLocation":"922:5:24","nodeType":"VariableDeclaration","scope":6425,"src":"914:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6422,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:24"},"src":"865:64:24"},{"documentation":{"id":6426,"nodeType":"StructuredDocumentation","src":"935:75:24","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":6430,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:24","nodeType":"ErrorDefinition","parameters":{"id":6429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6428,"mutability":"mutable","name":"value","nameLocation":"1056:5:24","nodeType":"VariableDeclaration","scope":6430,"src":"1049:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6427,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:24"},"src":"1015:48:24"},{"documentation":{"id":6431,"nodeType":"StructuredDocumentation","src":"1069:67:24","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":6437,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:24","nodeType":"ErrorDefinition","parameters":{"id":6436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6433,"mutability":"mutable","name":"bits","nameLocation":"1183:4:24","nodeType":"VariableDeclaration","scope":6437,"src":"1177:10:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6432,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":6435,"mutability":"mutable","name":"value","nameLocation":"1196:5:24","nodeType":"VariableDeclaration","scope":6437,"src":"1189:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6434,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:24"},"src":"1141:62:24"},{"documentation":{"id":6438,"nodeType":"StructuredDocumentation","src":"1209:75:24","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":6442,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:24","nodeType":"ErrorDefinition","parameters":{"id":6441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6440,"mutability":"mutable","name":"value","nameLocation":"1331:5:24","nodeType":"VariableDeclaration","scope":6442,"src":"1323:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6439,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:24"},"src":"1289:49:24"},{"body":{"id":6469,"nodeType":"Block","src":"1695:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6450,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6445,"src":"1709:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6453,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":6452,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":6451,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":6455,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:24","memberName":"max","nodeType":"MemberAccess","src":"1717:17:24","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6463,"nodeType":"IfStatement","src":"1705:105:24","trueBody":{"id":6462,"nodeType":"Block","src":"1736:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":6458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:24","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":6459,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6445,"src":"1793:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6457,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6425,"src":"1757:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6461,"nodeType":"RevertStatement","src":"1750:49:24"}]}},{"expression":{"arguments":[{"id":6466,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6445,"src":"1834:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6465,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":6464,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:24","typeDescriptions":{}}},"id":6467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":6449,"id":6468,"nodeType":"Return","src":"1819:21:24"}]},"documentation":{"id":6443,"nodeType":"StructuredDocumentation","src":"1344:280:24","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":6470,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:24","nodeType":"FunctionDefinition","parameters":{"id":6446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6445,"mutability":"mutable","name":"value","nameLocation":"1656:5:24","nodeType":"VariableDeclaration","scope":6470,"src":"1648:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6444,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:24"},"returnParameters":{"id":6449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6448,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6470,"src":"1686:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":6447,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:24","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:24"},"scope":8180,"src":"1629:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6497,"nodeType":"Block","src":"2204:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6478,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6473,"src":"2218:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6481,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":6480,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":6479,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":6483,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:24","memberName":"max","nodeType":"MemberAccess","src":"2226:17:24","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6491,"nodeType":"IfStatement","src":"2214:105:24","trueBody":{"id":6490,"nodeType":"Block","src":"2245:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":6486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:24","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":6487,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6473,"src":"2302:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6485,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6425,"src":"2266:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6489,"nodeType":"RevertStatement","src":"2259:49:24"}]}},{"expression":{"arguments":[{"id":6494,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6473,"src":"2343:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6493,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":6492,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:24","typeDescriptions":{}}},"id":6495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":6477,"id":6496,"nodeType":"Return","src":"2328:21:24"}]},"documentation":{"id":6471,"nodeType":"StructuredDocumentation","src":"1853:280:24","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":6498,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:24","nodeType":"FunctionDefinition","parameters":{"id":6474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6473,"mutability":"mutable","name":"value","nameLocation":"2165:5:24","nodeType":"VariableDeclaration","scope":6498,"src":"2157:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6472,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:24"},"returnParameters":{"id":6477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6476,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6498,"src":"2195:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":6475,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:24","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:24"},"scope":8180,"src":"2138:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6525,"nodeType":"Block","src":"2713:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6506,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6501,"src":"2727:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6509,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":6508,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":6507,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":6511,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:24","memberName":"max","nodeType":"MemberAccess","src":"2735:17:24","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6519,"nodeType":"IfStatement","src":"2723:105:24","trueBody":{"id":6518,"nodeType":"Block","src":"2754:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":6514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:24","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":6515,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6501,"src":"2811:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6513,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6425,"src":"2775:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6517,"nodeType":"RevertStatement","src":"2768:49:24"}]}},{"expression":{"arguments":[{"id":6522,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6501,"src":"2852:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6521,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":6520,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:24","typeDescriptions":{}}},"id":6523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":6505,"id":6524,"nodeType":"Return","src":"2837:21:24"}]},"documentation":{"id":6499,"nodeType":"StructuredDocumentation","src":"2362:280:24","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":6526,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:24","nodeType":"FunctionDefinition","parameters":{"id":6502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6501,"mutability":"mutable","name":"value","nameLocation":"2674:5:24","nodeType":"VariableDeclaration","scope":6526,"src":"2666:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6500,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:24"},"returnParameters":{"id":6505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6504,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6526,"src":"2704:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":6503,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:24","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:24"},"scope":8180,"src":"2647:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6553,"nodeType":"Block","src":"3222:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6534,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6529,"src":"3236:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6537,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":6536,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":6535,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":6539,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:24","memberName":"max","nodeType":"MemberAccess","src":"3244:17:24","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6547,"nodeType":"IfStatement","src":"3232:105:24","trueBody":{"id":6546,"nodeType":"Block","src":"3263:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":6542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:24","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":6543,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6529,"src":"3320:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6541,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6425,"src":"3284:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6545,"nodeType":"RevertStatement","src":"3277:49:24"}]}},{"expression":{"arguments":[{"id":6550,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6529,"src":"3361:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6549,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":6548,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:24","typeDescriptions":{}}},"id":6551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":6533,"id":6552,"nodeType":"Return","src":"3346:21:24"}]},"documentation":{"id":6527,"nodeType":"StructuredDocumentation","src":"2871:280:24","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":6554,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:24","nodeType":"FunctionDefinition","parameters":{"id":6530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6529,"mutability":"mutable","name":"value","nameLocation":"3183:5:24","nodeType":"VariableDeclaration","scope":6554,"src":"3175:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6528,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:24"},"returnParameters":{"id":6533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6532,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6554,"src":"3213:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":6531,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:24","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:24"},"scope":8180,"src":"3156:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6581,"nodeType":"Block","src":"3731:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6562,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6557,"src":"3745:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6565,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":6564,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":6563,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":6567,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:24","memberName":"max","nodeType":"MemberAccess","src":"3753:17:24","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6575,"nodeType":"IfStatement","src":"3741:105:24","trueBody":{"id":6574,"nodeType":"Block","src":"3772:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":6570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:24","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":6571,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6557,"src":"3829:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6569,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6425,"src":"3793:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6573,"nodeType":"RevertStatement","src":"3786:49:24"}]}},{"expression":{"arguments":[{"id":6578,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6557,"src":"3870:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6577,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":6576,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:24","typeDescriptions":{}}},"id":6579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":6561,"id":6580,"nodeType":"Return","src":"3855:21:24"}]},"documentation":{"id":6555,"nodeType":"StructuredDocumentation","src":"3380:280:24","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":6582,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:24","nodeType":"FunctionDefinition","parameters":{"id":6558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6557,"mutability":"mutable","name":"value","nameLocation":"3692:5:24","nodeType":"VariableDeclaration","scope":6582,"src":"3684:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6556,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:24"},"returnParameters":{"id":6561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6560,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6582,"src":"3722:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":6559,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:24","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:24"},"scope":8180,"src":"3665:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6609,"nodeType":"Block","src":"4240:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6590,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6585,"src":"4254:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6593,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":6592,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":6591,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":6595,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:24","memberName":"max","nodeType":"MemberAccess","src":"4262:17:24","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6603,"nodeType":"IfStatement","src":"4250:105:24","trueBody":{"id":6602,"nodeType":"Block","src":"4281:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":6598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:24","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":6599,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6585,"src":"4338:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6597,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6425,"src":"4302:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6601,"nodeType":"RevertStatement","src":"4295:49:24"}]}},{"expression":{"arguments":[{"id":6606,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6585,"src":"4379:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6605,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":6604,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:24","typeDescriptions":{}}},"id":6607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":6589,"id":6608,"nodeType":"Return","src":"4364:21:24"}]},"documentation":{"id":6583,"nodeType":"StructuredDocumentation","src":"3889:280:24","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":6610,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:24","nodeType":"FunctionDefinition","parameters":{"id":6586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6585,"mutability":"mutable","name":"value","nameLocation":"4201:5:24","nodeType":"VariableDeclaration","scope":6610,"src":"4193:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6584,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:24"},"returnParameters":{"id":6589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6588,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6610,"src":"4231:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":6587,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:24","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:24"},"scope":8180,"src":"4174:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6637,"nodeType":"Block","src":"4749:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6618,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6613,"src":"4763:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6621,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":6620,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":6619,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":6623,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:24","memberName":"max","nodeType":"MemberAccess","src":"4771:17:24","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6631,"nodeType":"IfStatement","src":"4759:105:24","trueBody":{"id":6630,"nodeType":"Block","src":"4790:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":6626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:24","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":6627,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6613,"src":"4847:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6625,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6425,"src":"4811:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6629,"nodeType":"RevertStatement","src":"4804:49:24"}]}},{"expression":{"arguments":[{"id":6634,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6613,"src":"4888:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6633,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":6632,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:24","typeDescriptions":{}}},"id":6635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":6617,"id":6636,"nodeType":"Return","src":"4873:21:24"}]},"documentation":{"id":6611,"nodeType":"StructuredDocumentation","src":"4398:280:24","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":6638,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:24","nodeType":"FunctionDefinition","parameters":{"id":6614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6613,"mutability":"mutable","name":"value","nameLocation":"4710:5:24","nodeType":"VariableDeclaration","scope":6638,"src":"4702:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6612,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:24"},"returnParameters":{"id":6617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6616,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6638,"src":"4740:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":6615,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:24","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:24"},"scope":8180,"src":"4683:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6665,"nodeType":"Block","src":"5258:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6646,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6641,"src":"5272:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6649,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":6648,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":6647,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":6651,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:24","memberName":"max","nodeType":"MemberAccess","src":"5280:17:24","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6659,"nodeType":"IfStatement","src":"5268:105:24","trueBody":{"id":6658,"nodeType":"Block","src":"5299:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":6654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:24","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":6655,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6641,"src":"5356:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6653,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6425,"src":"5320:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6656,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6657,"nodeType":"RevertStatement","src":"5313:49:24"}]}},{"expression":{"arguments":[{"id":6662,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6641,"src":"5397:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6661,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":6660,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:24","typeDescriptions":{}}},"id":6663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":6645,"id":6664,"nodeType":"Return","src":"5382:21:24"}]},"documentation":{"id":6639,"nodeType":"StructuredDocumentation","src":"4907:280:24","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":6666,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:24","nodeType":"FunctionDefinition","parameters":{"id":6642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6641,"mutability":"mutable","name":"value","nameLocation":"5219:5:24","nodeType":"VariableDeclaration","scope":6666,"src":"5211:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6640,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:24"},"returnParameters":{"id":6645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6644,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6666,"src":"5249:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":6643,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:24","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:24"},"scope":8180,"src":"5192:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6693,"nodeType":"Block","src":"5767:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6674,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6669,"src":"5781:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6677,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":6676,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":6675,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":6679,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:24","memberName":"max","nodeType":"MemberAccess","src":"5789:17:24","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6687,"nodeType":"IfStatement","src":"5777:105:24","trueBody":{"id":6686,"nodeType":"Block","src":"5808:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":6682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:24","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":6683,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6669,"src":"5865:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6681,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6425,"src":"5829:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6685,"nodeType":"RevertStatement","src":"5822:49:24"}]}},{"expression":{"arguments":[{"id":6690,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6669,"src":"5906:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6689,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":6688,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:24","typeDescriptions":{}}},"id":6691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":6673,"id":6692,"nodeType":"Return","src":"5891:21:24"}]},"documentation":{"id":6667,"nodeType":"StructuredDocumentation","src":"5416:280:24","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":6694,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:24","nodeType":"FunctionDefinition","parameters":{"id":6670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6669,"mutability":"mutable","name":"value","nameLocation":"5728:5:24","nodeType":"VariableDeclaration","scope":6694,"src":"5720:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6668,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:24"},"returnParameters":{"id":6673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6672,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6694,"src":"5758:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":6671,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:24","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:24"},"scope":8180,"src":"5701:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6721,"nodeType":"Block","src":"6276:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6702,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6697,"src":"6290:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6705,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":6704,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":6703,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":6707,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:24","memberName":"max","nodeType":"MemberAccess","src":"6298:17:24","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6715,"nodeType":"IfStatement","src":"6286:105:24","trueBody":{"id":6714,"nodeType":"Block","src":"6317:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":6710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:24","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":6711,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6697,"src":"6374:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6709,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6425,"src":"6338:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6713,"nodeType":"RevertStatement","src":"6331:49:24"}]}},{"expression":{"arguments":[{"id":6718,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6697,"src":"6415:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6717,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":6716,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:24","typeDescriptions":{}}},"id":6719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":6701,"id":6720,"nodeType":"Return","src":"6400:21:24"}]},"documentation":{"id":6695,"nodeType":"StructuredDocumentation","src":"5925:280:24","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":6722,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:24","nodeType":"FunctionDefinition","parameters":{"id":6698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6697,"mutability":"mutable","name":"value","nameLocation":"6237:5:24","nodeType":"VariableDeclaration","scope":6722,"src":"6229:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6696,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:24"},"returnParameters":{"id":6701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6700,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6722,"src":"6267:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":6699,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:24","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:24"},"scope":8180,"src":"6210:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6749,"nodeType":"Block","src":"6785:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6730,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6725,"src":"6799:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6733,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":6732,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":6731,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":6735,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:24","memberName":"max","nodeType":"MemberAccess","src":"6807:17:24","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6743,"nodeType":"IfStatement","src":"6795:105:24","trueBody":{"id":6742,"nodeType":"Block","src":"6826:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":6738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:24","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":6739,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6725,"src":"6883:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6737,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6425,"src":"6847:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6741,"nodeType":"RevertStatement","src":"6840:49:24"}]}},{"expression":{"arguments":[{"id":6746,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6725,"src":"6924:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6745,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":6744,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:24","typeDescriptions":{}}},"id":6747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":6729,"id":6748,"nodeType":"Return","src":"6909:21:24"}]},"documentation":{"id":6723,"nodeType":"StructuredDocumentation","src":"6434:280:24","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":6750,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:24","nodeType":"FunctionDefinition","parameters":{"id":6726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6725,"mutability":"mutable","name":"value","nameLocation":"6746:5:24","nodeType":"VariableDeclaration","scope":6750,"src":"6738:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6724,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:24"},"returnParameters":{"id":6729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6728,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6750,"src":"6776:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":6727,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:24","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:24"},"scope":8180,"src":"6719:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6777,"nodeType":"Block","src":"7294:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6758,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6753,"src":"7308:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6761,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":6760,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":6759,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":6763,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:24","memberName":"max","nodeType":"MemberAccess","src":"7316:17:24","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6771,"nodeType":"IfStatement","src":"7304:105:24","trueBody":{"id":6770,"nodeType":"Block","src":"7335:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":6766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:24","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":6767,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6753,"src":"7392:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6765,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6425,"src":"7356:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6769,"nodeType":"RevertStatement","src":"7349:49:24"}]}},{"expression":{"arguments":[{"id":6774,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6753,"src":"7433:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6773,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":6772,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:24","typeDescriptions":{}}},"id":6775,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":6757,"id":6776,"nodeType":"Return","src":"7418:21:24"}]},"documentation":{"id":6751,"nodeType":"StructuredDocumentation","src":"6943:280:24","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":6778,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:24","nodeType":"FunctionDefinition","parameters":{"id":6754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6753,"mutability":"mutable","name":"value","nameLocation":"7255:5:24","nodeType":"VariableDeclaration","scope":6778,"src":"7247:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6752,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:24"},"returnParameters":{"id":6757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6756,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6778,"src":"7285:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":6755,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:24","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:24"},"scope":8180,"src":"7228:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6805,"nodeType":"Block","src":"7803:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6786,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6781,"src":"7817:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6789,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":6788,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":6787,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":6791,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:24","memberName":"max","nodeType":"MemberAccess","src":"7825:17:24","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6799,"nodeType":"IfStatement","src":"7813:105:24","trueBody":{"id":6798,"nodeType":"Block","src":"7844:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":6794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:24","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":6795,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6781,"src":"7901:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6793,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6425,"src":"7865:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6797,"nodeType":"RevertStatement","src":"7858:49:24"}]}},{"expression":{"arguments":[{"id":6802,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6781,"src":"7942:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6801,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":6800,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:24","typeDescriptions":{}}},"id":6803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":6785,"id":6804,"nodeType":"Return","src":"7927:21:24"}]},"documentation":{"id":6779,"nodeType":"StructuredDocumentation","src":"7452:280:24","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":6806,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:24","nodeType":"FunctionDefinition","parameters":{"id":6782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6781,"mutability":"mutable","name":"value","nameLocation":"7764:5:24","nodeType":"VariableDeclaration","scope":6806,"src":"7756:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6780,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:24"},"returnParameters":{"id":6785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6784,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6806,"src":"7794:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":6783,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:24","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:24"},"scope":8180,"src":"7737:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6833,"nodeType":"Block","src":"8312:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6814,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6809,"src":"8326:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6817,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":6816,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":6815,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":6819,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:24","memberName":"max","nodeType":"MemberAccess","src":"8334:17:24","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6827,"nodeType":"IfStatement","src":"8322:105:24","trueBody":{"id":6826,"nodeType":"Block","src":"8353:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":6822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:24","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":6823,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6809,"src":"8410:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6821,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6425,"src":"8374:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6825,"nodeType":"RevertStatement","src":"8367:49:24"}]}},{"expression":{"arguments":[{"id":6830,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6809,"src":"8451:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6829,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":6828,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:24","typeDescriptions":{}}},"id":6831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":6813,"id":6832,"nodeType":"Return","src":"8436:21:24"}]},"documentation":{"id":6807,"nodeType":"StructuredDocumentation","src":"7961:280:24","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":6834,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:24","nodeType":"FunctionDefinition","parameters":{"id":6810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6809,"mutability":"mutable","name":"value","nameLocation":"8273:5:24","nodeType":"VariableDeclaration","scope":6834,"src":"8265:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6808,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:24"},"returnParameters":{"id":6813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6812,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6834,"src":"8303:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":6811,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:24","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:24"},"scope":8180,"src":"8246:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6861,"nodeType":"Block","src":"8821:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6842,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6837,"src":"8835:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6845,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":6844,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":6843,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":6847,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:24","memberName":"max","nodeType":"MemberAccess","src":"8843:17:24","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6855,"nodeType":"IfStatement","src":"8831:105:24","trueBody":{"id":6854,"nodeType":"Block","src":"8862:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":6850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:24","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":6851,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6837,"src":"8919:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6849,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6425,"src":"8883:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6853,"nodeType":"RevertStatement","src":"8876:49:24"}]}},{"expression":{"arguments":[{"id":6858,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6837,"src":"8960:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6857,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":6856,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:24","typeDescriptions":{}}},"id":6859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":6841,"id":6860,"nodeType":"Return","src":"8945:21:24"}]},"documentation":{"id":6835,"nodeType":"StructuredDocumentation","src":"8470:280:24","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":6862,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:24","nodeType":"FunctionDefinition","parameters":{"id":6838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6837,"mutability":"mutable","name":"value","nameLocation":"8782:5:24","nodeType":"VariableDeclaration","scope":6862,"src":"8774:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6836,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:24"},"returnParameters":{"id":6841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6840,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6862,"src":"8812:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":6839,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:24","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:24"},"scope":8180,"src":"8755:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6889,"nodeType":"Block","src":"9330:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6870,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6865,"src":"9344:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6873,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":6872,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":6871,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":6875,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:24","memberName":"max","nodeType":"MemberAccess","src":"9352:17:24","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6883,"nodeType":"IfStatement","src":"9340:105:24","trueBody":{"id":6882,"nodeType":"Block","src":"9371:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":6878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:24","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":6879,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6865,"src":"9428:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6877,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6425,"src":"9392:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6881,"nodeType":"RevertStatement","src":"9385:49:24"}]}},{"expression":{"arguments":[{"id":6886,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6865,"src":"9469:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6885,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":6884,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:24","typeDescriptions":{}}},"id":6887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":6869,"id":6888,"nodeType":"Return","src":"9454:21:24"}]},"documentation":{"id":6863,"nodeType":"StructuredDocumentation","src":"8979:280:24","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":6890,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:24","nodeType":"FunctionDefinition","parameters":{"id":6866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6865,"mutability":"mutable","name":"value","nameLocation":"9291:5:24","nodeType":"VariableDeclaration","scope":6890,"src":"9283:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6864,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:24"},"returnParameters":{"id":6869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6868,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6890,"src":"9321:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":6867,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:24","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:24"},"scope":8180,"src":"9264:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6917,"nodeType":"Block","src":"9839:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6898,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6893,"src":"9853:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6901,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":6900,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":6899,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":6903,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:24","memberName":"max","nodeType":"MemberAccess","src":"9861:17:24","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6911,"nodeType":"IfStatement","src":"9849:105:24","trueBody":{"id":6910,"nodeType":"Block","src":"9880:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":6906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:24","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":6907,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6893,"src":"9937:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6905,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6425,"src":"9901:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6909,"nodeType":"RevertStatement","src":"9894:49:24"}]}},{"expression":{"arguments":[{"id":6914,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6893,"src":"9978:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6913,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":6912,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:24","typeDescriptions":{}}},"id":6915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":6897,"id":6916,"nodeType":"Return","src":"9963:21:24"}]},"documentation":{"id":6891,"nodeType":"StructuredDocumentation","src":"9488:280:24","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":6918,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:24","nodeType":"FunctionDefinition","parameters":{"id":6894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6893,"mutability":"mutable","name":"value","nameLocation":"9800:5:24","nodeType":"VariableDeclaration","scope":6918,"src":"9792:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6892,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:24"},"returnParameters":{"id":6897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6896,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6918,"src":"9830:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":6895,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:24","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:24"},"scope":8180,"src":"9773:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6945,"nodeType":"Block","src":"10348:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6926,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6921,"src":"10362:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6929,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":6928,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":6927,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":6931,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:24","memberName":"max","nodeType":"MemberAccess","src":"10370:17:24","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6939,"nodeType":"IfStatement","src":"10358:105:24","trueBody":{"id":6938,"nodeType":"Block","src":"10389:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":6934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:24","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":6935,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6921,"src":"10446:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6933,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6425,"src":"10410:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6937,"nodeType":"RevertStatement","src":"10403:49:24"}]}},{"expression":{"arguments":[{"id":6942,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6921,"src":"10487:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6941,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":6940,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:24","typeDescriptions":{}}},"id":6943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":6925,"id":6944,"nodeType":"Return","src":"10472:21:24"}]},"documentation":{"id":6919,"nodeType":"StructuredDocumentation","src":"9997:280:24","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":6946,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:24","nodeType":"FunctionDefinition","parameters":{"id":6922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6921,"mutability":"mutable","name":"value","nameLocation":"10309:5:24","nodeType":"VariableDeclaration","scope":6946,"src":"10301:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6920,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:24"},"returnParameters":{"id":6925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6924,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6946,"src":"10339:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":6923,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:24","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:24"},"scope":8180,"src":"10282:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6973,"nodeType":"Block","src":"10857:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6954,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6949,"src":"10871:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6957,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":6956,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":6955,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":6959,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:24","memberName":"max","nodeType":"MemberAccess","src":"10879:17:24","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6967,"nodeType":"IfStatement","src":"10867:105:24","trueBody":{"id":6966,"nodeType":"Block","src":"10898:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":6962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:24","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":6963,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6949,"src":"10955:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6961,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6425,"src":"10919:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6965,"nodeType":"RevertStatement","src":"10912:49:24"}]}},{"expression":{"arguments":[{"id":6970,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6949,"src":"10996:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6969,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":6968,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:24","typeDescriptions":{}}},"id":6971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":6953,"id":6972,"nodeType":"Return","src":"10981:21:24"}]},"documentation":{"id":6947,"nodeType":"StructuredDocumentation","src":"10506:280:24","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":6974,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:24","nodeType":"FunctionDefinition","parameters":{"id":6950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6949,"mutability":"mutable","name":"value","nameLocation":"10818:5:24","nodeType":"VariableDeclaration","scope":6974,"src":"10810:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6948,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:24"},"returnParameters":{"id":6953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6952,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6974,"src":"10848:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":6951,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:24","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:24"},"scope":8180,"src":"10791:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7001,"nodeType":"Block","src":"11360:149:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6982,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6977,"src":"11374:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6985,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":6984,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":6983,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":6987,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:24","memberName":"max","nodeType":"MemberAccess","src":"11382:16:24","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6995,"nodeType":"IfStatement","src":"11370:103:24","trueBody":{"id":6994,"nodeType":"Block","src":"11400:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":6990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:24","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":6991,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6977,"src":"11456:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6989,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6425,"src":"11421:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6993,"nodeType":"RevertStatement","src":"11414:48:24"}]}},{"expression":{"arguments":[{"id":6998,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6977,"src":"11496:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6997,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":6996,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:24","typeDescriptions":{}}},"id":6999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":6981,"id":7000,"nodeType":"Return","src":"11482:20:24"}]},"documentation":{"id":6975,"nodeType":"StructuredDocumentation","src":"11015:276:24","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":7002,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:24","nodeType":"FunctionDefinition","parameters":{"id":6978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6977,"mutability":"mutable","name":"value","nameLocation":"11322:5:24","nodeType":"VariableDeclaration","scope":7002,"src":"11314:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6976,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:24"},"returnParameters":{"id":6981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6980,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7002,"src":"11352:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":6979,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:24","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:24"},"scope":8180,"src":"11296:213:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7029,"nodeType":"Block","src":"11860:149:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7010,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7005,"src":"11874:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7013,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":7012,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":7011,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":7015,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:24","memberName":"max","nodeType":"MemberAccess","src":"11882:16:24","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7023,"nodeType":"IfStatement","src":"11870:103:24","trueBody":{"id":7022,"nodeType":"Block","src":"11900:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":7018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:24","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":7019,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7005,"src":"11956:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7017,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6425,"src":"11921:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7021,"nodeType":"RevertStatement","src":"11914:48:24"}]}},{"expression":{"arguments":[{"id":7026,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7005,"src":"11996:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7025,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":7024,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:24","typeDescriptions":{}}},"id":7027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":7009,"id":7028,"nodeType":"Return","src":"11982:20:24"}]},"documentation":{"id":7003,"nodeType":"StructuredDocumentation","src":"11515:276:24","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":7030,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:24","nodeType":"FunctionDefinition","parameters":{"id":7006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7005,"mutability":"mutable","name":"value","nameLocation":"11822:5:24","nodeType":"VariableDeclaration","scope":7030,"src":"11814:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7004,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:24"},"returnParameters":{"id":7009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7008,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7030,"src":"11852:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":7007,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:24","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:24"},"scope":8180,"src":"11796:213:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7057,"nodeType":"Block","src":"12360:149:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7038,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7033,"src":"12374:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7041,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":7040,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":7039,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":7043,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:24","memberName":"max","nodeType":"MemberAccess","src":"12382:16:24","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7051,"nodeType":"IfStatement","src":"12370:103:24","trueBody":{"id":7050,"nodeType":"Block","src":"12400:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":7046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:24","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":7047,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7033,"src":"12456:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7045,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6425,"src":"12421:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7049,"nodeType":"RevertStatement","src":"12414:48:24"}]}},{"expression":{"arguments":[{"id":7054,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7033,"src":"12496:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7053,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":7052,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:24","typeDescriptions":{}}},"id":7055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":7037,"id":7056,"nodeType":"Return","src":"12482:20:24"}]},"documentation":{"id":7031,"nodeType":"StructuredDocumentation","src":"12015:276:24","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":7058,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:24","nodeType":"FunctionDefinition","parameters":{"id":7034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7033,"mutability":"mutable","name":"value","nameLocation":"12322:5:24","nodeType":"VariableDeclaration","scope":7058,"src":"12314:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7032,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:24"},"returnParameters":{"id":7037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7036,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7058,"src":"12352:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":7035,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:24","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:24"},"scope":8180,"src":"12296:213:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7085,"nodeType":"Block","src":"12860:149:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7066,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7061,"src":"12874:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7069,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":7068,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":7067,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":7071,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:24","memberName":"max","nodeType":"MemberAccess","src":"12882:16:24","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7079,"nodeType":"IfStatement","src":"12870:103:24","trueBody":{"id":7078,"nodeType":"Block","src":"12900:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":7074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:24","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":7075,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7061,"src":"12956:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7073,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6425,"src":"12921:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7077,"nodeType":"RevertStatement","src":"12914:48:24"}]}},{"expression":{"arguments":[{"id":7082,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7061,"src":"12996:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7081,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":7080,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:24","typeDescriptions":{}}},"id":7083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":7065,"id":7084,"nodeType":"Return","src":"12982:20:24"}]},"documentation":{"id":7059,"nodeType":"StructuredDocumentation","src":"12515:276:24","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":7086,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:24","nodeType":"FunctionDefinition","parameters":{"id":7062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7061,"mutability":"mutable","name":"value","nameLocation":"12822:5:24","nodeType":"VariableDeclaration","scope":7086,"src":"12814:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7060,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:24"},"returnParameters":{"id":7065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7064,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7086,"src":"12852:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":7063,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:24","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:24"},"scope":8180,"src":"12796:213:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7113,"nodeType":"Block","src":"13360:149:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7094,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7089,"src":"13374:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7097,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":7096,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":7095,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":7099,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:24","memberName":"max","nodeType":"MemberAccess","src":"13382:16:24","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7107,"nodeType":"IfStatement","src":"13370:103:24","trueBody":{"id":7106,"nodeType":"Block","src":"13400:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":7102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:24","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":7103,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7089,"src":"13456:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7101,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6425,"src":"13421:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7105,"nodeType":"RevertStatement","src":"13414:48:24"}]}},{"expression":{"arguments":[{"id":7110,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7089,"src":"13496:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7109,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":7108,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:24","typeDescriptions":{}}},"id":7111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":7093,"id":7112,"nodeType":"Return","src":"13482:20:24"}]},"documentation":{"id":7087,"nodeType":"StructuredDocumentation","src":"13015:276:24","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":7114,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:24","nodeType":"FunctionDefinition","parameters":{"id":7090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7089,"mutability":"mutable","name":"value","nameLocation":"13322:5:24","nodeType":"VariableDeclaration","scope":7114,"src":"13314:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7088,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:24"},"returnParameters":{"id":7093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7092,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7114,"src":"13352:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":7091,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:24","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:24"},"scope":8180,"src":"13296:213:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7141,"nodeType":"Block","src":"13860:149:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7122,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7117,"src":"13874:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7125,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":7124,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":7123,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":7127,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:24","memberName":"max","nodeType":"MemberAccess","src":"13882:16:24","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7135,"nodeType":"IfStatement","src":"13870:103:24","trueBody":{"id":7134,"nodeType":"Block","src":"13900:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":7130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:24","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":7131,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7117,"src":"13956:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7129,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6425,"src":"13921:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7133,"nodeType":"RevertStatement","src":"13914:48:24"}]}},{"expression":{"arguments":[{"id":7138,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7117,"src":"13996:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7137,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":7136,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:24","typeDescriptions":{}}},"id":7139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":7121,"id":7140,"nodeType":"Return","src":"13982:20:24"}]},"documentation":{"id":7115,"nodeType":"StructuredDocumentation","src":"13515:276:24","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":7142,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:24","nodeType":"FunctionDefinition","parameters":{"id":7118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7117,"mutability":"mutable","name":"value","nameLocation":"13822:5:24","nodeType":"VariableDeclaration","scope":7142,"src":"13814:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7116,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:24"},"returnParameters":{"id":7121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7120,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7142,"src":"13852:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":7119,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:24","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:24"},"scope":8180,"src":"13796:213:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7169,"nodeType":"Block","src":"14360:149:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7150,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7145,"src":"14374:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7153,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":7152,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":7151,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":7155,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:24","memberName":"max","nodeType":"MemberAccess","src":"14382:16:24","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7163,"nodeType":"IfStatement","src":"14370:103:24","trueBody":{"id":7162,"nodeType":"Block","src":"14400:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":7158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:24","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":7159,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7145,"src":"14456:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7157,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6425,"src":"14421:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7161,"nodeType":"RevertStatement","src":"14414:48:24"}]}},{"expression":{"arguments":[{"id":7166,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7145,"src":"14496:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7165,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":7164,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:24","typeDescriptions":{}}},"id":7167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":7149,"id":7168,"nodeType":"Return","src":"14482:20:24"}]},"documentation":{"id":7143,"nodeType":"StructuredDocumentation","src":"14015:276:24","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":7170,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:24","nodeType":"FunctionDefinition","parameters":{"id":7146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7145,"mutability":"mutable","name":"value","nameLocation":"14322:5:24","nodeType":"VariableDeclaration","scope":7170,"src":"14314:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7144,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:24"},"returnParameters":{"id":7149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7148,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7170,"src":"14352:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":7147,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:24","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:24"},"scope":8180,"src":"14296:213:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7197,"nodeType":"Block","src":"14860:149:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7178,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7173,"src":"14874:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7181,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":7180,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":7179,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":7183,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:24","memberName":"max","nodeType":"MemberAccess","src":"14882:16:24","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7191,"nodeType":"IfStatement","src":"14870:103:24","trueBody":{"id":7190,"nodeType":"Block","src":"14900:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":7186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:24","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":7187,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7173,"src":"14956:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7185,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6425,"src":"14921:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7189,"nodeType":"RevertStatement","src":"14914:48:24"}]}},{"expression":{"arguments":[{"id":7194,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7173,"src":"14996:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7193,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":7192,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:24","typeDescriptions":{}}},"id":7195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":7177,"id":7196,"nodeType":"Return","src":"14982:20:24"}]},"documentation":{"id":7171,"nodeType":"StructuredDocumentation","src":"14515:276:24","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":7198,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:24","nodeType":"FunctionDefinition","parameters":{"id":7174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7173,"mutability":"mutable","name":"value","nameLocation":"14822:5:24","nodeType":"VariableDeclaration","scope":7198,"src":"14814:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7172,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:24"},"returnParameters":{"id":7177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7176,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7198,"src":"14852:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":7175,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:24","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:24"},"scope":8180,"src":"14796:213:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7225,"nodeType":"Block","src":"15360:149:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7206,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7201,"src":"15374:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7209,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":7208,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":7207,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":7211,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:24","memberName":"max","nodeType":"MemberAccess","src":"15382:16:24","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7219,"nodeType":"IfStatement","src":"15370:103:24","trueBody":{"id":7218,"nodeType":"Block","src":"15400:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":7214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":7215,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7201,"src":"15456:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7213,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6425,"src":"15421:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7217,"nodeType":"RevertStatement","src":"15414:48:24"}]}},{"expression":{"arguments":[{"id":7222,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7201,"src":"15496:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7221,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":7220,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:24","typeDescriptions":{}}},"id":7223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":7205,"id":7224,"nodeType":"Return","src":"15482:20:24"}]},"documentation":{"id":7199,"nodeType":"StructuredDocumentation","src":"15015:276:24","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":7226,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:24","nodeType":"FunctionDefinition","parameters":{"id":7202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7201,"mutability":"mutable","name":"value","nameLocation":"15322:5:24","nodeType":"VariableDeclaration","scope":7226,"src":"15314:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7200,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:24"},"returnParameters":{"id":7205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7204,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7226,"src":"15352:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7203,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:24","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:24"},"scope":8180,"src":"15296:213:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7253,"nodeType":"Block","src":"15860:149:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7234,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7229,"src":"15874:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7237,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":7236,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":7235,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":7239,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:24","memberName":"max","nodeType":"MemberAccess","src":"15882:16:24","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7247,"nodeType":"IfStatement","src":"15870:103:24","trueBody":{"id":7246,"nodeType":"Block","src":"15900:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":7242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:24","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":7243,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7229,"src":"15956:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7241,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6425,"src":"15921:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7245,"nodeType":"RevertStatement","src":"15914:48:24"}]}},{"expression":{"arguments":[{"id":7250,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7229,"src":"15996:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7249,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":7248,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:24","typeDescriptions":{}}},"id":7251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":7233,"id":7252,"nodeType":"Return","src":"15982:20:24"}]},"documentation":{"id":7227,"nodeType":"StructuredDocumentation","src":"15515:276:24","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":7254,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:24","nodeType":"FunctionDefinition","parameters":{"id":7230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7229,"mutability":"mutable","name":"value","nameLocation":"15822:5:24","nodeType":"VariableDeclaration","scope":7254,"src":"15814:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7228,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:24"},"returnParameters":{"id":7233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7232,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7254,"src":"15852:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":7231,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:24","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:24"},"scope":8180,"src":"15796:213:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7281,"nodeType":"Block","src":"16360:149:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7262,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7257,"src":"16374:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7265,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":7264,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":7263,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":7267,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:24","memberName":"max","nodeType":"MemberAccess","src":"16382:16:24","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7275,"nodeType":"IfStatement","src":"16370:103:24","trueBody":{"id":7274,"nodeType":"Block","src":"16400:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":7270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":7271,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7257,"src":"16456:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7269,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6425,"src":"16421:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7273,"nodeType":"RevertStatement","src":"16414:48:24"}]}},{"expression":{"arguments":[{"id":7278,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7257,"src":"16496:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7277,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":7276,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:24","typeDescriptions":{}}},"id":7279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":7261,"id":7280,"nodeType":"Return","src":"16482:20:24"}]},"documentation":{"id":7255,"nodeType":"StructuredDocumentation","src":"16015:276:24","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":7282,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:24","nodeType":"FunctionDefinition","parameters":{"id":7258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7257,"mutability":"mutable","name":"value","nameLocation":"16322:5:24","nodeType":"VariableDeclaration","scope":7282,"src":"16314:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7256,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:24"},"returnParameters":{"id":7261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7260,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7282,"src":"16352:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":7259,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:24","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:24"},"scope":8180,"src":"16296:213:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7309,"nodeType":"Block","src":"16854:146:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7290,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7285,"src":"16868:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7293,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":7292,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":7291,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":7295,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:24","memberName":"max","nodeType":"MemberAccess","src":"16876:15:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7303,"nodeType":"IfStatement","src":"16864:101:24","trueBody":{"id":7302,"nodeType":"Block","src":"16893:72:24","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":7298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:24","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":7299,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7285,"src":"16948:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7297,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6425,"src":"16914:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7301,"nodeType":"RevertStatement","src":"16907:47:24"}]}},{"expression":{"arguments":[{"id":7306,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7285,"src":"16987:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7305,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":7304,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:24","typeDescriptions":{}}},"id":7307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":7289,"id":7308,"nodeType":"Return","src":"16974:19:24"}]},"documentation":{"id":7283,"nodeType":"StructuredDocumentation","src":"16515:272:24","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":7310,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:24","nodeType":"FunctionDefinition","parameters":{"id":7286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7285,"mutability":"mutable","name":"value","nameLocation":"16817:5:24","nodeType":"VariableDeclaration","scope":7310,"src":"16809:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7284,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:24"},"returnParameters":{"id":7289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7288,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7310,"src":"16847:5:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7287,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:24"},"scope":8180,"src":"16792:208:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7332,"nodeType":"Block","src":"17236:128:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7318,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7313,"src":"17250:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":7319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7326,"nodeType":"IfStatement","src":"17246:81:24","trueBody":{"id":7325,"nodeType":"Block","src":"17261:66:24","statements":[{"errorCall":{"arguments":[{"id":7322,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7313,"src":"17310:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7321,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6430,"src":"17282:27:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$__$","typeString":"function (int256) pure"}},"id":7323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7324,"nodeType":"RevertStatement","src":"17275:41:24"}]}},{"expression":{"arguments":[{"id":7329,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7313,"src":"17351:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7328,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7327,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:24","typeDescriptions":{}}},"id":7330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7317,"id":7331,"nodeType":"Return","src":"17336:21:24"}]},"documentation":{"id":7311,"nodeType":"StructuredDocumentation","src":"17006:160:24","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":7333,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:24","nodeType":"FunctionDefinition","parameters":{"id":7314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7313,"mutability":"mutable","name":"value","nameLocation":"17197:5:24","nodeType":"VariableDeclaration","scope":7333,"src":"17190:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7312,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:24"},"returnParameters":{"id":7317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7316,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7333,"src":"17227:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7315,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:24"},"scope":8180,"src":"17171:193:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7358,"nodeType":"Block","src":"17761:150:24","statements":[{"expression":{"id":7346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7341,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7339,"src":"17771:10:24","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7344,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7336,"src":"17791:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7343,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":7342,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:24","typeDescriptions":{}}},"id":7345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:24","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":7347,"nodeType":"ExpressionStatement","src":"17771:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7348,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7339,"src":"17811:10:24","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7349,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7336,"src":"17825:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7357,"nodeType":"IfStatement","src":"17807:98:24","trueBody":{"id":7356,"nodeType":"Block","src":"17832:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":7352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:24","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":7353,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7336,"src":"17888:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7351,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6437,"src":"17853:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7355,"nodeType":"RevertStatement","src":"17846:48:24"}]}}]},"documentation":{"id":7334,"nodeType":"StructuredDocumentation","src":"17370:312:24","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":7359,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:24","nodeType":"FunctionDefinition","parameters":{"id":7337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7336,"mutability":"mutable","name":"value","nameLocation":"17712:5:24","nodeType":"VariableDeclaration","scope":7359,"src":"17705:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7335,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:24"},"returnParameters":{"id":7340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7339,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:24","nodeType":"VariableDeclaration","scope":7359,"src":"17742:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":7338,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:24","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:24"},"scope":8180,"src":"17687:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7384,"nodeType":"Block","src":"18308:150:24","statements":[{"expression":{"id":7372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7367,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7365,"src":"18318:10:24","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7370,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7362,"src":"18338:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7369,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":7368,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:24","typeDescriptions":{}}},"id":7371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:24","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":7373,"nodeType":"ExpressionStatement","src":"18318:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7374,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7365,"src":"18358:10:24","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7375,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7362,"src":"18372:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7383,"nodeType":"IfStatement","src":"18354:98:24","trueBody":{"id":7382,"nodeType":"Block","src":"18379:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":7378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:24","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":7379,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7362,"src":"18435:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7377,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6437,"src":"18400:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7381,"nodeType":"RevertStatement","src":"18393:48:24"}]}}]},"documentation":{"id":7360,"nodeType":"StructuredDocumentation","src":"17917:312:24","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":7385,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:24","nodeType":"FunctionDefinition","parameters":{"id":7363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7362,"mutability":"mutable","name":"value","nameLocation":"18259:5:24","nodeType":"VariableDeclaration","scope":7385,"src":"18252:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7361,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:24"},"returnParameters":{"id":7366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7365,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:24","nodeType":"VariableDeclaration","scope":7385,"src":"18289:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":7364,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:24","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:24"},"scope":8180,"src":"18234:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7410,"nodeType":"Block","src":"18855:150:24","statements":[{"expression":{"id":7398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7393,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7391,"src":"18865:10:24","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7396,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7388,"src":"18885:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7395,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":7394,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:24","typeDescriptions":{}}},"id":7397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:24","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":7399,"nodeType":"ExpressionStatement","src":"18865:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7400,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7391,"src":"18905:10:24","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7401,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7388,"src":"18919:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7409,"nodeType":"IfStatement","src":"18901:98:24","trueBody":{"id":7408,"nodeType":"Block","src":"18926:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":7404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:24","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":7405,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7388,"src":"18982:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7403,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6437,"src":"18947:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7407,"nodeType":"RevertStatement","src":"18940:48:24"}]}}]},"documentation":{"id":7386,"nodeType":"StructuredDocumentation","src":"18464:312:24","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":7411,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:24","nodeType":"FunctionDefinition","parameters":{"id":7389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7388,"mutability":"mutable","name":"value","nameLocation":"18806:5:24","nodeType":"VariableDeclaration","scope":7411,"src":"18799:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7387,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:24"},"returnParameters":{"id":7392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7391,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:24","nodeType":"VariableDeclaration","scope":7411,"src":"18836:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":7390,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:24","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:24"},"scope":8180,"src":"18781:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7436,"nodeType":"Block","src":"19402:150:24","statements":[{"expression":{"id":7424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7419,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7417,"src":"19412:10:24","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7422,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7414,"src":"19432:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7421,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":7420,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:24","typeDescriptions":{}}},"id":7423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:24","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":7425,"nodeType":"ExpressionStatement","src":"19412:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7426,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7417,"src":"19452:10:24","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7427,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7414,"src":"19466:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7435,"nodeType":"IfStatement","src":"19448:98:24","trueBody":{"id":7434,"nodeType":"Block","src":"19473:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":7430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:24","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":7431,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7414,"src":"19529:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7429,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6437,"src":"19494:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7433,"nodeType":"RevertStatement","src":"19487:48:24"}]}}]},"documentation":{"id":7412,"nodeType":"StructuredDocumentation","src":"19011:312:24","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":7437,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:24","nodeType":"FunctionDefinition","parameters":{"id":7415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7414,"mutability":"mutable","name":"value","nameLocation":"19353:5:24","nodeType":"VariableDeclaration","scope":7437,"src":"19346:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7413,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:24"},"returnParameters":{"id":7418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7417,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:24","nodeType":"VariableDeclaration","scope":7437,"src":"19383:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":7416,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:24","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:24"},"scope":8180,"src":"19328:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7462,"nodeType":"Block","src":"19949:150:24","statements":[{"expression":{"id":7450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7445,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7443,"src":"19959:10:24","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7448,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7440,"src":"19979:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7447,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":7446,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:24","typeDescriptions":{}}},"id":7449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:24","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":7451,"nodeType":"ExpressionStatement","src":"19959:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7452,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7443,"src":"19999:10:24","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7453,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7440,"src":"20013:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7461,"nodeType":"IfStatement","src":"19995:98:24","trueBody":{"id":7460,"nodeType":"Block","src":"20020:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":7456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:24","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":7457,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7440,"src":"20076:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7455,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6437,"src":"20041:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7459,"nodeType":"RevertStatement","src":"20034:48:24"}]}}]},"documentation":{"id":7438,"nodeType":"StructuredDocumentation","src":"19558:312:24","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":7463,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:24","nodeType":"FunctionDefinition","parameters":{"id":7441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7440,"mutability":"mutable","name":"value","nameLocation":"19900:5:24","nodeType":"VariableDeclaration","scope":7463,"src":"19893:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7439,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:24"},"returnParameters":{"id":7444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7443,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:24","nodeType":"VariableDeclaration","scope":7463,"src":"19930:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":7442,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:24","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:24"},"scope":8180,"src":"19875:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7488,"nodeType":"Block","src":"20496:150:24","statements":[{"expression":{"id":7476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7471,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7469,"src":"20506:10:24","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7474,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7466,"src":"20526:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7473,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":7472,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:24","typeDescriptions":{}}},"id":7475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:24","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":7477,"nodeType":"ExpressionStatement","src":"20506:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7478,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7469,"src":"20546:10:24","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7479,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7466,"src":"20560:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7487,"nodeType":"IfStatement","src":"20542:98:24","trueBody":{"id":7486,"nodeType":"Block","src":"20567:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":7482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:24","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":7483,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7466,"src":"20623:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7481,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6437,"src":"20588:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7485,"nodeType":"RevertStatement","src":"20581:48:24"}]}}]},"documentation":{"id":7464,"nodeType":"StructuredDocumentation","src":"20105:312:24","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":7489,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:24","nodeType":"FunctionDefinition","parameters":{"id":7467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7466,"mutability":"mutable","name":"value","nameLocation":"20447:5:24","nodeType":"VariableDeclaration","scope":7489,"src":"20440:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7465,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:24"},"returnParameters":{"id":7470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7469,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:24","nodeType":"VariableDeclaration","scope":7489,"src":"20477:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":7468,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:24","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:24"},"scope":8180,"src":"20422:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7514,"nodeType":"Block","src":"21043:150:24","statements":[{"expression":{"id":7502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7497,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7495,"src":"21053:10:24","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7500,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7492,"src":"21073:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7499,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":7498,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:24","typeDescriptions":{}}},"id":7501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:24","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":7503,"nodeType":"ExpressionStatement","src":"21053:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7504,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7495,"src":"21093:10:24","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7505,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7492,"src":"21107:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7513,"nodeType":"IfStatement","src":"21089:98:24","trueBody":{"id":7512,"nodeType":"Block","src":"21114:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":7508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:24","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":7509,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7492,"src":"21170:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7507,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6437,"src":"21135:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7511,"nodeType":"RevertStatement","src":"21128:48:24"}]}}]},"documentation":{"id":7490,"nodeType":"StructuredDocumentation","src":"20652:312:24","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":7515,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:24","nodeType":"FunctionDefinition","parameters":{"id":7493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7492,"mutability":"mutable","name":"value","nameLocation":"20994:5:24","nodeType":"VariableDeclaration","scope":7515,"src":"20987:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7491,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:24"},"returnParameters":{"id":7496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7495,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:24","nodeType":"VariableDeclaration","scope":7515,"src":"21024:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":7494,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:24","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:24"},"scope":8180,"src":"20969:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7540,"nodeType":"Block","src":"21590:150:24","statements":[{"expression":{"id":7528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7523,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7521,"src":"21600:10:24","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7526,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7518,"src":"21620:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7525,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":7524,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:24","typeDescriptions":{}}},"id":7527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:24","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":7529,"nodeType":"ExpressionStatement","src":"21600:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7530,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7521,"src":"21640:10:24","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7531,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7518,"src":"21654:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7539,"nodeType":"IfStatement","src":"21636:98:24","trueBody":{"id":7538,"nodeType":"Block","src":"21661:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":7534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:24","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":7535,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7518,"src":"21717:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7533,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6437,"src":"21682:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7537,"nodeType":"RevertStatement","src":"21675:48:24"}]}}]},"documentation":{"id":7516,"nodeType":"StructuredDocumentation","src":"21199:312:24","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":7541,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:24","nodeType":"FunctionDefinition","parameters":{"id":7519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7518,"mutability":"mutable","name":"value","nameLocation":"21541:5:24","nodeType":"VariableDeclaration","scope":7541,"src":"21534:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7517,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:24"},"returnParameters":{"id":7522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7521,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:24","nodeType":"VariableDeclaration","scope":7541,"src":"21571:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":7520,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:24","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:24"},"scope":8180,"src":"21516:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7566,"nodeType":"Block","src":"22137:150:24","statements":[{"expression":{"id":7554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7549,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7547,"src":"22147:10:24","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7552,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7544,"src":"22167:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7551,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":7550,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:24","typeDescriptions":{}}},"id":7553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:24","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":7555,"nodeType":"ExpressionStatement","src":"22147:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7556,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7547,"src":"22187:10:24","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7557,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7544,"src":"22201:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7565,"nodeType":"IfStatement","src":"22183:98:24","trueBody":{"id":7564,"nodeType":"Block","src":"22208:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":7560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:24","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":7561,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7544,"src":"22264:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7559,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6437,"src":"22229:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7563,"nodeType":"RevertStatement","src":"22222:48:24"}]}}]},"documentation":{"id":7542,"nodeType":"StructuredDocumentation","src":"21746:312:24","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":7567,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:24","nodeType":"FunctionDefinition","parameters":{"id":7545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7544,"mutability":"mutable","name":"value","nameLocation":"22088:5:24","nodeType":"VariableDeclaration","scope":7567,"src":"22081:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7543,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:24"},"returnParameters":{"id":7548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7547,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:24","nodeType":"VariableDeclaration","scope":7567,"src":"22118:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":7546,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:24","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:24"},"scope":8180,"src":"22063:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7592,"nodeType":"Block","src":"22684:150:24","statements":[{"expression":{"id":7580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7575,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7573,"src":"22694:10:24","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7578,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7570,"src":"22714:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7577,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":7576,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:24","typeDescriptions":{}}},"id":7579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:24","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":7581,"nodeType":"ExpressionStatement","src":"22694:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7582,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7573,"src":"22734:10:24","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7583,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7570,"src":"22748:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7591,"nodeType":"IfStatement","src":"22730:98:24","trueBody":{"id":7590,"nodeType":"Block","src":"22755:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":7586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:24","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":7587,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7570,"src":"22811:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7585,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6437,"src":"22776:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7589,"nodeType":"RevertStatement","src":"22769:48:24"}]}}]},"documentation":{"id":7568,"nodeType":"StructuredDocumentation","src":"22293:312:24","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":7593,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:24","nodeType":"FunctionDefinition","parameters":{"id":7571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7570,"mutability":"mutable","name":"value","nameLocation":"22635:5:24","nodeType":"VariableDeclaration","scope":7593,"src":"22628:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7569,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:24"},"returnParameters":{"id":7574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7573,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:24","nodeType":"VariableDeclaration","scope":7593,"src":"22665:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":7572,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:24","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:24"},"scope":8180,"src":"22610:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7618,"nodeType":"Block","src":"23231:150:24","statements":[{"expression":{"id":7606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7601,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7599,"src":"23241:10:24","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7604,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7596,"src":"23261:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7603,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":7602,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:24","typeDescriptions":{}}},"id":7605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:24","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":7607,"nodeType":"ExpressionStatement","src":"23241:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7608,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7599,"src":"23281:10:24","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7609,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7596,"src":"23295:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7617,"nodeType":"IfStatement","src":"23277:98:24","trueBody":{"id":7616,"nodeType":"Block","src":"23302:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":7612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:24","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":7613,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7596,"src":"23358:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7611,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6437,"src":"23323:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7615,"nodeType":"RevertStatement","src":"23316:48:24"}]}}]},"documentation":{"id":7594,"nodeType":"StructuredDocumentation","src":"22840:312:24","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":7619,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:24","nodeType":"FunctionDefinition","parameters":{"id":7597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7596,"mutability":"mutable","name":"value","nameLocation":"23182:5:24","nodeType":"VariableDeclaration","scope":7619,"src":"23175:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7595,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:24"},"returnParameters":{"id":7600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7599,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:24","nodeType":"VariableDeclaration","scope":7619,"src":"23212:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":7598,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:24","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:24"},"scope":8180,"src":"23157:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7644,"nodeType":"Block","src":"23778:150:24","statements":[{"expression":{"id":7632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7627,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7625,"src":"23788:10:24","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7630,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7622,"src":"23808:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7629,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":7628,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:24","typeDescriptions":{}}},"id":7631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:24","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":7633,"nodeType":"ExpressionStatement","src":"23788:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7634,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7625,"src":"23828:10:24","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7635,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7622,"src":"23842:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7643,"nodeType":"IfStatement","src":"23824:98:24","trueBody":{"id":7642,"nodeType":"Block","src":"23849:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":7638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:24","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":7639,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7622,"src":"23905:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7637,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6437,"src":"23870:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7641,"nodeType":"RevertStatement","src":"23863:48:24"}]}}]},"documentation":{"id":7620,"nodeType":"StructuredDocumentation","src":"23387:312:24","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":7645,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:24","nodeType":"FunctionDefinition","parameters":{"id":7623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7622,"mutability":"mutable","name":"value","nameLocation":"23729:5:24","nodeType":"VariableDeclaration","scope":7645,"src":"23722:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7621,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:24"},"returnParameters":{"id":7626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7625,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:24","nodeType":"VariableDeclaration","scope":7645,"src":"23759:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":7624,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:24","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:24"},"scope":8180,"src":"23704:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7670,"nodeType":"Block","src":"24325:150:24","statements":[{"expression":{"id":7658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7653,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7651,"src":"24335:10:24","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7656,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7648,"src":"24355:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7655,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":7654,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:24","typeDescriptions":{}}},"id":7657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:24","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":7659,"nodeType":"ExpressionStatement","src":"24335:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7660,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7651,"src":"24375:10:24","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7661,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7648,"src":"24389:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7669,"nodeType":"IfStatement","src":"24371:98:24","trueBody":{"id":7668,"nodeType":"Block","src":"24396:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":7664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:24","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":7665,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7648,"src":"24452:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7663,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6437,"src":"24417:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7667,"nodeType":"RevertStatement","src":"24410:48:24"}]}}]},"documentation":{"id":7646,"nodeType":"StructuredDocumentation","src":"23934:312:24","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":7671,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:24","nodeType":"FunctionDefinition","parameters":{"id":7649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7648,"mutability":"mutable","name":"value","nameLocation":"24276:5:24","nodeType":"VariableDeclaration","scope":7671,"src":"24269:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7647,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:24"},"returnParameters":{"id":7652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7651,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:24","nodeType":"VariableDeclaration","scope":7671,"src":"24306:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":7650,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:24","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:24"},"scope":8180,"src":"24251:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7696,"nodeType":"Block","src":"24872:150:24","statements":[{"expression":{"id":7684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7679,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7677,"src":"24882:10:24","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7682,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7674,"src":"24902:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7681,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":7680,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:24","typeDescriptions":{}}},"id":7683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:24","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":7685,"nodeType":"ExpressionStatement","src":"24882:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7686,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7677,"src":"24922:10:24","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7687,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7674,"src":"24936:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7695,"nodeType":"IfStatement","src":"24918:98:24","trueBody":{"id":7694,"nodeType":"Block","src":"24943:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":7690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:24","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":7691,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7674,"src":"24999:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7689,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6437,"src":"24964:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7693,"nodeType":"RevertStatement","src":"24957:48:24"}]}}]},"documentation":{"id":7672,"nodeType":"StructuredDocumentation","src":"24481:312:24","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":7697,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:24","nodeType":"FunctionDefinition","parameters":{"id":7675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7674,"mutability":"mutable","name":"value","nameLocation":"24823:5:24","nodeType":"VariableDeclaration","scope":7697,"src":"24816:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7673,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:24"},"returnParameters":{"id":7678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7677,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:24","nodeType":"VariableDeclaration","scope":7697,"src":"24853:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":7676,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:24","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:24"},"scope":8180,"src":"24798:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7722,"nodeType":"Block","src":"25419:150:24","statements":[{"expression":{"id":7710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7705,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7703,"src":"25429:10:24","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7708,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7700,"src":"25449:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7707,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":7706,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:24","typeDescriptions":{}}},"id":7709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:24","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":7711,"nodeType":"ExpressionStatement","src":"25429:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7712,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7703,"src":"25469:10:24","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7713,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7700,"src":"25483:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7721,"nodeType":"IfStatement","src":"25465:98:24","trueBody":{"id":7720,"nodeType":"Block","src":"25490:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":7716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:24","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":7717,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7700,"src":"25546:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7715,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6437,"src":"25511:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7719,"nodeType":"RevertStatement","src":"25504:48:24"}]}}]},"documentation":{"id":7698,"nodeType":"StructuredDocumentation","src":"25028:312:24","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":7723,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:24","nodeType":"FunctionDefinition","parameters":{"id":7701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7700,"mutability":"mutable","name":"value","nameLocation":"25370:5:24","nodeType":"VariableDeclaration","scope":7723,"src":"25363:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7699,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:24"},"returnParameters":{"id":7704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7703,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:24","nodeType":"VariableDeclaration","scope":7723,"src":"25400:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":7702,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:24","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:24"},"scope":8180,"src":"25345:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7748,"nodeType":"Block","src":"25966:150:24","statements":[{"expression":{"id":7736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7731,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7729,"src":"25976:10:24","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7734,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7726,"src":"25996:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7733,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":7732,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:24","typeDescriptions":{}}},"id":7735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:24","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":7737,"nodeType":"ExpressionStatement","src":"25976:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7738,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7729,"src":"26016:10:24","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7739,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7726,"src":"26030:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7747,"nodeType":"IfStatement","src":"26012:98:24","trueBody":{"id":7746,"nodeType":"Block","src":"26037:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":7742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:24","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":7743,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7726,"src":"26093:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7741,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6437,"src":"26058:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7745,"nodeType":"RevertStatement","src":"26051:48:24"}]}}]},"documentation":{"id":7724,"nodeType":"StructuredDocumentation","src":"25575:312:24","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":7749,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:24","nodeType":"FunctionDefinition","parameters":{"id":7727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7726,"mutability":"mutable","name":"value","nameLocation":"25917:5:24","nodeType":"VariableDeclaration","scope":7749,"src":"25910:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7725,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:24"},"returnParameters":{"id":7730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7729,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:24","nodeType":"VariableDeclaration","scope":7749,"src":"25947:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":7728,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:24","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:24"},"scope":8180,"src":"25892:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7774,"nodeType":"Block","src":"26513:150:24","statements":[{"expression":{"id":7762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7757,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7755,"src":"26523:10:24","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7760,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7752,"src":"26543:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7759,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":7758,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:24","typeDescriptions":{}}},"id":7761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:24","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":7763,"nodeType":"ExpressionStatement","src":"26523:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7764,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7755,"src":"26563:10:24","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7765,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7752,"src":"26577:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7773,"nodeType":"IfStatement","src":"26559:98:24","trueBody":{"id":7772,"nodeType":"Block","src":"26584:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":7768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:24","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":7769,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7752,"src":"26640:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7767,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6437,"src":"26605:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7771,"nodeType":"RevertStatement","src":"26598:48:24"}]}}]},"documentation":{"id":7750,"nodeType":"StructuredDocumentation","src":"26122:312:24","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":7775,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:24","nodeType":"FunctionDefinition","parameters":{"id":7753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7752,"mutability":"mutable","name":"value","nameLocation":"26464:5:24","nodeType":"VariableDeclaration","scope":7775,"src":"26457:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7751,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:24"},"returnParameters":{"id":7756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7755,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:24","nodeType":"VariableDeclaration","scope":7775,"src":"26494:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":7754,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:24","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:24"},"scope":8180,"src":"26439:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7800,"nodeType":"Block","src":"27060:150:24","statements":[{"expression":{"id":7788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7783,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7781,"src":"27070:10:24","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7786,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7778,"src":"27090:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7785,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":7784,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:24","typeDescriptions":{}}},"id":7787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:24","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":7789,"nodeType":"ExpressionStatement","src":"27070:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7790,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7781,"src":"27110:10:24","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7791,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7778,"src":"27124:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7799,"nodeType":"IfStatement","src":"27106:98:24","trueBody":{"id":7798,"nodeType":"Block","src":"27131:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":7794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:24","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":7795,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7778,"src":"27187:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7793,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6437,"src":"27152:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7797,"nodeType":"RevertStatement","src":"27145:48:24"}]}}]},"documentation":{"id":7776,"nodeType":"StructuredDocumentation","src":"26669:312:24","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":7801,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:24","nodeType":"FunctionDefinition","parameters":{"id":7779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7778,"mutability":"mutable","name":"value","nameLocation":"27011:5:24","nodeType":"VariableDeclaration","scope":7801,"src":"27004:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7777,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:24"},"returnParameters":{"id":7782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7781,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:24","nodeType":"VariableDeclaration","scope":7801,"src":"27041:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":7780,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:24","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:24"},"scope":8180,"src":"26986:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7826,"nodeType":"Block","src":"27607:150:24","statements":[{"expression":{"id":7814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7809,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7807,"src":"27617:10:24","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7812,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7804,"src":"27637:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7811,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":7810,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:24","typeDescriptions":{}}},"id":7813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:24","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":7815,"nodeType":"ExpressionStatement","src":"27617:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7816,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7807,"src":"27657:10:24","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7817,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7804,"src":"27671:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7825,"nodeType":"IfStatement","src":"27653:98:24","trueBody":{"id":7824,"nodeType":"Block","src":"27678:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":7820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:24","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":7821,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7804,"src":"27734:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7819,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6437,"src":"27699:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7823,"nodeType":"RevertStatement","src":"27692:48:24"}]}}]},"documentation":{"id":7802,"nodeType":"StructuredDocumentation","src":"27216:312:24","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":7827,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:24","nodeType":"FunctionDefinition","parameters":{"id":7805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7804,"mutability":"mutable","name":"value","nameLocation":"27558:5:24","nodeType":"VariableDeclaration","scope":7827,"src":"27551:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7803,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:24"},"returnParameters":{"id":7808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7807,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:24","nodeType":"VariableDeclaration","scope":7827,"src":"27588:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":7806,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:24","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:24"},"scope":8180,"src":"27533:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7852,"nodeType":"Block","src":"28147:148:24","statements":[{"expression":{"id":7840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7835,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7833,"src":"28157:10:24","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7838,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7830,"src":"28176:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7837,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":7836,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:24","typeDescriptions":{}}},"id":7839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:24","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":7841,"nodeType":"ExpressionStatement","src":"28157:25:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7842,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7833,"src":"28196:10:24","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7843,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7830,"src":"28210:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7851,"nodeType":"IfStatement","src":"28192:97:24","trueBody":{"id":7850,"nodeType":"Block","src":"28217:72:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":7846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:24","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":7847,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7830,"src":"28272:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7845,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6437,"src":"28238:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7849,"nodeType":"RevertStatement","src":"28231:47:24"}]}}]},"documentation":{"id":7828,"nodeType":"StructuredDocumentation","src":"27763:307:24","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":7853,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:24","nodeType":"FunctionDefinition","parameters":{"id":7831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7830,"mutability":"mutable","name":"value","nameLocation":"28099:5:24","nodeType":"VariableDeclaration","scope":7853,"src":"28092:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7829,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:24"},"returnParameters":{"id":7834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7833,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:24","nodeType":"VariableDeclaration","scope":7853,"src":"28129:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":7832,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:24","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:24"},"scope":8180,"src":"28075:220:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7878,"nodeType":"Block","src":"28685:148:24","statements":[{"expression":{"id":7866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7861,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7859,"src":"28695:10:24","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7864,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7856,"src":"28714:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7863,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":7862,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:24","typeDescriptions":{}}},"id":7865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:24","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":7867,"nodeType":"ExpressionStatement","src":"28695:25:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7868,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7859,"src":"28734:10:24","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7869,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7856,"src":"28748:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7877,"nodeType":"IfStatement","src":"28730:97:24","trueBody":{"id":7876,"nodeType":"Block","src":"28755:72:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":7872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:24","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":7873,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7856,"src":"28810:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7871,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6437,"src":"28776:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7875,"nodeType":"RevertStatement","src":"28769:47:24"}]}}]},"documentation":{"id":7854,"nodeType":"StructuredDocumentation","src":"28301:307:24","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":7879,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:24","nodeType":"FunctionDefinition","parameters":{"id":7857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7856,"mutability":"mutable","name":"value","nameLocation":"28637:5:24","nodeType":"VariableDeclaration","scope":7879,"src":"28630:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7855,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:24"},"returnParameters":{"id":7860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7859,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:24","nodeType":"VariableDeclaration","scope":7879,"src":"28667:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":7858,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:24","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:24"},"scope":8180,"src":"28613:220:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7904,"nodeType":"Block","src":"29223:148:24","statements":[{"expression":{"id":7892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7887,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7885,"src":"29233:10:24","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7890,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7882,"src":"29252:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7889,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":7888,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:24","typeDescriptions":{}}},"id":7891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:24","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":7893,"nodeType":"ExpressionStatement","src":"29233:25:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7894,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7885,"src":"29272:10:24","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7895,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7882,"src":"29286:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7903,"nodeType":"IfStatement","src":"29268:97:24","trueBody":{"id":7902,"nodeType":"Block","src":"29293:72:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":7898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:24","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":7899,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7882,"src":"29348:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7897,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6437,"src":"29314:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7900,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7901,"nodeType":"RevertStatement","src":"29307:47:24"}]}}]},"documentation":{"id":7880,"nodeType":"StructuredDocumentation","src":"28839:307:24","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":7905,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:24","nodeType":"FunctionDefinition","parameters":{"id":7883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7882,"mutability":"mutable","name":"value","nameLocation":"29175:5:24","nodeType":"VariableDeclaration","scope":7905,"src":"29168:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7881,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:24"},"returnParameters":{"id":7886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7885,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:24","nodeType":"VariableDeclaration","scope":7905,"src":"29205:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":7884,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:24","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:24"},"scope":8180,"src":"29151:220:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7930,"nodeType":"Block","src":"29761:148:24","statements":[{"expression":{"id":7918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7913,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7911,"src":"29771:10:24","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7916,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7908,"src":"29790:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7915,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":7914,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:24","typeDescriptions":{}}},"id":7917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:24","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":7919,"nodeType":"ExpressionStatement","src":"29771:25:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7920,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7911,"src":"29810:10:24","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7921,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7908,"src":"29824:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7929,"nodeType":"IfStatement","src":"29806:97:24","trueBody":{"id":7928,"nodeType":"Block","src":"29831:72:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":7924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:24","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":7925,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7908,"src":"29886:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7923,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6437,"src":"29852:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7927,"nodeType":"RevertStatement","src":"29845:47:24"}]}}]},"documentation":{"id":7906,"nodeType":"StructuredDocumentation","src":"29377:307:24","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":7931,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:24","nodeType":"FunctionDefinition","parameters":{"id":7909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7908,"mutability":"mutable","name":"value","nameLocation":"29713:5:24","nodeType":"VariableDeclaration","scope":7931,"src":"29706:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7907,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:24"},"returnParameters":{"id":7912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7911,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:24","nodeType":"VariableDeclaration","scope":7931,"src":"29743:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":7910,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:24","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:24"},"scope":8180,"src":"29689:220:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7956,"nodeType":"Block","src":"30299:148:24","statements":[{"expression":{"id":7944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7939,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7937,"src":"30309:10:24","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7942,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7934,"src":"30328:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7941,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":7940,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:24","typeDescriptions":{}}},"id":7943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:24","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":7945,"nodeType":"ExpressionStatement","src":"30309:25:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7946,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7937,"src":"30348:10:24","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7947,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7934,"src":"30362:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7955,"nodeType":"IfStatement","src":"30344:97:24","trueBody":{"id":7954,"nodeType":"Block","src":"30369:72:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":7950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:24","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":7951,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7934,"src":"30424:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7949,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6437,"src":"30390:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7952,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7953,"nodeType":"RevertStatement","src":"30383:47:24"}]}}]},"documentation":{"id":7932,"nodeType":"StructuredDocumentation","src":"29915:307:24","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":7957,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:24","nodeType":"FunctionDefinition","parameters":{"id":7935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7934,"mutability":"mutable","name":"value","nameLocation":"30251:5:24","nodeType":"VariableDeclaration","scope":7957,"src":"30244:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7933,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:24"},"returnParameters":{"id":7938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7937,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:24","nodeType":"VariableDeclaration","scope":7957,"src":"30281:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":7936,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:24","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:24"},"scope":8180,"src":"30227:220:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7982,"nodeType":"Block","src":"30837:148:24","statements":[{"expression":{"id":7970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7965,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7963,"src":"30847:10:24","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7968,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7960,"src":"30866:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7967,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":7966,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:24","typeDescriptions":{}}},"id":7969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:24","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":7971,"nodeType":"ExpressionStatement","src":"30847:25:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7972,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7963,"src":"30886:10:24","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7973,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7960,"src":"30900:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7981,"nodeType":"IfStatement","src":"30882:97:24","trueBody":{"id":7980,"nodeType":"Block","src":"30907:72:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":7976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:24","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":7977,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7960,"src":"30962:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7975,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6437,"src":"30928:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7979,"nodeType":"RevertStatement","src":"30921:47:24"}]}}]},"documentation":{"id":7958,"nodeType":"StructuredDocumentation","src":"30453:307:24","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":7983,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:24","nodeType":"FunctionDefinition","parameters":{"id":7961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7960,"mutability":"mutable","name":"value","nameLocation":"30789:5:24","nodeType":"VariableDeclaration","scope":7983,"src":"30782:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7959,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:24"},"returnParameters":{"id":7964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7963,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:24","nodeType":"VariableDeclaration","scope":7983,"src":"30819:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":7962,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:24","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:24"},"scope":8180,"src":"30765:220:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8008,"nodeType":"Block","src":"31375:148:24","statements":[{"expression":{"id":7996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7991,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7989,"src":"31385:10:24","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7994,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7986,"src":"31404:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7993,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":7992,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:24","typeDescriptions":{}}},"id":7995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:24","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":7997,"nodeType":"ExpressionStatement","src":"31385:25:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7998,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7989,"src":"31424:10:24","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7999,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7986,"src":"31438:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8007,"nodeType":"IfStatement","src":"31420:97:24","trueBody":{"id":8006,"nodeType":"Block","src":"31445:72:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":8002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:24","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":8003,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7986,"src":"31500:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8001,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6437,"src":"31466:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8005,"nodeType":"RevertStatement","src":"31459:47:24"}]}}]},"documentation":{"id":7984,"nodeType":"StructuredDocumentation","src":"30991:307:24","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":8009,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:24","nodeType":"FunctionDefinition","parameters":{"id":7987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7986,"mutability":"mutable","name":"value","nameLocation":"31327:5:24","nodeType":"VariableDeclaration","scope":8009,"src":"31320:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7985,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:24"},"returnParameters":{"id":7990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7989,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:24","nodeType":"VariableDeclaration","scope":8009,"src":"31357:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":7988,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:24","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:24"},"scope":8180,"src":"31303:220:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8034,"nodeType":"Block","src":"31913:148:24","statements":[{"expression":{"id":8022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8017,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8015,"src":"31923:10:24","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8020,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8012,"src":"31942:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8019,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":8018,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:24","typeDescriptions":{}}},"id":8021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:24","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":8023,"nodeType":"ExpressionStatement","src":"31923:25:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8024,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8015,"src":"31962:10:24","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8025,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8012,"src":"31976:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8033,"nodeType":"IfStatement","src":"31958:97:24","trueBody":{"id":8032,"nodeType":"Block","src":"31983:72:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":8028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:24","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":8029,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8012,"src":"32038:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8027,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6437,"src":"32004:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8031,"nodeType":"RevertStatement","src":"31997:47:24"}]}}]},"documentation":{"id":8010,"nodeType":"StructuredDocumentation","src":"31529:307:24","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":8035,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:24","nodeType":"FunctionDefinition","parameters":{"id":8013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8012,"mutability":"mutable","name":"value","nameLocation":"31865:5:24","nodeType":"VariableDeclaration","scope":8035,"src":"31858:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8011,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:24"},"returnParameters":{"id":8016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8015,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:24","nodeType":"VariableDeclaration","scope":8035,"src":"31895:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":8014,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:24","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:24"},"scope":8180,"src":"31841:220:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8060,"nodeType":"Block","src":"32451:148:24","statements":[{"expression":{"id":8048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8043,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8041,"src":"32461:10:24","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8046,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8038,"src":"32480:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8045,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":8044,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:24","typeDescriptions":{}}},"id":8047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:24","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":8049,"nodeType":"ExpressionStatement","src":"32461:25:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8050,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8041,"src":"32500:10:24","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8051,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8038,"src":"32514:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8059,"nodeType":"IfStatement","src":"32496:97:24","trueBody":{"id":8058,"nodeType":"Block","src":"32521:72:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":8054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":8055,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8038,"src":"32576:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8053,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6437,"src":"32542:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8057,"nodeType":"RevertStatement","src":"32535:47:24"}]}}]},"documentation":{"id":8036,"nodeType":"StructuredDocumentation","src":"32067:307:24","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":8061,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:24","nodeType":"FunctionDefinition","parameters":{"id":8039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8038,"mutability":"mutable","name":"value","nameLocation":"32403:5:24","nodeType":"VariableDeclaration","scope":8061,"src":"32396:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8037,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:24"},"returnParameters":{"id":8042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8041,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:24","nodeType":"VariableDeclaration","scope":8061,"src":"32433:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":8040,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:24","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:24"},"scope":8180,"src":"32379:220:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8086,"nodeType":"Block","src":"32989:148:24","statements":[{"expression":{"id":8074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8069,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8067,"src":"32999:10:24","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8072,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8064,"src":"33018:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8071,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":8070,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:24","typeDescriptions":{}}},"id":8073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:24","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":8075,"nodeType":"ExpressionStatement","src":"32999:25:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8076,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8067,"src":"33038:10:24","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8077,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8064,"src":"33052:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8085,"nodeType":"IfStatement","src":"33034:97:24","trueBody":{"id":8084,"nodeType":"Block","src":"33059:72:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":8080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:24","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":8081,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8064,"src":"33114:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8079,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6437,"src":"33080:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8083,"nodeType":"RevertStatement","src":"33073:47:24"}]}}]},"documentation":{"id":8062,"nodeType":"StructuredDocumentation","src":"32605:307:24","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":8087,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:24","nodeType":"FunctionDefinition","parameters":{"id":8065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8064,"mutability":"mutable","name":"value","nameLocation":"32941:5:24","nodeType":"VariableDeclaration","scope":8087,"src":"32934:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8063,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:24"},"returnParameters":{"id":8068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8067,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:24","nodeType":"VariableDeclaration","scope":8087,"src":"32971:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":8066,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:24","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:24"},"scope":8180,"src":"32917:220:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8112,"nodeType":"Block","src":"33527:148:24","statements":[{"expression":{"id":8100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8095,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8093,"src":"33537:10:24","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8098,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8090,"src":"33556:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8097,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":8096,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:24","typeDescriptions":{}}},"id":8099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:24","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":8101,"nodeType":"ExpressionStatement","src":"33537:25:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8102,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8093,"src":"33576:10:24","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8103,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8090,"src":"33590:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8111,"nodeType":"IfStatement","src":"33572:97:24","trueBody":{"id":8110,"nodeType":"Block","src":"33597:72:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":8106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":8107,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8090,"src":"33652:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8105,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6437,"src":"33618:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8109,"nodeType":"RevertStatement","src":"33611:47:24"}]}}]},"documentation":{"id":8088,"nodeType":"StructuredDocumentation","src":"33143:307:24","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":8113,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:24","nodeType":"FunctionDefinition","parameters":{"id":8091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8090,"mutability":"mutable","name":"value","nameLocation":"33479:5:24","nodeType":"VariableDeclaration","scope":8113,"src":"33472:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8089,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:24"},"returnParameters":{"id":8094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8093,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:24","nodeType":"VariableDeclaration","scope":8113,"src":"33509:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":8092,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:24","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:24"},"scope":8180,"src":"33455:220:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8138,"nodeType":"Block","src":"34058:146:24","statements":[{"expression":{"id":8126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8121,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8119,"src":"34068:10:24","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8124,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8116,"src":"34086:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8123,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":8122,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:24","typeDescriptions":{}}},"id":8125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:24","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":8127,"nodeType":"ExpressionStatement","src":"34068:24:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8128,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8119,"src":"34106:10:24","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8129,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8116,"src":"34120:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8137,"nodeType":"IfStatement","src":"34102:96:24","trueBody":{"id":8136,"nodeType":"Block","src":"34127:71:24","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":8132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:24","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":8133,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8116,"src":"34181:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8131,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6437,"src":"34148:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8135,"nodeType":"RevertStatement","src":"34141:46:24"}]}}]},"documentation":{"id":8114,"nodeType":"StructuredDocumentation","src":"33681:302:24","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":8139,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:24","nodeType":"FunctionDefinition","parameters":{"id":8117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8116,"mutability":"mutable","name":"value","nameLocation":"34011:5:24","nodeType":"VariableDeclaration","scope":8139,"src":"34004:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8115,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:24"},"returnParameters":{"id":8120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8119,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:24","nodeType":"VariableDeclaration","scope":8139,"src":"34041:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":8118,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:24","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:24"},"scope":8180,"src":"33988:216:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8168,"nodeType":"Block","src":"34444:250:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8147,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8142,"src":"34557:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":8152,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":8151,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":8150,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":8154,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:24","memberName":"max","nodeType":"MemberAccess","src":"34573:16:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8149,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8148,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:24","typeDescriptions":{}}},"id":8155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8162,"nodeType":"IfStatement","src":"34553:105:24","trueBody":{"id":8161,"nodeType":"Block","src":"34592:66:24","statements":[{"errorCall":{"arguments":[{"id":8158,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8142,"src":"34641:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8157,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6442,"src":"34613:27:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":8159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8160,"nodeType":"RevertStatement","src":"34606:41:24"}]}},{"expression":{"arguments":[{"id":8165,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8142,"src":"34681:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8164,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":8163,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:24","typeDescriptions":{}}},"id":8166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":8146,"id":8167,"nodeType":"Return","src":"34667:20:24"}]},"documentation":{"id":8140,"nodeType":"StructuredDocumentation","src":"34210:165:24","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":8169,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:24","nodeType":"FunctionDefinition","parameters":{"id":8143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8142,"mutability":"mutable","name":"value","nameLocation":"34406:5:24","nodeType":"VariableDeclaration","scope":8169,"src":"34398:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8141,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:24"},"returnParameters":{"id":8146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8145,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8169,"src":"34436:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8144,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:24"},"scope":8180,"src":"34380:314:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8178,"nodeType":"Block","src":"34853:87:24","statements":[{"AST":{"nativeSrc":"34888:46:24","nodeType":"YulBlock","src":"34888:46:24","statements":[{"nativeSrc":"34902:22:24","nodeType":"YulAssignment","src":"34902:22:24","value":{"arguments":[{"arguments":[{"name":"b","nativeSrc":"34921:1:24","nodeType":"YulIdentifier","src":"34921:1:24"}],"functionName":{"name":"iszero","nativeSrc":"34914:6:24","nodeType":"YulIdentifier","src":"34914:6:24"},"nativeSrc":"34914:9:24","nodeType":"YulFunctionCall","src":"34914:9:24"}],"functionName":{"name":"iszero","nativeSrc":"34907:6:24","nodeType":"YulIdentifier","src":"34907:6:24"},"nativeSrc":"34907:17:24","nodeType":"YulFunctionCall","src":"34907:17:24"},"variableNames":[{"name":"u","nativeSrc":"34902:1:24","nodeType":"YulIdentifier","src":"34902:1:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":8172,"isOffset":false,"isSlot":false,"src":"34921:1:24","valueSize":1},{"declaration":8175,"isOffset":false,"isSlot":false,"src":"34902:1:24","valueSize":1}],"flags":["memory-safe"],"id":8177,"nodeType":"InlineAssembly","src":"34863:71:24"}]},"documentation":{"id":8170,"nodeType":"StructuredDocumentation","src":"34700:90:24","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":8179,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:24","nodeType":"FunctionDefinition","parameters":{"id":8173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8172,"mutability":"mutable","name":"b","nameLocation":"34816:1:24","nodeType":"VariableDeclaration","scope":8179,"src":"34811:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8171,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:24"},"returnParameters":{"id":8176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8175,"mutability":"mutable","name":"u","nameLocation":"34850:1:24","nodeType":"VariableDeclaration","scope":8179,"src":"34842:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8174,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:24"},"scope":8180,"src":"34795:145:24","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":8181,"src":"769:34173:24","usedErrors":[6425,6430,6437,6442],"usedEvents":[]}],"src":"192:34751:24"},"id":24},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SafeCast":[8180],"SignedMath":[8324]},"id":8325,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":8182,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:25"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":8184,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8325,"sourceUnit":8181,"src":"135:40:25","symbolAliases":[{"foreign":{"id":8183,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8180,"src":"143:8:25","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":8185,"nodeType":"StructuredDocumentation","src":"177:80:25","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":8324,"linearizedBaseContracts":[8324],"name":"SignedMath","nameLocation":"266:10:25","nodeType":"ContractDefinition","nodes":[{"body":{"id":8214,"nodeType":"Block","src":"746:215:25","statements":[{"id":8213,"nodeType":"UncheckedBlock","src":"756:199:25","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8197,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8192,"src":"894:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8198,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8190,"src":"900:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":8199,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8192,"src":"904:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"900:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8201,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"899:7:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"id":8206,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8188,"src":"932:9:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":8204,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8180,"src":"916:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8180_$","typeString":"type(library SafeCast)"}},"id":8205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"925:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8179,"src":"916:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":8207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:26:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8203,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"909:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":8202,"name":"int256","nodeType":"ElementaryTypeName","src":"909:6:25","typeDescriptions":{}}},"id":8208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"909:34:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"899:44:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8210,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"898:46:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"894:50:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":8196,"id":8212,"nodeType":"Return","src":"887:57:25"}]}]},"documentation":{"id":8186,"nodeType":"StructuredDocumentation","src":"283:374:25","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":8215,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"671:7:25","nodeType":"FunctionDefinition","parameters":{"id":8193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8188,"mutability":"mutable","name":"condition","nameLocation":"684:9:25","nodeType":"VariableDeclaration","scope":8215,"src":"679:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8187,"name":"bool","nodeType":"ElementaryTypeName","src":"679:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8190,"mutability":"mutable","name":"a","nameLocation":"702:1:25","nodeType":"VariableDeclaration","scope":8215,"src":"695:8:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8189,"name":"int256","nodeType":"ElementaryTypeName","src":"695:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":8192,"mutability":"mutable","name":"b","nameLocation":"712:1:25","nodeType":"VariableDeclaration","scope":8215,"src":"705:8:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8191,"name":"int256","nodeType":"ElementaryTypeName","src":"705:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"678:36:25"},"returnParameters":{"id":8196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8195,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8215,"src":"738:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8194,"name":"int256","nodeType":"ElementaryTypeName","src":"738:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"737:8:25"},"scope":8324,"src":"662:299:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8233,"nodeType":"Block","src":"1102:44:25","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8226,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8218,"src":"1127:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":8227,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8220,"src":"1131:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1127:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":8229,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8218,"src":"1134:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":8230,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8220,"src":"1137:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8225,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8215,"src":"1119:7:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":8231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1119:20:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":8224,"id":8232,"nodeType":"Return","src":"1112:27:25"}]},"documentation":{"id":8216,"nodeType":"StructuredDocumentation","src":"967:66:25","text":" @dev Returns the largest of two signed numbers."},"id":8234,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"1047:3:25","nodeType":"FunctionDefinition","parameters":{"id":8221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8218,"mutability":"mutable","name":"a","nameLocation":"1058:1:25","nodeType":"VariableDeclaration","scope":8234,"src":"1051:8:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8217,"name":"int256","nodeType":"ElementaryTypeName","src":"1051:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":8220,"mutability":"mutable","name":"b","nameLocation":"1068:1:25","nodeType":"VariableDeclaration","scope":8234,"src":"1061:8:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8219,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1050:20:25"},"returnParameters":{"id":8224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8223,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8234,"src":"1094:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8222,"name":"int256","nodeType":"ElementaryTypeName","src":"1094:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1093:8:25"},"scope":8324,"src":"1038:108:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8252,"nodeType":"Block","src":"1288:44:25","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8245,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8237,"src":"1313:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":8246,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8239,"src":"1317:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1313:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":8248,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8237,"src":"1320:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":8249,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8239,"src":"1323:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8244,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8215,"src":"1305:7:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":8250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1305:20:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":8243,"id":8251,"nodeType":"Return","src":"1298:27:25"}]},"documentation":{"id":8235,"nodeType":"StructuredDocumentation","src":"1152:67:25","text":" @dev Returns the smallest of two signed numbers."},"id":8253,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"1233:3:25","nodeType":"FunctionDefinition","parameters":{"id":8240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8237,"mutability":"mutable","name":"a","nameLocation":"1244:1:25","nodeType":"VariableDeclaration","scope":8253,"src":"1237:8:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8236,"name":"int256","nodeType":"ElementaryTypeName","src":"1237:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":8239,"mutability":"mutable","name":"b","nameLocation":"1254:1:25","nodeType":"VariableDeclaration","scope":8253,"src":"1247:8:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8238,"name":"int256","nodeType":"ElementaryTypeName","src":"1247:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1236:20:25"},"returnParameters":{"id":8243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8242,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8253,"src":"1280:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8241,"name":"int256","nodeType":"ElementaryTypeName","src":"1280:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1279:8:25"},"scope":8324,"src":"1224:108:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8296,"nodeType":"Block","src":"1537:162:25","statements":[{"assignments":[8264],"declarations":[{"constant":false,"id":8264,"mutability":"mutable","name":"x","nameLocation":"1606:1:25","nodeType":"VariableDeclaration","scope":8296,"src":"1599:8:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8263,"name":"int256","nodeType":"ElementaryTypeName","src":"1599:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":8277,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8265,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8256,"src":"1611:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":8266,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8258,"src":"1615:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1611:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8268,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1610:7:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8269,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8256,"src":"1622:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":8270,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8258,"src":"1626:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1622:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8272,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1621:7:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":8273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1632:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1621:12:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8275,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1620:14:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1610:24:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1599:35:25"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8278,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8264,"src":"1651:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":8283,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8264,"src":"1671:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8282,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1663:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8281,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:25","typeDescriptions":{}}},"id":8284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1663:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":8285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:3:25","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1663:17:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8280,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1656:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":8279,"name":"int256","nodeType":"ElementaryTypeName","src":"1656:6:25","typeDescriptions":{}}},"id":8287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:25:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8288,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8256,"src":"1685:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":8289,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8258,"src":"1689:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1685:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8291,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1684:7:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1656:35:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8293,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1655:37:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1651:41:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":8262,"id":8295,"nodeType":"Return","src":"1644:48:25"}]},"documentation":{"id":8254,"nodeType":"StructuredDocumentation","src":"1338:126:25","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":8297,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"1478:7:25","nodeType":"FunctionDefinition","parameters":{"id":8259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8256,"mutability":"mutable","name":"a","nameLocation":"1493:1:25","nodeType":"VariableDeclaration","scope":8297,"src":"1486:8:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8255,"name":"int256","nodeType":"ElementaryTypeName","src":"1486:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":8258,"mutability":"mutable","name":"b","nameLocation":"1503:1:25","nodeType":"VariableDeclaration","scope":8297,"src":"1496:8:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8257,"name":"int256","nodeType":"ElementaryTypeName","src":"1496:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1485:20:25"},"returnParameters":{"id":8262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8261,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8297,"src":"1529:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8260,"name":"int256","nodeType":"ElementaryTypeName","src":"1529:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1528:8:25"},"scope":8324,"src":"1469:230:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8322,"nodeType":"Block","src":"1843:767:25","statements":[{"id":8321,"nodeType":"UncheckedBlock","src":"1853:751:25","statements":[{"assignments":[8306],"declarations":[{"constant":false,"id":8306,"mutability":"mutable","name":"mask","nameLocation":"2424:4:25","nodeType":"VariableDeclaration","scope":8321,"src":"2417:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8305,"name":"int256","nodeType":"ElementaryTypeName","src":"2417:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":8310,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8307,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8300,"src":"2431:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":8308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2436:3:25","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"2431:8:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2417:22:25"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8313,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8300,"src":"2576:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":8314,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8306,"src":"2580:4:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2576:8:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8316,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2575:10:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":8317,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8306,"src":"2588:4:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2575:17:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8312,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2567:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8311,"name":"uint256","nodeType":"ElementaryTypeName","src":"2567:7:25","typeDescriptions":{}}},"id":8319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:26:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8304,"id":8320,"nodeType":"Return","src":"2560:33:25"}]}]},"documentation":{"id":8298,"nodeType":"StructuredDocumentation","src":"1705:78:25","text":" @dev Returns the absolute unsigned value of a signed value."},"id":8323,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1797:3:25","nodeType":"FunctionDefinition","parameters":{"id":8301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8300,"mutability":"mutable","name":"n","nameLocation":"1808:1:25","nodeType":"VariableDeclaration","scope":8323,"src":"1801:8:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8299,"name":"int256","nodeType":"ElementaryTypeName","src":"1801:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1800:10:25"},"returnParameters":{"id":8304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8303,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8323,"src":"1834:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8302,"name":"uint256","nodeType":"ElementaryTypeName","src":"1834:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1833:9:25"},"scope":8324,"src":"1788:822:25","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":8325,"src":"258:2354:25","usedErrors":[],"usedEvents":[]}],"src":"109:2504:25"},"id":25},"contracts/AMMFactory.sol":{"ast":{"absolutePath":"contracts/AMMFactory.sol","exportedSymbols":{"AMMFactory":[8548],"AMMTokenPair":[9609],"ContextUpgradeable":[1294],"ECDSA":[4696],"EIP712Upgradeable":[2038],"ERC20PermitUpgradeable":[1248],"ERC20Upgradeable":[1079],"IAMMCallee":[9623],"IAMMFactory":[9686],"IAMMTokenPair":[9813],"IERC1363":[2120],"IERC20":[2368],"IERC20Permit":[2430],"Initializable":[462],"Math":[9889],"NoncesUpgradeable":[1405],"OwnableUpgradeable":[194],"PausableUpgradeable":[1565],"ReentrancyGuardUpgradeable":[1694],"SafeERC20":[2894],"UQ112x112":[9933]},"id":8549,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":8326,"literals":["solidity","^","0.8",".5"],"nodeType":"PragmaDirective","src":"39:23:26"},{"absolutePath":"contracts/interfaces/IAMMFactory.sol","file":"./interfaces/IAMMFactory.sol","id":8327,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8549,"sourceUnit":9687,"src":"64:38:26","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/AMMTokenPair.sol","file":"./AMMTokenPair.sol","id":8328,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8549,"sourceUnit":9610,"src":"103:28:26","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","id":8329,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8549,"sourceUnit":463,"src":"132:75:26","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","id":8330,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8549,"sourceUnit":195,"src":"208:75:26","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol","id":8331,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8549,"sourceUnit":1695,"src":"284:82:26","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":8332,"name":"IAMMFactory","nameLocations":["425:11:26"],"nodeType":"IdentifierPath","referencedDeclaration":9686,"src":"425:11:26"},"id":8333,"nodeType":"InheritanceSpecifier","src":"425:11:26"},{"baseName":{"id":8334,"name":"Initializable","nameLocations":["442:13:26"],"nodeType":"IdentifierPath","referencedDeclaration":462,"src":"442:13:26"},"id":8335,"nodeType":"InheritanceSpecifier","src":"442:13:26"},{"baseName":{"id":8336,"name":"OwnableUpgradeable","nameLocations":["461:18:26"],"nodeType":"IdentifierPath","referencedDeclaration":194,"src":"461:18:26"},"id":8337,"nodeType":"InheritanceSpecifier","src":"461:18:26"},{"baseName":{"id":8338,"name":"ReentrancyGuardUpgradeable","nameLocations":["485:26:26"],"nodeType":"IdentifierPath","referencedDeclaration":1694,"src":"485:26:26"},"id":8339,"nodeType":"InheritanceSpecifier","src":"485:26:26"}],"canonicalName":"AMMFactory","contractDependencies":[9609],"contractKind":"contract","fullyImplemented":true,"id":8548,"linearizedBaseContracts":[8548,1694,194,1294,462,9686],"name":"AMMFactory","nameLocation":"407:10:26","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[9640],"constant":false,"functionSelector":"017e7e58","id":8341,"mutability":"mutable","name":"feeTo","nameLocation":"533:5:26","nodeType":"VariableDeclaration","scope":8548,"src":"518:20:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8340,"name":"address","nodeType":"ElementaryTypeName","src":"518:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"baseFunctions":[9645],"constant":false,"functionSelector":"094b7415","id":8343,"mutability":"mutable","name":"feeToSetter","nameLocation":"574:11:26","nodeType":"VariableDeclaration","scope":8548,"src":"559:26:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8342,"name":"address","nodeType":"ElementaryTypeName","src":"559:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"baseFunctions":[9654],"constant":false,"functionSelector":"e6a43905","id":8349,"mutability":"mutable","name":"getPair","nameLocation":"717:7:26","nodeType":"VariableDeclaration","scope":8548,"src":"662:62:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$","typeString":"mapping(address => mapping(address => address))"},"typeName":{"id":8348,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8344,"name":"address","nodeType":"ElementaryTypeName","src":"670:7:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"662:47:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$","typeString":"mapping(address => mapping(address => address))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8347,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8345,"name":"address","nodeType":"ElementaryTypeName","src":"689:7:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"681:27:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8346,"name":"address","nodeType":"ElementaryTypeName","src":"700:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}}},"visibility":"public"},{"baseFunctions":[9661],"constant":false,"functionSelector":"1e3dd18b","id":8352,"mutability":"mutable","name":"allPairs","nameLocation":"772:8:26","nodeType":"VariableDeclaration","scope":8548,"src":"755:25:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[]"},"typeName":{"baseType":{"id":8350,"name":"address","nodeType":"ElementaryTypeName","src":"755:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8351,"nodeType":"ArrayTypeName","src":"755:9:26","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"public"},{"constant":true,"functionSelector":"5855a25a","id":8355,"mutability":"constant","name":"INIT_CODE_PAIR_HASH","nameLocation":"868:19:26","nodeType":"VariableDeclaration","scope":8548,"src":"844:120:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8353,"name":"bytes32","nodeType":"ElementaryTypeName","src":"844:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307839366538616334323737313938666638623666373835343738616139613339663430336362373638646430326362656533323663336537646133343838343566","id":8354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"898:66:26","typeDescriptions":{"typeIdentifier":"t_rational_68258024698789349894765071221733254692395760896603232917352833510768193864799_by_1","typeString":"int_const 6825...(69 digits omitted)...4799"},"value":"0x96e8ac4277198ff8b6f785478aa9a39f403cb768dd02cbee326c3e7da348845f"},"visibility":"public"},{"body":{"id":8362,"nodeType":"Block","src":"1038:39:26","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":8359,"name":"_disableInitializers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"1048:20:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":8360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1048:22:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8361,"nodeType":"ExpressionStatement","src":"1048:22:26"}]},"documentation":{"id":8356,"nodeType":"StructuredDocumentation","src":"971:48:26","text":"@custom:oz-upgrades-unsafe-allow constructor"},"id":8363,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":8357,"nodeType":"ParameterList","parameters":[],"src":"1035:2:26"},"returnParameters":{"id":8358,"nodeType":"ParameterList","parameters":[],"src":"1038:0:26"},"scope":8548,"src":"1024:53:26","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8383,"nodeType":"Block","src":"1263:113:26","statements":[{"expression":{"arguments":[{"expression":{"id":8372,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1288:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1292:6:26","memberName":"sender","nodeType":"MemberAccess","src":"1288:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8371,"name":"__Ownable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"1273:14:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":8374,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1273:26:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8375,"nodeType":"ExpressionStatement","src":"1273:26:26"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":8376,"name":"__ReentrancyGuard_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1605,"src":"1309:22:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":8377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1309:24:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8378,"nodeType":"ExpressionStatement","src":"1309:24:26"},{"expression":{"id":8381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8379,"name":"feeToSetter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8343,"src":"1343:11:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8380,"name":"_feeToSetter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8366,"src":"1357:12:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1343:26:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8382,"nodeType":"ExpressionStatement","src":"1343:26:26"}]},"documentation":{"id":8364,"nodeType":"StructuredDocumentation","src":"1083:112:26","text":" @dev 初始化函数，替代构造函数\n @param _feeToSetter 收税权限控制地址"},"functionSelector":"c4d66de8","id":8384,"implemented":true,"kind":"function","modifiers":[{"id":8369,"kind":"modifierInvocation","modifierName":{"id":8368,"name":"initializer","nameLocations":["1251:11:26"],"nodeType":"IdentifierPath","referencedDeclaration":302,"src":"1251:11:26"},"nodeType":"ModifierInvocation","src":"1251:11:26"}],"name":"initialize","nameLocation":"1209:10:26","nodeType":"FunctionDefinition","parameters":{"id":8367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8366,"mutability":"mutable","name":"_feeToSetter","nameLocation":"1228:12:26","nodeType":"VariableDeclaration","scope":8384,"src":"1220:20:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8365,"name":"address","nodeType":"ElementaryTypeName","src":"1220:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1219:22:26"},"returnParameters":{"id":8370,"nodeType":"ParameterList","parameters":[],"src":"1263:0:26"},"scope":8548,"src":"1200:176:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[9666],"body":{"id":8393,"nodeType":"Block","src":"1496:39:26","statements":[{"expression":{"expression":{"id":8390,"name":"allPairs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8352,"src":"1513:8:26","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":8391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1522:6:26","memberName":"length","nodeType":"MemberAccess","src":"1513:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8389,"id":8392,"nodeType":"Return","src":"1506:22:26"}]},"documentation":{"id":8385,"nodeType":"StructuredDocumentation","src":"1382:54:26","text":" @dev 查询配对数组长度方法"},"functionSelector":"574f2ba3","id":8394,"implemented":true,"kind":"function","modifiers":[],"name":"allPairsLength","nameLocation":"1450:14:26","nodeType":"FunctionDefinition","parameters":{"id":8386,"nodeType":"ParameterList","parameters":[],"src":"1464:2:26"},"returnParameters":{"id":8389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8388,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8394,"src":"1490:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8387,"name":"uint","nodeType":"ElementaryTypeName","src":"1490:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1489:6:26"},"scope":8548,"src":"1441:94:26","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[9675],"body":{"id":8508,"nodeType":"Block","src":"1797:1614:26","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8407,"name":"tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8397,"src":"1853:6:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8408,"name":"tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8399,"src":"1863:6:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1853:16:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"414d4d466163746f72793a204944454e544943414c5f414444524553534553","id":8410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1871:33:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e92c43854ca5fdf4d805d544f88743e29ce48640001cc2cc17149c7a69d895f","typeString":"literal_string \"AMMFactory: IDENTICAL_ADDRESSES\""},"value":"AMMFactory: IDENTICAL_ADDRESSES"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6e92c43854ca5fdf4d805d544f88743e29ce48640001cc2cc17149c7a69d895f","typeString":"literal_string \"AMMFactory: IDENTICAL_ADDRESSES\""}],"id":8406,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1845:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1845:60:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8412,"nodeType":"ExpressionStatement","src":"1845:60:26"},{"assignments":[8414,8416],"declarations":[{"constant":false,"id":8414,"mutability":"mutable","name":"token0","nameLocation":"1996:6:26","nodeType":"VariableDeclaration","scope":8508,"src":"1988:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8413,"name":"address","nodeType":"ElementaryTypeName","src":"1988:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8416,"mutability":"mutable","name":"token1","nameLocation":"2012:6:26","nodeType":"VariableDeclaration","scope":8508,"src":"2004:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8415,"name":"address","nodeType":"ElementaryTypeName","src":"2004:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":8427,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8417,"name":"tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8397,"src":"2022:6:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":8418,"name":"tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8399,"src":"2031:6:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2022:15:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"components":[{"id":8423,"name":"tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8399,"src":"2084:6:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8424,"name":"tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8397,"src":"2092:6:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":8425,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2083:16:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$","typeString":"tuple(address,address)"}},"id":8426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2022:77:26","trueExpression":{"components":[{"id":8420,"name":"tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8397,"src":"2053:6:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8421,"name":"tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8399,"src":"2061:6:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":8422,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2052:16:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$","typeString":"tuple(address,address)"}},"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$","typeString":"tuple(address,address)"}},"nodeType":"VariableDeclarationStatement","src":"1987:112:26"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8429,"name":"token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8414,"src":"2156:6:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":8432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2174:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8431,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2166:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8430,"name":"address","nodeType":"ElementaryTypeName","src":"2166:7:26","typeDescriptions":{}}},"id":8433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2166:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2156:20:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"414d4d466163746f72793a205a45524f5f41444452455353","id":8435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2178:26:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_0aabddf7e3ec4068e840fd16758792c25ef7499b29ffdc9f3645f786d7d8c652","typeString":"literal_string \"AMMFactory: ZERO_ADDRESS\""},"value":"AMMFactory: ZERO_ADDRESS"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0aabddf7e3ec4068e840fd16758792c25ef7499b29ffdc9f3645f786d7d8c652","typeString":"literal_string \"AMMFactory: ZERO_ADDRESS\""}],"id":8428,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2148:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2148:57:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8437,"nodeType":"ExpressionStatement","src":"2148:57:26"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"baseExpression":{"id":8439,"name":"getPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8349,"src":"2291:7:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$","typeString":"mapping(address => mapping(address => address))"}},"id":8441,"indexExpression":{"id":8440,"name":"token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8414,"src":"2299:6:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2291:15:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":8443,"indexExpression":{"id":8442,"name":"token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8416,"src":"2307:6:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2291:23:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":8446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2326:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8445,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2318:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8444,"name":"address","nodeType":"ElementaryTypeName","src":"2318:7:26","typeDescriptions":{}}},"id":8447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2318:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2291:37:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"414d4d466163746f72793a20504149525f455849535453","id":8449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2342:25:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_5f3d1412799cc4fb01b18fd922f4faf27fa802856d1254391b5894da305ff90b","typeString":"literal_string \"AMMFactory: PAIR_EXISTS\""},"value":"AMMFactory: PAIR_EXISTS"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5f3d1412799cc4fb01b18fd922f4faf27fa802856d1254391b5894da305ff90b","typeString":"literal_string \"AMMFactory: PAIR_EXISTS\""}],"id":8438,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2270:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2270:107:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8451,"nodeType":"ExpressionStatement","src":"2270:107:26"},{"assignments":[8453],"declarations":[{"constant":false,"id":8453,"mutability":"mutable","name":"bytecode","nameLocation":"2494:8:26","nodeType":"VariableDeclaration","scope":8508,"src":"2481:21:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":8452,"name":"bytes","nodeType":"ElementaryTypeName","src":"2481:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":8458,"initialValue":{"expression":{"arguments":[{"id":8455,"name":"AMMTokenPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9609,"src":"2510:12:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AMMTokenPair_$9609_$","typeString":"type(contract AMMTokenPair)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_AMMTokenPair_$9609_$","typeString":"type(contract AMMTokenPair)"}],"id":8454,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2505:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2505:18:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_AMMTokenPair_$9609","typeString":"type(contract AMMTokenPair)"}},"id":8457,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2524:12:26","memberName":"creationCode","nodeType":"MemberAccess","src":"2505:31:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2481:55:26"},{"assignments":[8460],"declarations":[{"constant":false,"id":8460,"mutability":"mutable","name":"salt","nameLocation":"2604:4:26","nodeType":"VariableDeclaration","scope":8508,"src":"2596:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8459,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2596:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":8468,"initialValue":{"arguments":[{"arguments":[{"id":8464,"name":"token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8414,"src":"2638:6:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8465,"name":"token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8416,"src":"2646:6:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":8462,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2621:3:26","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":8463,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2625:12:26","memberName":"encodePacked","nodeType":"MemberAccess","src":"2621:16:26","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":8466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2621:32:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":8461,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2611:9:26","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":8467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2611:43:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2596:58:26"},{"AST":{"nativeSrc":"2696:169:26","nodeType":"YulBlock","src":"2696:169:26","statements":[{"nativeSrc":"2795:60:26","nodeType":"YulAssignment","src":"2795:60:26","value":{"arguments":[{"kind":"number","nativeSrc":"2811:1:26","nodeType":"YulLiteral","src":"2811:1:26","type":"","value":"0"},{"arguments":[{"name":"bytecode","nativeSrc":"2818:8:26","nodeType":"YulIdentifier","src":"2818:8:26"},{"kind":"number","nativeSrc":"2828:2:26","nodeType":"YulLiteral","src":"2828:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2814:3:26","nodeType":"YulIdentifier","src":"2814:3:26"},"nativeSrc":"2814:17:26","nodeType":"YulFunctionCall","src":"2814:17:26"},{"arguments":[{"name":"bytecode","nativeSrc":"2839:8:26","nodeType":"YulIdentifier","src":"2839:8:26"}],"functionName":{"name":"mload","nativeSrc":"2833:5:26","nodeType":"YulIdentifier","src":"2833:5:26"},"nativeSrc":"2833:15:26","nodeType":"YulFunctionCall","src":"2833:15:26"},{"name":"salt","nativeSrc":"2850:4:26","nodeType":"YulIdentifier","src":"2850:4:26"}],"functionName":{"name":"create2","nativeSrc":"2803:7:26","nodeType":"YulIdentifier","src":"2803:7:26"},"nativeSrc":"2803:52:26","nodeType":"YulFunctionCall","src":"2803:52:26"},"variableNames":[{"name":"pair","nativeSrc":"2795:4:26","nodeType":"YulIdentifier","src":"2795:4:26"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":8453,"isOffset":false,"isSlot":false,"src":"2818:8:26","valueSize":1},{"declaration":8453,"isOffset":false,"isSlot":false,"src":"2839:8:26","valueSize":1},{"declaration":8404,"isOffset":false,"isSlot":false,"src":"2795:4:26","valueSize":1},{"declaration":8460,"isOffset":false,"isSlot":false,"src":"2850:4:26","valueSize":1}],"id":8469,"nodeType":"InlineAssembly","src":"2687:178:26"},{"expression":{"arguments":[{"id":8474,"name":"token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8414,"src":"2991:6:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8475,"name":"token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8416,"src":"2999:6:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":8471,"name":"pair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8404,"src":"2974:4:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8470,"name":"IAMMTokenPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9813,"src":"2960:13:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAMMTokenPair_$9813_$","typeString":"type(contract IAMMTokenPair)"}},"id":8472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2960:19:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IAMMTokenPair_$9813","typeString":"contract IAMMTokenPair"}},"id":8473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2980:10:26","memberName":"initialize","nodeType":"MemberAccess","referencedDeclaration":9812,"src":"2960:30:26","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) external"}},"id":8476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2960:46:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8477,"nodeType":"ExpressionStatement","src":"2960:46:26"},{"expression":{"id":8484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":8478,"name":"getPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8349,"src":"3067:7:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$","typeString":"mapping(address => mapping(address => address))"}},"id":8481,"indexExpression":{"id":8479,"name":"token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8414,"src":"3075:6:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3067:15:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":8482,"indexExpression":{"id":8480,"name":"token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8416,"src":"3083:6:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3067:23:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8483,"name":"pair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8404,"src":"3093:4:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3067:30:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8485,"nodeType":"ExpressionStatement","src":"3067:30:26"},{"expression":{"id":8492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":8486,"name":"getPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8349,"src":"3158:7:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$","typeString":"mapping(address => mapping(address => address))"}},"id":8489,"indexExpression":{"id":8487,"name":"token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8416,"src":"3166:6:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3158:15:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":8490,"indexExpression":{"id":8488,"name":"token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8414,"src":"3174:6:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3158:23:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8491,"name":"pair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8404,"src":"3184:4:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3158:30:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8493,"nodeType":"ExpressionStatement","src":"3158:30:26"},{"expression":{"arguments":[{"id":8497,"name":"pair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8404,"src":"3299:4:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":8494,"name":"allPairs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8352,"src":"3285:8:26","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":8496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3294:4:26","memberName":"push","nodeType":"MemberAccess","src":"3285:13:26","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":8498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3285:19:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8499,"nodeType":"ExpressionStatement","src":"3285:19:26"},{"eventCall":{"arguments":[{"id":8501,"name":"token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8414,"src":"3366:6:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8502,"name":"token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8416,"src":"3374:6:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8503,"name":"pair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8404,"src":"3382:4:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":8504,"name":"allPairs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8352,"src":"3388:8:26","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":8505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3397:6:26","memberName":"length","nodeType":"MemberAccess","src":"3388:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8500,"name":"PairCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9635,"src":"3354:11:26","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256)"}},"id":8506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3354:50:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8507,"nodeType":"EmitStatement","src":"3349:55:26"}]},"documentation":{"id":8395,"nodeType":"StructuredDocumentation","src":"1541:132:26","text":" @param tokenA TokenA\n @param tokenB TokenB\n @return pair 配对地址\n @dev 创建配对"},"functionSelector":"c9c65396","id":8509,"implemented":true,"kind":"function","modifiers":[{"id":8402,"kind":"modifierInvocation","modifierName":{"id":8401,"name":"nonReentrant","nameLocations":["1761:12:26"],"nodeType":"IdentifierPath","referencedDeclaration":1634,"src":"1761:12:26"},"nodeType":"ModifierInvocation","src":"1761:12:26"}],"name":"createPair","nameLocation":"1687:10:26","nodeType":"FunctionDefinition","parameters":{"id":8400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8397,"mutability":"mutable","name":"tokenA","nameLocation":"1715:6:26","nodeType":"VariableDeclaration","scope":8509,"src":"1707:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8396,"name":"address","nodeType":"ElementaryTypeName","src":"1707:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8399,"mutability":"mutable","name":"tokenB","nameLocation":"1739:6:26","nodeType":"VariableDeclaration","scope":8509,"src":"1731:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8398,"name":"address","nodeType":"ElementaryTypeName","src":"1731:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1697:54:26"},"returnParameters":{"id":8405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8404,"mutability":"mutable","name":"pair","nameLocation":"1791:4:26","nodeType":"VariableDeclaration","scope":8509,"src":"1783:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8403,"name":"address","nodeType":"ElementaryTypeName","src":"1783:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1782:14:26"},"scope":8548,"src":"1678:1733:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[9680],"body":{"id":8527,"nodeType":"Block","src":"3541:100:26","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8516,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3559:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3563:6:26","memberName":"sender","nodeType":"MemberAccess","src":"3559:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":8518,"name":"feeToSetter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8343,"src":"3573:11:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3559:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"414d4d466163746f72793a20464f5242494444454e","id":8520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3586:23:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_26567dff8532bec6b23432daa17444b8e525311305ed7f3a2ee2dbda173cad3a","typeString":"literal_string \"AMMFactory: FORBIDDEN\""},"value":"AMMFactory: FORBIDDEN"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_26567dff8532bec6b23432daa17444b8e525311305ed7f3a2ee2dbda173cad3a","typeString":"literal_string \"AMMFactory: FORBIDDEN\""}],"id":8515,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3551:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3551:59:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8522,"nodeType":"ExpressionStatement","src":"3551:59:26"},{"expression":{"id":8525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8523,"name":"feeTo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8341,"src":"3620:5:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8524,"name":"_feeTo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8512,"src":"3628:6:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3620:14:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8526,"nodeType":"ExpressionStatement","src":"3620:14:26"}]},"documentation":{"id":8510,"nodeType":"StructuredDocumentation","src":"3417:76:26","text":" @dev 设置收税地址\n @param _feeTo 收税地址"},"functionSelector":"f46901ed","id":8528,"implemented":true,"kind":"function","modifiers":[],"name":"setFeeTo","nameLocation":"3507:8:26","nodeType":"FunctionDefinition","parameters":{"id":8513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8512,"mutability":"mutable","name":"_feeTo","nameLocation":"3524:6:26","nodeType":"VariableDeclaration","scope":8528,"src":"3516:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8511,"name":"address","nodeType":"ElementaryTypeName","src":"3516:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3515:16:26"},"returnParameters":{"id":8514,"nodeType":"ParameterList","parameters":[],"src":"3541:0:26"},"scope":8548,"src":"3498:143:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[9685],"body":{"id":8546,"nodeType":"Block","src":"3795:112:26","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8535,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3813:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3817:6:26","memberName":"sender","nodeType":"MemberAccess","src":"3813:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":8537,"name":"feeToSetter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8343,"src":"3827:11:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3813:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"414d4d466163746f72793a20464f5242494444454e","id":8539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3840:23:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_26567dff8532bec6b23432daa17444b8e525311305ed7f3a2ee2dbda173cad3a","typeString":"literal_string \"AMMFactory: FORBIDDEN\""},"value":"AMMFactory: FORBIDDEN"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_26567dff8532bec6b23432daa17444b8e525311305ed7f3a2ee2dbda173cad3a","typeString":"literal_string \"AMMFactory: FORBIDDEN\""}],"id":8534,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3805:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3805:59:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8541,"nodeType":"ExpressionStatement","src":"3805:59:26"},{"expression":{"id":8544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8542,"name":"feeToSetter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8343,"src":"3874:11:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8543,"name":"_feeToSetter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8531,"src":"3888:12:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3874:26:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8545,"nodeType":"ExpressionStatement","src":"3874:26:26"}]},"documentation":{"id":8529,"nodeType":"StructuredDocumentation","src":"3647:88:26","text":" @dev 收税权限控制\n @param _feeToSetter 收税权限控制"},"functionSelector":"a2e74af6","id":8547,"implemented":true,"kind":"function","modifiers":[],"name":"setFeeToSetter","nameLocation":"3749:14:26","nodeType":"FunctionDefinition","parameters":{"id":8532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8531,"mutability":"mutable","name":"_feeToSetter","nameLocation":"3772:12:26","nodeType":"VariableDeclaration","scope":8547,"src":"3764:20:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8530,"name":"address","nodeType":"ElementaryTypeName","src":"3764:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3763:22:26"},"returnParameters":{"id":8533,"nodeType":"ParameterList","parameters":[],"src":"3795:0:26"},"scope":8548,"src":"3740:167:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":8549,"src":"398:3511:26","usedErrors":[30,35,211,214,1596],"usedEvents":[41,219,9635]}],"src":"39:3871:26"},"id":26},"contracts/AMMTokenPair.sol":{"ast":{"absolutePath":"contracts/AMMTokenPair.sol","exportedSymbols":{"AMMTokenPair":[9609],"ContextUpgradeable":[1294],"ECDSA":[4696],"EIP712Upgradeable":[2038],"ERC20PermitUpgradeable":[1248],"ERC20Upgradeable":[1079],"IAMMCallee":[9623],"IAMMFactory":[9686],"IAMMTokenPair":[9813],"IERC1363":[2120],"IERC20":[2368],"IERC20Permit":[2430],"Initializable":[462],"Math":[9889],"NoncesUpgradeable":[1405],"OwnableUpgradeable":[194],"PausableUpgradeable":[1565],"ReentrancyGuardUpgradeable":[1694],"SafeERC20":[2894],"UQ112x112":[9933]},"id":9610,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":8550,"literals":["solidity","^","0.8",".5"],"nodeType":"PragmaDirective","src":"39:23:27"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":8551,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9610,"sourceUnit":2369,"src":"64:56:27","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","id":8552,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9610,"sourceUnit":2895,"src":"121:65:27","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","id":8553,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9610,"sourceUnit":463,"src":"187:75:27","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol","id":8554,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9610,"sourceUnit":1249,"src":"263:95:27","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol","id":8555,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9610,"sourceUnit":1695,"src":"359:82:27","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol","id":8556,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9610,"sourceUnit":1566,"src":"442:75:27","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","id":8557,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9610,"sourceUnit":195,"src":"518:75:27","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IAMMTokenPair.sol","file":"./interfaces/IAMMTokenPair.sol","id":8558,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9610,"sourceUnit":9814,"src":"594:40:27","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/libraries/Math.sol","file":"./libraries/Math.sol","id":8559,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9610,"sourceUnit":9890,"src":"635:30:27","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/libraries/UQ112x112.sol","file":"./libraries/UQ112x112.sol","id":8560,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9610,"sourceUnit":9934,"src":"666:35:27","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IAMMFactory.sol","file":"./interfaces/IAMMFactory.sol","id":8561,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9610,"sourceUnit":9687,"src":"702:38:27","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IAMMCallee.sol","file":"./interfaces/IAMMCallee.sol","id":8562,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9610,"sourceUnit":9624,"src":"741:37:27","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":8563,"name":"Initializable","nameLocations":["845:13:27"],"nodeType":"IdentifierPath","referencedDeclaration":462,"src":"845:13:27"},"id":8564,"nodeType":"InheritanceSpecifier","src":"845:13:27"},{"baseName":{"id":8565,"name":"ERC20PermitUpgradeable","nameLocations":["864:22:27"],"nodeType":"IdentifierPath","referencedDeclaration":1248,"src":"864:22:27"},"id":8566,"nodeType":"InheritanceSpecifier","src":"864:22:27"},{"baseName":{"id":8567,"name":"ReentrancyGuardUpgradeable","nameLocations":["892:26:27"],"nodeType":"IdentifierPath","referencedDeclaration":1694,"src":"892:26:27"},"id":8568,"nodeType":"InheritanceSpecifier","src":"892:26:27"},{"baseName":{"id":8569,"name":"PausableUpgradeable","nameLocations":["924:19:27"],"nodeType":"IdentifierPath","referencedDeclaration":1565,"src":"924:19:27"},"id":8570,"nodeType":"InheritanceSpecifier","src":"924:19:27"},{"baseName":{"id":8571,"name":"OwnableUpgradeable","nameLocations":["949:18:27"],"nodeType":"IdentifierPath","referencedDeclaration":194,"src":"949:18:27"},"id":8572,"nodeType":"InheritanceSpecifier","src":"949:18:27"},{"baseName":{"id":8573,"name":"IAMMTokenPair","nameLocations":["973:13:27"],"nodeType":"IdentifierPath","referencedDeclaration":9813,"src":"973:13:27"},"id":8574,"nodeType":"InheritanceSpecifier","src":"973:13:27"}],"canonicalName":"AMMTokenPair","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":9609,"linearizedBaseContracts":[9609,9813,194,1565,1694,1248,1405,2038,2153,2430,1079,2195,2394,2368,1294,462],"name":"AMMTokenPair","nameLocation":"825:12:27","nodeType":"ContractDefinition","nodes":[{"global":false,"id":8578,"libraryName":{"id":8575,"name":"SafeERC20","nameLocations":["999:9:27"],"nodeType":"IdentifierPath","referencedDeclaration":2894,"src":"999:9:27"},"nodeType":"UsingForDirective","src":"993:27:27","typeName":{"id":8577,"nodeType":"UserDefinedTypeName","pathNode":{"id":8576,"name":"IERC20","nameLocations":["1013:6:27"],"nodeType":"IdentifierPath","referencedDeclaration":2368,"src":"1013:6:27"},"referencedDeclaration":2368,"src":"1013:6:27","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2368","typeString":"contract IERC20"}}},{"global":false,"id":8581,"libraryName":{"id":8579,"name":"UQ112x112","nameLocations":["1031:9:27"],"nodeType":"IdentifierPath","referencedDeclaration":9933,"src":"1031:9:27"},"nodeType":"UsingForDirective","src":"1025:28:27","typeName":{"id":8580,"name":"uint224","nodeType":"ElementaryTypeName","src":"1045:7:27","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}},{"baseFunctions":[9731],"constant":true,"functionSelector":"ba9a7a56","id":8586,"mutability":"constant","name":"MINIMUM_LIQUIDITY","nameLocation":"1112:17:27","nodeType":"VariableDeclaration","scope":9609,"src":"1088:51:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8582,"name":"uint256","nodeType":"ElementaryTypeName","src":"1088:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"id":8585,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":8583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1132:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"33","id":8584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1138:1:27","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"1132:7:27","typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"}},"visibility":"public"},{"constant":true,"id":8597,"mutability":"constant","name":"SELECTOR","nameLocation":"1265:8:27","nodeType":"VariableDeclaration","scope":9609,"src":"1241:96:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":8587,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1241:6:27","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"7472616e7366657228616464726573732c75696e7432353629","id":8593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1307:27:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_a9059cbb2ab09eb219583f4a59a5d0623ade346d962bcd4e46b11da047c9049b","typeString":"literal_string \"transfer(address,uint256)\""},"value":"transfer(address,uint256)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_a9059cbb2ab09eb219583f4a59a5d0623ade346d962bcd4e46b11da047c9049b","typeString":"literal_string \"transfer(address,uint256)\""}],"id":8592,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1301:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":8591,"name":"bytes","nodeType":"ElementaryTypeName","src":"1301:5:27","typeDescriptions":{}}},"id":8594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1301:34:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":8590,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1291:9:27","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":8595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1291:45:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":8589,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1284:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":{"id":8588,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1284:6:27","typeDescriptions":{}}},"id":8596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1284:53:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"private"},{"baseFunctions":[9736],"constant":false,"functionSelector":"c45a0155","id":8599,"mutability":"mutable","name":"factory","nameLocation":"1359:7:27","nodeType":"VariableDeclaration","scope":9609,"src":"1344:22:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8598,"name":"address","nodeType":"ElementaryTypeName","src":"1344:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"baseFunctions":[9741],"constant":false,"functionSelector":"0dfe1681","id":8601,"mutability":"mutable","name":"token0","nameLocation":"1402:6:27","nodeType":"VariableDeclaration","scope":9609,"src":"1387:21:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8600,"name":"address","nodeType":"ElementaryTypeName","src":"1387:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"baseFunctions":[9746],"constant":false,"functionSelector":"d21220a7","id":8603,"mutability":"mutable","name":"token1","nameLocation":"1445:6:27","nodeType":"VariableDeclaration","scope":9609,"src":"1430:21:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8602,"name":"address","nodeType":"ElementaryTypeName","src":"1430:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"id":8605,"mutability":"mutable","name":"reserve0","nameLocation":"1489:8:27","nodeType":"VariableDeclaration","scope":9609,"src":"1473:24:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":8604,"name":"uint112","nodeType":"ElementaryTypeName","src":"1473:7:27","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"private"},{"constant":false,"id":8607,"mutability":"mutable","name":"reserve1","nameLocation":"1533:8:27","nodeType":"VariableDeclaration","scope":9609,"src":"1517:24:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":8606,"name":"uint112","nodeType":"ElementaryTypeName","src":"1517:7:27","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"private"},{"constant":false,"id":8609,"mutability":"mutable","name":"blockTimestampLast","nameLocation":"1576:18:27","nodeType":"VariableDeclaration","scope":9609,"src":"1561:33:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8608,"name":"uint32","nodeType":"ElementaryTypeName","src":"1561:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"private"},{"baseFunctions":[9760],"constant":false,"functionSelector":"5909c0d5","id":8611,"mutability":"mutable","name":"price0CumulativeLast","nameLocation":"1678:20:27","nodeType":"VariableDeclaration","scope":9609,"src":"1663:35:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8610,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"baseFunctions":[9765],"constant":false,"functionSelector":"5a3d5493","id":8613,"mutability":"mutable","name":"price1CumulativeLast","nameLocation":"1745:20:27","nodeType":"VariableDeclaration","scope":9609,"src":"1730:35:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8612,"name":"uint256","nodeType":"ElementaryTypeName","src":"1730:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"baseFunctions":[9770],"constant":false,"functionSelector":"7464fc3d","id":8615,"mutability":"mutable","name":"kLast","nameLocation":"1907:5:27","nodeType":"VariableDeclaration","scope":9609,"src":"1892:20:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8614,"name":"uint256","nodeType":"ElementaryTypeName","src":"1892:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"body":{"id":8622,"nodeType":"Block","src":"1986:39:27","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":8619,"name":"_disableInitializers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"1996:20:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":8620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1996:22:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8621,"nodeType":"ExpressionStatement","src":"1996:22:27"}]},"documentation":{"id":8616,"nodeType":"StructuredDocumentation","src":"1919:48:27","text":"@custom:oz-upgrades-unsafe-allow constructor"},"id":8623,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":8617,"nodeType":"ParameterList","parameters":[],"src":"1983:2:27"},"returnParameters":{"id":8618,"nodeType":"ParameterList","parameters":[],"src":"1986:0:27"},"scope":9609,"src":"1972:53:27","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[9812],"body":{"id":8662,"nodeType":"Block","src":"2239:264:27","statements":[{"expression":{"arguments":[{"hexValue":"414d4d","id":8634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2262:5:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_edda99bbc2e81e192db34603b20c3ca6ffc475ec37193683bbf3d66d78db8a7c","typeString":"literal_string \"AMM\""},"value":"AMM"},{"hexValue":"414d4d","id":8635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2269:5:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_edda99bbc2e81e192db34603b20c3ca6ffc475ec37193683bbf3d66d78db8a7c","typeString":"literal_string \"AMM\""},"value":"AMM"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_edda99bbc2e81e192db34603b20c3ca6ffc475ec37193683bbf3d66d78db8a7c","typeString":"literal_string \"AMM\""},{"typeIdentifier":"t_stringliteral_edda99bbc2e81e192db34603b20c3ca6ffc475ec37193683bbf3d66d78db8a7c","typeString":"literal_string \"AMM\""}],"id":8633,"name":"__ERC20_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"2249:12:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":8636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2249:26:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8637,"nodeType":"ExpressionStatement","src":"2249:26:27"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":8638,"name":"__ReentrancyGuard_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1605,"src":"2285:22:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":8639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2285:24:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8640,"nodeType":"ExpressionStatement","src":"2285:24:27"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":8641,"name":"__Pausable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1469,"src":"2319:15:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":8642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2319:17:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8643,"nodeType":"ExpressionStatement","src":"2319:17:27"},{"expression":{"arguments":[{"expression":{"id":8645,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2361:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2365:6:27","memberName":"sender","nodeType":"MemberAccess","src":"2361:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8644,"name":"__Ownable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"2346:14:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":8647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2346:26:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8648,"nodeType":"ExpressionStatement","src":"2346:26:27"},{"expression":{"id":8652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8649,"name":"factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8599,"src":"2424:7:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":8650,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2434:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2438:6:27","memberName":"sender","nodeType":"MemberAccess","src":"2434:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2424:20:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8653,"nodeType":"ExpressionStatement","src":"2424:20:27"},{"expression":{"id":8656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8654,"name":"token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8601,"src":"2454:6:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8655,"name":"_token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8626,"src":"2463:7:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2454:16:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8657,"nodeType":"ExpressionStatement","src":"2454:16:27"},{"expression":{"id":8660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8658,"name":"token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8603,"src":"2480:6:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8659,"name":"_token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8628,"src":"2489:7:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2480:16:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8661,"nodeType":"ExpressionStatement","src":"2480:16:27"}]},"documentation":{"id":8624,"nodeType":"StructuredDocumentation","src":"2031:128:27","text":" @param _token0 token0\n @param _token1 token1\n @dev 初始化方法,部署时由工厂调用一次"},"functionSelector":"485cc955","id":8663,"implemented":true,"kind":"function","modifiers":[{"id":8631,"kind":"modifierInvocation","modifierName":{"id":8630,"name":"initializer","nameLocations":["2227:11:27"],"nodeType":"IdentifierPath","referencedDeclaration":302,"src":"2227:11:27"},"nodeType":"ModifierInvocation","src":"2227:11:27"}],"name":"initialize","nameLocation":"2173:10:27","nodeType":"FunctionDefinition","parameters":{"id":8629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8626,"mutability":"mutable","name":"_token0","nameLocation":"2192:7:27","nodeType":"VariableDeclaration","scope":8663,"src":"2184:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8625,"name":"address","nodeType":"ElementaryTypeName","src":"2184:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8628,"mutability":"mutable","name":"_token1","nameLocation":"2209:7:27","nodeType":"VariableDeclaration","scope":8663,"src":"2201:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8627,"name":"address","nodeType":"ElementaryTypeName","src":"2201:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2183:34:27"},"returnParameters":{"id":8632,"nodeType":"ParameterList","parameters":[],"src":"2239:0:27"},"scope":9609,"src":"2164:339:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8672,"nodeType":"Block","src":"2622:25:27","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":8669,"name":"_pause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1540,"src":"2632:6:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":8670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2632:8:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8671,"nodeType":"ExpressionStatement","src":"2632:8:27"}]},"documentation":{"id":8664,"nodeType":"StructuredDocumentation","src":"2509:72:27","text":" @dev 紧急暂停功能 - 只有所有者可以调用"},"functionSelector":"8456cb59","id":8673,"implemented":true,"kind":"function","modifiers":[{"id":8667,"kind":"modifierInvocation","modifierName":{"id":8666,"name":"onlyOwner","nameLocations":["2612:9:27"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"2612:9:27"},"nodeType":"ModifierInvocation","src":"2612:9:27"}],"name":"pause","nameLocation":"2595:5:27","nodeType":"FunctionDefinition","parameters":{"id":8665,"nodeType":"ParameterList","parameters":[],"src":"2600:2:27"},"returnParameters":{"id":8668,"nodeType":"ParameterList","parameters":[],"src":"2622:0:27"},"scope":9609,"src":"2586:61:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8682,"nodeType":"Block","src":"2768:27:27","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":8679,"name":"_unpause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1564,"src":"2778:8:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":8680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2778:10:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8681,"nodeType":"ExpressionStatement","src":"2778:10:27"}]},"documentation":{"id":8674,"nodeType":"StructuredDocumentation","src":"2653:72:27","text":" @dev 取消暂停功能 - 只有所有者可以调用"},"functionSelector":"3f4ba83a","id":8683,"implemented":true,"kind":"function","modifiers":[{"id":8677,"kind":"modifierInvocation","modifierName":{"id":8676,"name":"onlyOwner","nameLocations":["2758:9:27"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"2758:9:27"},"nodeType":"ModifierInvocation","src":"2758:9:27"}],"name":"unpause","nameLocation":"2739:7:27","nodeType":"FunctionDefinition","parameters":{"id":8675,"nodeType":"ParameterList","parameters":[],"src":"2746:2:27"},"returnParameters":{"id":8678,"nodeType":"ParameterList","parameters":[],"src":"2768:0:27"},"scope":9609,"src":"2730:65:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[9755],"body":{"id":8705,"nodeType":"Block","src":"3143:117:27","statements":[{"expression":{"id":8695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8693,"name":"_reserve0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8687,"src":"3153:9:27","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8694,"name":"reserve0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8605,"src":"3165:8:27","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"3153:20:27","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"id":8696,"nodeType":"ExpressionStatement","src":"3153:20:27"},{"expression":{"id":8699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8697,"name":"_reserve1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8689,"src":"3183:9:27","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8698,"name":"reserve1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8607,"src":"3195:8:27","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"3183:20:27","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"id":8700,"nodeType":"ExpressionStatement","src":"3183:20:27"},{"expression":{"id":8703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8701,"name":"_blockTimestampLast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8691,"src":"3213:19:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8702,"name":"blockTimestampLast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8609,"src":"3235:18:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"3213:40:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":8704,"nodeType":"ExpressionStatement","src":"3213:40:27"}]},"documentation":{"id":8684,"nodeType":"StructuredDocumentation","src":"2801:153:27","text":" @return _reserve0 储备量0\n @return _reserve1 储备量1\n @return _blockTimestampLast 时间戳\n @dev 获取储备"},"functionSelector":"0902f1ac","id":8706,"implemented":true,"kind":"function","modifiers":[],"name":"getReserves","nameLocation":"2968:11:27","nodeType":"FunctionDefinition","parameters":{"id":8685,"nodeType":"ParameterList","parameters":[],"src":"2979:2:27"},"returnParameters":{"id":8692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8687,"mutability":"mutable","name":"_reserve0","nameLocation":"3048:9:27","nodeType":"VariableDeclaration","scope":8706,"src":"3040:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":8686,"name":"uint112","nodeType":"ElementaryTypeName","src":"3040:7:27","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"},{"constant":false,"id":8689,"mutability":"mutable","name":"_reserve1","nameLocation":"3079:9:27","nodeType":"VariableDeclaration","scope":8706,"src":"3071:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":8688,"name":"uint112","nodeType":"ElementaryTypeName","src":"3071:7:27","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"},{"constant":false,"id":8691,"mutability":"mutable","name":"_blockTimestampLast","nameLocation":"3109:19:27","nodeType":"VariableDeclaration","scope":8706,"src":"3102:26:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8690,"name":"uint32","nodeType":"ElementaryTypeName","src":"3102:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"3026:112:27"},"scope":9609,"src":"2959:301:27","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":8749,"nodeType":"Block","src":"3474:414:27","statements":[{"assignments":[8717,8719],"declarations":[{"constant":false,"id":8717,"mutability":"mutable","name":"success","nameLocation":"3547:7:27","nodeType":"VariableDeclaration","scope":8749,"src":"3542:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8716,"name":"bool","nodeType":"ElementaryTypeName","src":"3542:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8719,"mutability":"mutable","name":"data","nameLocation":"3569:4:27","nodeType":"VariableDeclaration","scope":8749,"src":"3556:17:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":8718,"name":"bytes","nodeType":"ElementaryTypeName","src":"3556:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":8729,"initialValue":{"arguments":[{"arguments":[{"id":8724,"name":"SELECTOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8597,"src":"3624:8:27","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":8725,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8711,"src":"3634:2:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8726,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8713,"src":"3638:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8722,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3601:3:27","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":8723,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3605:18:27","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"3601:22:27","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":8727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3601:43:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":8720,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8709,"src":"3577:5:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3583:4:27","memberName":"call","nodeType":"MemberAccess","src":"3577:10:27","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":8728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3577:77:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3541:113:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8731,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8717,"src":"3769:7:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8732,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8719,"src":"3781:4:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":8733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3786:6:27","memberName":"length","nodeType":"MemberAccess","src":"3781:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3796:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3781:16:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":8738,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8719,"src":"3812:4:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":8740,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3819:4:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":8739,"name":"bool","nodeType":"ElementaryTypeName","src":"3819:4:27","typeDescriptions":{}}}],"id":8741,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"3818:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":8736,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3801:3:27","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":8737,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3805:6:27","memberName":"decode","nodeType":"MemberAccess","src":"3801:10:27","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":8742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3801:24:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3781:44:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":8744,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3780:46:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3769:57:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"414d4d546f6b656e506169723a205452414e534645525f4641494c4544","id":8746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3840:31:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_a137678a9464a284f391f998e93971dd597f242c1df17428b5b6b94f10fc0670","typeString":"literal_string \"AMMTokenPair: TRANSFER_FAILED\""},"value":"AMMTokenPair: TRANSFER_FAILED"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a137678a9464a284f391f998e93971dd597f242c1df17428b5b6b94f10fc0670","typeString":"literal_string \"AMMTokenPair: TRANSFER_FAILED\""}],"id":8730,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3748:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3748:133:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8748,"nodeType":"ExpressionStatement","src":"3748:133:27"}]},"documentation":{"id":8707,"nodeType":"StructuredDocumentation","src":"3266:130:27","text":" @param token token地址\n @param to    to地址\n @param value 数额\n @dev 私有安全发送"},"id":8750,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"3410:13:27","nodeType":"FunctionDefinition","parameters":{"id":8714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8709,"mutability":"mutable","name":"token","nameLocation":"3432:5:27","nodeType":"VariableDeclaration","scope":8750,"src":"3424:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8708,"name":"address","nodeType":"ElementaryTypeName","src":"3424:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8711,"mutability":"mutable","name":"to","nameLocation":"3447:2:27","nodeType":"VariableDeclaration","scope":8750,"src":"3439:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8710,"name":"address","nodeType":"ElementaryTypeName","src":"3439:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8713,"mutability":"mutable","name":"value","nameLocation":"3459:5:27","nodeType":"VariableDeclaration","scope":8750,"src":"3451:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8712,"name":"uint256","nodeType":"ElementaryTypeName","src":"3451:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3423:42:27"},"returnParameters":{"id":8715,"nodeType":"ParameterList","parameters":[],"src":"3474:0:27"},"scope":9609,"src":"3401:487:27","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":8866,"nodeType":"Block","src":"4262:1432:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8763,"name":"balance0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8753,"src":"4355:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":8766,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4372:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":8765,"name":"uint112","nodeType":"ElementaryTypeName","src":"4372:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":8764,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4367:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4367:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":8768,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4381:3:27","memberName":"max","nodeType":"MemberAccess","src":"4367:17:27","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"4355:29:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8770,"name":"balance1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8755,"src":"4388:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":8773,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4405:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":8772,"name":"uint112","nodeType":"ElementaryTypeName","src":"4405:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":8771,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4400:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4400:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":8775,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4414:3:27","memberName":"max","nodeType":"MemberAccess","src":"4400:17:27","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"4388:29:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4355:62:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"414d4d546f6b656e506169723a204f564552464c4f57","id":8778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4431:24:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_5d180949ff3e66295dc60476fc477180945e74ee767151067bf7cb35b0adce68","typeString":"literal_string \"AMMTokenPair: OVERFLOW\""},"value":"AMMTokenPair: OVERFLOW"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5d180949ff3e66295dc60476fc477180945e74ee767151067bf7cb35b0adce68","typeString":"literal_string \"AMMTokenPair: OVERFLOW\""}],"id":8762,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4334:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4334:131:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8780,"nodeType":"ExpressionStatement","src":"4334:131:27"},{"assignments":[8782],"declarations":[{"constant":false,"id":8782,"mutability":"mutable","name":"blockTimestamp","nameLocation":"4536:14:27","nodeType":"VariableDeclaration","scope":8866,"src":"4529:21:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8781,"name":"uint32","nodeType":"ElementaryTypeName","src":"4529:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"id":8792,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8785,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4560:5:27","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4566:9:27","memberName":"timestamp","nodeType":"MemberAccess","src":"4560:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":8789,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":8787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4578:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":8788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4583:2:27","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"4578:7:27","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"4560:25:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8784,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4553:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":8783,"name":"uint32","nodeType":"ElementaryTypeName","src":"4553:6:27","typeDescriptions":{}}},"id":8791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4553:33:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"VariableDeclarationStatement","src":"4529:57:27"},{"id":8842,"nodeType":"UncheckedBlock","src":"4625:804:27","statements":[{"assignments":[8794],"declarations":[{"constant":false,"id":8794,"mutability":"mutable","name":"timeElapsed","nameLocation":"4656:11:27","nodeType":"VariableDeclaration","scope":8842,"src":"4649:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8793,"name":"uint32","nodeType":"ElementaryTypeName","src":"4649:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"id":8798,"initialValue":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":8797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8795,"name":"blockTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8782,"src":"4670:14:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":8796,"name":"blockTimestampLast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8609,"src":"4687:18:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"4670:35:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"VariableDeclarationStatement","src":"4649:56:27"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":8801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8799,"name":"timeElapsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8794,"src":"4811:11:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4825:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4811:15:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint112","typeString":"uint112"},"id":8804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8802,"name":"_reserve0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8757,"src":"4830:9:27","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":8803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4843:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4830:14:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4811:33:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint112","typeString":"uint112"},"id":8808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8806,"name":"_reserve1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8759,"src":"4848:9:27","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":8807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4861:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4848:14:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4811:51:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8841,"nodeType":"IfStatement","src":"4807:612:27","trueBody":{"id":8840,"nodeType":"Block","src":"4864:555:27","statements":[{"expression":{"id":8823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8810,"name":"price0CumulativeLast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8611,"src":"5035:20:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":8818,"name":"_reserve0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8757,"src":"5121:9:27","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint112","typeString":"uint112"}],"expression":{"arguments":[{"id":8815,"name":"_reserve1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8759,"src":"5104:9:27","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint112","typeString":"uint112"}],"expression":{"id":8813,"name":"UQ112x112","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9933,"src":"5087:9:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_UQ112x112_$9933_$","typeString":"type(library UQ112x112)"}},"id":8814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5097:6:27","memberName":"encode","nodeType":"MemberAccess","referencedDeclaration":9913,"src":"5087:16:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint112_$returns$_t_uint224_$","typeString":"function (uint112) pure returns (uint224)"}},"id":8816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5087:27:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":8817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5115:5:27","memberName":"uqdiv","nodeType":"MemberAccess","referencedDeclaration":9932,"src":"5087:33:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint224_$_t_uint112_$returns$_t_uint224_$attached_to$_t_uint224_$","typeString":"function (uint224,uint112) pure returns (uint224)"}},"id":8819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5087:44:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint224","typeString":"uint224"}],"id":8812,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5079:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8811,"name":"uint256","nodeType":"ElementaryTypeName","src":"5079:7:27","typeDescriptions":{}}},"id":8820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5079:53:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":8821,"name":"timeElapsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8794,"src":"5155:11:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"5079:87:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5035:131:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8824,"nodeType":"ExpressionStatement","src":"5035:131:27"},{"expression":{"id":8838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8825,"name":"price1CumulativeLast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8613,"src":"5273:20:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":8833,"name":"_reserve1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8759,"src":"5359:9:27","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint112","typeString":"uint112"}],"expression":{"arguments":[{"id":8830,"name":"_reserve0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8757,"src":"5342:9:27","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint112","typeString":"uint112"}],"expression":{"id":8828,"name":"UQ112x112","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9933,"src":"5325:9:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_UQ112x112_$9933_$","typeString":"type(library UQ112x112)"}},"id":8829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5335:6:27","memberName":"encode","nodeType":"MemberAccess","referencedDeclaration":9913,"src":"5325:16:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint112_$returns$_t_uint224_$","typeString":"function (uint112) pure returns (uint224)"}},"id":8831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5325:27:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":8832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5353:5:27","memberName":"uqdiv","nodeType":"MemberAccess","referencedDeclaration":9932,"src":"5325:33:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint224_$_t_uint112_$returns$_t_uint224_$attached_to$_t_uint224_$","typeString":"function (uint224,uint112) pure returns (uint224)"}},"id":8834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5325:44:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint224","typeString":"uint224"}],"id":8827,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5317:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8826,"name":"uint256","nodeType":"ElementaryTypeName","src":"5317:7:27","typeDescriptions":{}}},"id":8835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5317:53:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":8836,"name":"timeElapsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8794,"src":"5393:11:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"5317:87:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5273:131:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8839,"nodeType":"ExpressionStatement","src":"5273:131:27"}]}}]},{"expression":{"id":8848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8843,"name":"reserve0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8605,"src":"5476:8:27","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8846,"name":"balance0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8753,"src":"5495:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8845,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5487:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":8844,"name":"uint112","nodeType":"ElementaryTypeName","src":"5487:7:27","typeDescriptions":{}}},"id":8847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5487:17:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"5476:28:27","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"id":8849,"nodeType":"ExpressionStatement","src":"5476:28:27"},{"expression":{"id":8855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8850,"name":"reserve1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8607,"src":"5514:8:27","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8853,"name":"balance1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8755,"src":"5533:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8852,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5525:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":8851,"name":"uint112","nodeType":"ElementaryTypeName","src":"5525:7:27","typeDescriptions":{}}},"id":8854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5525:17:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"5514:28:27","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"id":8856,"nodeType":"ExpressionStatement","src":"5514:28:27"},{"expression":{"id":8859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8857,"name":"blockTimestampLast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8609,"src":"5584:18:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8858,"name":"blockTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8782,"src":"5605:14:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"5584:35:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":8860,"nodeType":"ExpressionStatement","src":"5584:35:27"},{"eventCall":{"arguments":[{"id":8862,"name":"reserve0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8605,"src":"5668:8:27","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},{"id":8863,"name":"reserve1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8607,"src":"5678:8:27","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint112","typeString":"uint112"},{"typeIdentifier":"t_uint112","typeString":"uint112"}],"id":8861,"name":"Sync","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9726,"src":"5663:4:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint112_$_t_uint112_$returns$__$","typeString":"function (uint112,uint112)"}},"id":8864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5663:24:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8865,"nodeType":"EmitStatement","src":"5658:29:27"}]},"documentation":{"id":8751,"nodeType":"StructuredDocumentation","src":"3894:226:27","text":" @param balance0 余额0\n @param balance1  余额1\n @param _reserve0 储备0\n @param _reserve1 储备1\n @dev 更新储量，并在每个区块的第一次调用时更新价格累加器"},"id":8867,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"4134:7:27","nodeType":"FunctionDefinition","parameters":{"id":8760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8753,"mutability":"mutable","name":"balance0","nameLocation":"4159:8:27","nodeType":"VariableDeclaration","scope":8867,"src":"4151:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8752,"name":"uint256","nodeType":"ElementaryTypeName","src":"4151:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8755,"mutability":"mutable","name":"balance1","nameLocation":"4185:8:27","nodeType":"VariableDeclaration","scope":8867,"src":"4177:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8754,"name":"uint256","nodeType":"ElementaryTypeName","src":"4177:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8757,"mutability":"mutable","name":"_reserve0","nameLocation":"4211:9:27","nodeType":"VariableDeclaration","scope":8867,"src":"4203:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":8756,"name":"uint112","nodeType":"ElementaryTypeName","src":"4203:7:27","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"},{"constant":false,"id":8759,"mutability":"mutable","name":"_reserve1","nameLocation":"4238:9:27","nodeType":"VariableDeclaration","scope":8867,"src":"4230:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":8758,"name":"uint112","nodeType":"ElementaryTypeName","src":"4230:7:27","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"4141:112:27"},"returnParameters":{"id":8761,"nodeType":"ParameterList","parameters":[],"src":"4262:0:27"},"scope":9609,"src":"4125:1569:27","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":8972,"nodeType":"Block","src":"5983:1387:27","statements":[{"assignments":[8878],"declarations":[{"constant":false,"id":8878,"mutability":"mutable","name":"feeTo","nameLocation":"6047:5:27","nodeType":"VariableDeclaration","scope":8972,"src":"6039:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8877,"name":"address","nodeType":"ElementaryTypeName","src":"6039:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":8884,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":8880,"name":"factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8599,"src":"6067:7:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8879,"name":"IAMMFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9686,"src":"6055:11:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAMMFactory_$9686_$","typeString":"type(contract IAMMFactory)"}},"id":8881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6055:20:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IAMMFactory_$9686","typeString":"contract IAMMFactory"}},"id":8882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6076:5:27","memberName":"feeTo","nodeType":"MemberAccess","referencedDeclaration":9640,"src":"6055:26:27","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":8883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6055:28:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6039:44:27"},{"expression":{"id":8892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8885,"name":"feeOn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8875,"src":"6161:5:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8886,"name":"feeTo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8878,"src":"6169:5:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":8889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6186:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8888,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6178:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8887,"name":"address","nodeType":"ElementaryTypeName","src":"6178:7:27","typeDescriptions":{}}},"id":8890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6178:10:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6169:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6161:27:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8893,"nodeType":"ExpressionStatement","src":"6161:27:27"},{"assignments":[8895],"declarations":[{"constant":false,"id":8895,"mutability":"mutable","name":"_kLast","nameLocation":"6227:6:27","nodeType":"VariableDeclaration","scope":8972,"src":"6219:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8894,"name":"uint256","nodeType":"ElementaryTypeName","src":"6219:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8897,"initialValue":{"id":8896,"name":"kLast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8615,"src":"6236:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6219:22:27"},{"condition":{"id":8898,"name":"feeOn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8875,"src":"6302:5:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8962,"name":"_kLast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8895,"src":"7296:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":8963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7306:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7296:11:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8970,"nodeType":"IfStatement","src":"7292:72:27","trueBody":{"id":8969,"nodeType":"Block","src":"7309:55:27","statements":[{"expression":{"id":8967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8965,"name":"kLast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8615,"src":"7344:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":8966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7352:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7344:9:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8968,"nodeType":"ExpressionStatement","src":"7344:9:27"}]}},"id":8971,"nodeType":"IfStatement","src":"6298:1066:27","trueBody":{"id":8961,"nodeType":"Block","src":"6309:977:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8899,"name":"_kLast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8895,"src":"6362:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":8900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6372:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6362:11:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8960,"nodeType":"IfStatement","src":"6358:875:27","trueBody":{"id":8959,"nodeType":"Block","src":"6375:858:27","statements":[{"assignments":[8903],"declarations":[{"constant":false,"id":8903,"mutability":"mutable","name":"rootK","nameLocation":"6459:5:27","nodeType":"VariableDeclaration","scope":8959,"src":"6451:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8902,"name":"uint256","nodeType":"ElementaryTypeName","src":"6451:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8913,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":8908,"name":"_reserve0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8870,"src":"6485:9:27","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint112","typeString":"uint112"}],"id":8907,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6477:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8906,"name":"uint256","nodeType":"ElementaryTypeName","src":"6477:7:27","typeDescriptions":{}}},"id":8909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6477:18:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":8910,"name":"_reserve1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8872,"src":"6498:9:27","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"6477:30:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8904,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9889,"src":"6467:4:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$9889_$","typeString":"type(library Math)"}},"id":8905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6472:4:27","memberName":"sqrt","nodeType":"MemberAccess","referencedDeclaration":9888,"src":"6467:9:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":8912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6467:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6451:57:27"},{"assignments":[8915],"declarations":[{"constant":false,"id":8915,"mutability":"mutable","name":"rootKLast","nameLocation":"6575:9:27","nodeType":"VariableDeclaration","scope":8959,"src":"6567:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8914,"name":"uint256","nodeType":"ElementaryTypeName","src":"6567:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8920,"initialValue":{"arguments":[{"id":8918,"name":"_kLast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8895,"src":"6597:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8916,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9889,"src":"6587:4:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$9889_$","typeString":"type(library Math)"}},"id":8917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6592:4:27","memberName":"sqrt","nodeType":"MemberAccess","referencedDeclaration":9888,"src":"6587:9:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":8919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6587:17:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6567:37:27"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8921,"name":"rootK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8903,"src":"6666:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":8922,"name":"rootKLast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8915,"src":"6674:9:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6666:17:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8958,"nodeType":"IfStatement","src":"6662:557:27","trueBody":{"id":8957,"nodeType":"Block","src":"6685:534:27","statements":[{"assignments":[8925],"declarations":[{"constant":false,"id":8925,"mutability":"mutable","name":"numerator","nameLocation":"6780:9:27","nodeType":"VariableDeclaration","scope":8957,"src":"6772:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8924,"name":"uint256","nodeType":"ElementaryTypeName","src":"6772:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8933,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":8926,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":615,"src":"6792:11:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":8927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6792:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8928,"name":"rootK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8903,"src":"6809:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":8929,"name":"rootKLast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8915,"src":"6817:9:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6809:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8931,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6808:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6792:35:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6772:55:27"},{"assignments":[8935],"declarations":[{"constant":false,"id":8935,"mutability":"mutable","name":"denominator","nameLocation":"6910:11:27","nodeType":"VariableDeclaration","scope":8957,"src":"6902:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8934,"name":"uint256","nodeType":"ElementaryTypeName","src":"6902:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8941,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8936,"name":"rootK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8903,"src":"6924:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"35","id":8937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6932:1:27","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"6924:9:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":8939,"name":"rootKLast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8915,"src":"6936:9:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6924:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6902:43:27"},{"assignments":[8943],"declarations":[{"constant":false,"id":8943,"mutability":"mutable","name":"liquidity","nameLocation":"7025:9:27","nodeType":"VariableDeclaration","scope":8957,"src":"7017:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8942,"name":"uint256","nodeType":"ElementaryTypeName","src":"7017:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8947,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8944,"name":"numerator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8925,"src":"7037:9:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":8945,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8935,"src":"7049:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7037:23:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7017:43:27"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8948,"name":"liquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8943,"src":"7162:9:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7174:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7162:13:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8956,"nodeType":"IfStatement","src":"7158:42:27","trueBody":{"expression":{"arguments":[{"id":8952,"name":"feeTo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8878,"src":"7183:5:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8953,"name":"liquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8943,"src":"7190:9:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8951,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":911,"src":"7177:5:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":8954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7177:23:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8955,"nodeType":"ExpressionStatement","src":"7177:23:27"}}]}}]}}]}}]},"documentation":{"id":8868,"nodeType":"StructuredDocumentation","src":"5700:171:27","text":" @param _reserve0 储备0\n @param _reserve1 储备1\n @return feeOn\n @dev 如果收费，铸造流动性相当于1/6的增长sqrt（k）"},"id":8973,"implemented":true,"kind":"function","modifiers":[],"name":"_mintFee","nameLocation":"5885:8:27","nodeType":"FunctionDefinition","parameters":{"id":8873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8870,"mutability":"mutable","name":"_reserve0","nameLocation":"5911:9:27","nodeType":"VariableDeclaration","scope":8973,"src":"5903:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":8869,"name":"uint112","nodeType":"ElementaryTypeName","src":"5903:7:27","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"},{"constant":false,"id":8872,"mutability":"mutable","name":"_reserve1","nameLocation":"5938:9:27","nodeType":"VariableDeclaration","scope":8973,"src":"5930:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":8871,"name":"uint112","nodeType":"ElementaryTypeName","src":"5930:7:27","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"5893:60:27"},"returnParameters":{"id":8876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8875,"mutability":"mutable","name":"feeOn","nameLocation":"5976:5:27","nodeType":"VariableDeclaration","scope":8973,"src":"5971:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8874,"name":"bool","nodeType":"ElementaryTypeName","src":"5971:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5970:12:27"},"scope":9609,"src":"5876:1494:27","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"baseFunctions":[9777],"body":{"id":9120,"nodeType":"Block","src":"7670:2053:27","statements":[{"assignments":[8986,8988,null],"declarations":[{"constant":false,"id":8986,"mutability":"mutable","name":"_reserve0","nameLocation":"7731:9:27","nodeType":"VariableDeclaration","scope":9120,"src":"7723:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":8985,"name":"uint112","nodeType":"ElementaryTypeName","src":"7723:7:27","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"},{"constant":false,"id":8988,"mutability":"mutable","name":"_reserve1","nameLocation":"7750:9:27","nodeType":"VariableDeclaration","scope":9120,"src":"7742:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":8987,"name":"uint112","nodeType":"ElementaryTypeName","src":"7742:7:27","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"},null],"id":8991,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":8989,"name":"getReserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8706,"src":"7765:11:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint112_$_t_uint112_$_t_uint32_$","typeString":"function () view returns (uint112,uint112,uint32)"}},"id":8990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7765:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$","typeString":"tuple(uint112,uint112,uint32)"}},"nodeType":"VariableDeclarationStatement","src":"7722:56:27"},{"assignments":[8993],"declarations":[{"constant":false,"id":8993,"mutability":"mutable","name":"balance0","nameLocation":"7867:8:27","nodeType":"VariableDeclaration","scope":9120,"src":"7859:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8992,"name":"uint256","nodeType":"ElementaryTypeName","src":"7859:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9003,"initialValue":{"arguments":[{"arguments":[{"id":9000,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"7911:4:27","typeDescriptions":{"typeIdentifier":"t_contract$_AMMTokenPair_$9609","typeString":"contract AMMTokenPair"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AMMTokenPair_$9609","typeString":"contract AMMTokenPair"}],"id":8999,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7903:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8998,"name":"address","nodeType":"ElementaryTypeName","src":"7903:7:27","typeDescriptions":{}}},"id":9001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7903:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":8995,"name":"token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8601,"src":"7885:6:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8994,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2368,"src":"7878:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$2368_$","typeString":"type(contract IERC20)"}},"id":8996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7878:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2368","typeString":"contract IERC20"}},"id":8997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7893:9:27","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":2325,"src":"7878:24:27","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":9002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7878:39:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7859:58:27"},{"assignments":[9005],"declarations":[{"constant":false,"id":9005,"mutability":"mutable","name":"balance1","nameLocation":"7991:8:27","nodeType":"VariableDeclaration","scope":9120,"src":"7983:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9004,"name":"uint256","nodeType":"ElementaryTypeName","src":"7983:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9015,"initialValue":{"arguments":[{"arguments":[{"id":9012,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"8035:4:27","typeDescriptions":{"typeIdentifier":"t_contract$_AMMTokenPair_$9609","typeString":"contract AMMTokenPair"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AMMTokenPair_$9609","typeString":"contract AMMTokenPair"}],"id":9011,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8027:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9010,"name":"address","nodeType":"ElementaryTypeName","src":"8027:7:27","typeDescriptions":{}}},"id":9013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8027:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":9007,"name":"token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8603,"src":"8009:6:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9006,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2368,"src":"8002:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$2368_$","typeString":"type(contract IERC20)"}},"id":9008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8002:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2368","typeString":"contract IERC20"}},"id":9009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8017:9:27","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":2325,"src":"8002:24:27","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":9014,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8002:39:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7983:58:27"},{"assignments":[9017],"declarations":[{"constant":false,"id":9017,"mutability":"mutable","name":"amount0","nameLocation":"8097:7:27","nodeType":"VariableDeclaration","scope":9120,"src":"8089:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9016,"name":"uint256","nodeType":"ElementaryTypeName","src":"8089:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9021,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9018,"name":"balance0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8993,"src":"8107:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":9019,"name":"_reserve0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8986,"src":"8118:9:27","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"8107:20:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8089:38:27"},{"assignments":[9023],"declarations":[{"constant":false,"id":9023,"mutability":"mutable","name":"amount1","nameLocation":"8183:7:27","nodeType":"VariableDeclaration","scope":9120,"src":"8175:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9022,"name":"uint256","nodeType":"ElementaryTypeName","src":"8175:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9027,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9024,"name":"balance1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9005,"src":"8193:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":9025,"name":"_reserve1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8988,"src":"8204:9:27","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"8193:20:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8175:38:27"},{"assignments":[9029],"declarations":[{"constant":false,"id":9029,"mutability":"mutable","name":"feeOn","nameLocation":"8261:5:27","nodeType":"VariableDeclaration","scope":9120,"src":"8256:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9028,"name":"bool","nodeType":"ElementaryTypeName","src":"8256:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":9034,"initialValue":{"arguments":[{"id":9031,"name":"_reserve0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8986,"src":"8278:9:27","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},{"id":9032,"name":"_reserve1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8988,"src":"8289:9:27","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint112","typeString":"uint112"},{"typeIdentifier":"t_uint112","typeString":"uint112"}],"id":9030,"name":"_mintFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8973,"src":"8269:8:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint112_$_t_uint112_$returns$_t_bool_$","typeString":"function (uint112,uint112) returns (bool)"}},"id":9033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8269:30:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"8256:43:27"},{"assignments":[9036],"declarations":[{"constant":false,"id":9036,"mutability":"mutable","name":"_totalSupply","nameLocation":"8412:12:27","nodeType":"VariableDeclaration","scope":9120,"src":"8404:20:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9035,"name":"uint256","nodeType":"ElementaryTypeName","src":"8404:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9039,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":9037,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":615,"src":"8427:11:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":9038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8427:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8404:36:27"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9040,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9036,"src":"8568:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":9041,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8584:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8568:17:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":9081,"nodeType":"Block","src":"8934:281:27","statements":[{"expression":{"id":9079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9063,"name":"liquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8983,"src":"9062:9:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9066,"name":"amount0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9017,"src":"9101:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":9067,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9036,"src":"9111:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9101:22:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":9069,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9100:24:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":9070,"name":"_reserve0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8986,"src":"9127:9:27","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"9100:36:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9072,"name":"amount1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9023,"src":"9155:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":9073,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9036,"src":"9165:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9155:22:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":9075,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9154:24:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":9076,"name":"_reserve1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8988,"src":"9181:9:27","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"9154:36:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":9064,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9889,"src":"9074:4:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$9889_$","typeString":"type(library Math)"}},"id":9065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9079:3:27","memberName":"min","nodeType":"MemberAccess","referencedDeclaration":9834,"src":"9074:8:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":9078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9074:130:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9062:142:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9080,"nodeType":"ExpressionStatement","src":"9062:142:27"}]},"id":9082,"nodeType":"IfStatement","src":"8564:651:27","trueBody":{"id":9062,"nodeType":"Block","src":"8587:341:27","statements":[{"expression":{"id":9052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9043,"name":"liquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8983,"src":"8681:9:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9046,"name":"amount0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9017,"src":"8703:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":9047,"name":"amount1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9023,"src":"8713:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8703:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":9044,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9889,"src":"8693:4:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$9889_$","typeString":"type(library Math)"}},"id":9045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8698:4:27","memberName":"sqrt","nodeType":"MemberAccess","referencedDeclaration":9888,"src":"8693:9:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":9049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8693:28:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":9050,"name":"MINIMUM_LIQUIDITY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8586,"src":"8724:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8693:48:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8681:60:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9053,"nodeType":"ExpressionStatement","src":"8681:60:27"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":9057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8840:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":9056,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8832:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9055,"name":"address","nodeType":"ElementaryTypeName","src":"8832:7:27","typeDescriptions":{}}},"id":9058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8832:10:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9059,"name":"MINIMUM_LIQUIDITY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8586,"src":"8844:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9054,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":911,"src":"8826:5:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":9060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8826:36:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9061,"nodeType":"ExpressionStatement","src":"8826:36:27"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9084,"name":"liquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8983,"src":"9262:9:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":9085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9274:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9262:13:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"414d4d546f6b656e506169723a20494e53554646494349454e545f4c49515549444954595f4d494e544544","id":9087,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9277:45:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_c6e7155d09882d2a505e3280d3e35153d7f6617a31df3db564ad2575af4f9711","typeString":"literal_string \"AMMTokenPair: INSUFFICIENT_LIQUIDITY_MINTED\""},"value":"AMMTokenPair: INSUFFICIENT_LIQUIDITY_MINTED"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c6e7155d09882d2a505e3280d3e35153d7f6617a31df3db564ad2575af4f9711","typeString":"literal_string \"AMMTokenPair: INSUFFICIENT_LIQUIDITY_MINTED\""}],"id":9083,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9254:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9254:69:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9089,"nodeType":"ExpressionStatement","src":"9254:69:27"},{"expression":{"arguments":[{"id":9091,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8976,"src":"9376:2:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9092,"name":"liquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8983,"src":"9380:9:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9090,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":911,"src":"9370:5:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":9093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9370:20:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9094,"nodeType":"ExpressionStatement","src":"9370:20:27"},{"expression":{"arguments":[{"id":9096,"name":"balance0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8993,"src":"9435:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9097,"name":"balance1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9005,"src":"9445:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9098,"name":"_reserve0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8986,"src":"9455:9:27","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},{"id":9099,"name":"_reserve1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8988,"src":"9466:9:27","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint112","typeString":"uint112"},{"typeIdentifier":"t_uint112","typeString":"uint112"}],"id":9095,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[8867,878],"referencedDeclaration":8867,"src":"9427:7:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint112_$_t_uint112_$returns$__$","typeString":"function (uint256,uint256,uint112,uint112)"}},"id":9100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9427:49:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9101,"nodeType":"ExpressionStatement","src":"9427:49:27"},{"condition":{"id":9102,"name":"feeOn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9029,"src":"9555:5:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9112,"nodeType":"IfStatement","src":"9551:47:27","trueBody":{"expression":{"id":9110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9103,"name":"kLast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8615,"src":"9562:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":9106,"name":"reserve0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8605,"src":"9578:8:27","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint112","typeString":"uint112"}],"id":9105,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9570:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":9104,"name":"uint256","nodeType":"ElementaryTypeName","src":"9570:7:27","typeDescriptions":{}}},"id":9107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9570:17:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":9108,"name":"reserve1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8607,"src":"9590:8:27","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"9570:28:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9562:36:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9111,"nodeType":"ExpressionStatement","src":"9562:36:27"}},{"eventCall":{"arguments":[{"expression":{"id":9114,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9687:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9691:6:27","memberName":"sender","nodeType":"MemberAccess","src":"9687:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9116,"name":"amount0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9017,"src":"9699:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9117,"name":"amount1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9023,"src":"9708:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9113,"name":"Mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9696,"src":"9682:4:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":9118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9682:34:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9119,"nodeType":"EmitStatement","src":"9677:39:27"}]},"documentation":{"id":8974,"nodeType":"StructuredDocumentation","src":"7376:185:27","text":" @param to to地址\n @return liquidity 流动性数量\n @dev 铸造方法\n @notice 应该从执行重要安全检查的合同中调用此低级功能"},"functionSelector":"6a627842","id":9121,"implemented":true,"kind":"function","modifiers":[{"id":8979,"kind":"modifierInvocation","modifierName":{"id":8978,"name":"nonReentrant","nameLocations":["7615:12:27"],"nodeType":"IdentifierPath","referencedDeclaration":1634,"src":"7615:12:27"},"nodeType":"ModifierInvocation","src":"7615:12:27"},{"id":8981,"kind":"modifierInvocation","modifierName":{"id":8980,"name":"whenNotPaused","nameLocations":["7628:13:27"],"nodeType":"IdentifierPath","referencedDeclaration":1455,"src":"7628:13:27"},"nodeType":"ModifierInvocation","src":"7628:13:27"}],"name":"mint","nameLocation":"7575:4:27","nodeType":"FunctionDefinition","parameters":{"id":8977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8976,"mutability":"mutable","name":"to","nameLocation":"7597:2:27","nodeType":"VariableDeclaration","scope":9121,"src":"7589:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8975,"name":"address","nodeType":"ElementaryTypeName","src":"7589:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7579:26:27"},"returnParameters":{"id":8984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8983,"mutability":"mutable","name":"liquidity","nameLocation":"7659:9:27","nodeType":"VariableDeclaration","scope":9121,"src":"7651:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8982,"name":"uint256","nodeType":"ElementaryTypeName","src":"7651:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7650:19:27"},"scope":9609,"src":"7566:2157:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[9786],"body":{"id":9294,"nodeType":"Block","src":"10079:2312:27","statements":[{"assignments":[9136,9138,null],"declarations":[{"constant":false,"id":9136,"mutability":"mutable","name":"_reserve0","nameLocation":"10140:9:27","nodeType":"VariableDeclaration","scope":9294,"src":"10132:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":9135,"name":"uint112","nodeType":"ElementaryTypeName","src":"10132:7:27","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"},{"constant":false,"id":9138,"mutability":"mutable","name":"_reserve1","nameLocation":"10159:9:27","nodeType":"VariableDeclaration","scope":9294,"src":"10151:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":9137,"name":"uint112","nodeType":"ElementaryTypeName","src":"10151:7:27","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"},null],"id":9141,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":9139,"name":"getReserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8706,"src":"10174:11:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint112_$_t_uint112_$_t_uint32_$","typeString":"function () view returns (uint112,uint112,uint32)"}},"id":9140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10174:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$","typeString":"tuple(uint112,uint112,uint32)"}},"nodeType":"VariableDeclarationStatement","src":"10131:56:27"},{"assignments":[9143],"declarations":[{"constant":false,"id":9143,"mutability":"mutable","name":"_token0","nameLocation":"10243:7:27","nodeType":"VariableDeclaration","scope":9294,"src":"10235:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9142,"name":"address","nodeType":"ElementaryTypeName","src":"10235:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":9145,"initialValue":{"id":9144,"name":"token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8601,"src":"10253:6:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"10235:24:27"},{"assignments":[9147],"declarations":[{"constant":false,"id":9147,"mutability":"mutable","name":"_token1","nameLocation":"10292:7:27","nodeType":"VariableDeclaration","scope":9294,"src":"10284:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9146,"name":"address","nodeType":"ElementaryTypeName","src":"10284:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":9149,"initialValue":{"id":9148,"name":"token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8603,"src":"10302:6:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"10284:24:27"},{"assignments":[9151],"declarations":[{"constant":false,"id":9151,"mutability":"mutable","name":"balance0","nameLocation":"10397:8:27","nodeType":"VariableDeclaration","scope":9294,"src":"10389:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9150,"name":"uint256","nodeType":"ElementaryTypeName","src":"10389:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9161,"initialValue":{"arguments":[{"arguments":[{"id":9158,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"10442:4:27","typeDescriptions":{"typeIdentifier":"t_contract$_AMMTokenPair_$9609","typeString":"contract AMMTokenPair"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AMMTokenPair_$9609","typeString":"contract AMMTokenPair"}],"id":9157,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10434:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9156,"name":"address","nodeType":"ElementaryTypeName","src":"10434:7:27","typeDescriptions":{}}},"id":9159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10434:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":9153,"name":"_token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9143,"src":"10415:7:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9152,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2368,"src":"10408:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$2368_$","typeString":"type(contract IERC20)"}},"id":9154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10408:15:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2368","typeString":"contract IERC20"}},"id":9155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10424:9:27","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":2325,"src":"10408:25:27","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":9160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10408:40:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10389:59:27"},{"assignments":[9163],"declarations":[{"constant":false,"id":9163,"mutability":"mutable","name":"balance1","nameLocation":"10522:8:27","nodeType":"VariableDeclaration","scope":9294,"src":"10514:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9162,"name":"uint256","nodeType":"ElementaryTypeName","src":"10514:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9173,"initialValue":{"arguments":[{"arguments":[{"id":9170,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"10567:4:27","typeDescriptions":{"typeIdentifier":"t_contract$_AMMTokenPair_$9609","typeString":"contract AMMTokenPair"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AMMTokenPair_$9609","typeString":"contract AMMTokenPair"}],"id":9169,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10559:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9168,"name":"address","nodeType":"ElementaryTypeName","src":"10559:7:27","typeDescriptions":{}}},"id":9171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10559:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":9165,"name":"_token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9147,"src":"10540:7:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9164,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2368,"src":"10533:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$2368_$","typeString":"type(contract IERC20)"}},"id":9166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10533:15:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2368","typeString":"contract IERC20"}},"id":9167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10549:9:27","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":2325,"src":"10533:25:27","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":9172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10533:40:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10514:59:27"},{"assignments":[9175],"declarations":[{"constant":false,"id":9175,"mutability":"mutable","name":"liquidity","nameLocation":"10680:9:27","nodeType":"VariableDeclaration","scope":9294,"src":"10672:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9174,"name":"uint256","nodeType":"ElementaryTypeName","src":"10672:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9182,"initialValue":{"arguments":[{"arguments":[{"id":9179,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"10710:4:27","typeDescriptions":{"typeIdentifier":"t_contract$_AMMTokenPair_$9609","typeString":"contract AMMTokenPair"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AMMTokenPair_$9609","typeString":"contract AMMTokenPair"}],"id":9178,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10702:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9177,"name":"address","nodeType":"ElementaryTypeName","src":"10702:7:27","typeDescriptions":{}}},"id":9180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10702:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9176,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":635,"src":"10692:9:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":9181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10692:24:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10672:44:27"},{"assignments":[9184],"declarations":[{"constant":false,"id":9184,"mutability":"mutable","name":"feeOn","nameLocation":"10764:5:27","nodeType":"VariableDeclaration","scope":9294,"src":"10759:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9183,"name":"bool","nodeType":"ElementaryTypeName","src":"10759:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":9189,"initialValue":{"arguments":[{"id":9186,"name":"_reserve0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9136,"src":"10781:9:27","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},{"id":9187,"name":"_reserve1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9138,"src":"10792:9:27","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint112","typeString":"uint112"},{"typeIdentifier":"t_uint112","typeString":"uint112"}],"id":9185,"name":"_mintFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8973,"src":"10772:8:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint112_$_t_uint112_$returns$_t_bool_$","typeString":"function (uint112,uint112) returns (bool)"}},"id":9188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10772:30:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"10759:43:27"},{"assignments":[9191],"declarations":[{"constant":false,"id":9191,"mutability":"mutable","name":"_totalSupply","nameLocation":"10915:12:27","nodeType":"VariableDeclaration","scope":9294,"src":"10907:20:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9190,"name":"uint256","nodeType":"ElementaryTypeName","src":"10907:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9194,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":9192,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":615,"src":"10930:11:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":9193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10930:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10907:36:27"},{"expression":{"id":9202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9195,"name":"amount0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9131,"src":"11127:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9196,"name":"liquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9175,"src":"11138:9:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":9197,"name":"balance0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9151,"src":"11150:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11138:20:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":9199,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11137:22:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":9200,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9191,"src":"11162:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11137:37:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11127:47:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9203,"nodeType":"ExpressionStatement","src":"11127:47:27"},{"expression":{"id":9211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9204,"name":"amount1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9133,"src":"11328:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9205,"name":"liquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9175,"src":"11339:9:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":9206,"name":"balance1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9163,"src":"11351:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11339:20:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":9208,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11338:22:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":9209,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9191,"src":"11363:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11338:37:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11328:47:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9212,"nodeType":"ExpressionStatement","src":"11328:47:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":9220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9214,"name":"amount0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9131,"src":"11498:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":9215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11508:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11498:11:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9217,"name":"amount1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9133,"src":"11513:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":9218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11523:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11513:11:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11498:26:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"414d4d546f6b656e506169723a20494e53554646494349454e545f4c49515549444954595f4255524e4544","id":9221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11538:45:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_a515a47d36e8ce1916180712db2bb215f3b26f9f5bbc5abacad92a485246e83d","typeString":"literal_string \"AMMTokenPair: INSUFFICIENT_LIQUIDITY_BURNED\""},"value":"AMMTokenPair: INSUFFICIENT_LIQUIDITY_BURNED"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a515a47d36e8ce1916180712db2bb215f3b26f9f5bbc5abacad92a485246e83d","typeString":"literal_string \"AMMTokenPair: INSUFFICIENT_LIQUIDITY_BURNED\""}],"id":9213,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11477:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11477:116:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9223,"nodeType":"ExpressionStatement","src":"11477:116:27"},{"expression":{"arguments":[{"arguments":[{"id":9227,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"11667:4:27","typeDescriptions":{"typeIdentifier":"t_contract$_AMMTokenPair_$9609","typeString":"contract AMMTokenPair"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AMMTokenPair_$9609","typeString":"contract AMMTokenPair"}],"id":9226,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11659:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9225,"name":"address","nodeType":"ElementaryTypeName","src":"11659:7:27","typeDescriptions":{}}},"id":9228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11659:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9229,"name":"liquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9175,"src":"11674:9:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9224,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":944,"src":"11653:5:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":9230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11653:31:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9231,"nodeType":"ExpressionStatement","src":"11653:31:27"},{"expression":{"arguments":[{"id":9233,"name":"_token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9143,"src":"11762:7:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9234,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9124,"src":"11771:2:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9235,"name":"amount0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9131,"src":"11775:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9232,"name":"_safeTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8750,"src":"11748:13:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":9236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11748:35:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9237,"nodeType":"ExpressionStatement","src":"11748:35:27"},{"expression":{"arguments":[{"id":9239,"name":"_token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9147,"src":"11861:7:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9240,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9124,"src":"11870:2:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9241,"name":"amount1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9133,"src":"11874:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9238,"name":"_safeTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8750,"src":"11847:13:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":9242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11847:35:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9243,"nodeType":"ExpressionStatement","src":"11847:35:27"},{"expression":{"id":9254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9244,"name":"balance0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9151,"src":"11917:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":9251,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"11962:4:27","typeDescriptions":{"typeIdentifier":"t_contract$_AMMTokenPair_$9609","typeString":"contract AMMTokenPair"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AMMTokenPair_$9609","typeString":"contract AMMTokenPair"}],"id":9250,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11954:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9249,"name":"address","nodeType":"ElementaryTypeName","src":"11954:7:27","typeDescriptions":{}}},"id":9252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11954:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":9246,"name":"_token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9143,"src":"11935:7:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9245,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2368,"src":"11928:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$2368_$","typeString":"type(contract IERC20)"}},"id":9247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11928:15:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2368","typeString":"contract IERC20"}},"id":9248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11944:9:27","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":2325,"src":"11928:25:27","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":9253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11928:40:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11917:51:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9255,"nodeType":"ExpressionStatement","src":"11917:51:27"},{"expression":{"id":9266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9256,"name":"balance1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9163,"src":"12003:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":9263,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"12048:4:27","typeDescriptions":{"typeIdentifier":"t_contract$_AMMTokenPair_$9609","typeString":"contract AMMTokenPair"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AMMTokenPair_$9609","typeString":"contract AMMTokenPair"}],"id":9262,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12040:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9261,"name":"address","nodeType":"ElementaryTypeName","src":"12040:7:27","typeDescriptions":{}}},"id":9264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12040:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":9258,"name":"_token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9147,"src":"12021:7:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9257,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2368,"src":"12014:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$2368_$","typeString":"type(contract IERC20)"}},"id":9259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12014:15:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2368","typeString":"contract IERC20"}},"id":9260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12030:9:27","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":2325,"src":"12014:25:27","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":9265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12014:40:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12003:51:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9267,"nodeType":"ExpressionStatement","src":"12003:51:27"},{"expression":{"arguments":[{"id":9269,"name":"balance0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9151,"src":"12099:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9270,"name":"balance1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9163,"src":"12109:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9271,"name":"_reserve0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9136,"src":"12119:9:27","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},{"id":9272,"name":"_reserve1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9138,"src":"12130:9:27","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint112","typeString":"uint112"},{"typeIdentifier":"t_uint112","typeString":"uint112"}],"id":9268,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[8867,878],"referencedDeclaration":8867,"src":"12091:7:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint112_$_t_uint112_$returns$__$","typeString":"function (uint256,uint256,uint112,uint112)"}},"id":9273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12091:49:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9274,"nodeType":"ExpressionStatement","src":"12091:49:27"},{"condition":{"id":9275,"name":"feeOn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9184,"src":"12219:5:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9285,"nodeType":"IfStatement","src":"12215:47:27","trueBody":{"expression":{"id":9283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9276,"name":"kLast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8615,"src":"12226:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":9279,"name":"reserve0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8605,"src":"12242:8:27","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint112","typeString":"uint112"}],"id":9278,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12234:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":9277,"name":"uint256","nodeType":"ElementaryTypeName","src":"12234:7:27","typeDescriptions":{}}},"id":9280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12234:17:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":9281,"name":"reserve1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8607,"src":"12254:8:27","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"12234:28:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12226:36:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9284,"nodeType":"ExpressionStatement","src":"12226:36:27"}},{"eventCall":{"arguments":[{"expression":{"id":9287,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12351:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12355:6:27","memberName":"sender","nodeType":"MemberAccess","src":"12351:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9289,"name":"amount0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9131,"src":"12363:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9290,"name":"amount1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9133,"src":"12372:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9291,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9124,"src":"12381:2:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":9286,"name":"Burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9706,"src":"12346:4:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,uint256,address)"}},"id":9292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12346:38:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9293,"nodeType":"EmitStatement","src":"12341:43:27"}]},"documentation":{"id":9122,"nodeType":"StructuredDocumentation","src":"9729:190:27","text":" @param to to地址\n @return amount0\n @return amount1\n @dev 销毁方法\n @notice 应该从执行重要安全检查的合同中调用此低级功能"},"functionSelector":"89afcb44","id":9295,"implemented":true,"kind":"function","modifiers":[{"id":9127,"kind":"modifierInvocation","modifierName":{"id":9126,"name":"nonReentrant","nameLocations":["9989:12:27"],"nodeType":"IdentifierPath","referencedDeclaration":1634,"src":"9989:12:27"},"nodeType":"ModifierInvocation","src":"9989:12:27"},{"id":9129,"kind":"modifierInvocation","modifierName":{"id":9128,"name":"whenNotPaused","nameLocations":["10010:13:27"],"nodeType":"IdentifierPath","referencedDeclaration":1455,"src":"10010:13:27"},"nodeType":"ModifierInvocation","src":"10010:13:27"}],"name":"burn","nameLocation":"9933:4:27","nodeType":"FunctionDefinition","parameters":{"id":9125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9124,"mutability":"mutable","name":"to","nameLocation":"9955:2:27","nodeType":"VariableDeclaration","scope":9295,"src":"9947:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9123,"name":"address","nodeType":"ElementaryTypeName","src":"9947:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9937:26:27"},"returnParameters":{"id":9134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9131,"mutability":"mutable","name":"amount0","nameLocation":"10049:7:27","nodeType":"VariableDeclaration","scope":9295,"src":"10041:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9130,"name":"uint256","nodeType":"ElementaryTypeName","src":"10041:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9133,"mutability":"mutable","name":"amount1","nameLocation":"10066:7:27","nodeType":"VariableDeclaration","scope":9295,"src":"10058:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9132,"name":"uint256","nodeType":"ElementaryTypeName","src":"10058:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10040:34:27"},"scope":9609,"src":"9924:2467:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[9797],"body":{"id":9528,"nodeType":"Block","src":"12830:3415:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":9318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9312,"name":"amount0Out","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9298,"src":"12911:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":9313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12924:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12911:14:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9315,"name":"amount1Out","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9300,"src":"12929:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":9316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12942:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12929:14:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12911:32:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"414d4d546f6b656e506169723a20494e53554646494349454e545f4f55545055545f414d4f554e54","id":9319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12957:42:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_f94f46c9429eac96c46ccea015e784a3da8521300d46b301978175dfe7de6334","typeString":"literal_string \"AMMTokenPair: INSUFFICIENT_OUTPUT_AMOUNT\""},"value":"AMMTokenPair: INSUFFICIENT_OUTPUT_AMOUNT"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f94f46c9429eac96c46ccea015e784a3da8521300d46b301978175dfe7de6334","typeString":"literal_string \"AMMTokenPair: INSUFFICIENT_OUTPUT_AMOUNT\""}],"id":9311,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12890:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12890:119:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9321,"nodeType":"ExpressionStatement","src":"12890:119:27"},{"assignments":[9323,9325,null],"declarations":[{"constant":false,"id":9323,"mutability":"mutable","name":"_reserve0","nameLocation":"13070:9:27","nodeType":"VariableDeclaration","scope":9528,"src":"13062:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":9322,"name":"uint112","nodeType":"ElementaryTypeName","src":"13062:7:27","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"},{"constant":false,"id":9325,"mutability":"mutable","name":"_reserve1","nameLocation":"13089:9:27","nodeType":"VariableDeclaration","scope":9528,"src":"13081:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":9324,"name":"uint112","nodeType":"ElementaryTypeName","src":"13081:7:27","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"},null],"id":9328,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":9326,"name":"getReserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8706,"src":"13104:11:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint112_$_t_uint112_$_t_uint32_$","typeString":"function () view returns (uint112,uint112,uint32)"}},"id":9327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13104:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$","typeString":"tuple(uint112,uint112,uint32)"}},"nodeType":"VariableDeclarationStatement","src":"13061:56:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":9336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9330,"name":"amount0Out","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9298,"src":"13214:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":9331,"name":"_reserve0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9323,"src":"13227:9:27","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"13214:22:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9333,"name":"amount1Out","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9300,"src":"13240:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":9334,"name":"_reserve1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9325,"src":"13253:9:27","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"13240:22:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13214:48:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"414d4d546f6b656e506169723a20494e53554646494349454e545f4c4951554944495459","id":9337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13276:38:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_2aa0996dc4e711e4701a240beb1f5a5b637854429f2f607f5d603020fcb9805a","typeString":"literal_string \"AMMTokenPair: INSUFFICIENT_LIQUIDITY\""},"value":"AMMTokenPair: INSUFFICIENT_LIQUIDITY"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2aa0996dc4e711e4701a240beb1f5a5b637854429f2f607f5d603020fcb9805a","typeString":"literal_string \"AMMTokenPair: INSUFFICIENT_LIQUIDITY\""}],"id":9329,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13193:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13193:131:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9339,"nodeType":"ExpressionStatement","src":"13193:131:27"},{"assignments":[9341],"declarations":[{"constant":false,"id":9341,"mutability":"mutable","name":"balance0","nameLocation":"13369:8:27","nodeType":"VariableDeclaration","scope":9528,"src":"13361:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9340,"name":"uint256","nodeType":"ElementaryTypeName","src":"13361:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9342,"nodeType":"VariableDeclarationStatement","src":"13361:16:27"},{"assignments":[9344],"declarations":[{"constant":false,"id":9344,"mutability":"mutable","name":"balance1","nameLocation":"13395:8:27","nodeType":"VariableDeclaration","scope":9528,"src":"13387:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9343,"name":"uint256","nodeType":"ElementaryTypeName","src":"13387:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9345,"nodeType":"VariableDeclarationStatement","src":"13387:16:27"},{"id":9425,"nodeType":"Block","src":"13413:1233:27","statements":[{"assignments":[9347],"declarations":[{"constant":false,"id":9347,"mutability":"mutable","name":"_token0","nameLocation":"13576:7:27","nodeType":"VariableDeclaration","scope":9425,"src":"13568:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9346,"name":"address","nodeType":"ElementaryTypeName","src":"13568:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":9349,"initialValue":{"id":9348,"name":"token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8601,"src":"13586:6:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"13568:24:27"},{"assignments":[9351],"declarations":[{"constant":false,"id":9351,"mutability":"mutable","name":"_token1","nameLocation":"13614:7:27","nodeType":"VariableDeclaration","scope":9425,"src":"13606:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9350,"name":"address","nodeType":"ElementaryTypeName","src":"13606:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":9353,"initialValue":{"id":9352,"name":"token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8603,"src":"13624:6:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"13606:24:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":9361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":9357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9355,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9302,"src":"13708:2:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9356,"name":"_token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9347,"src":"13714:7:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13708:13:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":9360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9358,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9302,"src":"13725:2:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9359,"name":"_token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9351,"src":"13731:7:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13725:13:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13708:30:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"414d4d546f6b656e506169723a20494e56414c49445f544f","id":9362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13740:26:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_8c251894291eaf3935c823e37dce82facdc9f06e488926ade0a0a4383c376ec3","typeString":"literal_string \"AMMTokenPair: INVALID_TO\""},"value":"AMMTokenPair: INVALID_TO"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8c251894291eaf3935c823e37dce82facdc9f06e488926ade0a0a4383c376ec3","typeString":"literal_string \"AMMTokenPair: INVALID_TO\""}],"id":9354,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13700:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13700:67:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9364,"nodeType":"ExpressionStatement","src":"13700:67:27"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9365,"name":"amount0Out","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9298,"src":"13873:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":9366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13886:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13873:14:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9374,"nodeType":"IfStatement","src":"13869:58:27","trueBody":{"expression":{"arguments":[{"id":9369,"name":"_token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9347,"src":"13903:7:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9370,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9302,"src":"13912:2:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9371,"name":"amount0Out","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9298,"src":"13916:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9368,"name":"_safeTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8750,"src":"13889:13:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":9372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13889:38:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9373,"nodeType":"ExpressionStatement","src":"13889:38:27"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9375,"name":"amount1Out","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9300,"src":"14067:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":9376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14080:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14067:14:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9384,"nodeType":"IfStatement","src":"14063:58:27","trueBody":{"expression":{"arguments":[{"id":9379,"name":"_token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9351,"src":"14097:7:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9380,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9302,"src":"14106:2:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9381,"name":"amount1Out","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9300,"src":"14110:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9378,"name":"_safeTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8750,"src":"14083:13:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":9382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14083:38:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9383,"nodeType":"ExpressionStatement","src":"14083:38:27"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9385,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9304,"src":"14238:4:27","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":9386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14243:6:27","memberName":"length","nodeType":"MemberAccess","src":"14238:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":9387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14252:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14238:15:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9400,"nodeType":"IfStatement","src":"14234:199:27","trueBody":{"expression":{"arguments":[{"expression":{"id":9393,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"14315:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14319:6:27","memberName":"sender","nodeType":"MemberAccess","src":"14315:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9395,"name":"amount0Out","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9298,"src":"14347:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9396,"name":"amount1Out","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9300,"src":"14379:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9397,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9304,"src":"14411:4:27","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"arguments":[{"id":9390,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9302,"src":"14282:2:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9389,"name":"IAMMCallee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9623,"src":"14271:10:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAMMCallee_$9623_$","typeString":"type(contract IAMMCallee)"}},"id":9391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14271:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IAMMCallee_$9623","typeString":"contract IAMMCallee"}},"id":9392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14286:7:27","memberName":"ammCall","nodeType":"MemberAccess","referencedDeclaration":9622,"src":"14271:22:27","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,uint256,bytes memory) external"}},"id":9398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14271:162:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9399,"nodeType":"ExpressionStatement","src":"14271:162:27"}},{"expression":{"id":9411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9401,"name":"balance0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9341,"src":"14519:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":9408,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"14564:4:27","typeDescriptions":{"typeIdentifier":"t_contract$_AMMTokenPair_$9609","typeString":"contract AMMTokenPair"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AMMTokenPair_$9609","typeString":"contract AMMTokenPair"}],"id":9407,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14556:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9406,"name":"address","nodeType":"ElementaryTypeName","src":"14556:7:27","typeDescriptions":{}}},"id":9409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14556:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":9403,"name":"_token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9347,"src":"14537:7:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9402,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2368,"src":"14530:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$2368_$","typeString":"type(contract IERC20)"}},"id":9404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14530:15:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2368","typeString":"contract IERC20"}},"id":9405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14546:9:27","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":2325,"src":"14530:25:27","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":9410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14530:40:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14519:51:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9412,"nodeType":"ExpressionStatement","src":"14519:51:27"},{"expression":{"id":9423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9413,"name":"balance1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9344,"src":"14584:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":9420,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"14629:4:27","typeDescriptions":{"typeIdentifier":"t_contract$_AMMTokenPair_$9609","typeString":"contract AMMTokenPair"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AMMTokenPair_$9609","typeString":"contract AMMTokenPair"}],"id":9419,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14621:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9418,"name":"address","nodeType":"ElementaryTypeName","src":"14621:7:27","typeDescriptions":{}}},"id":9421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14621:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":9415,"name":"_token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9351,"src":"14602:7:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9414,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2368,"src":"14595:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$2368_$","typeString":"type(contract IERC20)"}},"id":9416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14595:15:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2368","typeString":"contract IERC20"}},"id":9417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14611:9:27","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":2325,"src":"14595:25:27","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":9422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14595:40:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14584:51:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9424,"nodeType":"ExpressionStatement","src":"14584:51:27"}]},{"assignments":[9427],"declarations":[{"constant":false,"id":9427,"mutability":"mutable","name":"amount0In","nameLocation":"14781:9:27","nodeType":"VariableDeclaration","scope":9528,"src":"14773:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9426,"name":"uint256","nodeType":"ElementaryTypeName","src":"14773:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9441,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9428,"name":"balance0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9341,"src":"14793:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9429,"name":"_reserve0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9323,"src":"14804:9:27","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":9430,"name":"amount0Out","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9298,"src":"14816:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14804:22:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14793:33:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":9439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14891:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":9440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"14793:99:27","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9433,"name":"balance0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9341,"src":"14841:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9434,"name":"_reserve0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9323,"src":"14853:9:27","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":9435,"name":"amount0Out","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9298,"src":"14865:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14853:22:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":9437,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14852:24:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14841:35:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14773:119:27"},{"assignments":[9443],"declarations":[{"constant":false,"id":9443,"mutability":"mutable","name":"amount1In","nameLocation":"15028:9:27","nodeType":"VariableDeclaration","scope":9528,"src":"15020:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9442,"name":"uint256","nodeType":"ElementaryTypeName","src":"15020:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9457,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9444,"name":"balance1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9344,"src":"15040:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9445,"name":"_reserve1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9325,"src":"15051:9:27","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":9446,"name":"amount1Out","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9300,"src":"15063:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15051:22:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15040:33:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":9455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15138:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":9456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"15040:99:27","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9449,"name":"balance1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9344,"src":"15088:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9450,"name":"_reserve1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9325,"src":"15100:9:27","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":9451,"name":"amount1Out","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9300,"src":"15112:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15100:22:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":9453,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15099:24:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15088:35:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15020:119:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":9465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9459,"name":"amount0In","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9427,"src":"15212:9:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":9460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15224:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15212:13:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9462,"name":"amount1In","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9443,"src":"15229:9:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":9463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15241:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15229:13:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15212:30:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"414d4d546f6b656e506169723a20494e53554646494349454e545f494e5055545f414d4f554e54","id":9466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15256:41:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_5bde66abfbe33a8125f652ed736f1aecf54551ba686e0c1e9f96923a25bf5fa7","typeString":"literal_string \"AMMTokenPair: INSUFFICIENT_INPUT_AMOUNT\""},"value":"AMMTokenPair: INSUFFICIENT_INPUT_AMOUNT"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5bde66abfbe33a8125f652ed736f1aecf54551ba686e0c1e9f96923a25bf5fa7","typeString":"literal_string \"AMMTokenPair: INSUFFICIENT_INPUT_AMOUNT\""}],"id":9458,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"15191:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15191:116:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9468,"nodeType":"ExpressionStatement","src":"15191:116:27"},{"id":9510,"nodeType":"Block","src":"15317:726:27","statements":[{"assignments":[9470],"declarations":[{"constant":false,"id":9470,"mutability":"mutable","name":"balance0Adjusted","nameLocation":"15559:16:27","nodeType":"VariableDeclaration","scope":9510,"src":"15551:24:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9469,"name":"uint256","nodeType":"ElementaryTypeName","src":"15551:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9479,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9471,"name":"balance0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9341,"src":"15578:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31303030","id":9472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15589:4:27","typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1000"},"src":"15578:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9474,"name":"amount0In","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9427,"src":"15597:9:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"33","id":9475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15609:1:27","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"15597:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":9477,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15596:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15578:33:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15551:60:27"},{"assignments":[9481],"declarations":[{"constant":false,"id":9481,"mutability":"mutable","name":"balance1Adjusted","nameLocation":"15702:16:27","nodeType":"VariableDeclaration","scope":9510,"src":"15694:24:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9480,"name":"uint256","nodeType":"ElementaryTypeName","src":"15694:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9490,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9482,"name":"balance1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9344,"src":"15721:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31303030","id":9483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15732:4:27","typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1000"},"src":"15721:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9485,"name":"amount1In","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9443,"src":"15740:9:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"33","id":9486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15752:1:27","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"15740:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":9488,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15739:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15721:33:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15694:60:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9492,"name":"balance0Adjusted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9470,"src":"15880:16:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":9493,"name":"balance1Adjusted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9481,"src":"15899:16:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15880:35:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":9497,"name":"_reserve0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9323,"src":"15947:9:27","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint112","typeString":"uint112"}],"id":9496,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15939:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":9495,"name":"uint256","nodeType":"ElementaryTypeName","src":"15939:7:27","typeDescriptions":{}}},"id":9498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15939:18:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":9499,"name":"_reserve1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9325,"src":"15960:9:27","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"15939:30:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_1000000_by_1","typeString":"int_const 1000000"},"id":9503,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31303030","id":9501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15973:4:27","typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1000"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":9502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15981:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15973:9:27","typeDescriptions":{"typeIdentifier":"t_rational_1000000_by_1","typeString":"int_const 1000000"}}],"id":9504,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15972:11:27","typeDescriptions":{"typeIdentifier":"t_rational_1000000_by_1","typeString":"int_const 1000000"}},"src":"15939:44:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15880:103:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"414d4d546f6b656e506169723a204b","id":9507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16001:17:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_af7c00b7c4dc451a7528148ebbe08692cbfcc135376552d19a885db780f351bd","typeString":"literal_string \"AMMTokenPair: K\""},"value":"AMMTokenPair: K"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_af7c00b7c4dc451a7528148ebbe08692cbfcc135376552d19a885db780f351bd","typeString":"literal_string \"AMMTokenPair: K\""}],"id":9491,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"15855:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15855:177:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9509,"nodeType":"ExpressionStatement","src":"15855:177:27"}]},{"expression":{"arguments":[{"id":9512,"name":"balance0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9341,"src":"16087:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9513,"name":"balance1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9344,"src":"16097:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9514,"name":"_reserve0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9323,"src":"16107:9:27","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},{"id":9515,"name":"_reserve1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9325,"src":"16118:9:27","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint112","typeString":"uint112"},{"typeIdentifier":"t_uint112","typeString":"uint112"}],"id":9511,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[8867,878],"referencedDeclaration":8867,"src":"16079:7:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint112_$_t_uint112_$returns$__$","typeString":"function (uint256,uint256,uint112,uint112)"}},"id":9516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16079:49:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9517,"nodeType":"ExpressionStatement","src":"16079:49:27"},{"eventCall":{"arguments":[{"expression":{"id":9519,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"16177:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16181:6:27","memberName":"sender","nodeType":"MemberAccess","src":"16177:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9521,"name":"amount0In","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9427,"src":"16189:9:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9522,"name":"amount1In","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9443,"src":"16200:9:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9523,"name":"amount0Out","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9298,"src":"16211:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9524,"name":"amount1Out","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9300,"src":"16223:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9525,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9302,"src":"16235:2:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":9518,"name":"Swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9720,"src":"16172:4:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,uint256,uint256,uint256,address)"}},"id":9526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16172:66:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9527,"nodeType":"EmitStatement","src":"16167:71:27"}]},"documentation":{"id":9296,"nodeType":"StructuredDocumentation","src":"12397:267:27","text":" @param amount0Out 输出数额0\n @param amount1Out 输出数额1\n @param to    to地址\n @param data  用于回调的数据\n @dev 交换方法\n @notice 应该从执行重要安全检查的合同中调用此低级功能"},"functionSelector":"022c0d9f","id":9529,"implemented":true,"kind":"function","modifiers":[{"id":9307,"kind":"modifierInvocation","modifierName":{"id":9306,"name":"nonReentrant","nameLocations":["12803:12:27"],"nodeType":"IdentifierPath","referencedDeclaration":1634,"src":"12803:12:27"},"nodeType":"ModifierInvocation","src":"12803:12:27"},{"id":9309,"kind":"modifierInvocation","modifierName":{"id":9308,"name":"whenNotPaused","nameLocations":["12816:13:27"],"nodeType":"IdentifierPath","referencedDeclaration":1455,"src":"12816:13:27"},"nodeType":"ModifierInvocation","src":"12816:13:27"}],"name":"swap","nameLocation":"12678:4:27","nodeType":"FunctionDefinition","parameters":{"id":9305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9298,"mutability":"mutable","name":"amount0Out","nameLocation":"12700:10:27","nodeType":"VariableDeclaration","scope":9529,"src":"12692:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9297,"name":"uint256","nodeType":"ElementaryTypeName","src":"12692:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9300,"mutability":"mutable","name":"amount1Out","nameLocation":"12728:10:27","nodeType":"VariableDeclaration","scope":9529,"src":"12720:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9299,"name":"uint256","nodeType":"ElementaryTypeName","src":"12720:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9302,"mutability":"mutable","name":"to","nameLocation":"12756:2:27","nodeType":"VariableDeclaration","scope":9529,"src":"12748:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9301,"name":"address","nodeType":"ElementaryTypeName","src":"12748:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9304,"mutability":"mutable","name":"data","nameLocation":"12783:4:27","nodeType":"VariableDeclaration","scope":9529,"src":"12768:19:27","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":9303,"name":"bytes","nodeType":"ElementaryTypeName","src":"12768:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"12682:111:27"},"returnParameters":{"id":9310,"nodeType":"ParameterList","parameters":[],"src":"12830:0:27"},"scope":9609,"src":"12669:3576:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[9802],"body":{"id":9577,"nodeType":"Block","src":"16381:461:27","statements":[{"assignments":[9538],"declarations":[{"constant":false,"id":9538,"mutability":"mutable","name":"_token0","nameLocation":"16399:7:27","nodeType":"VariableDeclaration","scope":9577,"src":"16391:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9537,"name":"address","nodeType":"ElementaryTypeName","src":"16391:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":9540,"initialValue":{"id":9539,"name":"token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8601,"src":"16409:6:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"16391:24:27"},{"assignments":[9542],"declarations":[{"constant":false,"id":9542,"mutability":"mutable","name":"_token1","nameLocation":"16448:7:27","nodeType":"VariableDeclaration","scope":9577,"src":"16440:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9541,"name":"address","nodeType":"ElementaryTypeName","src":"16440:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":9544,"initialValue":{"id":9543,"name":"token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8603,"src":"16458:6:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"16440:24:27"},{"expression":{"arguments":[{"id":9546,"name":"_token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9538,"src":"16602:7:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9547,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9532,"src":"16623:2:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":9554,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"16673:4:27","typeDescriptions":{"typeIdentifier":"t_contract$_AMMTokenPair_$9609","typeString":"contract AMMTokenPair"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AMMTokenPair_$9609","typeString":"contract AMMTokenPair"}],"id":9553,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16665:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9552,"name":"address","nodeType":"ElementaryTypeName","src":"16665:7:27","typeDescriptions":{}}},"id":9555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16665:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":9549,"name":"_token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9538,"src":"16646:7:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9548,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2368,"src":"16639:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$2368_$","typeString":"type(contract IERC20)"}},"id":9550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16639:15:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2368","typeString":"contract IERC20"}},"id":9551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16655:9:27","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":2325,"src":"16639:25:27","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":9556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16639:40:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":9557,"name":"reserve0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8605,"src":"16682:8:27","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"16639:51:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9545,"name":"_safeTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8750,"src":"16575:13:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":9559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16575:125:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9560,"nodeType":"ExpressionStatement","src":"16575:125:27"},{"expression":{"arguments":[{"id":9562,"name":"_token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9542,"src":"16737:7:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9563,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9532,"src":"16758:2:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":9570,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"16808:4:27","typeDescriptions":{"typeIdentifier":"t_contract$_AMMTokenPair_$9609","typeString":"contract AMMTokenPair"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AMMTokenPair_$9609","typeString":"contract AMMTokenPair"}],"id":9569,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16800:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9568,"name":"address","nodeType":"ElementaryTypeName","src":"16800:7:27","typeDescriptions":{}}},"id":9571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16800:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":9565,"name":"_token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9542,"src":"16781:7:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9564,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2368,"src":"16774:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$2368_$","typeString":"type(contract IERC20)"}},"id":9566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16774:15:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2368","typeString":"contract IERC20"}},"id":9567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16790:9:27","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":2325,"src":"16774:25:27","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":9572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16774:40:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":9573,"name":"reserve1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8607,"src":"16817:8:27","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"16774:51:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9561,"name":"_safeTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8750,"src":"16710:13:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":9575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16710:125:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9576,"nodeType":"ExpressionStatement","src":"16710:125:27"}]},"documentation":{"id":9530,"nodeType":"StructuredDocumentation","src":"16251:77:27","text":" @param to to地址\n @dev 强制平衡以匹配储备"},"functionSelector":"bc25cf77","id":9578,"implemented":true,"kind":"function","modifiers":[{"id":9535,"kind":"modifierInvocation","modifierName":{"id":9534,"name":"nonReentrant","nameLocations":["16368:12:27"],"nodeType":"IdentifierPath","referencedDeclaration":1634,"src":"16368:12:27"},"nodeType":"ModifierInvocation","src":"16368:12:27"}],"name":"skim","nameLocation":"16342:4:27","nodeType":"FunctionDefinition","parameters":{"id":9533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9532,"mutability":"mutable","name":"to","nameLocation":"16355:2:27","nodeType":"VariableDeclaration","scope":9578,"src":"16347:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9531,"name":"address","nodeType":"ElementaryTypeName","src":"16347:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"16346:12:27"},"returnParameters":{"id":9536,"nodeType":"ParameterList","parameters":[],"src":"16381:0:27"},"scope":9609,"src":"16333:509:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[9805],"body":{"id":9607,"nodeType":"Block","src":"16945:184:27","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":9591,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"17009:4:27","typeDescriptions":{"typeIdentifier":"t_contract$_AMMTokenPair_$9609","typeString":"contract AMMTokenPair"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AMMTokenPair_$9609","typeString":"contract AMMTokenPair"}],"id":9590,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17001:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9589,"name":"address","nodeType":"ElementaryTypeName","src":"17001:7:27","typeDescriptions":{}}},"id":9592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17001:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":9586,"name":"token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8601,"src":"16983:6:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9585,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2368,"src":"16976:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$2368_$","typeString":"type(contract IERC20)"}},"id":9587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16976:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2368","typeString":"contract IERC20"}},"id":9588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16991:9:27","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":2325,"src":"16976:24:27","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":9593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16976:39:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"arguments":[{"id":9600,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"17062:4:27","typeDescriptions":{"typeIdentifier":"t_contract$_AMMTokenPair_$9609","typeString":"contract AMMTokenPair"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AMMTokenPair_$9609","typeString":"contract AMMTokenPair"}],"id":9599,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17054:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9598,"name":"address","nodeType":"ElementaryTypeName","src":"17054:7:27","typeDescriptions":{}}},"id":9601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17054:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":9595,"name":"token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8603,"src":"17036:6:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9594,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2368,"src":"17029:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$2368_$","typeString":"type(contract IERC20)"}},"id":9596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17029:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2368","typeString":"contract IERC20"}},"id":9597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17044:9:27","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":2325,"src":"17029:24:27","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":9602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17029:39:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9603,"name":"reserve0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8605,"src":"17082:8:27","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},{"id":9604,"name":"reserve1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8607,"src":"17104:8:27","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint112","typeString":"uint112"},{"typeIdentifier":"t_uint112","typeString":"uint112"}],"id":9584,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[8867,878],"referencedDeclaration":8867,"src":"16955:7:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint112_$_t_uint112_$returns$__$","typeString":"function (uint256,uint256,uint112,uint112)"}},"id":9605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16955:167:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9606,"nodeType":"ExpressionStatement","src":"16955:167:27"}]},"documentation":{"id":9579,"nodeType":"StructuredDocumentation","src":"16848:54:27","text":" @dev 强制准备金与余额匹配"},"functionSelector":"fff6cae9","id":9608,"implemented":true,"kind":"function","modifiers":[{"id":9582,"kind":"modifierInvocation","modifierName":{"id":9581,"name":"nonReentrant","nameLocations":["16932:12:27"],"nodeType":"IdentifierPath","referencedDeclaration":1634,"src":"16932:12:27"},"nodeType":"ModifierInvocation","src":"16932:12:27"}],"name":"sync","nameLocation":"16916:4:27","nodeType":"FunctionDefinition","parameters":{"id":9580,"nodeType":"ParameterList","parameters":[],"src":"16920:2:27"},"returnParameters":{"id":9583,"nodeType":"ParameterList","parameters":[],"src":"16945:0:27"},"scope":9609,"src":"16907:222:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":9610,"src":"816:16315:27","usedErrors":[30,35,211,214,1114,1121,1308,1444,1447,1596,2165,2170,2175,2184,2189,2194,4359,4364,4369],"usedEvents":[41,219,1436,1441,2133,2302,2311,9696,9706,9720,9726]}],"src":"39:17093:27"},"id":27},"contracts/interfaces/IAMMCallee.sol":{"ast":{"absolutePath":"contracts/interfaces/IAMMCallee.sol","exportedSymbols":{"IAMMCallee":[9623]},"id":9624,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":9611,"literals":["solidity","^","0.8",".5"],"nodeType":"PragmaDirective","src":"39:23:28"},{"abstract":false,"baseContracts":[],"canonicalName":"IAMMCallee","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":9623,"linearizedBaseContracts":[9623],"name":"IAMMCallee","nameLocation":"74:10:28","nodeType":"ContractDefinition","nodes":[{"functionSelector":"5fea11f7","id":9622,"implemented":false,"kind":"function","modifiers":[],"name":"ammCall","nameLocation":"100:7:28","nodeType":"FunctionDefinition","parameters":{"id":9620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9613,"mutability":"mutable","name":"sender","nameLocation":"125:6:28","nodeType":"VariableDeclaration","scope":9622,"src":"117:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9612,"name":"address","nodeType":"ElementaryTypeName","src":"117:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9615,"mutability":"mutable","name":"amount0","nameLocation":"146:7:28","nodeType":"VariableDeclaration","scope":9622,"src":"141:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9614,"name":"uint","nodeType":"ElementaryTypeName","src":"141:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9617,"mutability":"mutable","name":"amount1","nameLocation":"168:7:28","nodeType":"VariableDeclaration","scope":9622,"src":"163:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9616,"name":"uint","nodeType":"ElementaryTypeName","src":"163:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9619,"mutability":"mutable","name":"data","nameLocation":"200:4:28","nodeType":"VariableDeclaration","scope":9622,"src":"185:19:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":9618,"name":"bytes","nodeType":"ElementaryTypeName","src":"185:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"107:103:28"},"returnParameters":{"id":9621,"nodeType":"ParameterList","parameters":[],"src":"219:0:28"},"scope":9623,"src":"91:129:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":9624,"src":"64:158:28","usedErrors":[],"usedEvents":[]}],"src":"39:184:28"},"id":28},"contracts/interfaces/IAMMFactory.sol":{"ast":{"absolutePath":"contracts/interfaces/IAMMFactory.sol","exportedSymbols":{"IAMMFactory":[9686]},"id":9687,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":9625,"literals":["solidity","^","0.8",".5"],"nodeType":"PragmaDirective","src":"39:23:29"},{"abstract":false,"baseContracts":[],"canonicalName":"IAMMFactory","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":9686,"linearizedBaseContracts":[9686],"name":"IAMMFactory","nameLocation":"74:11:29","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"0d3648bd0f6ba80134a33ba9275ac585d9d315f0ad8355cddefde31afa28d0e9","id":9635,"name":"PairCreated","nameLocation":"98:11:29","nodeType":"EventDefinition","parameters":{"id":9634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9627,"indexed":true,"mutability":"mutable","name":"token0","nameLocation":"135:6:29","nodeType":"VariableDeclaration","scope":9635,"src":"119:22:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9626,"name":"address","nodeType":"ElementaryTypeName","src":"119:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9629,"indexed":true,"mutability":"mutable","name":"token1","nameLocation":"167:6:29","nodeType":"VariableDeclaration","scope":9635,"src":"151:22:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9628,"name":"address","nodeType":"ElementaryTypeName","src":"151:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9631,"indexed":false,"mutability":"mutable","name":"pair","nameLocation":"191:4:29","nodeType":"VariableDeclaration","scope":9635,"src":"183:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9630,"name":"address","nodeType":"ElementaryTypeName","src":"183:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9633,"indexed":false,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9635,"src":"205:4:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9632,"name":"uint","nodeType":"ElementaryTypeName","src":"205:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"109:106:29"},"src":"92:124:29"},{"functionSelector":"017e7e58","id":9640,"implemented":false,"kind":"function","modifiers":[],"name":"feeTo","nameLocation":"231:5:29","nodeType":"FunctionDefinition","parameters":{"id":9636,"nodeType":"ParameterList","parameters":[],"src":"236:2:29"},"returnParameters":{"id":9639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9638,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9640,"src":"262:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9637,"name":"address","nodeType":"ElementaryTypeName","src":"262:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"261:9:29"},"scope":9686,"src":"222:49:29","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"094b7415","id":9645,"implemented":false,"kind":"function","modifiers":[],"name":"feeToSetter","nameLocation":"285:11:29","nodeType":"FunctionDefinition","parameters":{"id":9641,"nodeType":"ParameterList","parameters":[],"src":"296:2:29"},"returnParameters":{"id":9644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9643,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9645,"src":"322:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9642,"name":"address","nodeType":"ElementaryTypeName","src":"322:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"321:9:29"},"scope":9686,"src":"276:55:29","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"e6a43905","id":9654,"implemented":false,"kind":"function","modifiers":[],"name":"getPair","nameLocation":"346:7:29","nodeType":"FunctionDefinition","parameters":{"id":9650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9647,"mutability":"mutable","name":"tokenA","nameLocation":"371:6:29","nodeType":"VariableDeclaration","scope":9654,"src":"363:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9646,"name":"address","nodeType":"ElementaryTypeName","src":"363:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9649,"mutability":"mutable","name":"tokenB","nameLocation":"395:6:29","nodeType":"VariableDeclaration","scope":9654,"src":"387:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9648,"name":"address","nodeType":"ElementaryTypeName","src":"387:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"353:54:29"},"returnParameters":{"id":9653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9652,"mutability":"mutable","name":"pair","nameLocation":"439:4:29","nodeType":"VariableDeclaration","scope":9654,"src":"431:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9651,"name":"address","nodeType":"ElementaryTypeName","src":"431:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"430:14:29"},"scope":9686,"src":"337:108:29","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"1e3dd18b","id":9661,"implemented":false,"kind":"function","modifiers":[],"name":"allPairs","nameLocation":"459:8:29","nodeType":"FunctionDefinition","parameters":{"id":9657,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9656,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9661,"src":"468:4:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9655,"name":"uint","nodeType":"ElementaryTypeName","src":"468:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"467:6:29"},"returnParameters":{"id":9660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9659,"mutability":"mutable","name":"pair","nameLocation":"505:4:29","nodeType":"VariableDeclaration","scope":9661,"src":"497:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9658,"name":"address","nodeType":"ElementaryTypeName","src":"497:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"496:14:29"},"scope":9686,"src":"450:61:29","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"574f2ba3","id":9666,"implemented":false,"kind":"function","modifiers":[],"name":"allPairsLength","nameLocation":"525:14:29","nodeType":"FunctionDefinition","parameters":{"id":9662,"nodeType":"ParameterList","parameters":[],"src":"539:2:29"},"returnParameters":{"id":9665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9664,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9666,"src":"565:4:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9663,"name":"uint","nodeType":"ElementaryTypeName","src":"565:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"564:6:29"},"scope":9686,"src":"516:55:29","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"c9c65396","id":9675,"implemented":false,"kind":"function","modifiers":[],"name":"createPair","nameLocation":"586:10:29","nodeType":"FunctionDefinition","parameters":{"id":9671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9668,"mutability":"mutable","name":"tokenA","nameLocation":"614:6:29","nodeType":"VariableDeclaration","scope":9675,"src":"606:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9667,"name":"address","nodeType":"ElementaryTypeName","src":"606:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9670,"mutability":"mutable","name":"tokenB","nameLocation":"638:6:29","nodeType":"VariableDeclaration","scope":9675,"src":"630:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9669,"name":"address","nodeType":"ElementaryTypeName","src":"630:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"596:54:29"},"returnParameters":{"id":9674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9673,"mutability":"mutable","name":"pair","nameLocation":"677:4:29","nodeType":"VariableDeclaration","scope":9675,"src":"669:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9672,"name":"address","nodeType":"ElementaryTypeName","src":"669:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"668:14:29"},"scope":9686,"src":"577:106:29","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"f46901ed","id":9680,"implemented":false,"kind":"function","modifiers":[],"name":"setFeeTo","nameLocation":"698:8:29","nodeType":"FunctionDefinition","parameters":{"id":9678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9677,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9680,"src":"707:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9676,"name":"address","nodeType":"ElementaryTypeName","src":"707:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"706:9:29"},"returnParameters":{"id":9679,"nodeType":"ParameterList","parameters":[],"src":"724:0:29"},"scope":9686,"src":"689:36:29","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"a2e74af6","id":9685,"implemented":false,"kind":"function","modifiers":[],"name":"setFeeToSetter","nameLocation":"739:14:29","nodeType":"FunctionDefinition","parameters":{"id":9683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9682,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9685,"src":"754:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9681,"name":"address","nodeType":"ElementaryTypeName","src":"754:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"753:9:29"},"returnParameters":{"id":9684,"nodeType":"ParameterList","parameters":[],"src":"771:0:29"},"scope":9686,"src":"730:42:29","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":9687,"src":"64:710:29","usedErrors":[],"usedEvents":[9635]}],"src":"39:736:29"},"id":29},"contracts/interfaces/IAMMTokenPair.sol":{"ast":{"absolutePath":"contracts/interfaces/IAMMTokenPair.sol","exportedSymbols":{"IAMMTokenPair":[9813]},"id":9814,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":9688,"literals":["solidity","^","0.8",".5"],"nodeType":"PragmaDirective","src":"39:23:30"},{"abstract":false,"baseContracts":[],"canonicalName":"IAMMTokenPair","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":9813,"linearizedBaseContracts":[9813],"name":"IAMMTokenPair","nameLocation":"74:13:30","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f","id":9696,"name":"Mint","nameLocation":"100:4:30","nodeType":"EventDefinition","parameters":{"id":9695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9690,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"121:6:30","nodeType":"VariableDeclaration","scope":9696,"src":"105:22:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9689,"name":"address","nodeType":"ElementaryTypeName","src":"105:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9692,"indexed":false,"mutability":"mutable","name":"amount0","nameLocation":"134:7:30","nodeType":"VariableDeclaration","scope":9696,"src":"129:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9691,"name":"uint","nodeType":"ElementaryTypeName","src":"129:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9694,"indexed":false,"mutability":"mutable","name":"amount1","nameLocation":"148:7:30","nodeType":"VariableDeclaration","scope":9696,"src":"143:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9693,"name":"uint","nodeType":"ElementaryTypeName","src":"143:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"104:52:30"},"src":"94:63:30"},{"anonymous":false,"eventSelector":"dccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d81936496","id":9706,"name":"Burn","nameLocation":"168:4:30","nodeType":"EventDefinition","parameters":{"id":9705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9698,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"198:6:30","nodeType":"VariableDeclaration","scope":9706,"src":"182:22:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9697,"name":"address","nodeType":"ElementaryTypeName","src":"182:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9700,"indexed":false,"mutability":"mutable","name":"amount0","nameLocation":"219:7:30","nodeType":"VariableDeclaration","scope":9706,"src":"214:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9699,"name":"uint","nodeType":"ElementaryTypeName","src":"214:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9702,"indexed":false,"mutability":"mutable","name":"amount1","nameLocation":"241:7:30","nodeType":"VariableDeclaration","scope":9706,"src":"236:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9701,"name":"uint","nodeType":"ElementaryTypeName","src":"236:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9704,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"274:2:30","nodeType":"VariableDeclaration","scope":9706,"src":"258:18:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9703,"name":"address","nodeType":"ElementaryTypeName","src":"258:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"172:110:30"},"src":"162:121:30"},{"anonymous":false,"eventSelector":"d78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d822","id":9720,"name":"Swap","nameLocation":"294:4:30","nodeType":"EventDefinition","parameters":{"id":9719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9708,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"324:6:30","nodeType":"VariableDeclaration","scope":9720,"src":"308:22:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9707,"name":"address","nodeType":"ElementaryTypeName","src":"308:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9710,"indexed":false,"mutability":"mutable","name":"amount0In","nameLocation":"345:9:30","nodeType":"VariableDeclaration","scope":9720,"src":"340:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9709,"name":"uint","nodeType":"ElementaryTypeName","src":"340:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9712,"indexed":false,"mutability":"mutable","name":"amount1In","nameLocation":"369:9:30","nodeType":"VariableDeclaration","scope":9720,"src":"364:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9711,"name":"uint","nodeType":"ElementaryTypeName","src":"364:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9714,"indexed":false,"mutability":"mutable","name":"amount0Out","nameLocation":"393:10:30","nodeType":"VariableDeclaration","scope":9720,"src":"388:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9713,"name":"uint","nodeType":"ElementaryTypeName","src":"388:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9716,"indexed":false,"mutability":"mutable","name":"amount1Out","nameLocation":"418:10:30","nodeType":"VariableDeclaration","scope":9720,"src":"413:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9715,"name":"uint","nodeType":"ElementaryTypeName","src":"413:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9718,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"454:2:30","nodeType":"VariableDeclaration","scope":9720,"src":"438:18:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9717,"name":"address","nodeType":"ElementaryTypeName","src":"438:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"298:164:30"},"src":"288:175:30"},{"anonymous":false,"eventSelector":"1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad1","id":9726,"name":"Sync","nameLocation":"474:4:30","nodeType":"EventDefinition","parameters":{"id":9725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9722,"indexed":false,"mutability":"mutable","name":"reserve0","nameLocation":"487:8:30","nodeType":"VariableDeclaration","scope":9726,"src":"479:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":9721,"name":"uint112","nodeType":"ElementaryTypeName","src":"479:7:30","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"},{"constant":false,"id":9724,"indexed":false,"mutability":"mutable","name":"reserve1","nameLocation":"505:8:30","nodeType":"VariableDeclaration","scope":9726,"src":"497:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":9723,"name":"uint112","nodeType":"ElementaryTypeName","src":"497:7:30","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"478:36:30"},"src":"468:47:30"},{"functionSelector":"ba9a7a56","id":9731,"implemented":false,"kind":"function","modifiers":[],"name":"MINIMUM_LIQUIDITY","nameLocation":"530:17:30","nodeType":"FunctionDefinition","parameters":{"id":9727,"nodeType":"ParameterList","parameters":[],"src":"547:2:30"},"returnParameters":{"id":9730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9729,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9731,"src":"573:4:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9728,"name":"uint","nodeType":"ElementaryTypeName","src":"573:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"572:6:30"},"scope":9813,"src":"521:58:30","stateMutability":"pure","virtual":false,"visibility":"external"},{"functionSelector":"c45a0155","id":9736,"implemented":false,"kind":"function","modifiers":[],"name":"factory","nameLocation":"593:7:30","nodeType":"FunctionDefinition","parameters":{"id":9732,"nodeType":"ParameterList","parameters":[],"src":"600:2:30"},"returnParameters":{"id":9735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9734,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9736,"src":"626:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9733,"name":"address","nodeType":"ElementaryTypeName","src":"626:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"625:9:30"},"scope":9813,"src":"584:51:30","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"0dfe1681","id":9741,"implemented":false,"kind":"function","modifiers":[],"name":"token0","nameLocation":"649:6:30","nodeType":"FunctionDefinition","parameters":{"id":9737,"nodeType":"ParameterList","parameters":[],"src":"655:2:30"},"returnParameters":{"id":9740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9739,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9741,"src":"681:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9738,"name":"address","nodeType":"ElementaryTypeName","src":"681:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"680:9:30"},"scope":9813,"src":"640:50:30","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"d21220a7","id":9746,"implemented":false,"kind":"function","modifiers":[],"name":"token1","nameLocation":"704:6:30","nodeType":"FunctionDefinition","parameters":{"id":9742,"nodeType":"ParameterList","parameters":[],"src":"710:2:30"},"returnParameters":{"id":9745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9744,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9746,"src":"736:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9743,"name":"address","nodeType":"ElementaryTypeName","src":"736:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"735:9:30"},"scope":9813,"src":"695:50:30","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"0902f1ac","id":9755,"implemented":false,"kind":"function","modifiers":[],"name":"getReserves","nameLocation":"759:11:30","nodeType":"FunctionDefinition","parameters":{"id":9747,"nodeType":"ParameterList","parameters":[],"src":"770:2:30"},"returnParameters":{"id":9754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9749,"mutability":"mutable","name":"reserve0","nameLocation":"828:8:30","nodeType":"VariableDeclaration","scope":9755,"src":"820:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":9748,"name":"uint112","nodeType":"ElementaryTypeName","src":"820:7:30","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"},{"constant":false,"id":9751,"mutability":"mutable","name":"reserve1","nameLocation":"846:8:30","nodeType":"VariableDeclaration","scope":9755,"src":"838:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":9750,"name":"uint112","nodeType":"ElementaryTypeName","src":"838:7:30","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"},{"constant":false,"id":9753,"mutability":"mutable","name":"blockTimestampLast","nameLocation":"863:18:30","nodeType":"VariableDeclaration","scope":9755,"src":"856:25:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9752,"name":"uint32","nodeType":"ElementaryTypeName","src":"856:6:30","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"819:63:30"},"scope":9813,"src":"750:133:30","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"5909c0d5","id":9760,"implemented":false,"kind":"function","modifiers":[],"name":"price0CumulativeLast","nameLocation":"897:20:30","nodeType":"FunctionDefinition","parameters":{"id":9756,"nodeType":"ParameterList","parameters":[],"src":"917:2:30"},"returnParameters":{"id":9759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9758,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9760,"src":"943:4:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9757,"name":"uint","nodeType":"ElementaryTypeName","src":"943:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"942:6:30"},"scope":9813,"src":"888:61:30","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"5a3d5493","id":9765,"implemented":false,"kind":"function","modifiers":[],"name":"price1CumulativeLast","nameLocation":"963:20:30","nodeType":"FunctionDefinition","parameters":{"id":9761,"nodeType":"ParameterList","parameters":[],"src":"983:2:30"},"returnParameters":{"id":9764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9763,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9765,"src":"1009:4:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9762,"name":"uint","nodeType":"ElementaryTypeName","src":"1009:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1008:6:30"},"scope":9813,"src":"954:61:30","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"7464fc3d","id":9770,"implemented":false,"kind":"function","modifiers":[],"name":"kLast","nameLocation":"1029:5:30","nodeType":"FunctionDefinition","parameters":{"id":9766,"nodeType":"ParameterList","parameters":[],"src":"1034:2:30"},"returnParameters":{"id":9769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9768,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9770,"src":"1060:4:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9767,"name":"uint","nodeType":"ElementaryTypeName","src":"1060:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1059:6:30"},"scope":9813,"src":"1020:46:30","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"6a627842","id":9777,"implemented":false,"kind":"function","modifiers":[],"name":"mint","nameLocation":"1081:4:30","nodeType":"FunctionDefinition","parameters":{"id":9773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9772,"mutability":"mutable","name":"to","nameLocation":"1094:2:30","nodeType":"VariableDeclaration","scope":9777,"src":"1086:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9771,"name":"address","nodeType":"ElementaryTypeName","src":"1086:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1085:12:30"},"returnParameters":{"id":9776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9775,"mutability":"mutable","name":"liquidity","nameLocation":"1121:9:30","nodeType":"VariableDeclaration","scope":9777,"src":"1116:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9774,"name":"uint","nodeType":"ElementaryTypeName","src":"1116:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1115:16:30"},"scope":9813,"src":"1072:60:30","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"89afcb44","id":9786,"implemented":false,"kind":"function","modifiers":[],"name":"burn","nameLocation":"1146:4:30","nodeType":"FunctionDefinition","parameters":{"id":9780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9779,"mutability":"mutable","name":"to","nameLocation":"1159:2:30","nodeType":"VariableDeclaration","scope":9786,"src":"1151:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9778,"name":"address","nodeType":"ElementaryTypeName","src":"1151:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1150:12:30"},"returnParameters":{"id":9785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9782,"mutability":"mutable","name":"amount0","nameLocation":"1186:7:30","nodeType":"VariableDeclaration","scope":9786,"src":"1181:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9781,"name":"uint","nodeType":"ElementaryTypeName","src":"1181:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9784,"mutability":"mutable","name":"amount1","nameLocation":"1200:7:30","nodeType":"VariableDeclaration","scope":9786,"src":"1195:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9783,"name":"uint","nodeType":"ElementaryTypeName","src":"1195:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1180:28:30"},"scope":9813,"src":"1137:72:30","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"022c0d9f","id":9797,"implemented":false,"kind":"function","modifiers":[],"name":"swap","nameLocation":"1223:4:30","nodeType":"FunctionDefinition","parameters":{"id":9795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9788,"mutability":"mutable","name":"amount0Out","nameLocation":"1242:10:30","nodeType":"VariableDeclaration","scope":9797,"src":"1237:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9787,"name":"uint","nodeType":"ElementaryTypeName","src":"1237:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9790,"mutability":"mutable","name":"amount1Out","nameLocation":"1267:10:30","nodeType":"VariableDeclaration","scope":9797,"src":"1262:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9789,"name":"uint","nodeType":"ElementaryTypeName","src":"1262:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9792,"mutability":"mutable","name":"to","nameLocation":"1295:2:30","nodeType":"VariableDeclaration","scope":9797,"src":"1287:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9791,"name":"address","nodeType":"ElementaryTypeName","src":"1287:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9794,"mutability":"mutable","name":"data","nameLocation":"1322:4:30","nodeType":"VariableDeclaration","scope":9797,"src":"1307:19:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":9793,"name":"bytes","nodeType":"ElementaryTypeName","src":"1307:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1227:105:30"},"returnParameters":{"id":9796,"nodeType":"ParameterList","parameters":[],"src":"1341:0:30"},"scope":9813,"src":"1214:128:30","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"bc25cf77","id":9802,"implemented":false,"kind":"function","modifiers":[],"name":"skim","nameLocation":"1356:4:30","nodeType":"FunctionDefinition","parameters":{"id":9800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9799,"mutability":"mutable","name":"to","nameLocation":"1369:2:30","nodeType":"VariableDeclaration","scope":9802,"src":"1361:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9798,"name":"address","nodeType":"ElementaryTypeName","src":"1361:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1360:12:30"},"returnParameters":{"id":9801,"nodeType":"ParameterList","parameters":[],"src":"1381:0:30"},"scope":9813,"src":"1347:35:30","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"fff6cae9","id":9805,"implemented":false,"kind":"function","modifiers":[],"name":"sync","nameLocation":"1396:4:30","nodeType":"FunctionDefinition","parameters":{"id":9803,"nodeType":"ParameterList","parameters":[],"src":"1400:2:30"},"returnParameters":{"id":9804,"nodeType":"ParameterList","parameters":[],"src":"1411:0:30"},"scope":9813,"src":"1387:25:30","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"485cc955","id":9812,"implemented":false,"kind":"function","modifiers":[],"name":"initialize","nameLocation":"1427:10:30","nodeType":"FunctionDefinition","parameters":{"id":9810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9807,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9812,"src":"1438:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9806,"name":"address","nodeType":"ElementaryTypeName","src":"1438:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9809,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9812,"src":"1447:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9808,"name":"address","nodeType":"ElementaryTypeName","src":"1447:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1437:18:30"},"returnParameters":{"id":9811,"nodeType":"ParameterList","parameters":[],"src":"1464:0:30"},"scope":9813,"src":"1418:47:30","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":9814,"src":"64:1403:30","usedErrors":[],"usedEvents":[9696,9706,9720,9726]}],"src":"39:1429:30"},"id":30},"contracts/libraries/Math.sol":{"ast":{"absolutePath":"contracts/libraries/Math.sol","exportedSymbols":{"Math":[9889]},"id":9890,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":9815,"literals":["solidity","^","0.8",".5"],"nodeType":"PragmaDirective","src":"39:23:31"},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":9889,"linearizedBaseContracts":[9889],"name":"Math","nameLocation":"125:4:31","nodeType":"ContractDefinition","nodes":[{"body":{"id":9833,"nodeType":"Block","src":"196:34:31","statements":[{"expression":{"id":9831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9824,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9822,"src":"206:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9825,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9817,"src":"210:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":9826,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9819,"src":"214:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"210:5:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":9829,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9819,"src":"222:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"210:13:31","trueExpression":{"id":9828,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9817,"src":"218:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"206:17:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9832,"nodeType":"ExpressionStatement","src":"206:17:31"}]},"id":9834,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"145:3:31","nodeType":"FunctionDefinition","parameters":{"id":9820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9817,"mutability":"mutable","name":"x","nameLocation":"154:1:31","nodeType":"VariableDeclaration","scope":9834,"src":"149:6:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9816,"name":"uint","nodeType":"ElementaryTypeName","src":"149:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9819,"mutability":"mutable","name":"y","nameLocation":"162:1:31","nodeType":"VariableDeclaration","scope":9834,"src":"157:6:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9818,"name":"uint","nodeType":"ElementaryTypeName","src":"157:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"148:16:31"},"returnParameters":{"id":9823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9822,"mutability":"mutable","name":"z","nameLocation":"193:1:31","nodeType":"VariableDeclaration","scope":9834,"src":"188:6:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9821,"name":"uint","nodeType":"ElementaryTypeName","src":"188:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"187:8:31"},"scope":9889,"src":"136:94:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9887,"nodeType":"Block","src":"398:239:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9841,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9836,"src":"412:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"33","id":9842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"416:1:31","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"412:5:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9877,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9836,"src":"593:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":9878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"598:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"593:6:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9885,"nodeType":"IfStatement","src":"589:42:31","trueBody":{"id":9884,"nodeType":"Block","src":"601:30:31","statements":[{"expression":{"id":9882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9880,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9839,"src":"615:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":9881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"619:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"615:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9883,"nodeType":"ExpressionStatement","src":"615:5:31"}]}},"id":9886,"nodeType":"IfStatement","src":"408:223:31","trueBody":{"id":9876,"nodeType":"Block","src":"419:164:31","statements":[{"expression":{"id":9846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9844,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9839,"src":"433:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9845,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9836,"src":"437:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"433:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9847,"nodeType":"ExpressionStatement","src":"433:5:31"},{"assignments":[9849],"declarations":[{"constant":false,"id":9849,"mutability":"mutable","name":"x","nameLocation":"457:1:31","nodeType":"VariableDeclaration","scope":9876,"src":"452:6:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9848,"name":"uint","nodeType":"ElementaryTypeName","src":"452:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9855,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9850,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9836,"src":"461:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":9851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"465:1:31","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"461:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":9853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"469:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"461:9:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"452:18:31"},{"body":{"id":9874,"nodeType":"Block","src":"498:75:31","statements":[{"expression":{"id":9861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9859,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9839,"src":"516:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9860,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9849,"src":"520:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"516:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9862,"nodeType":"ExpressionStatement","src":"516:5:31"},{"expression":{"id":9872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9863,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9849,"src":"539:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9864,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9836,"src":"544:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":9865,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9849,"src":"548:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"544:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":9867,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9849,"src":"552:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"544:9:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":9869,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"543:11:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":9870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"557:1:31","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"543:15:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"539:19:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9873,"nodeType":"ExpressionStatement","src":"539:19:31"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9856,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9849,"src":"491:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":9857,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9839,"src":"495:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"491:5:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9875,"nodeType":"WhileStatement","src":"484:89:31"}]}}]},"id":9888,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"354:4:31","nodeType":"FunctionDefinition","parameters":{"id":9837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9836,"mutability":"mutable","name":"y","nameLocation":"364:1:31","nodeType":"VariableDeclaration","scope":9888,"src":"359:6:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9835,"name":"uint","nodeType":"ElementaryTypeName","src":"359:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"358:8:31"},"returnParameters":{"id":9840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9839,"mutability":"mutable","name":"z","nameLocation":"395:1:31","nodeType":"VariableDeclaration","scope":9888,"src":"390:6:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9838,"name":"uint","nodeType":"ElementaryTypeName","src":"390:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"389:8:31"},"scope":9889,"src":"345:292:31","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":9890,"src":"117:522:31","usedErrors":[],"usedEvents":[]}],"src":"39:601:31"},"id":31},"contracts/libraries/UQ112x112.sol":{"ast":{"absolutePath":"contracts/libraries/UQ112x112.sol","exportedSymbols":{"UQ112x112":[9933]},"id":9934,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":9891,"literals":["solidity","^","0.8",".5"],"nodeType":"PragmaDirective","src":"39:23:32"},{"abstract":false,"baseContracts":[],"canonicalName":"UQ112x112","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":9933,"linearizedBaseContracts":[9933],"name":"UQ112x112","nameLocation":"229:9:32","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":9896,"mutability":"constant","name":"Q112","nameLocation":"262:4:32","nodeType":"VariableDeclaration","scope":9933,"src":"245:32:32","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":9892,"name":"uint224","nodeType":"ElementaryTypeName","src":"245:7:32","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"value":{"commonType":{"typeIdentifier":"t_rational_5192296858534827628530496329220096_by_1","typeString":"int_const 5192...(26 digits omitted)...0096"},"id":9895,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":9893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"269:1:32","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"313132","id":9894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"274:3:32","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},"src":"269:8:32","typeDescriptions":{"typeIdentifier":"t_rational_5192296858534827628530496329220096_by_1","typeString":"int_const 5192...(26 digits omitted)...0096"}},"visibility":"internal"},{"body":{"id":9912,"nodeType":"Block","src":"384:57:32","statements":[{"expression":{"id":9910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9903,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9901,"src":"394:1:32","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint224","typeString":"uint224"},"id":9909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":9906,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9898,"src":"406:1:32","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint112","typeString":"uint112"}],"id":9905,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"398:7:32","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":9904,"name":"uint224","nodeType":"ElementaryTypeName","src":"398:7:32","typeDescriptions":{}}},"id":9907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"398:10:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":9908,"name":"Q112","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9896,"src":"411:4:32","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"398:17:32","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"394:21:32","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":9911,"nodeType":"ExpressionStatement","src":"394:21:32"}]},"id":9913,"implemented":true,"kind":"function","modifiers":[],"name":"encode","nameLocation":"332:6:32","nodeType":"FunctionDefinition","parameters":{"id":9899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9898,"mutability":"mutable","name":"y","nameLocation":"347:1:32","nodeType":"VariableDeclaration","scope":9913,"src":"339:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":9897,"name":"uint112","nodeType":"ElementaryTypeName","src":"339:7:32","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"338:11:32"},"returnParameters":{"id":9902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9901,"mutability":"mutable","name":"z","nameLocation":"381:1:32","nodeType":"VariableDeclaration","scope":9913,"src":"373:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":9900,"name":"uint224","nodeType":"ElementaryTypeName","src":"373:7:32","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"372:11:32"},"scope":9933,"src":"323:118:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9931,"nodeType":"Block","src":"580:35:32","statements":[{"expression":{"id":9929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9922,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9920,"src":"590:1:32","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint224","typeString":"uint224"},"id":9928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9923,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9915,"src":"594:1:32","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"arguments":[{"id":9926,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9917,"src":"606:1:32","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint112","typeString":"uint112"}],"id":9925,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"598:7:32","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":9924,"name":"uint224","nodeType":"ElementaryTypeName","src":"598:7:32","typeDescriptions":{}}},"id":9927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"598:10:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"594:14:32","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"590:18:32","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":9930,"nodeType":"ExpressionStatement","src":"590:18:32"}]},"id":9932,"implemented":true,"kind":"function","modifiers":[],"name":"uqdiv","nameLocation":"518:5:32","nodeType":"FunctionDefinition","parameters":{"id":9918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9915,"mutability":"mutable","name":"x","nameLocation":"532:1:32","nodeType":"VariableDeclaration","scope":9932,"src":"524:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":9914,"name":"uint224","nodeType":"ElementaryTypeName","src":"524:7:32","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"},{"constant":false,"id":9917,"mutability":"mutable","name":"y","nameLocation":"543:1:32","nodeType":"VariableDeclaration","scope":9932,"src":"535:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":9916,"name":"uint112","nodeType":"ElementaryTypeName","src":"535:7:32","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"523:22:32"},"returnParameters":{"id":9921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9920,"mutability":"mutable","name":"z","nameLocation":"577:1:32","nodeType":"VariableDeclaration","scope":9932,"src":"569:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":9919,"name":"uint224","nodeType":"ElementaryTypeName","src":"569:7:32","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"568:11:32"},"scope":9933,"src":"509:106:32","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":9934,"src":"221:396:32","usedErrors":[],"usedEvents":[]}],"src":"39:579:32"},"id":32}},"contracts":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"OwnableUpgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"Initializable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":{"ERC20Upgradeable":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":\"ERC20Upgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xfcd09c2aa8cc3f93e12545454359f901965db312bc03833daf84de0c03e05022\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07701188648d2ab83dab1037808298585264559bddf243bd8929037adcb984b0\",\"dweb:/ipfs/QmavmG5REdHCAWsZ8Cag26BCxAq27DRKGxr3uBg5ZYxQ51\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol":{"ERC20PermitUpgradeable":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"ERC2612ExpiredSignature","type":"error"},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC2612InvalidSigner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","eip712Domain()":"84b0196e","name()":"06fdde03","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[ERC-2612]. Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol\":\"ERC20PermitUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xfcd09c2aa8cc3f93e12545454359f901965db312bc03833daf84de0c03e05022\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07701188648d2ab83dab1037808298585264559bddf243bd8929037adcb984b0\",\"dweb:/ipfs/QmavmG5REdHCAWsZ8Cag26BCxAq27DRKGxr3uBg5ZYxQ51\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol\":{\"keccak256\":\"0x075302c23ba4b3a1d2a5000947ac44bbb4e84b011ecadad6f5e3fd92cd568659\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13806b62ea930e61dfba5fbbfd4eafe135bb0e2e4d55ce8cde1407d7b20a739\",\"dweb:/ipfs/QmYjt4fwBLdKrMbGHZPqdsiwsK4obFdXdKFhQBBW5ruEuC\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/NoncesUpgradeable.sol\":{\"keccak256\":\"0x778f4a1546a1c6c726ecc8e2348a2789690fb8f26e12bd9d89537669167b79a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://851d3dfe724e918ff0a064b206e1ef46b27ab0df2aa2c8af976973a22ef59827\",\"dweb:/ipfs/Qmd4wb7zX8ueYhMVBy5PJjfsANK3Ra3pKPN7qQkNsdwGHn\"]},\"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol\":{\"keccak256\":\"0x89374b2a634f0a9c08f5891b6ecce0179bc2e0577819c787ed3268ca428c2459\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f13d2572e5bdd55e483dfac069aac47603644071616a41fce699e94368e38c13\",\"dweb:/ipfs/QmfKeyNT6vyb99vJQatPZ88UyZgXNmAiHUXSWnaR1TPE11\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xfb223a85dd0b2175cfbbaa325a744e2cd74ecd17c3df2b77b0722f991d2725ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://84bf1dea0589ec49c8d15d559cc6d86ee493048a89b2d4adb60fbe705a3d89ae\",\"dweb:/ipfs/Qmd56n556d529wk2pRMhYhm5nhMDhviwereodDikjs68w1\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x2fa0657dd7b8bc75475a47f64bc04a9adb42236b15d65e6781594ea69a46c3e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7496f42681aed94bf0142a077324e50b86046610c1724e7c12e96cf1c365914a\",\"dweb:/ipfs/QmZvhNdSAAbN4PKPdheAqwpXukUiXp3Q3TdQccDMg2NDTV\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ContextUpgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/NoncesUpgradeable.sol":{"NoncesUpgradeable":{"abi":[{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"nonces(address)":"7ecebe00"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Provides tracking nonces for addresses. Nonces will only increment.\",\"errors\":{\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"nonces(address)\":{\"details\":\"Returns the next unused nonce for an address.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/NoncesUpgradeable.sol\":\"NoncesUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/NoncesUpgradeable.sol\":{\"keccak256\":\"0x778f4a1546a1c6c726ecc8e2348a2789690fb8f26e12bd9d89537669167b79a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://851d3dfe724e918ff0a064b206e1ef46b27ab0df2aa2c8af976973a22ef59827\",\"dweb:/ipfs/Qmd4wb7zX8ueYhMVBy5PJjfsANK3Ra3pKPN7qQkNsdwGHn\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol":{"PausableUpgradeable":{"abi":[{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"paused()":"5c975abb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":\"PausableUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0xa6bf6b7efe0e6625a9dcd30c5ddf52c4c24fe8372f37c7de9dbf5034746768d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c353ee3705bbf6fadb84c0fb10ef1b736e8ca3ca1867814349d1487ed207beb\",\"dweb:/ipfs/QmcugaPssrzGGE8q4YZKm2ZhnD3kCijjcgdWWg76nWt3FY\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol":{"ReentrancyGuardUpgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":\"ReentrancyGuardUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x361126a17677994081cd9cb69c3f50cffff6e920d25cb7e428acdb1ae41d1866\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19ae787a7dd001269cd60a394b1a5261b78925a0fc3a6f927beb2986a9aa56cf\",\"dweb:/ipfs/QmYLfXiuKmcRgTDBEDXMMjXU8t6JxsspUmjxYzqWS55oEv\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol":{"EIP712Upgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data. The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to produce the hash of their typed data using a combination of `abi.encode` and `keccak256`. This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: The upgradeable version of this contract does not use an immutable cache and recomputes the domain separator each time {_domainSeparatorV4} is called. That is cheaper than accessing a cached version in cold storage.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol\":\"EIP712Upgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol\":{\"keccak256\":\"0x89374b2a634f0a9c08f5891b6ecce0179bc2e0577819c787ed3268ca428c2459\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f13d2572e5bdd55e483dfac069aac47603644071616a41fce699e94368e38c13\",\"dweb:/ipfs/QmfKeyNT6vyb99vJQatPZ88UyZgXNmAiHUXSWnaR1TPE11\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xfb223a85dd0b2175cfbbaa325a744e2cd74ecd17c3df2b77b0722f991d2725ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://84bf1dea0589ec49c8d15d559cc6d86ee493048a89b2d4adb60fbe705a3d89ae\",\"dweb:/ipfs/Qmd56n556d529wk2pRMhYhm5nhMDhviwereodDikjs68w1\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/interfaces/IERC1363.sol":{"IERC1363":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approveAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"approveAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transferAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transferFromAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFromAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","approveAndCall(address,uint256)":"3177029f","approveAndCall(address,uint256,bytes)":"cae9ca51","balanceOf(address)":"70a08231","supportsInterface(bytes4)":"01ffc9a7","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferAndCall(address,uint256)":"1296ee62","transferAndCall(address,uint256,bytes)":"4000aea0","transferFrom(address,address,uint256)":"23b872dd","transferFromAndCall(address,address,uint256)":"d8fbe994","transferFromAndCall(address,address,uint256,bytes)":"c1d34b89"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"IERC5267":{"abi":[{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":\"IERC5267\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xfb223a85dd0b2175cfbbaa325a744e2cd74ecd17c3df2b77b0722f991d2725ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://84bf1dea0589ec49c8d15d559cc6d86ee493048a89b2d4adb60fbe705a3d89ae\",\"dweb:/ipfs/Qmd56n556d529wk2pRMhYhm5nhMDhviwereodDikjs68w1\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"IERC20Permit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[ERC-2612]. Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x2fa0657dd7b8bc75475a47f64bc04a9adb42236b15d65e6781594ea69a46c3e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7496f42681aed94bf0142a077324e50b86046610c1724e7c12e96cf1c365914a\",\"dweb:/ipfs/QmZvhNdSAAbN4PKPdheAqwpXukUiXp3Q3TdQccDMg2NDTV\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"SafeERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"currentAllowance","type":"uint256"},{"internalType":"uint256","name":"requestedDecrease","type":"uint256"}],"name":"SafeERC20FailedDecreaseAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea264697066735822122048d6f9701fd3583d51635dcbe3d1e56c8101a3ab288ca0765371a0d7178d6cca64736f6c63430008160033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE 0xD6 0xF9 PUSH17 0x1FD3583D51635DCBE3D1E56C8101A3AB28 DUP13 LOG0 PUSH23 0x5371A0D7178D6CCA64736F6C6343000816003300000000 ","sourceMap":"698:9376:17:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea264697066735822122048d6f9701fd3583d51635dcbe3d1e56c8101a3ab288ca0765371a0d7178d6cca64736f6c63430008160033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE 0xD6 0xF9 PUSH17 0x1FD3583D51635DCBE3D1E56C8101A3AB28 DUP13 LOG0 PUSH23 0x5371A0D7178D6CCA64736F6C6343000816003300000000 ","sourceMap":"698:9376:17:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220c1f375d05e58ba4a844d4b298bac767bc297cf7bb95f8aa94f49fae804292da964736f6c63430008160033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC1 RETURN PUSH22 0xD05E58BA4A844D4B298BAC767BC297CF7BB95F8AA94F 0x49 STATICCALL 0xE8 DIV 0x29 0x2D 0xA9 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ","sourceMap":"657:1315:18:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220c1f375d05e58ba4a844d4b298bac767bc297cf7bb95f8aa94f49fae804292da964736f6c63430008160033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC1 RETURN PUSH22 0xD05E58BA4A844D4B298BAC767BC297CF7BB95F8AA94F 0x49 STATICCALL 0xE8 DIV 0x29 0x2D 0xA9 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ","sourceMap":"657:1315:18:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"},{"inputs":[],"name":"StringsInvalidAddressFormat","type":"error"},{"inputs":[],"name":"StringsInvalidChar","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220d3a4d5c08521c04733aea6cd5a905190ec6282906fc31227a0e00b5cd8c1003a64736f6c63430008160033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 LOG4 0xD5 0xC0 DUP6 0x21 0xC0 SELFBALANCE CALLER 0xAE 0xA6 0xCD GAS SWAP1 MLOAD SWAP1 0xEC PUSH3 0x82906F 0xC3 SLT 0x27 LOG0 0xE0 SIGNEXTEND 0x5C 0xD8 0xC1 STOP GASPRICE PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ","sourceMap":"297:18982:19:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220d3a4d5c08521c04733aea6cd5a905190ec6282906fc31227a0e00b5cd8c1003a64736f6c63430008160033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 LOG4 0xD5 0xC0 DUP6 0x21 0xC0 SELFBALANCE CALLER 0xAE 0xA6 0xCD GAS SWAP1 MLOAD SWAP1 0xEC PUSH3 0x82906F 0xC3 SLT 0x27 LOG0 0xE0 SIGNEXTEND 0x5C 0xD8 0xC1 STOP GASPRICE PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ","sourceMap":"297:18982:19:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidAddressFormat\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidChar\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}],\"StringsInvalidAddressFormat()\":[{\"details\":\"The string being parsed is not a properly formatted address.\"}],\"StringsInvalidChar()\":[{\"details\":\"The string being parsed contains characters that are not in scope of the given base.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220b6430a439b9b4e987aa553ab547fd94efb3542f6090bf03998f9e23959cbd92364736f6c63430008160033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB6 NUMBER EXP NUMBER SWAP12 SWAP12 0x4E SWAP9 PUSH27 0xA553AB547FD94EFB3542F6090BF03998F9E23959CBD92364736F6C PUSH4 0x43000816 STOP CALLER ","sourceMap":"344:7470:20:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220b6430a439b9b4e987aa553ab547fd94efb3542f6090bf03998f9e23959cbd92364736f6c63430008160033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB6 NUMBER EXP NUMBER SWAP12 SWAP12 0x4E SWAP9 PUSH27 0xA553AB547FD94EFB3542F6090BF03998F9E23959CBD92364736F6C PUSH4 0x43000816 STOP CALLER ","sourceMap":"344:7470:20:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"MessageHashUtils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220baf705fc408d63affb9f61ebc30e25556cfc387a72308dfc650c66f9787bf9e564736f6c63430008160033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBA 0xF7 SDIV 0xFC BLOCKHASH DUP14 PUSH4 0xAFFB9F61 0xEB 0xC3 0xE 0x25 SSTORE PUSH13 0xFC387A72308DFC650C66F9787B 0xF9 0xE5 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ","sourceMap":"521:3729:21:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220baf705fc408d63affb9f61ebc30e25556cfc387a72308dfc650c66f9787bf9e564736f6c63430008160033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBA 0xF7 SDIV 0xFC BLOCKHASH DUP14 PUSH4 0xAFFB9F61 0xEB 0xC3 0xE 0x25 SSTORE PUSH13 0xFC387A72308DFC650C66F9787B 0xF9 0xE5 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ","sourceMap":"521:3729:21:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea264697066735822122018e2939ca450822b030e9a2d6e56859435919024c3f3454b5617cdacb3e3ee2664736f6c63430008160033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 XOR 0xE2 SWAP4 SWAP13 LOG4 POP DUP3 0x2B SUB 0xE SWAP11 0x2D PUSH15 0x56859435919024C3F3454B5617CDAC 0xB3 0xE3 0xEE 0x26 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ","sourceMap":"281:31863:23:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea264697066735822122018e2939ca450822b030e9a2d6e56859435919024c3f3454b5617cdacb3e3ee2664736f6c63430008160033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 XOR 0xE2 SWAP4 SWAP13 LOG4 POP DUP3 0x2B SUB 0xE SWAP11 0x2D PUSH15 0x56859435919024C3F3454B5617CDAC 0xB3 0xE3 0xEE 0x26 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ","sourceMap":"281:31863:23:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220746c3da3782bc9d3b1a9b0dec1d58f068b605c554803a694737015b1c1e5677564736f6c63430008160033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH21 0x6C3DA3782BC9D3B1A9B0DEC1D58F068B605C554803 0xA6 SWAP5 PUSH20 0x7015B1C1E5677564736F6C634300081600330000 ","sourceMap":"769:34173:24:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220746c3da3782bc9d3b1a9b0dec1d58f068b605c554803a694737015b1c1e5677564736f6c63430008160033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH21 0x6C3DA3782BC9D3B1A9B0DEC1D58F068B605C554803 0xA6 SWAP5 PUSH20 0x7015B1C1E5677564736F6C634300081600330000 ","sourceMap":"769:34173:24:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220afd9a1ae4b1f0b42f8695875bf634730c794b06386327b842c795d5d363a2cdf64736f6c63430008160033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAF 0xD9 LOG1 0xAE 0x4B 0x1F SIGNEXTEND TIMESTAMP 0xF8 PUSH10 0x5875BF634730C794B063 DUP7 ORIGIN PUSH28 0x842C795D5D363A2CDF64736F6C634300081600330000000000000000 ","sourceMap":"258:2354:25:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220afd9a1ae4b1f0b42f8695875bf634730c794b06386327b842c795d5d363a2cdf64736f6c63430008160033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAF 0xD9 LOG1 0xAE 0x4B 0x1F SIGNEXTEND TIMESTAMP 0xF8 PUSH10 0x5875BF634730C794B063 DUP7 ORIGIN PUSH28 0x842C795D5D363A2CDF64736F6C634300081600330000000000000000 ","sourceMap":"258:2354:25:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/AMMFactory.sol":{"AMMFactory":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token0","type":"address"},{"indexed":true,"internalType":"address","name":"token1","type":"address"},{"indexed":false,"internalType":"address","name":"pair","type":"address"},{"indexed":false,"internalType":"uint256","name":"","type":"uint256"}],"name":"PairCreated","type":"event"},{"inputs":[],"name":"INIT_CODE_PAIR_HASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"allPairs","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"allPairsLength","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"}],"name":"createPair","outputs":[{"internalType":"address","name":"pair","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"feeTo","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"feeToSetter","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"getPair","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_feeToSetter","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_feeTo","type":"address"}],"name":"setFeeTo","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_feeToSetter","type":"address"}],"name":"setFeeToSetter","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608080604052346100b8577ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a009081549060ff8260401c166100a957506001600160401b036002600160401b031982821601610064575b604051613b6f90816100be8239f35b6001600160401b031990911681179091556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d290602090a1388080610055565b63f92ee8a960e01b8152600490fd5b600080fdfe6080604052600436101561001257600080fd5b60003560e01c8063017e7e58146100e7578063094b7415146100e25780631e3dd18b146100dd578063574f2ba3146100d85780635855a25a146100d3578063715018a6146100ce5780638da5cb5b146100c9578063a2e74af6146100c4578063c4d66de8146100bf578063c9c65396146100ba578063e6a43905146100b5578063f2fde38b146100b05763f46901ed146100ab57600080fd5b610785565b61075a565b610702565b610446565b610319565b6102d2565b610270565b610202565b6101c7565b6101a9565b61014e565b610125565b6100fc565b60009103126100f757565b600080fd5b346100f75760003660031901126100f7576000546040516001600160a01b039091168152602090f35b346100f75760003660031901126100f7576001546040516001600160a01b039091168152602090f35b346100f75760203660031901126100f7576004356003548110156100f75760036000527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b01546040516001600160a01b039091168152602090f35b346100f75760003660031901126100f7576020600354604051908152f35b346100f75760003660031901126100f75760206040517f96e8ac4277198ff8b6f785478aa9a39f403cb768dd02cbee326c3e7da348845f8152f35b346100f75760008060031936011261026d5761021c610ac8565b600080516020613afa83398151915280546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b346100f75760003660031901126100f757600080516020613afa833981519152546040516001600160a01b039091168152602090f35b600435906001600160a01b03821682036100f757565b602435906001600160a01b03821682036100f757565b346100f75760203660031901126100f7576102eb6102a6565b600154906001600160a01b039061030533838516146107d6565b6001600160a01b0319909216911617600155005b346100f75760203660031901126100f7576103326102a6565b600080516020613b1a833981519152549067ffffffffffffffff60ff8360401c161592168015908161043e575b6001149081610434575b15908161042b575b5061041957600080516020613b1a833981519152805467ffffffffffffffff191660011790556103a590826103f45761081a565b6103ab57005b600080516020613b1a833981519152805460ff60401b19169055604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d290602090a1005b600080516020613b1a833981519152805460ff60401b1916600160401b17905561081a565b60405163f92ee8a960e01b8152600490fd5b90501538610371565b303b159150610369565b83915061035f565b346100f7576040806003193601126100f7576104606102a6565b906104696102bc565b907f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f0060028154146106f157600290556001600160a01b03928284168185166104b381831415610889565b10156106ec57915b8383166104c98115156108d5565b610528610522610516610509856104f28960018060a01b03166000526002602052604060002090565b9060018060a01b0316600052602052604060002090565b546001600160a01b031690565b6001600160a01b031690565b15610921565b612fc9610537602082016109be565b908082526020820190610b3182398451606087811b6bffffffffffffffffffffffff19908116602084019081529187901b166034830152602882529061057e60488261099c565b5190209151906000f59385851695863b156100f757845163485cc95560e01b81526001600160a01b03838116600483015285166024820152966000908890604490829084905af19182156106e75786610624610660926106ca9a7f0d3648bd0f6ba80134a33ba9275ac585d9d315f0ad8355cddefde31afa28d0e9966106ce575b50610643836106248a6104f28560018060a01b03166000526002602052604060002090565b80546001600160a01b0319166001600160a01b03909216919091179055565b6001600160a01b03881660009081526002602052604090206104f2565b610669866109da565b60035485516001600160a01b03881681526020810191909152931692604090a36106b260017f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f0055565b516001600160a01b0390911681529081906020820190565b0390f35b806106db6106e192610983565b806100ec565b386105ff565b6109ce565b6104bb565b8151633ee5aeb560e01b8152600490fd5b346100f75760403660031901126100f757602061071d6102a6565b6107506107286102bc565b6001600160a01b03928316600090815260028552604080822092851682526020929092522090565b5416604051908152f35b346100f75760203660031901126100f7576107836107766102a6565b61077e610ac8565b610a54565b005b346100f75760203660031901126100f75761079e6102a6565b6001546001600160a01b0391906107b890831633146107d6565b166bffffffffffffffffffffffff60a01b6000541617600055600080f35b156107dd57565b60405162461bcd60e51b815260206004820152601560248201527420a6a6a330b1ba37b93c9d102327a92124a22222a760591b6044820152606490fd5b610822610b01565b61082a610b01565b61083333610a54565b61083b610b01565b610843610b01565b60017f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f005560018060a01b03166bffffffffffffffffffffffff60a01b6001541617600155565b1561089057565b60405162461bcd60e51b815260206004820152601f60248201527f414d4d466163746f72793a204944454e544943414c5f414444524553534553006044820152606490fd5b156108dc57565b60405162461bcd60e51b815260206004820152601860248201527f414d4d466163746f72793a205a45524f5f4144445245535300000000000000006044820152606490fd5b1561092857565b60405162461bcd60e51b815260206004820152601760248201527f414d4d466163746f72793a20504149525f4558495354530000000000000000006044820152606490fd5b634e487b7160e01b600052604160045260246000fd5b67ffffffffffffffff811161099757604052565b61096d565b90601f8019910116810190811067ffffffffffffffff82111761099757604052565b906109cc604051928361099c565b565b6040513d6000823e3d90fd5b600354600160401b811015610997576001810180600355811015610a3e5760036000527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0180546001600160a01b0319166001600160a01b03909216919091179055565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b03908116908115610aaf57600080516020613afa83398151915280546001600160a01b031981168417909155167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b604051631e4fbdf760e01b815260006004820152602490fd5b600080516020613afa833981519152546001600160a01b03163303610ae957565b60405163118cdaa760e01b8152336004820152602490fd5b60ff600080516020613b1a8339815191525460401c1615610b1e57565b604051631afcd79f60e31b8152600490fdfe608080604052346100b9577ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a009081549060ff8260401c166100aa57506001600160401b036002600160401b031982821601610065575b604051612f0a9081620000bf8239f35b6001600160401b031990911681179091556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d290602090a1388080610055565b63f92ee8a960e01b8152600490fd5b600080fdfe6080604052600436101561001257600080fd5b6000803560e01c8063022c0d9f14611a6d57806306fdde03146119c35780630902f1ac1461196a578063095ea7b3146119435780630dfe16811461191a57806318160ddd146118ef57806323b872dd14611809578063313ce567146117ed5780633644e515146117ca5780633f4ba83a14611752578063485cc9551461126e5780635909c0d5146112505780635a3d5493146112325780635c975abb146112025780636a62784214610f3657806370a0823114610ef0578063715018a614610e855780637464fc3d14610e675780637ecebe0014610e0d5780638456cb5914610da557806384b0196e14610c4757806389afcb44146107e15780638da5cb5b146107ab57806395d89b41146106a2578063a9059cbb14610670578063ba9a7a5614610653578063bc25cf7714610515578063c45a0155146104ee578063d21220a7146104c5578063d505accf14610335578063dd62ed3e146102eb578063f2fde38b146102be5763fff6cae91461018857600080fd5b346102bb57806003193601126102bb576101a061248c565b6001546040516370a0823160e01b808252306004830152916020916001600160a01b039183908290602490829086165afa9182156102b0578391869361027f575b50600254169360246040518096819382523060048301525afa91821561027457849261023d575b506102289250600354916001600160701b03808460701c1693169161263f565b6001600080516020612e958339815191525580f35b90915082813d831161026d575b6102548183612164565b810103126102685761022891519038610208565b600080fd5b503d61024a565b6040513d86823e3d90fd5b8281939294503d83116102a9575b6102978183612164565b810103126102685782905191386101e1565b503d61028d565b6040513d87823e3d90fd5b80fd5b50346102bb5760203660031901126102bb576102e86102db6120dd565b6102e3612872565b612418565b80f35b50346102bb5760403660031901126102bb576103056120dd565b6103166103106120f3565b916123df565b9060018060a01b03166000526020526020604060002054604051908152f35b50346102bb5760e03660031901126102bb5761034f6120dd565b906103586120f3565b60443590606435936084359460ff861686036104c1578042116104a95760018060a01b0390818316968787527f5ab42ced628888259c08ac98db1eb0cf702fc1501344311d8b100cd1bfe4bb0060205260408720908154916001830190556040519260208401927f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c984528a6040860152858816606086015288608086015260a085015260c084015260c0835260e08301918383106001600160401b03841117610493576104619361045893604052519020610431612b78565b906040519161190160f01b83526002830152602282015260c43591604260a4359220612c1c565b90929192612ca0565b1685810361047557506102e8939450612b1a565b60449086604051916325c0072360e11b835260048301526024820152fd5b634e487b7160e01b600052604160045260246000fd5b6024906040519063313c898160e11b82526004820152fd5b8480fd5b50346102bb57806003193601126102bb576002546040516001600160a01b039091168152602090f35b50346102bb57806003193601126102bb57546040516001600160a01b039091168152602090f35b50346102bb5760208060031936011261064f576105306120dd565b9061053961248c565b6001546002546040516370a0823160e01b80825230600483015290946001600160a01b039283169490939092168286602481845afa958615610644578796610613575b5061059f90846105996001600160701b0398896003541690612185565b916124e7565b6040519081523060048201528181602481875afa9182156106085786926105d8575b5050610599906102289460035460701c1690612185565b90809250813d8311610601575b6105ef8183612164565b810103126102685751836105996105c1565b503d6105e5565b6040513d88823e3d90fd5b9095508281813d831161063d575b61062b8183612164565b8101031261026857519461059f61057c565b503d610621565b6040513d89823e3d90fd5b5080fd5b50346102bb57806003193601126102bb5760206040516103e88152f35b50346102bb5760403660031901126102bb5761069761068d6120dd565b6024359033612784565b602060405160018152f35b50346102bb57806003193601126102bb576040517f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0480548260006106e5836121bb565b928383526020946001918660018216918260001461078957505060011461072d575b505061071592500383612164565b610729604051928284938452830190612109565b0390f35b8592506000527f46a2803e59a4de4e7a4c574b1243f25977ac4c77d5a1a4a609b5394cebb4a2aa906000915b85831061077157505061071593508201018580610707565b80548389018501528794508693909201918101610759565b925093505061071594915060ff191682840152151560051b8201018580610707565b50346102bb57806003193601126102bb57600080516020612e35833981519152546040516001600160a01b039091168152602090f35b50346102bb5760203660031901126102bb576107fb6120dd565b61080361248c565b61080b6124bc565b61082a6003546001600160701b0391828216928260701c169160e01c90565b506001546002546040516370a0823160e01b81523060048201526001600160a01b039182169694959190921693909290602083602481885afa928315610c3a578193610c06575b506040516370a0823160e01b815230600482015296602088602481845afa958615610bfb578798839897610bc4575b50308352600080516020612e158339815191526020526108f76108eb6108eb6108f06108d18860408920549c6128b8565b98600080516020612e55833981519152549384918d6121a8565b6123bf565b9a8a6121a8565b9688151580610bbb575b15610b62573015610b495730600052600080516020612e15833981519152602052604060002054818110610b21579160008260209360249695308452600080516020612e15833981519152865203604083205580600080516020612e558339815191525403600080516020612e55833981519152556040519081527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef843092a36109ac8a89836124e7565b6109b78989856124e7565b6040516370a0823160e01b815230600482015293849182905afa918215610b16578392610ae1575b506020602491604051928380926370a0823160e01b82523060048301525afa928315610ad55792610a9a575b5096610a1a929160409861263f565b610a77575b83519083825282602083015260018060a01b0316907fdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d81936496853392a36001600080516020612e958339815191525582519182526020820152f35b610a926003546001600160701b03808260701c1691166121a8565b600655610a1f565b929150966020833d602011610acd575b81610ab760209383612164565b8101031261026857915191969091906040610a0b565b3d9150610aaa565b604051903d90823e3d90fd5b9091506020813d602011610b0e575b81610afd60209383612164565b8101031261026857519060206109df565b3d9150610af0565b6040513d85823e3d90fd5b60405163391434e360e21b815230600482015260248101919091526044810191909152606490fd5b604051634b637e8f60e11b815260048101859052602490fd5b60405162461bcd60e51b815260206004820152602b60248201527f414d4d546f6b656e506169723a20494e53554646494349454e545f4c4951554960448201526a1112551657d0955493915160aa1b6064820152608490fd5b50871515610901565b965096506020863d602011610bf3575b81610be160209383612164565b810103126102685787955196386108a0565b3d9150610bd4565b6040513d84823e3d90fd5b9092506020813d602011610c32575b81610c2260209383612164565b8101031261026857519138610871565b3d9150610c15565b50604051903d90823e3d90fd5b50346102bb57806003193601126102bb577fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d100541580610d7c575b15610d3f57610c8e6121f5565b90610c976122df565b906040519060209060208301938385106001600160401b03861117610493579284926020610cf58896610ce798604052858552604051988998600f60f81b8a5260e0858b015260e08a0190612109565b9088820360408a0152612109565b924660608801523060808801528460a088015286840360c088015251928381520193925b828110610d2857505050500390f35b835185528695509381019392810192600101610d19565b60405162461bcd60e51b81526020600482015260156024820152741152540dcc4c8e88155b9a5b9a5d1a585b1a5e9959605a1b6044820152606490fd5b507fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d1015415610c81565b50346102bb57806003193601126102bb57610dbe612872565b610dc66124bc565b600080516020612e75833981519152600160ff198254161790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586020604051338152a180f35b50346102bb5760203660031901126102bb576001600160a01b03610e2f6120dd565b166000527f5ab42ced628888259c08ac98db1eb0cf702fc1501344311d8b100cd1bfe4bb006020526020604060002054604051908152f35b50346102bb57806003193601126102bb576020600654604051908152f35b50346102bb57806003193601126102bb57610e9e612872565b600080516020612e3583398151915280546001600160a01b031981169091556000906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50346102bb5760203660031901126102bb576020906040906001600160a01b03610f186120dd565b168152600080516020612e1583398151915283522054604051908152f35b50346102bb5760208060031936011261064f57610f516120dd565b90610f5a61248c565b610f626124bc565b610f816003546001600160701b0391828216928260701c169160e01c90565b5091909260018060a01b039283600154169360405184816024816370a0823160e01b998a82523060048301525afa9182156111f757859189936111c6575b50600254169560246040518098819382523060048301525afa948515610644578795611197575b506001600160701b039182871696610ffe8884612185565b968483169361100d8583612185565b9961101885856128b8565b95600080516020612e558339815191525491821560001461107e578d6110466110418f8f6121a8565b6129f8565b6103e71981011161106a5760405163ec442f0560e01b815260006004820152602490fd5b634e487b7160e01b81526011600452602490fd5b8d916108eb6110998e9d9f9c9e936108eb876110a0966121a8565b948c6121a8565b90508082101561119057505b98891561113757906110c48a6110c996959493612a54565b61263f565b611119575b50604051918252838201527f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f60403392a26001600080516020612e9583398151915255604051908152f35b61112e9060035490808260701c1691166121a8565b600655846110ce565b60405162461bcd60e51b8152600481018c9052602b60248201527f414d4d546f6b656e506169723a20494e53554646494349454e545f4c4951554960448201526a1112551657d3525395115160aa1b6064820152608490fd5b90506110ac565b9094508381813d83116111bf575b6111af8183612164565b8101031261026857519338610fe6565b503d6111a5565b8281939294503d83116111f0575b6111de8183612164565b81010312610268578490519138610fbf565b503d6111d4565b6040513d8a823e3d90fd5b50346102bb57806003193601126102bb57602060ff600080516020612e7583398151915254166040519015158152f35b50346102bb57806003193601126102bb576020600554604051908152f35b50346102bb57806003193601126102bb576020600454604051908152f35b50346102bb5760403660031901126102bb576112886120dd565b906112916120f3565b600080516020612eb583398151915254906001600160401b03821680159081611742575b6001149081611738575b15908161172f575b5061171d5760016001600160401b0319831617600080516020612eb58339815191525560ff8260401c16156116f0575b6112ff6123a0565b936113086123a0565b94611311612bed565b611319612bed565b80516001600160401b0381116115c55780611342600080516020612df5833981519152546121bb565b92601f9384811161166f575b506020908483116001146115e45788926115d9575b50508160011b916000199060031b1c191617600080516020612df5833981519152555b85516001600160401b0381116115c5577f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace04916113c283546121bb565b818111611566575b5060209082116001146114e3578190879860ff98926114d8575b50508160011b916000199060031b1c19161790555b611401612bed565b611409612bed565b6001600080516020612e9583398151915255611423612bed565b61142b612bed565b611433612bed565b61143c33612418565b6bffffffffffffffffffffffff60a01b91338387541617865560018060a01b038092168360015416176001551690600254161760025560401c161561147e5780f35b68ff000000000000000019600080516020612eb58339815191525416600080516020612eb5833981519152557fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2602060405160018152a180f35b0151905038806113e4565b8287527f46a2803e59a4de4e7a4c574b1243f25977ac4c77d5a1a4a609b5394cebb4a2aa97601f198316885b81811061154e57509160ff989991846001959410611535575b505050811b0190556113f9565b015160001960f88460031b161c19169055388080611528565b838301518b556001909a01996020938401930161150f565b8388527f46a2803e59a4de4e7a4c574b1243f25977ac4c77d5a1a4a609b5394cebb4a2aa8280850160051c820192602086106115bc575b0160051c01905b8181106115b157506113ca565b8881556001016115a4565b9250819261159d565b634e487b7160e01b86526041600452602486fd5b015190503880611363565b600080516020612df58339815191528952600080516020612dd58339815191529250601f198416895b818110611657575090846001959493921061163e575b505050811b01600080516020612df583398151915255611386565b015160001960f88460031b161c19169055388080611623565b9293602060018192878601518155019501930161160d565b909150600080516020612df583398151915288528380840160051c600080516020612dd58339815191520191602085106116da575b90849392910160051c600080516020612dd583398151915201905b8181106116cc575061134e565b8981558493506001016116bf565b600080516020612dd583398151915292506116a4565b68ffffffffffffffffff1982166801000000000000000117600080516020612eb5833981519152556112f7565b60405163f92ee8a960e01b8152600490fd5b905015386112c7565b303b1591506112bf565b604084901c60ff161591506112b5565b50346102bb57806003193601126102bb5761176b612872565b600080516020612e75833981519152805460ff8116156117b85760ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6020604051338152a180f35b604051638dfc202b60e01b8152600490fd5b50346102bb57806003193601126102bb5760206117e5612b78565b604051908152f35b50346102bb57806003193601126102bb57602060405160128152f35b50346102bb5760603660031901126102bb576118236120dd565b61182b6120f3565b60443590611838836123df565b3360005260205260406000205492600019841061185a575b6106979350612784565b8284106118c9576001600160a01b038116156118b0573315611897578261069794611884836123df565b3360005260205203604060002055611850565b604051634a1406b160e11b815260006004820152602490fd5b60405163e602df0560e01b815260006004820152602490fd5b604051637dc7a0d960e11b81523360048201526024810185905260448101849052606490fd5b50346102bb57806003193601126102bb576020600080516020612e5583398151915254604051908152f35b50346102bb57806003193601126102bb576001546040516001600160a01b039091168152602090f35b50346102bb5760403660031901126102bb576106976119606120dd565b6024359033612b1a565b50346102bb57806003193601126102bb57606063ffffffff6119a16003546001600160701b0391828216928260701c169160e01c90565b909291604051936001600160701b038092168552166020840152166040820152f35b50346102bb57806003193601126102bb57604051600080516020612df583398151915280548260006119f4836121bb565b9283835260209460019186600182169182600014610789575050600114611a2357505061071592500383612164565b859250600052600080516020612dd5833981519152906000915b858310611a5557505061071593508201018580610707565b80548389018501528794508693909201918101611a3d565b50346102bb5760803660031901126102bb576044356001600160a01b03811690036102bb576001600160401b03606435116102bb573660236064350112156102bb576001600160401b0360643560040135116102bb57366024606435600401356064350101116102bb57611adf61248c565b611ae76124bc565b60043515801580916120d2575b1561207c57611b186003546001600160701b0391828216928260701c169160e01c90565b506001600160701b03829392166004351080612068575b15612017576001546002546001600160a01b039081169391811691906044351682141580612002575b15611fbd57611fa9575b602435611f95575b60643560040135611ec6575b906020602492604051938480926370a0823160e01b82523060048301525afa9182156102b0578592611e8f575b506020602493604051948580926370a0823160e01b82523060048301525afa9283156102b0578593611e5b575b50611be66004356001600160701b038616612185565b821115611e5457611c0b611c056004356001600160701b038716612185565b83612185565b935b611c226024356001600160701b038416612185565b841115611e4d57611c47611c416024356001600160701b038516612185565b85612185565b935b8515158615611e44575b15611def57836103e88102046103e81484151715611ddb576003860286810460031487151715611dc757611c8b906103e88602612185565b6103e882028281046103e81483151715611d9f57600387029087820460031488151715611db357611cc69291611cc091612185565b906121a8565b611ce26001600160701b0385166001600160701b0385166121a8565b90620f424091828102928184041490151715611d9f5710611d6857611d069361263f565b60405191825260208201526004356040820152602435606082015260018060a01b0360443516907fd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d82260803392a36001600080516020612e958339815191525580f35b60405162461bcd60e51b815260206004820152600f60248201526e414d4d546f6b656e506169723a204b60881b6044820152606490fd5b634e487b7160e01b89526011600452602489fd5b634e487b7160e01b8a52601160045260248afd5b634e487b7160e01b88526011600452602488fd5b634e487b7160e01b87526011600452602487fd5b60405162461bcd60e51b815260206004820152602760248201527f414d4d546f6b656e506169723a20494e53554646494349454e545f494e50555460448201526617d05353d5539560ca1b6064820152608490fd5b50841515611c53565b8593611c49565b8493611c0d565b9092506020813d602011611e87575b81611e7760209383612164565b8101031261026857519138611bd0565b3d9150611e6a565b9291506020833d602011611ebe575b81611eab60209383612164565b8101031261026857915190916020611ba3565b3d9150611e9e565b6044356001600160a01b03163b156104c157604051635fea11f760e01b815233600482015260043560248201526024356044820152608060648201526064356004013560848201526064356004013560246064350160a483013760a460643560040135828101820188905287918391601f19601f9091011682018290030181836001600160a01b03604435165af1801561060857611f65575b50611b76565b6001600160401b038196929611611f8157604052936020611f5f565b634e487b7160e01b82526041600452602482fd5b611fa4602435604435856124e7565b611b6a565b611fb8600435604435836124e7565b611b62565b60405162461bcd60e51b815260206004820152601860248201527f414d4d546f6b656e506169723a20494e56414c49445f544f00000000000000006044820152606490fd5b506044356001600160a01b0316841415611b58565b60405162461bcd60e51b8152602060048201526024808201527f414d4d546f6b656e506169723a20494e53554646494349454e545f4c495155496044820152634449545960e01b6064820152608490fd5b506001600160701b03811660243510611b2f565b60405162461bcd60e51b815260206004820152602860248201527f414d4d546f6b656e506169723a20494e53554646494349454e545f4f555450556044820152671517d05353d5539560c21b6064820152608490fd5b506024351515611af4565b600435906001600160a01b038216820361026857565b602435906001600160a01b038216820361026857565b919082519283825260005b848110612135575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201612114565b604081019081106001600160401b0382111761049357604052565b90601f801991011681019081106001600160401b0382111761049357604052565b9190820391821161219257565b634e487b7160e01b600052601160045260246000fd5b8181029291811591840414171561219257565b90600182811c921680156121eb575b60208310146121d557565b634e487b7160e01b600052602260045260246000fd5b91607f16916121ca565b604051906000827fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d1029182549261222a846121bb565b808452936020916001918281169081156122b95750600114612258575b50505061225692500383612164565b565b60009081527f42ad5d3e1f2e6e70edcf6d991b8a3023d3fca8047a131592f9edb9fd9b89d57d9590935091905b8284106122a15750612256945050508101602001388080612247565b85548885018301529485019487945092810192612285565b925050506020925061225694915060ff191682840152151560051b820101388080612247565b604051906000827fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d10391825492612314846121bb565b808452936020916001918281169081156122b9575060011461233f5750505061225692500383612164565b60009081527f5f9ce34815f8e11431c7bb75a8e6886a91478f7ffc1dbb0a98dc240fddd76b759590935091905b8284106123885750612256945050508101602001388080612247565b8554888501830152948501948794509281019261236c565b604051906123ad82612149565b6003825262414d4d60e81b6020830152565b81156123c9570490565b634e487b7160e01b600052601260045260246000fd5b6001600160a01b031660009081527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace016020526040902090565b6001600160a01b0390811690811561247357600080516020612e3583398151915280546001600160a01b031981168417909155167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b604051631e4fbdf760e01b815260006004820152602490fd5b600080516020612e9583398151915260028154146124aa5760029055565b604051633ee5aeb560e01b8152600490fd5b60ff600080516020612e7583398151915254166124d557565b60405163d93c066560e01b8152600490fd5b60405192916124f584612149565b601984527f7472616e7366657228616464726573732c75696e74323536290000000000000060209485015260405163a9059cbb60e01b8186019081526001600160a01b0390921660248201526044808201949094529283526001600160401b0392608081018481118282101761049357604052600092839283809351925af1913d15612637573d908111611f81576040519061259a601f8201601f1916860183612164565b81523d828583013e5b826125f7575b5050156125b35750565b6064906040519062461bcd60e51b82526004820152601d60248201527f414d4d546f6b656e506169723a205452414e534645525f4641494c45440000006044820152fd5b8051925082159190848315612613575b505050905038806125a9565b91938180945001031261064f578201519081151582036102bb575080388084612607565b5060606125a3565b92916001600160701b0390818511158061277a575b1561273c577f1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad194604094839263ffffffff60035460e01c81421603169182151580612731575b80612726575b6126e3575b505050607093841b600160701b600160e01b031691169081174260e01b6001600160e01b031916176003819055845191825290921c166020820152a1565b6001600160e01b03916127159190612702908585612707838587612acd565b612afc565b160260045401600455612acd565b1602600554016005553880806126a5565b5084811615156126a0565b50848216151561269a565b60405162461bcd60e51b8152602060048201526016602482015275414d4d546f6b656e506169723a204f564552464c4f5760501b6044820152606490fd5b5081831115612654565b916001600160a01b03808416928315612859571692831561284057600090838252600080516020612e158339815191528060205260408320549184831061280d575082847fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef959360409388602097528652038282205586815220818154019055604051908152a3565b60405163391434e360e21b81526001600160a01b0391909116600482015260248101929092525060448101839052606490fd5b60405163ec442f0560e01b815260006004820152602490fd5b604051634b637e8f60e11b815260006004820152602490fd5b600080516020612e35833981519152546001600160a01b0316330361289357565b60405163118cdaa760e01b8152336004820152602490fd5b9190820180921161219257565b60008054604051622fcfcb60e31b815293949392906001600160a01b03906020908590600490829085165afa938415610b165783946129b7575b50831615159460065491866000146129a65782612911575b5050505050565b61104161292e91612934936001600160701b0380911691166121a8565b916129f8565b90818111612943575b8061290a565b612960600080516020612e5583398151915254611cc08484612185565b9260058202918083046005149015171561106a57506129899291612983916128ab565b906123bf565b80612996575b808061293d565b61299f91612a54565b388061298f565b50509091506129b25750565b600655565b9093506020813d6020116129f0575b816129d360209383612164565b810103126129ec575183811681036129ec5792386128f2565b8280fd5b3d91506129c6565b9060006003831115612a475750816001908060011c600181018091116121925791905b848310612a2757505050565b90919350612a3e84612a3981846123bf565b6128ab565b821c9190612a1b565b91612a4e57565b60019150565b6001600160a01b0316908115612840577fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6020600092600080516020612e55833981519152612aa48282546128ab565b9055848452600080516020612e15833981519152825260408420818154019055604051908152a3565b600160701b600160e01b03607082901b16906001600160701b0316808204600160701b14901517156121925790565b906001600160701b03169081156123c9576001600160e01b03160490565b916001600160a01b038084169283156118b05716928315611897577f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591612b626020926123df565b85600052825280604060002055604051908152a3565b612b80612d25565b612b88612d8f565b6040519060208201927f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f8452604083015260608201524660808201523060a082015260a0815260c081018181106001600160401b038211176104935760405251902090565b60ff600080516020612eb58339815191525460401c1615612c0a57565b604051631afcd79f60e31b8152600490fd5b91907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411612c9457926020929160ff608095604051948552168484015260408301526060820152600092839182805260015afa15610ad55780516001600160a01b03811615612c8b57918190565b50809160019190565b50505060009160039190565b6004811015612d0f5780612cb2575050565b60018103612ccc5760405163f645eedf60e01b8152600490fd5b60028103612ced5760405163fce698f760e01b815260048101839052602490fd5b600314612cf75750565b602490604051906335e2f38360e21b82526004820152fd5b634e487b7160e01b600052602160045260246000fd5b612d2d6121f5565b8051908115612d3d576020012090565b50507fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d100548015612d6a5790565b507fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47090565b612d976122df565b8051908115612da7576020012090565b50507fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d101548015612d6a579056fe2ae08a8e29253f69ac5d979a101956ab8f8d9d7ded63fa7a83b16fc47648eab052c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0352c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace009016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930052c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace02cd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f033009b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00f0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00a2646970667358221220d3ffdd3d92e9da540901defb82f40c7849526e5ea3c333dea2edc1213df2d8f964736f6c634300081600339016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300f0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00a26469706673582212209fe4c834495ff5056f569a2c3e6aa06e330819c8d5b88ae2521198e61757a2c764736f6c63430008160033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0xB8 JUMPI PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 DUP2 SLOAD SWAP1 PUSH1 0xFF DUP3 PUSH1 0x40 SHR AND PUSH2 0xA9 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x2 PUSH1 0x1 PUSH1 0x40 SHL SUB NOT DUP3 DUP3 AND ADD PUSH2 0x64 JUMPI JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B6F SWAP1 DUP2 PUSH2 0xBE DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB NOT SWAP1 SWAP2 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 SWAP1 LOG1 CODESIZE DUP1 DUP1 PUSH2 0x55 JUMP JUMPDEST PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x17E7E58 EQ PUSH2 0xE7 JUMPI DUP1 PUSH4 0x94B7415 EQ PUSH2 0xE2 JUMPI DUP1 PUSH4 0x1E3DD18B EQ PUSH2 0xDD JUMPI DUP1 PUSH4 0x574F2BA3 EQ PUSH2 0xD8 JUMPI DUP1 PUSH4 0x5855A25A EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xCE JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0xA2E74AF6 EQ PUSH2 0xC4 JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0xBF JUMPI DUP1 PUSH4 0xC9C65396 EQ PUSH2 0xBA JUMPI DUP1 PUSH4 0xE6A43905 EQ PUSH2 0xB5 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xB0 JUMPI PUSH4 0xF46901ED EQ PUSH2 0xAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x785 JUMP JUMPDEST PUSH2 0x75A JUMP JUMPDEST PUSH2 0x702 JUMP JUMPDEST PUSH2 0x446 JUMP JUMPDEST PUSH2 0x319 JUMP JUMPDEST PUSH2 0x2D2 JUMP JUMPDEST PUSH2 0x270 JUMP JUMPDEST PUSH2 0x202 JUMP JUMPDEST PUSH2 0x1C7 JUMP JUMPDEST PUSH2 0x1A9 JUMP JUMPDEST PUSH2 0x14E JUMP JUMPDEST PUSH2 0x125 JUMP JUMPDEST PUSH2 0xFC JUMP JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0xF7 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xF7 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF7 JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0xF7 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF7 JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0xF7 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF7 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0xF7 JUMPI PUSH1 0x3 PUSH1 0x0 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B ADD SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0xF7 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF7 JUMPI PUSH1 0x20 PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xF7 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF7 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x96E8AC4277198FF8B6F785478AA9A39F403CB768DD02CBEE326C3E7DA348845F DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xF7 JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x26D JUMPI PUSH2 0x21C PUSH2 0xAC8 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3AFA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xF7 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF7 JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3AFA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xF7 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xF7 JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0xF7 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF7 JUMPI PUSH2 0x2EB PUSH2 0x2A6 JUMP JUMPDEST PUSH1 0x1 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH2 0x305 CALLER DUP4 DUP6 AND EQ PUSH2 0x7D6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP3 AND SWAP2 AND OR PUSH1 0x1 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0xF7 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF7 JUMPI PUSH2 0x332 PUSH2 0x2A6 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3B1A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0xFF DUP4 PUSH1 0x40 SHR AND ISZERO SWAP3 AND DUP1 ISZERO SWAP1 DUP2 PUSH2 0x43E JUMPI JUMPDEST PUSH1 0x1 EQ SWAP1 DUP2 PUSH2 0x434 JUMPI JUMPDEST ISZERO SWAP1 DUP2 PUSH2 0x42B JUMPI JUMPDEST POP PUSH2 0x419 JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3B1A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x3A5 SWAP1 DUP3 PUSH2 0x3F4 JUMPI PUSH2 0x81A JUMP JUMPDEST PUSH2 0x3AB JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3B1A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 SWAP1 LOG1 STOP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3B1A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL OR SWAP1 SSTORE PUSH2 0x81A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP1 POP ISZERO CODESIZE PUSH2 0x371 JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO SWAP2 POP PUSH2 0x369 JUMP JUMPDEST DUP4 SWAP2 POP PUSH2 0x35F JUMP JUMPDEST CALLVALUE PUSH2 0xF7 JUMPI PUSH1 0x40 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xF7 JUMPI PUSH2 0x460 PUSH2 0x2A6 JUMP JUMPDEST SWAP1 PUSH2 0x469 PUSH2 0x2BC JUMP JUMPDEST SWAP1 PUSH32 0x9B779B17422D0DF92223018B32B4D1FA46E071723D6817E2486D003BECC55F00 PUSH1 0x2 DUP2 SLOAD EQ PUSH2 0x6F1 JUMPI PUSH1 0x2 SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP3 DUP5 AND DUP2 DUP6 AND PUSH2 0x4B3 DUP2 DUP4 EQ ISZERO PUSH2 0x889 JUMP JUMPDEST LT ISZERO PUSH2 0x6EC JUMPI SWAP2 JUMPDEST DUP4 DUP4 AND PUSH2 0x4C9 DUP2 ISZERO ISZERO PUSH2 0x8D5 JUMP JUMPDEST PUSH2 0x528 PUSH2 0x522 PUSH2 0x516 PUSH2 0x509 DUP6 PUSH2 0x4F2 DUP10 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x921 JUMP JUMPDEST PUSH2 0x2FC9 PUSH2 0x537 PUSH1 0x20 DUP3 ADD PUSH2 0x9BE JUMP JUMPDEST SWAP1 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 PUSH2 0xB31 DUP3 CODECOPY DUP5 MLOAD PUSH1 0x60 DUP8 DUP2 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT SWAP1 DUP2 AND PUSH1 0x20 DUP5 ADD SWAP1 DUP2 MSTORE SWAP2 DUP8 SWAP1 SHL AND PUSH1 0x34 DUP4 ADD MSTORE PUSH1 0x28 DUP3 MSTORE SWAP1 PUSH2 0x57E PUSH1 0x48 DUP3 PUSH2 0x99C JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP2 MLOAD SWAP1 PUSH1 0x0 CREATE2 SWAP4 DUP6 DUP6 AND SWAP6 DUP7 EXTCODESIZE ISZERO PUSH2 0xF7 JUMPI DUP5 MLOAD PUSH4 0x485CC955 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP6 AND PUSH1 0x24 DUP3 ADD MSTORE SWAP7 PUSH1 0x0 SWAP1 DUP9 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP5 SWAP1 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x6E7 JUMPI DUP7 PUSH2 0x624 PUSH2 0x660 SWAP3 PUSH2 0x6CA SWAP11 PUSH32 0xD3648BD0F6BA80134A33BA9275AC585D9D315F0AD8355CDDEFDE31AFA28D0E9 SWAP7 PUSH2 0x6CE JUMPI JUMPDEST POP PUSH2 0x643 DUP4 PUSH2 0x624 DUP11 PUSH2 0x4F2 DUP6 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x4F2 JUMP JUMPDEST PUSH2 0x669 DUP7 PUSH2 0x9DA JUMP JUMPDEST PUSH1 0x3 SLOAD DUP6 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 AND SWAP3 PUSH1 0x40 SWAP1 LOG3 PUSH2 0x6B2 PUSH1 0x1 PUSH32 0x9B779B17422D0DF92223018B32B4D1FA46E071723D6817E2486D003BECC55F00 SSTORE JUMP JUMPDEST MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE SWAP1 DUP2 SWAP1 PUSH1 0x20 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP1 PUSH2 0x6DB PUSH2 0x6E1 SWAP3 PUSH2 0x983 JUMP JUMPDEST DUP1 PUSH2 0xEC JUMP JUMPDEST CODESIZE PUSH2 0x5FF JUMP JUMPDEST PUSH2 0x9CE JUMP JUMPDEST PUSH2 0x4BB JUMP JUMPDEST DUP2 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0xF7 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF7 JUMPI PUSH1 0x20 PUSH2 0x71D PUSH2 0x2A6 JUMP JUMPDEST PUSH2 0x750 PUSH2 0x728 PUSH2 0x2BC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 DUP6 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP3 DUP6 AND DUP3 MSTORE PUSH1 0x20 SWAP3 SWAP1 SWAP3 MSTORE KECCAK256 SWAP1 JUMP JUMPDEST SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xF7 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF7 JUMPI PUSH2 0x783 PUSH2 0x776 PUSH2 0x2A6 JUMP JUMPDEST PUSH2 0x77E PUSH2 0xAC8 JUMP JUMPDEST PUSH2 0xA54 JUMP JUMPDEST STOP JUMPDEST CALLVALUE PUSH2 0xF7 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF7 JUMPI PUSH2 0x79E PUSH2 0x2A6 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 PUSH2 0x7B8 SWAP1 DUP4 AND CALLER EQ PUSH2 0x7D6 JUMP JUMPDEST AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL PUSH1 0x0 SLOAD AND OR PUSH1 0x0 SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST ISZERO PUSH2 0x7DD JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x20A6A6A330B1BA37B93C9D102327A92124A22222A7 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x822 PUSH2 0xB01 JUMP JUMPDEST PUSH2 0x82A PUSH2 0xB01 JUMP JUMPDEST PUSH2 0x833 CALLER PUSH2 0xA54 JUMP JUMPDEST PUSH2 0x83B PUSH2 0xB01 JUMP JUMPDEST PUSH2 0x843 PUSH2 0xB01 JUMP JUMPDEST PUSH1 0x1 PUSH32 0x9B779B17422D0DF92223018B32B4D1FA46E071723D6817E2486D003BECC55F00 SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL PUSH1 0x1 SLOAD AND OR PUSH1 0x1 SSTORE JUMP JUMPDEST ISZERO PUSH2 0x890 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x414D4D466163746F72793A204944454E544943414C5F41444452455353455300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x8DC JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x414D4D466163746F72793A205A45524F5F414444524553530000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x928 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x414D4D466163746F72793A20504149525F455849535453000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x997 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x96D JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x997 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH2 0x9CC PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x99C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x997 JUMPI PUSH1 0x1 DUP2 ADD DUP1 PUSH1 0x3 SSTORE DUP2 LT ISZERO PUSH2 0xA3E JUMPI PUSH1 0x3 PUSH1 0x0 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0xAAF JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3AFA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP5 OR SWAP1 SWAP2 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3AFA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0xAE9 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0xFF PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3B1A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x40 SHR AND ISZERO PUSH2 0xB1E JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0xB9 JUMPI PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 DUP2 SLOAD SWAP1 PUSH1 0xFF DUP3 PUSH1 0x40 SHR AND PUSH2 0xAA JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x2 PUSH1 0x1 PUSH1 0x40 SHL SUB NOT DUP3 DUP3 AND ADD PUSH2 0x65 JUMPI JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F0A SWAP1 DUP2 PUSH3 0xBF DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB NOT SWAP1 SWAP2 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 SWAP1 LOG1 CODESIZE DUP1 DUP1 PUSH2 0x55 JUMP JUMPDEST PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x22C0D9F EQ PUSH2 0x1A6D JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x19C3 JUMPI DUP1 PUSH4 0x902F1AC EQ PUSH2 0x196A JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1943 JUMPI DUP1 PUSH4 0xDFE1681 EQ PUSH2 0x191A JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x18EF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1809 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x17ED JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x17CA JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x1752 JUMPI DUP1 PUSH4 0x485CC955 EQ PUSH2 0x126E JUMPI DUP1 PUSH4 0x5909C0D5 EQ PUSH2 0x1250 JUMPI DUP1 PUSH4 0x5A3D5493 EQ PUSH2 0x1232 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x1202 JUMPI DUP1 PUSH4 0x6A627842 EQ PUSH2 0xF36 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0xEF0 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xE85 JUMPI DUP1 PUSH4 0x7464FC3D EQ PUSH2 0xE67 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0xE0D JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0xDA5 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0xC47 JUMPI DUP1 PUSH4 0x89AFCB44 EQ PUSH2 0x7E1 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x7AB JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x6A2 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x670 JUMPI DUP1 PUSH4 0xBA9A7A56 EQ PUSH2 0x653 JUMPI DUP1 PUSH4 0xBC25CF77 EQ PUSH2 0x515 JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x4EE JUMPI DUP1 PUSH4 0xD21220A7 EQ PUSH2 0x4C5 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x335 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2EB JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2BE JUMPI PUSH4 0xFFF6CAE9 EQ PUSH2 0x188 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2BB JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2BB JUMPI PUSH2 0x1A0 PUSH2 0x248C JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP1 DUP3 MSTORE ADDRESS PUSH1 0x4 DUP4 ADD MSTORE SWAP2 PUSH1 0x20 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP4 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 DUP7 AND GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x2B0 JUMPI DUP4 SWAP2 DUP7 SWAP4 PUSH2 0x27F JUMPI JUMPDEST POP PUSH1 0x2 SLOAD AND SWAP4 PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP7 DUP2 SWAP4 DUP3 MSTORE ADDRESS PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x274 JUMPI DUP5 SWAP3 PUSH2 0x23D JUMPI JUMPDEST POP PUSH2 0x228 SWAP3 POP PUSH1 0x3 SLOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP1 DUP5 PUSH1 0x70 SHR AND SWAP4 AND SWAP2 PUSH2 0x263F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E95 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE DUP1 RETURN JUMPDEST SWAP1 SWAP2 POP DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x26D JUMPI JUMPDEST PUSH2 0x254 DUP2 DUP4 PUSH2 0x2164 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x268 JUMPI PUSH2 0x228 SWAP2 MLOAD SWAP1 CODESIZE PUSH2 0x208 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x24A JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP3 DUP2 SWAP4 SWAP3 SWAP5 POP RETURNDATASIZE DUP4 GT PUSH2 0x2A9 JUMPI JUMPDEST PUSH2 0x297 DUP2 DUP4 PUSH2 0x2164 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x268 JUMPI DUP3 SWAP1 MLOAD SWAP2 CODESIZE PUSH2 0x1E1 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x28D JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2BB JUMPI PUSH2 0x2E8 PUSH2 0x2DB PUSH2 0x20DD JUMP JUMPDEST PUSH2 0x2E3 PUSH2 0x2872 JUMP JUMPDEST PUSH2 0x2418 JUMP JUMPDEST DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2BB JUMPI PUSH2 0x305 PUSH2 0x20DD JUMP JUMPDEST PUSH2 0x316 PUSH2 0x310 PUSH2 0x20F3 JUMP JUMPDEST SWAP2 PUSH2 0x23DF JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI PUSH1 0xE0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2BB JUMPI PUSH2 0x34F PUSH2 0x20DD JUMP JUMPDEST SWAP1 PUSH2 0x358 PUSH2 0x20F3 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x64 CALLDATALOAD SWAP4 PUSH1 0x84 CALLDATALOAD SWAP5 PUSH1 0xFF DUP7 AND DUP7 SUB PUSH2 0x4C1 JUMPI DUP1 TIMESTAMP GT PUSH2 0x4A9 JUMPI PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 DUP4 AND SWAP7 DUP8 DUP8 MSTORE PUSH32 0x5AB42CED628888259C08AC98DB1EB0CF702FC1501344311D8B100CD1BFE4BB00 PUSH1 0x20 MSTORE PUSH1 0x40 DUP8 KECCAK256 SWAP1 DUP2 SLOAD SWAP2 PUSH1 0x1 DUP4 ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP3 PUSH1 0x20 DUP5 ADD SWAP3 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP5 MSTORE DUP11 PUSH1 0x40 DUP7 ADD MSTORE DUP6 DUP9 AND PUSH1 0x60 DUP7 ADD MSTORE DUP9 PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0xC0 DUP4 MSTORE PUSH1 0xE0 DUP4 ADD SWAP2 DUP4 DUP4 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP5 GT OR PUSH2 0x493 JUMPI PUSH2 0x461 SWAP4 PUSH2 0x458 SWAP4 PUSH1 0x40 MSTORE MLOAD SWAP1 KECCAK256 PUSH2 0x431 PUSH2 0x2B78 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x1901 PUSH1 0xF0 SHL DUP4 MSTORE PUSH1 0x2 DUP4 ADD MSTORE PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0xC4 CALLDATALOAD SWAP2 PUSH1 0x42 PUSH1 0xA4 CALLDATALOAD SWAP3 KECCAK256 PUSH2 0x2C1C JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0x2CA0 JUMP JUMPDEST AND DUP6 DUP2 SUB PUSH2 0x475 JUMPI POP PUSH2 0x2E8 SWAP4 SWAP5 POP PUSH2 0x2B1A JUMP JUMPDEST PUSH1 0x44 SWAP1 DUP7 PUSH1 0x40 MLOAD SWAP2 PUSH4 0x25C00723 PUSH1 0xE1 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x313C8981 PUSH1 0xE1 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2BB JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2BB JUMPI SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x64F JUMPI PUSH2 0x530 PUSH2 0x20DD JUMP JUMPDEST SWAP1 PUSH2 0x539 PUSH2 0x248C JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP1 DUP3 MSTORE ADDRESS PUSH1 0x4 DUP4 ADD MSTORE SWAP1 SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP5 SWAP1 SWAP4 SWAP1 SWAP3 AND DUP3 DUP7 PUSH1 0x24 DUP2 DUP5 GAS STATICCALL SWAP6 DUP7 ISZERO PUSH2 0x644 JUMPI DUP8 SWAP7 PUSH2 0x613 JUMPI JUMPDEST POP PUSH2 0x59F SWAP1 DUP5 PUSH2 0x599 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB SWAP9 DUP10 PUSH1 0x3 SLOAD AND SWAP1 PUSH2 0x2185 JUMP JUMPDEST SWAP2 PUSH2 0x24E7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE DUP2 DUP2 PUSH1 0x24 DUP2 DUP8 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x608 JUMPI DUP7 SWAP3 PUSH2 0x5D8 JUMPI JUMPDEST POP POP PUSH2 0x599 SWAP1 PUSH2 0x228 SWAP5 PUSH1 0x3 SLOAD PUSH1 0x70 SHR AND SWAP1 PUSH2 0x2185 JUMP JUMPDEST SWAP1 DUP1 SWAP3 POP DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x601 JUMPI JUMPDEST PUSH2 0x5EF DUP2 DUP4 PUSH2 0x2164 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x268 JUMPI MLOAD DUP4 PUSH2 0x599 PUSH2 0x5C1 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x5E5 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 SWAP6 POP DUP3 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x63D JUMPI JUMPDEST PUSH2 0x62B DUP2 DUP4 PUSH2 0x2164 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x268 JUMPI MLOAD SWAP5 PUSH2 0x59F PUSH2 0x57C JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x621 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2BB JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH2 0x3E8 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2BB JUMPI PUSH2 0x697 PUSH2 0x68D PUSH2 0x20DD JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x2784 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2BB JUMPI PUSH1 0x40 MLOAD PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE04 DUP1 SLOAD DUP3 PUSH1 0x0 PUSH2 0x6E5 DUP4 PUSH2 0x21BB JUMP JUMPDEST SWAP3 DUP4 DUP4 MSTORE PUSH1 0x20 SWAP5 PUSH1 0x1 SWAP2 DUP7 PUSH1 0x1 DUP3 AND SWAP2 DUP3 PUSH1 0x0 EQ PUSH2 0x789 JUMPI POP POP PUSH1 0x1 EQ PUSH2 0x72D JUMPI JUMPDEST POP POP PUSH2 0x715 SWAP3 POP SUB DUP4 PUSH2 0x2164 JUMP JUMPDEST PUSH2 0x729 PUSH1 0x40 MLOAD SWAP3 DUP3 DUP5 SWAP4 DUP5 MSTORE DUP4 ADD SWAP1 PUSH2 0x2109 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP6 SWAP3 POP PUSH1 0x0 MSTORE PUSH32 0x46A2803E59A4DE4E7A4C574B1243F25977AC4C77D5A1A4A609B5394CEBB4A2AA SWAP1 PUSH1 0x0 SWAP2 JUMPDEST DUP6 DUP4 LT PUSH2 0x771 JUMPI POP POP PUSH2 0x715 SWAP4 POP DUP3 ADD ADD DUP6 DUP1 PUSH2 0x707 JUMP JUMPDEST DUP1 SLOAD DUP4 DUP10 ADD DUP6 ADD MSTORE DUP8 SWAP5 POP DUP7 SWAP4 SWAP1 SWAP3 ADD SWAP2 DUP2 ADD PUSH2 0x759 JUMP JUMPDEST SWAP3 POP SWAP4 POP POP PUSH2 0x715 SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD DUP6 DUP1 PUSH2 0x707 JUMP JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2BB JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E35 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2BB JUMPI PUSH2 0x7FB PUSH2 0x20DD JUMP JUMPDEST PUSH2 0x803 PUSH2 0x248C JUMP JUMPDEST PUSH2 0x80B PUSH2 0x24BC JUMP JUMPDEST PUSH2 0x82A PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB SWAP2 DUP3 DUP3 AND SWAP3 DUP3 PUSH1 0x70 SHR AND SWAP2 PUSH1 0xE0 SHR SWAP1 JUMP JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP7 SWAP5 SWAP6 SWAP2 SWAP1 SWAP3 AND SWAP4 SWAP1 SWAP3 SWAP1 PUSH1 0x20 DUP4 PUSH1 0x24 DUP2 DUP9 GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0xC3A JUMPI DUP2 SWAP4 PUSH2 0xC06 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP7 PUSH1 0x20 DUP9 PUSH1 0x24 DUP2 DUP5 GAS STATICCALL SWAP6 DUP7 ISZERO PUSH2 0xBFB JUMPI DUP8 SWAP9 DUP4 SWAP9 SWAP8 PUSH2 0xBC4 JUMPI JUMPDEST POP ADDRESS DUP4 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E15 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH2 0x8F7 PUSH2 0x8EB PUSH2 0x8EB PUSH2 0x8F0 PUSH2 0x8D1 DUP9 PUSH1 0x40 DUP10 KECCAK256 SLOAD SWAP13 PUSH2 0x28B8 JUMP JUMPDEST SWAP9 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E55 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP4 DUP5 SWAP2 DUP14 PUSH2 0x21A8 JUMP JUMPDEST PUSH2 0x23BF JUMP JUMPDEST SWAP11 DUP11 PUSH2 0x21A8 JUMP JUMPDEST SWAP7 DUP9 ISZERO ISZERO DUP1 PUSH2 0xBBB JUMPI JUMPDEST ISZERO PUSH2 0xB62 JUMPI ADDRESS ISZERO PUSH2 0xB49 JUMPI ADDRESS PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E15 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD DUP2 DUP2 LT PUSH2 0xB21 JUMPI SWAP2 PUSH1 0x0 DUP3 PUSH1 0x20 SWAP4 PUSH1 0x24 SWAP7 SWAP6 ADDRESS DUP5 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E15 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP7 MSTORE SUB PUSH1 0x40 DUP4 KECCAK256 SSTORE DUP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E55 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SUB PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E55 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 ADDRESS SWAP3 LOG3 PUSH2 0x9AC DUP11 DUP10 DUP4 PUSH2 0x24E7 JUMP JUMPDEST PUSH2 0x9B7 DUP10 DUP10 DUP6 PUSH2 0x24E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP4 DUP5 SWAP2 DUP3 SWAP1 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0xB16 JUMPI DUP4 SWAP3 PUSH2 0xAE1 JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x24 SWAP2 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP3 MSTORE ADDRESS PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0xAD5 JUMPI SWAP3 PUSH2 0xA9A JUMPI JUMPDEST POP SWAP7 PUSH2 0xA1A SWAP3 SWAP2 PUSH1 0x40 SWAP9 PUSH2 0x263F JUMP JUMPDEST PUSH2 0xA77 JUMPI JUMPDEST DUP4 MLOAD SWAP1 DUP4 DUP3 MSTORE DUP3 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0xDCCD412F0B1252819CB1FD330B93224CA42612892BB3F4F789976E6D81936496 DUP6 CALLER SWAP3 LOG3 PUSH1 0x1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E95 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST PUSH2 0xA92 PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP1 DUP3 PUSH1 0x70 SHR AND SWAP2 AND PUSH2 0x21A8 JUMP JUMPDEST PUSH1 0x6 SSTORE PUSH2 0xA1F JUMP JUMPDEST SWAP3 SWAP2 POP SWAP7 PUSH1 0x20 DUP4 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xACD JUMPI JUMPDEST DUP2 PUSH2 0xAB7 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x2164 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x268 JUMPI SWAP2 MLOAD SWAP2 SWAP7 SWAP1 SWAP2 SWAP1 PUSH1 0x40 PUSH2 0xA0B JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xAAA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 SWAP2 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xB0E JUMPI JUMPDEST DUP2 PUSH2 0xAFD PUSH1 0x20 SWAP4 DUP4 PUSH2 0x2164 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x268 JUMPI MLOAD SWAP1 PUSH1 0x20 PUSH2 0x9DF JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xAF0 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x414D4D546F6B656E506169723A20494E53554646494349454E545F4C49515549 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x1112551657D09554939151 PUSH1 0xAA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP DUP8 ISZERO ISZERO PUSH2 0x901 JUMP JUMPDEST SWAP7 POP SWAP7 POP PUSH1 0x20 DUP7 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xBF3 JUMPI JUMPDEST DUP2 PUSH2 0xBE1 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x2164 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x268 JUMPI DUP8 SWAP6 MLOAD SWAP7 CODESIZE PUSH2 0x8A0 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xBD4 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 SWAP3 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xC32 JUMPI JUMPDEST DUP2 PUSH2 0xC22 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x2164 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x268 JUMPI MLOAD SWAP2 CODESIZE PUSH2 0x871 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xC15 JUMP JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2BB JUMPI PUSH32 0xA16A46D94261C7517CC8FF89F61C0CE93598E3C849801011DEE649A6A557D100 SLOAD ISZERO DUP1 PUSH2 0xD7C JUMPI JUMPDEST ISZERO PUSH2 0xD3F JUMPI PUSH2 0xC8E PUSH2 0x21F5 JUMP JUMPDEST SWAP1 PUSH2 0xC97 PUSH2 0x22DF JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 SWAP1 PUSH1 0x20 DUP4 ADD SWAP4 DUP4 DUP6 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP7 GT OR PUSH2 0x493 JUMPI SWAP3 DUP5 SWAP3 PUSH1 0x20 PUSH2 0xCF5 DUP9 SWAP7 PUSH2 0xCE7 SWAP9 PUSH1 0x40 MSTORE DUP6 DUP6 MSTORE PUSH1 0x40 MLOAD SWAP9 DUP10 SWAP9 PUSH1 0xF PUSH1 0xF8 SHL DUP11 MSTORE PUSH1 0xE0 DUP6 DUP12 ADD MSTORE PUSH1 0xE0 DUP11 ADD SWAP1 PUSH2 0x2109 JUMP JUMPDEST SWAP1 DUP9 DUP3 SUB PUSH1 0x40 DUP11 ADD MSTORE PUSH2 0x2109 JUMP JUMPDEST SWAP3 CHAINID PUSH1 0x60 DUP9 ADD MSTORE ADDRESS PUSH1 0x80 DUP9 ADD MSTORE DUP5 PUSH1 0xA0 DUP9 ADD MSTORE DUP7 DUP5 SUB PUSH1 0xC0 DUP9 ADD MSTORE MLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP4 SWAP3 JUMPDEST DUP3 DUP2 LT PUSH2 0xD28 JUMPI POP POP POP POP SUB SWAP1 RETURN JUMPDEST DUP4 MLOAD DUP6 MSTORE DUP7 SWAP6 POP SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0xD19 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x1152540DCC4C8E88155B9A5B9A5D1A585B1A5E9959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH32 0xA16A46D94261C7517CC8FF89F61C0CE93598E3C849801011DEE649A6A557D101 SLOAD ISZERO PUSH2 0xC81 JUMP JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2BB JUMPI PUSH2 0xDBE PUSH2 0x2872 JUMP JUMPDEST PUSH2 0xDC6 PUSH2 0x24BC JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E75 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH1 0x20 PUSH1 0x40 MLOAD CALLER DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2BB JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xE2F PUSH2 0x20DD JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH32 0x5AB42CED628888259C08AC98DB1EB0CF702FC1501344311D8B100CD1BFE4BB00 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2BB JUMPI PUSH1 0x20 PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2BB JUMPI PUSH2 0xE9E PUSH2 0x2872 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E35 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2BB JUMPI PUSH1 0x20 SWAP1 PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xF18 PUSH2 0x20DD JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E15 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 MSTORE KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x64F JUMPI PUSH2 0xF51 PUSH2 0x20DD JUMP JUMPDEST SWAP1 PUSH2 0xF5A PUSH2 0x248C JUMP JUMPDEST PUSH2 0xF62 PUSH2 0x24BC JUMP JUMPDEST PUSH2 0xF81 PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB SWAP2 DUP3 DUP3 AND SWAP3 DUP3 PUSH1 0x70 SHR AND SWAP2 PUSH1 0xE0 SHR SWAP1 JUMP JUMPDEST POP SWAP2 SWAP1 SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 PUSH1 0x1 SLOAD AND SWAP4 PUSH1 0x40 MLOAD DUP5 DUP2 PUSH1 0x24 DUP2 PUSH4 0x70A08231 PUSH1 0xE0 SHL SWAP10 DUP11 DUP3 MSTORE ADDRESS PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x11F7 JUMPI DUP6 SWAP2 DUP10 SWAP4 PUSH2 0x11C6 JUMPI JUMPDEST POP PUSH1 0x2 SLOAD AND SWAP6 PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP9 DUP2 SWAP4 DUP3 MSTORE ADDRESS PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP5 DUP6 ISZERO PUSH2 0x644 JUMPI DUP8 SWAP6 PUSH2 0x1197 JUMPI JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB SWAP2 DUP3 DUP8 AND SWAP7 PUSH2 0xFFE DUP9 DUP5 PUSH2 0x2185 JUMP JUMPDEST SWAP7 DUP5 DUP4 AND SWAP4 PUSH2 0x100D DUP6 DUP4 PUSH2 0x2185 JUMP JUMPDEST SWAP10 PUSH2 0x1018 DUP6 DUP6 PUSH2 0x28B8 JUMP JUMPDEST SWAP6 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E55 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP2 DUP3 ISZERO PUSH1 0x0 EQ PUSH2 0x107E JUMPI DUP14 PUSH2 0x1046 PUSH2 0x1041 DUP16 DUP16 PUSH2 0x21A8 JUMP JUMPDEST PUSH2 0x29F8 JUMP JUMPDEST PUSH2 0x3E7 NOT DUP2 ADD GT PUSH2 0x106A JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP14 SWAP2 PUSH2 0x8EB PUSH2 0x1099 DUP15 SWAP14 SWAP16 SWAP13 SWAP15 SWAP4 PUSH2 0x8EB DUP8 PUSH2 0x10A0 SWAP7 PUSH2 0x21A8 JUMP JUMPDEST SWAP5 DUP13 PUSH2 0x21A8 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 LT ISZERO PUSH2 0x1190 JUMPI POP JUMPDEST SWAP9 DUP10 ISZERO PUSH2 0x1137 JUMPI SWAP1 PUSH2 0x10C4 DUP11 PUSH2 0x10C9 SWAP7 SWAP6 SWAP5 SWAP4 PUSH2 0x2A54 JUMP JUMPDEST PUSH2 0x263F JUMP JUMPDEST PUSH2 0x1119 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE DUP4 DUP3 ADD MSTORE PUSH32 0x4C209B5FC8AD50758F13E2E1088BA56A560DFF690A1C6FEF26394F4C03821C4F PUSH1 0x40 CALLER SWAP3 LOG2 PUSH1 0x1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E95 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH2 0x112E SWAP1 PUSH1 0x3 SLOAD SWAP1 DUP1 DUP3 PUSH1 0x70 SHR AND SWAP2 AND PUSH2 0x21A8 JUMP JUMPDEST PUSH1 0x6 SSTORE DUP5 PUSH2 0x10CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP13 SWAP1 MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x414D4D546F6B656E506169723A20494E53554646494349454E545F4C49515549 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x1112551657D35253951151 PUSH1 0xAA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH2 0x10AC JUMP JUMPDEST SWAP1 SWAP5 POP DUP4 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x11BF JUMPI JUMPDEST PUSH2 0x11AF DUP2 DUP4 PUSH2 0x2164 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x268 JUMPI MLOAD SWAP4 CODESIZE PUSH2 0xFE6 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x11A5 JUMP JUMPDEST DUP3 DUP2 SWAP4 SWAP3 SWAP5 POP RETURNDATASIZE DUP4 GT PUSH2 0x11F0 JUMPI JUMPDEST PUSH2 0x11DE DUP2 DUP4 PUSH2 0x2164 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x268 JUMPI DUP5 SWAP1 MLOAD SWAP2 CODESIZE PUSH2 0xFBF JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x11D4 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP11 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2BB JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E75 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2BB JUMPI PUSH1 0x20 PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2BB JUMPI PUSH1 0x20 PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2BB JUMPI PUSH2 0x1288 PUSH2 0x20DD JUMP JUMPDEST SWAP1 PUSH2 0x1291 PUSH2 0x20F3 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2EB5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 AND DUP1 ISZERO SWAP1 DUP2 PUSH2 0x1742 JUMPI JUMPDEST PUSH1 0x1 EQ SWAP1 DUP2 PUSH2 0x1738 JUMPI JUMPDEST ISZERO SWAP1 DUP2 PUSH2 0x172F JUMPI JUMPDEST POP PUSH2 0x171D JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB NOT DUP4 AND OR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2EB5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE PUSH1 0xFF DUP3 PUSH1 0x40 SHR AND ISZERO PUSH2 0x16F0 JUMPI JUMPDEST PUSH2 0x12FF PUSH2 0x23A0 JUMP JUMPDEST SWAP4 PUSH2 0x1308 PUSH2 0x23A0 JUMP JUMPDEST SWAP5 PUSH2 0x1311 PUSH2 0x2BED JUMP JUMPDEST PUSH2 0x1319 PUSH2 0x2BED JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x15C5 JUMPI DUP1 PUSH2 0x1342 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2DF5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH2 0x21BB JUMP JUMPDEST SWAP3 PUSH1 0x1F SWAP4 DUP5 DUP2 GT PUSH2 0x166F JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 DUP5 DUP4 GT PUSH1 0x1 EQ PUSH2 0x15E4 JUMPI DUP9 SWAP3 PUSH2 0x15D9 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2DF5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE JUMPDEST DUP6 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x15C5 JUMPI PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE04 SWAP2 PUSH2 0x13C2 DUP4 SLOAD PUSH2 0x21BB JUMP JUMPDEST DUP2 DUP2 GT PUSH2 0x1566 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 DUP3 GT PUSH1 0x1 EQ PUSH2 0x14E3 JUMPI DUP2 SWAP1 DUP8 SWAP9 PUSH1 0xFF SWAP9 SWAP3 PUSH2 0x14D8 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST PUSH2 0x1401 PUSH2 0x2BED JUMP JUMPDEST PUSH2 0x1409 PUSH2 0x2BED JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E95 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE PUSH2 0x1423 PUSH2 0x2BED JUMP JUMPDEST PUSH2 0x142B PUSH2 0x2BED JUMP JUMPDEST PUSH2 0x1433 PUSH2 0x2BED JUMP JUMPDEST PUSH2 0x143C CALLER PUSH2 0x2418 JUMP JUMPDEST PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL SWAP2 CALLER DUP4 DUP8 SLOAD AND OR DUP7 SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP3 AND DUP4 PUSH1 0x1 SLOAD AND OR PUSH1 0x1 SSTORE AND SWAP1 PUSH1 0x2 SLOAD AND OR PUSH1 0x2 SSTORE PUSH1 0x40 SHR AND ISZERO PUSH2 0x147E JUMPI DUP1 RETURN JUMPDEST PUSH9 0xFF0000000000000000 NOT PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2EB5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2EB5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x13E4 JUMP JUMPDEST DUP3 DUP8 MSTORE PUSH32 0x46A2803E59A4DE4E7A4C574B1243F25977AC4C77D5A1A4A609B5394CEBB4A2AA SWAP8 PUSH1 0x1F NOT DUP4 AND DUP9 JUMPDEST DUP2 DUP2 LT PUSH2 0x154E JUMPI POP SWAP2 PUSH1 0xFF SWAP9 SWAP10 SWAP2 DUP5 PUSH1 0x1 SWAP6 SWAP5 LT PUSH2 0x1535 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x13F9 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x1528 JUMP JUMPDEST DUP4 DUP4 ADD MLOAD DUP12 SSTORE PUSH1 0x1 SWAP1 SWAP11 ADD SWAP10 PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 ADD PUSH2 0x150F JUMP JUMPDEST DUP4 DUP9 MSTORE PUSH32 0x46A2803E59A4DE4E7A4C574B1243F25977AC4C77D5A1A4A609B5394CEBB4A2AA DUP3 DUP1 DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 PUSH1 0x20 DUP7 LT PUSH2 0x15BC JUMPI JUMPDEST ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x15B1 JUMPI POP PUSH2 0x13CA JUMP JUMPDEST DUP9 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x15A4 JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH2 0x159D JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x1363 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2DF5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP10 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2DD5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 POP PUSH1 0x1F NOT DUP5 AND DUP10 JUMPDEST DUP2 DUP2 LT PUSH2 0x1657 JUMPI POP SWAP1 DUP5 PUSH1 0x1 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH2 0x163E JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2DF5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE PUSH2 0x1386 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x1623 JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0x160D JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2DF5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP9 MSTORE DUP4 DUP1 DUP5 ADD PUSH1 0x5 SHR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2DD5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0x16DA JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 ADD PUSH1 0x5 SHR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2DD5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x16CC JUMPI POP PUSH2 0x134E JUMP JUMPDEST DUP10 DUP2 SSTORE DUP5 SWAP4 POP PUSH1 0x1 ADD PUSH2 0x16BF JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2DD5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 POP PUSH2 0x16A4 JUMP JUMPDEST PUSH9 0xFFFFFFFFFFFFFFFFFF NOT DUP3 AND PUSH9 0x10000000000000001 OR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2EB5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE PUSH2 0x12F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP1 POP ISZERO CODESIZE PUSH2 0x12C7 JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO SWAP2 POP PUSH2 0x12BF JUMP JUMPDEST PUSH1 0x40 DUP5 SWAP1 SHR PUSH1 0xFF AND ISZERO SWAP2 POP PUSH2 0x12B5 JUMP JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2BB JUMPI PUSH2 0x176B PUSH2 0x2872 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E75 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0xFF DUP2 AND ISZERO PUSH2 0x17B8 JUMPI PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH1 0x20 PUSH1 0x40 MLOAD CALLER DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2BB JUMPI PUSH1 0x20 PUSH2 0x17E5 PUSH2 0x2B78 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2BB JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2BB JUMPI PUSH2 0x1823 PUSH2 0x20DD JUMP JUMPDEST PUSH2 0x182B PUSH2 0x20F3 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH2 0x1838 DUP4 PUSH2 0x23DF JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP3 PUSH1 0x0 NOT DUP5 LT PUSH2 0x185A JUMPI JUMPDEST PUSH2 0x697 SWAP4 POP PUSH2 0x2784 JUMP JUMPDEST DUP3 DUP5 LT PUSH2 0x18C9 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x18B0 JUMPI CALLER ISZERO PUSH2 0x1897 JUMPI DUP3 PUSH2 0x697 SWAP5 PUSH2 0x1884 DUP4 PUSH2 0x23DF JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE SUB PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH2 0x1850 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2BB JUMPI PUSH1 0x20 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E55 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2BB JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2BB JUMPI PUSH2 0x697 PUSH2 0x1960 PUSH2 0x20DD JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x2B1A JUMP JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2BB JUMPI PUSH1 0x60 PUSH4 0xFFFFFFFF PUSH2 0x19A1 PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB SWAP2 DUP3 DUP3 AND SWAP3 DUP3 PUSH1 0x70 SHR AND SWAP2 PUSH1 0xE0 SHR SWAP1 JUMP JUMPDEST SWAP1 SWAP3 SWAP2 PUSH1 0x40 MLOAD SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP1 SWAP3 AND DUP6 MSTORE AND PUSH1 0x20 DUP5 ADD MSTORE AND PUSH1 0x40 DUP3 ADD MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2BB JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2DF5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD DUP3 PUSH1 0x0 PUSH2 0x19F4 DUP4 PUSH2 0x21BB JUMP JUMPDEST SWAP3 DUP4 DUP4 MSTORE PUSH1 0x20 SWAP5 PUSH1 0x1 SWAP2 DUP7 PUSH1 0x1 DUP3 AND SWAP2 DUP3 PUSH1 0x0 EQ PUSH2 0x789 JUMPI POP POP PUSH1 0x1 EQ PUSH2 0x1A23 JUMPI POP POP PUSH2 0x715 SWAP3 POP SUB DUP4 PUSH2 0x2164 JUMP JUMPDEST DUP6 SWAP3 POP PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2DD5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x0 SWAP2 JUMPDEST DUP6 DUP4 LT PUSH2 0x1A55 JUMPI POP POP PUSH2 0x715 SWAP4 POP DUP3 ADD ADD DUP6 DUP1 PUSH2 0x707 JUMP JUMPDEST DUP1 SLOAD DUP4 DUP10 ADD DUP6 ADD MSTORE DUP8 SWAP5 POP DUP7 SWAP4 SWAP1 SWAP3 ADD SWAP2 DUP2 ADD PUSH2 0x1A3D JUMP JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2BB JUMPI PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 SUB PUSH2 0x2BB JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x64 CALLDATALOAD GT PUSH2 0x2BB JUMPI CALLDATASIZE PUSH1 0x23 PUSH1 0x64 CALLDATALOAD ADD SLT ISZERO PUSH2 0x2BB JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x64 CALLDATALOAD PUSH1 0x4 ADD CALLDATALOAD GT PUSH2 0x2BB JUMPI CALLDATASIZE PUSH1 0x24 PUSH1 0x64 CALLDATALOAD PUSH1 0x4 ADD CALLDATALOAD PUSH1 0x64 CALLDATALOAD ADD ADD GT PUSH2 0x2BB JUMPI PUSH2 0x1ADF PUSH2 0x248C JUMP JUMPDEST PUSH2 0x1AE7 PUSH2 0x24BC JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD ISZERO DUP1 ISZERO DUP1 SWAP2 PUSH2 0x20D2 JUMPI JUMPDEST ISZERO PUSH2 0x207C JUMPI PUSH2 0x1B18 PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB SWAP2 DUP3 DUP3 AND SWAP3 DUP3 PUSH1 0x70 SHR AND SWAP2 PUSH1 0xE0 SHR SWAP1 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP3 SWAP4 SWAP3 AND PUSH1 0x4 CALLDATALOAD LT DUP1 PUSH2 0x2068 JUMPI JUMPDEST ISZERO PUSH2 0x2017 JUMPI PUSH1 0x1 SLOAD PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP4 SWAP2 DUP2 AND SWAP2 SWAP1 PUSH1 0x44 CALLDATALOAD AND DUP3 EQ ISZERO DUP1 PUSH2 0x2002 JUMPI JUMPDEST ISZERO PUSH2 0x1FBD JUMPI PUSH2 0x1FA9 JUMPI JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH2 0x1F95 JUMPI JUMPDEST PUSH1 0x64 CALLDATALOAD PUSH1 0x4 ADD CALLDATALOAD PUSH2 0x1EC6 JUMPI JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x24 SWAP3 PUSH1 0x40 MLOAD SWAP4 DUP5 DUP1 SWAP3 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP3 MSTORE ADDRESS PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x2B0 JUMPI DUP6 SWAP3 PUSH2 0x1E8F JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x24 SWAP4 PUSH1 0x40 MLOAD SWAP5 DUP6 DUP1 SWAP3 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP3 MSTORE ADDRESS PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x2B0 JUMPI DUP6 SWAP4 PUSH2 0x1E5B JUMPI JUMPDEST POP PUSH2 0x1BE6 PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP7 AND PUSH2 0x2185 JUMP JUMPDEST DUP3 GT ISZERO PUSH2 0x1E54 JUMPI PUSH2 0x1C0B PUSH2 0x1C05 PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP8 AND PUSH2 0x2185 JUMP JUMPDEST DUP4 PUSH2 0x2185 JUMP JUMPDEST SWAP4 JUMPDEST PUSH2 0x1C22 PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP5 AND PUSH2 0x2185 JUMP JUMPDEST DUP5 GT ISZERO PUSH2 0x1E4D JUMPI PUSH2 0x1C47 PUSH2 0x1C41 PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP6 AND PUSH2 0x2185 JUMP JUMPDEST DUP6 PUSH2 0x2185 JUMP JUMPDEST SWAP4 JUMPDEST DUP6 ISZERO ISZERO DUP7 ISZERO PUSH2 0x1E44 JUMPI JUMPDEST ISZERO PUSH2 0x1DEF JUMPI DUP4 PUSH2 0x3E8 DUP2 MUL DIV PUSH2 0x3E8 EQ DUP5 ISZERO OR ISZERO PUSH2 0x1DDB JUMPI PUSH1 0x3 DUP7 MUL DUP7 DUP2 DIV PUSH1 0x3 EQ DUP8 ISZERO OR ISZERO PUSH2 0x1DC7 JUMPI PUSH2 0x1C8B SWAP1 PUSH2 0x3E8 DUP7 MUL PUSH2 0x2185 JUMP JUMPDEST PUSH2 0x3E8 DUP3 MUL DUP3 DUP2 DIV PUSH2 0x3E8 EQ DUP4 ISZERO OR ISZERO PUSH2 0x1D9F JUMPI PUSH1 0x3 DUP8 MUL SWAP1 DUP8 DUP3 DIV PUSH1 0x3 EQ DUP9 ISZERO OR ISZERO PUSH2 0x1DB3 JUMPI PUSH2 0x1CC6 SWAP3 SWAP2 PUSH2 0x1CC0 SWAP2 PUSH2 0x2185 JUMP JUMPDEST SWAP1 PUSH2 0x21A8 JUMP JUMPDEST PUSH2 0x1CE2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP6 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP6 AND PUSH2 0x21A8 JUMP JUMPDEST SWAP1 PUSH3 0xF4240 SWAP2 DUP3 DUP2 MUL SWAP3 DUP2 DUP5 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x1D9F JUMPI LT PUSH2 0x1D68 JUMPI PUSH2 0x1D06 SWAP4 PUSH2 0x263F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x44 CALLDATALOAD AND SWAP1 PUSH32 0xD78AD95FA46C994B6551D0DA85FC275FE613CE37657FB8D5E3D130840159D822 PUSH1 0x80 CALLER SWAP3 LOG3 PUSH1 0x1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E95 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x414D4D546F6B656E506169723A204B PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP11 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP11 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x414D4D546F6B656E506169723A20494E53554646494349454E545F494E505554 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x17D05353D55395 PUSH1 0xCA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP DUP5 ISZERO ISZERO PUSH2 0x1C53 JUMP JUMPDEST DUP6 SWAP4 PUSH2 0x1C49 JUMP JUMPDEST DUP5 SWAP4 PUSH2 0x1C0D JUMP JUMPDEST SWAP1 SWAP3 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1E87 JUMPI JUMPDEST DUP2 PUSH2 0x1E77 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x2164 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x268 JUMPI MLOAD SWAP2 CODESIZE PUSH2 0x1BD0 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1E6A JUMP JUMPDEST SWAP3 SWAP2 POP PUSH1 0x20 DUP4 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1EBE JUMPI JUMPDEST DUP2 PUSH2 0x1EAB PUSH1 0x20 SWAP4 DUP4 PUSH2 0x2164 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x268 JUMPI SWAP2 MLOAD SWAP1 SWAP2 PUSH1 0x20 PUSH2 0x1BA3 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1E9E JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE ISZERO PUSH2 0x4C1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x5FEA11F7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0x4 ADD CALLDATALOAD PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0x4 ADD CALLDATALOAD PUSH1 0x24 PUSH1 0x64 CALLDATALOAD ADD PUSH1 0xA4 DUP4 ADD CALLDATACOPY PUSH1 0xA4 PUSH1 0x64 CALLDATALOAD PUSH1 0x4 ADD CALLDATALOAD DUP3 DUP2 ADD DUP3 ADD DUP9 SWAP1 MSTORE DUP8 SWAP2 DUP4 SWAP2 PUSH1 0x1F NOT PUSH1 0x1F SWAP1 SWAP2 ADD AND DUP3 ADD DUP3 SWAP1 SUB ADD DUP2 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x44 CALLDATALOAD AND GAS CALL DUP1 ISZERO PUSH2 0x608 JUMPI PUSH2 0x1F65 JUMPI JUMPDEST POP PUSH2 0x1B76 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 SWAP7 SWAP3 SWAP7 GT PUSH2 0x1F81 JUMPI PUSH1 0x40 MSTORE SWAP4 PUSH1 0x20 PUSH2 0x1F5F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST PUSH2 0x1FA4 PUSH1 0x24 CALLDATALOAD PUSH1 0x44 CALLDATALOAD DUP6 PUSH2 0x24E7 JUMP JUMPDEST PUSH2 0x1B6A JUMP JUMPDEST PUSH2 0x1FB8 PUSH1 0x4 CALLDATALOAD PUSH1 0x44 CALLDATALOAD DUP4 PUSH2 0x24E7 JUMP JUMPDEST PUSH2 0x1B62 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x414D4D546F6B656E506169723A20494E56414C49445F544F0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 EQ ISZERO PUSH2 0x1B58 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x414D4D546F6B656E506169723A20494E53554646494349454E545F4C49515549 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x44495459 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP2 AND PUSH1 0x24 CALLDATALOAD LT PUSH2 0x1B2F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x414D4D546F6B656E506169723A20494E53554646494349454E545F4F55545055 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x1517D05353D55395 PUSH1 0xC2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP PUSH1 0x24 CALLDATALOAD ISZERO ISZERO PUSH2 0x1AF4 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x268 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x268 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x2135 JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x2114 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x493 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x493 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x2192 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x2192 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x21EB JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x21D5 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x21CA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x0 DUP3 PUSH32 0xA16A46D94261C7517CC8FF89F61C0CE93598E3C849801011DEE649A6A557D102 SWAP2 DUP3 SLOAD SWAP3 PUSH2 0x222A DUP5 PUSH2 0x21BB JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP4 PUSH1 0x20 SWAP2 PUSH1 0x1 SWAP2 DUP3 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x22B9 JUMPI POP PUSH1 0x1 EQ PUSH2 0x2258 JUMPI JUMPDEST POP POP POP PUSH2 0x2256 SWAP3 POP SUB DUP4 PUSH2 0x2164 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x42AD5D3E1F2E6E70EDCF6D991B8A3023D3FCA8047A131592F9EDB9FD9B89D57D SWAP6 SWAP1 SWAP4 POP SWAP2 SWAP1 JUMPDEST DUP3 DUP5 LT PUSH2 0x22A1 JUMPI POP PUSH2 0x2256 SWAP5 POP POP POP DUP2 ADD PUSH1 0x20 ADD CODESIZE DUP1 DUP1 PUSH2 0x2247 JUMP JUMPDEST DUP6 SLOAD DUP9 DUP6 ADD DUP4 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP3 DUP2 ADD SWAP3 PUSH2 0x2285 JUMP JUMPDEST SWAP3 POP POP POP PUSH1 0x20 SWAP3 POP PUSH2 0x2256 SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 DUP1 PUSH2 0x2247 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x0 DUP3 PUSH32 0xA16A46D94261C7517CC8FF89F61C0CE93598E3C849801011DEE649A6A557D103 SWAP2 DUP3 SLOAD SWAP3 PUSH2 0x2314 DUP5 PUSH2 0x21BB JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP4 PUSH1 0x20 SWAP2 PUSH1 0x1 SWAP2 DUP3 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x22B9 JUMPI POP PUSH1 0x1 EQ PUSH2 0x233F JUMPI POP POP POP PUSH2 0x2256 SWAP3 POP SUB DUP4 PUSH2 0x2164 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x5F9CE34815F8E11431C7BB75A8E6886A91478F7FFC1DBB0A98DC240FDDD76B75 SWAP6 SWAP1 SWAP4 POP SWAP2 SWAP1 JUMPDEST DUP3 DUP5 LT PUSH2 0x2388 JUMPI POP PUSH2 0x2256 SWAP5 POP POP POP DUP2 ADD PUSH1 0x20 ADD CODESIZE DUP1 DUP1 PUSH2 0x2247 JUMP JUMPDEST DUP6 SLOAD DUP9 DUP6 ADD DUP4 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP3 DUP2 ADD SWAP3 PUSH2 0x236C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x23AD DUP3 PUSH2 0x2149 JUMP JUMPDEST PUSH1 0x3 DUP3 MSTORE PUSH3 0x414D4D PUSH1 0xE8 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST DUP2 ISZERO PUSH2 0x23C9 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE01 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x2473 JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E35 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP5 OR SWAP1 SWAP2 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E95 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x2 DUP2 SLOAD EQ PUSH2 0x24AA JUMPI PUSH1 0x2 SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0xFF PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E75 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD AND PUSH2 0x24D5 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP3 SWAP2 PUSH2 0x24F5 DUP5 PUSH2 0x2149 JUMP JUMPDEST PUSH1 0x19 DUP5 MSTORE PUSH32 0x7472616E7366657228616464726573732C75696E743235362900000000000000 PUSH1 0x20 SWAP5 DUP6 ADD MSTORE PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 DUP7 ADD SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP3 DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP3 PUSH1 0x80 DUP2 ADD DUP5 DUP2 GT DUP3 DUP3 LT OR PUSH2 0x493 JUMPI PUSH1 0x40 MSTORE PUSH1 0x0 SWAP3 DUP4 SWAP3 DUP4 DUP1 SWAP4 MLOAD SWAP3 GAS CALL SWAP2 RETURNDATASIZE ISZERO PUSH2 0x2637 JUMPI RETURNDATASIZE SWAP1 DUP2 GT PUSH2 0x1F81 JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH2 0x259A PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP7 ADD DUP4 PUSH2 0x2164 JUMP JUMPDEST DUP2 MSTORE RETURNDATASIZE DUP3 DUP6 DUP4 ADD RETURNDATACOPY JUMPDEST DUP3 PUSH2 0x25F7 JUMPI JUMPDEST POP POP ISZERO PUSH2 0x25B3 JUMPI POP JUMP JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x414D4D546F6B656E506169723A205452414E534645525F4641494C4544000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP1 MLOAD SWAP3 POP DUP3 ISZERO SWAP2 SWAP1 DUP5 DUP4 ISZERO PUSH2 0x2613 JUMPI JUMPDEST POP POP POP SWAP1 POP CODESIZE DUP1 PUSH2 0x25A9 JUMP JUMPDEST SWAP2 SWAP4 DUP2 DUP1 SWAP5 POP ADD SUB SLT PUSH2 0x64F JUMPI DUP3 ADD MLOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH2 0x2BB JUMPI POP DUP1 CODESIZE DUP1 DUP5 PUSH2 0x2607 JUMP JUMPDEST POP PUSH1 0x60 PUSH2 0x25A3 JUMP JUMPDEST SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB SWAP1 DUP2 DUP6 GT ISZERO DUP1 PUSH2 0x277A JUMPI JUMPDEST ISZERO PUSH2 0x273C JUMPI PUSH32 0x1C411E9A96E071241C2F21F7726B17AE89E3CAB4C78BE50E062B03A9FFFBBAD1 SWAP5 PUSH1 0x40 SWAP5 DUP4 SWAP3 PUSH4 0xFFFFFFFF PUSH1 0x3 SLOAD PUSH1 0xE0 SHR DUP2 TIMESTAMP AND SUB AND SWAP2 DUP3 ISZERO ISZERO DUP1 PUSH2 0x2731 JUMPI JUMPDEST DUP1 PUSH2 0x2726 JUMPI JUMPDEST PUSH2 0x26E3 JUMPI JUMPDEST POP POP POP PUSH1 0x70 SWAP4 DUP5 SHL PUSH1 0x1 PUSH1 0x70 SHL PUSH1 0x1 PUSH1 0xE0 SHL SUB AND SWAP2 AND SWAP1 DUP2 OR TIMESTAMP PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND OR PUSH1 0x3 DUP2 SWAP1 SSTORE DUP5 MLOAD SWAP2 DUP3 MSTORE SWAP1 SWAP3 SHR AND PUSH1 0x20 DUP3 ADD MSTORE LOG1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB SWAP2 PUSH2 0x2715 SWAP2 SWAP1 PUSH2 0x2702 SWAP1 DUP6 DUP6 PUSH2 0x2707 DUP4 DUP6 DUP8 PUSH2 0x2ACD JUMP JUMPDEST PUSH2 0x2AFC JUMP JUMPDEST AND MUL PUSH1 0x4 SLOAD ADD PUSH1 0x4 SSTORE PUSH2 0x2ACD JUMP JUMPDEST AND MUL PUSH1 0x5 SLOAD ADD PUSH1 0x5 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x26A5 JUMP JUMPDEST POP DUP5 DUP2 AND ISZERO ISZERO PUSH2 0x26A0 JUMP JUMPDEST POP DUP5 DUP3 AND ISZERO ISZERO PUSH2 0x269A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x414D4D546F6B656E506169723A204F564552464C4F57 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP DUP2 DUP4 GT ISZERO PUSH2 0x2654 JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 DUP4 ISZERO PUSH2 0x2859 JUMPI AND SWAP3 DUP4 ISZERO PUSH2 0x2840 JUMPI PUSH1 0x0 SWAP1 DUP4 DUP3 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E15 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SLOAD SWAP2 DUP5 DUP4 LT PUSH2 0x280D JUMPI POP DUP3 DUP5 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 SWAP4 PUSH1 0x40 SWAP4 DUP9 PUSH1 0x20 SWAP8 MSTORE DUP7 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE POP PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E35 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x2893 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x2192 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH3 0x2FCFCB PUSH1 0xE3 SHL DUP2 MSTORE SWAP4 SWAP5 SWAP4 SWAP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x20 SWAP1 DUP6 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 DUP6 AND GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0xB16 JUMPI DUP4 SWAP5 PUSH2 0x29B7 JUMPI JUMPDEST POP DUP4 AND ISZERO ISZERO SWAP5 PUSH1 0x6 SLOAD SWAP2 DUP7 PUSH1 0x0 EQ PUSH2 0x29A6 JUMPI DUP3 PUSH2 0x2911 JUMPI JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1041 PUSH2 0x292E SWAP2 PUSH2 0x2934 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP1 SWAP2 AND SWAP2 AND PUSH2 0x21A8 JUMP JUMPDEST SWAP2 PUSH2 0x29F8 JUMP JUMPDEST SWAP1 DUP2 DUP2 GT PUSH2 0x2943 JUMPI JUMPDEST DUP1 PUSH2 0x290A JUMP JUMPDEST PUSH2 0x2960 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E55 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH2 0x1CC0 DUP5 DUP5 PUSH2 0x2185 JUMP JUMPDEST SWAP3 PUSH1 0x5 DUP3 MUL SWAP2 DUP1 DUP4 DIV PUSH1 0x5 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x106A JUMPI POP PUSH2 0x2989 SWAP3 SWAP2 PUSH2 0x2983 SWAP2 PUSH2 0x28AB JUMP JUMPDEST SWAP1 PUSH2 0x23BF JUMP JUMPDEST DUP1 PUSH2 0x2996 JUMPI JUMPDEST DUP1 DUP1 PUSH2 0x293D JUMP JUMPDEST PUSH2 0x299F SWAP2 PUSH2 0x2A54 JUMP JUMPDEST CODESIZE DUP1 PUSH2 0x298F JUMP JUMPDEST POP POP SWAP1 SWAP2 POP PUSH2 0x29B2 JUMPI POP JUMP JUMPDEST PUSH1 0x6 SSTORE JUMP JUMPDEST SWAP1 SWAP4 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x29F0 JUMPI JUMPDEST DUP2 PUSH2 0x29D3 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x2164 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x29EC JUMPI MLOAD DUP4 DUP2 AND DUP2 SUB PUSH2 0x29EC JUMPI SWAP3 CODESIZE PUSH2 0x28F2 JUMP JUMPDEST DUP3 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x29C6 JUMP JUMPDEST SWAP1 PUSH1 0x0 PUSH1 0x3 DUP4 GT ISZERO PUSH2 0x2A47 JUMPI POP DUP2 PUSH1 0x1 SWAP1 DUP1 PUSH1 0x1 SHR PUSH1 0x1 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x2192 JUMPI SWAP2 SWAP1 JUMPDEST DUP5 DUP4 LT PUSH2 0x2A27 JUMPI POP POP POP JUMP JUMPDEST SWAP1 SWAP2 SWAP4 POP PUSH2 0x2A3E DUP5 PUSH2 0x2A39 DUP2 DUP5 PUSH2 0x23BF JUMP JUMPDEST PUSH2 0x28AB JUMP JUMPDEST DUP3 SHR SWAP2 SWAP1 PUSH2 0x2A1B JUMP JUMPDEST SWAP2 PUSH2 0x2A4E JUMPI JUMP JUMPDEST PUSH1 0x1 SWAP2 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x2840 JUMPI PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x20 PUSH1 0x0 SWAP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E55 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x2AA4 DUP3 DUP3 SLOAD PUSH2 0x28AB JUMP JUMPDEST SWAP1 SSTORE DUP5 DUP5 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E15 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP3 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x70 SHL PUSH1 0x1 PUSH1 0xE0 SHL SUB PUSH1 0x70 DUP3 SWAP1 SHL AND SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND DUP1 DUP3 DIV PUSH1 0x1 PUSH1 0x70 SHL EQ SWAP1 ISZERO OR ISZERO PUSH2 0x2192 JUMPI SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x23C9 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND DIV SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 DUP4 ISZERO PUSH2 0x18B0 JUMPI AND SWAP3 DUP4 ISZERO PUSH2 0x1897 JUMPI PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 PUSH2 0x2B62 PUSH1 0x20 SWAP3 PUSH2 0x23DF JUMP JUMPDEST DUP6 PUSH1 0x0 MSTORE DUP3 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH2 0x2B80 PUSH2 0x2D25 JUMP JUMPDEST PUSH2 0x2B88 PUSH2 0x2D8F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD SWAP3 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F DUP5 MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 MSTORE PUSH1 0xC0 DUP2 ADD DUP2 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x493 JUMPI PUSH1 0x40 MSTORE MLOAD SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2EB5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x40 SHR AND ISZERO PUSH2 0x2C0A JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT PUSH2 0x2C94 JUMPI SWAP3 PUSH1 0x20 SWAP3 SWAP2 PUSH1 0xFF PUSH1 0x80 SWAP6 PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE AND DUP5 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 SWAP3 DUP4 SWAP2 DUP3 DUP1 MSTORE PUSH1 0x1 GAS STATICCALL ISZERO PUSH2 0xAD5 JUMPI DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x2C8B JUMPI SWAP2 DUP2 SWAP1 JUMP JUMPDEST POP DUP1 SWAP2 PUSH1 0x1 SWAP2 SWAP1 JUMP JUMPDEST POP POP POP PUSH1 0x0 SWAP2 PUSH1 0x3 SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x2D0F JUMPI DUP1 PUSH2 0x2CB2 JUMPI POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 SUB PUSH2 0x2CCC JUMPI PUSH1 0x40 MLOAD PUSH4 0xF645EEDF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP2 SUB PUSH2 0x2CED JUMPI PUSH1 0x40 MLOAD PUSH4 0xFCE698F7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x3 EQ PUSH2 0x2CF7 JUMPI POP JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x35E2F383 PUSH1 0xE2 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x2D2D PUSH2 0x21F5 JUMP JUMPDEST DUP1 MLOAD SWAP1 DUP2 ISZERO PUSH2 0x2D3D JUMPI PUSH1 0x20 ADD KECCAK256 SWAP1 JUMP JUMPDEST POP POP PUSH32 0xA16A46D94261C7517CC8FF89F61C0CE93598E3C849801011DEE649A6A557D100 SLOAD DUP1 ISZERO PUSH2 0x2D6A JUMPI SWAP1 JUMP JUMPDEST POP PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 SWAP1 JUMP JUMPDEST PUSH2 0x2D97 PUSH2 0x22DF JUMP JUMPDEST DUP1 MLOAD SWAP1 DUP2 ISZERO PUSH2 0x2DA7 JUMPI PUSH1 0x20 ADD KECCAK256 SWAP1 JUMP JUMPDEST POP POP PUSH32 0xA16A46D94261C7517CC8FF89F61C0CE93598E3C849801011DEE649A6A557D101 SLOAD DUP1 ISZERO PUSH2 0x2D6A JUMPI SWAP1 JUMP INVALID 0x2A 0xE0 DUP11 DUP15 0x29 0x25 EXTCODEHASH PUSH10 0xAC5D979A101956AB8F8D SWAP14 PUSH30 0xED63FA7A83B16FC47648EAB052C63247E1F47DB19D5CE0460030C497F067 0xCA 0x4C 0xEB 0xF7 SHL 0xA9 DUP15 0xEA 0xDA 0xBE KECCAK256 0xBA 0xCE SUB MSTORE 0xC6 ORIGIN SELFBALANCE 0xE1 DELEGATECALL PUSH30 0xB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE009016D09D72 0xD4 0xF 0xDA 0xE2 REVERT DUP13 0xEA 0xC6 0xB6 0x23 0x4C PUSH24 0x6214FD39C1CD1E609A0528C19930052C63247E1F47DB19D 0x5C 0xE0 CHAINID STOP ADDRESS 0xC4 SWAP8 CREATE PUSH8 0xCA4CEBF71BA98EEA 0xDA 0xBE KECCAK256 0xBA 0xCE MUL 0xCD 0x5E 0xD1 0x5C PUSH15 0x187E77E9AEE88184C21F4F2182AB58 0x27 0xCB EXTCODESIZE PUSH31 0x7FBEDCD63F033009B779B17422D0DF92223018B32B4D1FA46E071723D6817 0xE2 BASEFEE PUSH14 0x3BECC55F00F0C57E16840DF040 CALL POP DUP9 0xDC 0x2F DUP2 INVALID CODECOPY SHR CODECOPY 0x23 0xBE 0xC7 RETURNDATACOPY 0x23 0xA9 PUSH7 0x2EFC9C229C6A00 LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 SELFDESTRUCT 0xDD RETURNDATASIZE SWAP3 0xE9 0xDA SLOAD MULMOD ADD 0xDE 0xFB DUP3 DELEGATECALL 0xC PUSH25 0x49526E5EA3C333DEA2EDC1213DF2D8F964736F6C6343000816 STOP CALLER SWAP1 AND 0xD0 SWAP14 PUSH19 0xD40FDAE2FD8CEAC6B6234C7706214FD39C1CD1 0xE6 MULMOD LOG0 MSTORE DUP13 NOT SWAP4 STOP CREATE 0xC5 PUSH31 0x16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00A264 PUSH10 0x706673582212209FE4C8 CALLVALUE 0x49 PUSH0 CREATE2 SDIV PUSH16 0x569A2C3E6AA06E330819C8D5B88AE252 GT SWAP9 0xE6 OR JUMPI LOG2 0xC7 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ","sourceMap":"398:3511:26:-:0;;;;;;;3147:66:1;398:3511:26;;;;;;;;;7894:76:1;;-1:-1:-1;;;;;;;;;;;;398:3511:26;;;7983:34:1;7979:146;;-1:-1:-1;398:3511:26;;;;;;;;;7979:146:1;-1:-1:-1;;;;;;398:3511:26;;;;;;;;;;;;;8085:29:1;;398:3511:26;;8085:29:1;7979:146;;;;;7894:76;-1:-1:-1;;;7936:23:1;;;;;398:3511:26;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode":{"entryPoint":236,"id":null,"parameterSlots":2,"returnSlots":0},"abi_decode_address":{"entryPoint":700,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_3214":{"entryPoint":678,"id":null,"parameterSlots":0,"returnSlots":1},"abi_encode_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_address_address":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_address_uint256":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_packed_address_address":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_rational_by":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory":{"entryPoint":2494,"id":null,"parameterSlots":1,"returnSlots":1},"array_push_from_address_to_array_address_dyn_storage_ptr":{"entryPoint":2522,"id":null,"parameterSlots":1,"returnSlots":0},"cleanup_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"external_fun_INIT_CODE_PAIR_HASH":{"entryPoint":455,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_allPairs":{"entryPoint":334,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_allPairsLength":{"entryPoint":425,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_createPair":{"entryPoint":1094,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_feeTo":{"entryPoint":252,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_feeToSetter":{"entryPoint":293,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getPair":{"entryPoint":1794,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_initialize":{"entryPoint":793,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_owner":{"entryPoint":624,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_renounceOwnership":{"entryPoint":514,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setFeeTo":{"entryPoint":1925,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setFeeToSetter":{"entryPoint":722,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_transferOwnership":{"entryPoint":1882,"id":null,"parameterSlots":0,"returnSlots":0},"finalize_allocation":{"entryPoint":2460,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_3223":{"entryPoint":2435,"id":null,"parameterSlots":1,"returnSlots":0},"fun_checkInitializing":{"entryPoint":2817,"id":370,"parameterSlots":0,"returnSlots":0},"fun_checkOwner":{"entryPoint":2760,"id":122,"parameterSlots":0,"returnSlots":0},"fun_initialize_inner":{"entryPoint":2074,"id":null,"parameterSlots":1,"returnSlots":0},"fun_nonReentrantAfter":{"entryPoint":null,"id":1675,"parameterSlots":0,"returnSlots":0},"fun_transferOwnership_inner":{"entryPoint":2644,"id":null,"parameterSlots":1,"returnSlots":0},"mapping_index_access_mapping_address_mapping_address_address_of_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"mapping_index_access_mapping_address_mapping_address_address_of_address_3222":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x41":{"entryPoint":2413,"id":null,"parameterSlots":0,"returnSlots":0},"read_from_storage_split_offset_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"require_helper_stringliteral":{"entryPoint":2006,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_0aab":{"entryPoint":2261,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_5f3d":{"entryPoint":2337,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_6e92":{"entryPoint":2185,"id":null,"parameterSlots":1,"returnSlots":0},"revert_forward":{"entryPoint":2510,"id":null,"parameterSlots":0,"returnSlots":0},"update_storage_value_offsett_address_to_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_bool_to_bool":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"update_storage_value_offsett_bool_to_bool_3218":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"update_storage_value_offsett_uint64_to_uint64":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436101561001257600080fd5b60003560e01c8063017e7e58146100e7578063094b7415146100e25780631e3dd18b146100dd578063574f2ba3146100d85780635855a25a146100d3578063715018a6146100ce5780638da5cb5b146100c9578063a2e74af6146100c4578063c4d66de8146100bf578063c9c65396146100ba578063e6a43905146100b5578063f2fde38b146100b05763f46901ed146100ab57600080fd5b610785565b61075a565b610702565b610446565b610319565b6102d2565b610270565b610202565b6101c7565b6101a9565b61014e565b610125565b6100fc565b60009103126100f757565b600080fd5b346100f75760003660031901126100f7576000546040516001600160a01b039091168152602090f35b346100f75760003660031901126100f7576001546040516001600160a01b039091168152602090f35b346100f75760203660031901126100f7576004356003548110156100f75760036000527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b01546040516001600160a01b039091168152602090f35b346100f75760003660031901126100f7576020600354604051908152f35b346100f75760003660031901126100f75760206040517f96e8ac4277198ff8b6f785478aa9a39f403cb768dd02cbee326c3e7da348845f8152f35b346100f75760008060031936011261026d5761021c610ac8565b600080516020613afa83398151915280546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b346100f75760003660031901126100f757600080516020613afa833981519152546040516001600160a01b039091168152602090f35b600435906001600160a01b03821682036100f757565b602435906001600160a01b03821682036100f757565b346100f75760203660031901126100f7576102eb6102a6565b600154906001600160a01b039061030533838516146107d6565b6001600160a01b0319909216911617600155005b346100f75760203660031901126100f7576103326102a6565b600080516020613b1a833981519152549067ffffffffffffffff60ff8360401c161592168015908161043e575b6001149081610434575b15908161042b575b5061041957600080516020613b1a833981519152805467ffffffffffffffff191660011790556103a590826103f45761081a565b6103ab57005b600080516020613b1a833981519152805460ff60401b19169055604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d290602090a1005b600080516020613b1a833981519152805460ff60401b1916600160401b17905561081a565b60405163f92ee8a960e01b8152600490fd5b90501538610371565b303b159150610369565b83915061035f565b346100f7576040806003193601126100f7576104606102a6565b906104696102bc565b907f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f0060028154146106f157600290556001600160a01b03928284168185166104b381831415610889565b10156106ec57915b8383166104c98115156108d5565b610528610522610516610509856104f28960018060a01b03166000526002602052604060002090565b9060018060a01b0316600052602052604060002090565b546001600160a01b031690565b6001600160a01b031690565b15610921565b612fc9610537602082016109be565b908082526020820190610b3182398451606087811b6bffffffffffffffffffffffff19908116602084019081529187901b166034830152602882529061057e60488261099c565b5190209151906000f59385851695863b156100f757845163485cc95560e01b81526001600160a01b03838116600483015285166024820152966000908890604490829084905af19182156106e75786610624610660926106ca9a7f0d3648bd0f6ba80134a33ba9275ac585d9d315f0ad8355cddefde31afa28d0e9966106ce575b50610643836106248a6104f28560018060a01b03166000526002602052604060002090565b80546001600160a01b0319166001600160a01b03909216919091179055565b6001600160a01b03881660009081526002602052604090206104f2565b610669866109da565b60035485516001600160a01b03881681526020810191909152931692604090a36106b260017f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f0055565b516001600160a01b0390911681529081906020820190565b0390f35b806106db6106e192610983565b806100ec565b386105ff565b6109ce565b6104bb565b8151633ee5aeb560e01b8152600490fd5b346100f75760403660031901126100f757602061071d6102a6565b6107506107286102bc565b6001600160a01b03928316600090815260028552604080822092851682526020929092522090565b5416604051908152f35b346100f75760203660031901126100f7576107836107766102a6565b61077e610ac8565b610a54565b005b346100f75760203660031901126100f75761079e6102a6565b6001546001600160a01b0391906107b890831633146107d6565b166bffffffffffffffffffffffff60a01b6000541617600055600080f35b156107dd57565b60405162461bcd60e51b815260206004820152601560248201527420a6a6a330b1ba37b93c9d102327a92124a22222a760591b6044820152606490fd5b610822610b01565b61082a610b01565b61083333610a54565b61083b610b01565b610843610b01565b60017f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f005560018060a01b03166bffffffffffffffffffffffff60a01b6001541617600155565b1561089057565b60405162461bcd60e51b815260206004820152601f60248201527f414d4d466163746f72793a204944454e544943414c5f414444524553534553006044820152606490fd5b156108dc57565b60405162461bcd60e51b815260206004820152601860248201527f414d4d466163746f72793a205a45524f5f4144445245535300000000000000006044820152606490fd5b1561092857565b60405162461bcd60e51b815260206004820152601760248201527f414d4d466163746f72793a20504149525f4558495354530000000000000000006044820152606490fd5b634e487b7160e01b600052604160045260246000fd5b67ffffffffffffffff811161099757604052565b61096d565b90601f8019910116810190811067ffffffffffffffff82111761099757604052565b906109cc604051928361099c565b565b6040513d6000823e3d90fd5b600354600160401b811015610997576001810180600355811015610a3e5760036000527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0180546001600160a01b0319166001600160a01b03909216919091179055565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b03908116908115610aaf57600080516020613afa83398151915280546001600160a01b031981168417909155167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b604051631e4fbdf760e01b815260006004820152602490fd5b600080516020613afa833981519152546001600160a01b03163303610ae957565b60405163118cdaa760e01b8152336004820152602490fd5b60ff600080516020613b1a8339815191525460401c1615610b1e57565b604051631afcd79f60e31b8152600490fdfe608080604052346100b9577ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a009081549060ff8260401c166100aa57506001600160401b036002600160401b031982821601610065575b604051612f0a9081620000bf8239f35b6001600160401b031990911681179091556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d290602090a1388080610055565b63f92ee8a960e01b8152600490fd5b600080fdfe6080604052600436101561001257600080fd5b6000803560e01c8063022c0d9f14611a6d57806306fdde03146119c35780630902f1ac1461196a578063095ea7b3146119435780630dfe16811461191a57806318160ddd146118ef57806323b872dd14611809578063313ce567146117ed5780633644e515146117ca5780633f4ba83a14611752578063485cc9551461126e5780635909c0d5146112505780635a3d5493146112325780635c975abb146112025780636a62784214610f3657806370a0823114610ef0578063715018a614610e855780637464fc3d14610e675780637ecebe0014610e0d5780638456cb5914610da557806384b0196e14610c4757806389afcb44146107e15780638da5cb5b146107ab57806395d89b41146106a2578063a9059cbb14610670578063ba9a7a5614610653578063bc25cf7714610515578063c45a0155146104ee578063d21220a7146104c5578063d505accf14610335578063dd62ed3e146102eb578063f2fde38b146102be5763fff6cae91461018857600080fd5b346102bb57806003193601126102bb576101a061248c565b6001546040516370a0823160e01b808252306004830152916020916001600160a01b039183908290602490829086165afa9182156102b0578391869361027f575b50600254169360246040518096819382523060048301525afa91821561027457849261023d575b506102289250600354916001600160701b03808460701c1693169161263f565b6001600080516020612e958339815191525580f35b90915082813d831161026d575b6102548183612164565b810103126102685761022891519038610208565b600080fd5b503d61024a565b6040513d86823e3d90fd5b8281939294503d83116102a9575b6102978183612164565b810103126102685782905191386101e1565b503d61028d565b6040513d87823e3d90fd5b80fd5b50346102bb5760203660031901126102bb576102e86102db6120dd565b6102e3612872565b612418565b80f35b50346102bb5760403660031901126102bb576103056120dd565b6103166103106120f3565b916123df565b9060018060a01b03166000526020526020604060002054604051908152f35b50346102bb5760e03660031901126102bb5761034f6120dd565b906103586120f3565b60443590606435936084359460ff861686036104c1578042116104a95760018060a01b0390818316968787527f5ab42ced628888259c08ac98db1eb0cf702fc1501344311d8b100cd1bfe4bb0060205260408720908154916001830190556040519260208401927f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c984528a6040860152858816606086015288608086015260a085015260c084015260c0835260e08301918383106001600160401b03841117610493576104619361045893604052519020610431612b78565b906040519161190160f01b83526002830152602282015260c43591604260a4359220612c1c565b90929192612ca0565b1685810361047557506102e8939450612b1a565b60449086604051916325c0072360e11b835260048301526024820152fd5b634e487b7160e01b600052604160045260246000fd5b6024906040519063313c898160e11b82526004820152fd5b8480fd5b50346102bb57806003193601126102bb576002546040516001600160a01b039091168152602090f35b50346102bb57806003193601126102bb57546040516001600160a01b039091168152602090f35b50346102bb5760208060031936011261064f576105306120dd565b9061053961248c565b6001546002546040516370a0823160e01b80825230600483015290946001600160a01b039283169490939092168286602481845afa958615610644578796610613575b5061059f90846105996001600160701b0398896003541690612185565b916124e7565b6040519081523060048201528181602481875afa9182156106085786926105d8575b5050610599906102289460035460701c1690612185565b90809250813d8311610601575b6105ef8183612164565b810103126102685751836105996105c1565b503d6105e5565b6040513d88823e3d90fd5b9095508281813d831161063d575b61062b8183612164565b8101031261026857519461059f61057c565b503d610621565b6040513d89823e3d90fd5b5080fd5b50346102bb57806003193601126102bb5760206040516103e88152f35b50346102bb5760403660031901126102bb5761069761068d6120dd565b6024359033612784565b602060405160018152f35b50346102bb57806003193601126102bb576040517f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0480548260006106e5836121bb565b928383526020946001918660018216918260001461078957505060011461072d575b505061071592500383612164565b610729604051928284938452830190612109565b0390f35b8592506000527f46a2803e59a4de4e7a4c574b1243f25977ac4c77d5a1a4a609b5394cebb4a2aa906000915b85831061077157505061071593508201018580610707565b80548389018501528794508693909201918101610759565b925093505061071594915060ff191682840152151560051b8201018580610707565b50346102bb57806003193601126102bb57600080516020612e35833981519152546040516001600160a01b039091168152602090f35b50346102bb5760203660031901126102bb576107fb6120dd565b61080361248c565b61080b6124bc565b61082a6003546001600160701b0391828216928260701c169160e01c90565b506001546002546040516370a0823160e01b81523060048201526001600160a01b039182169694959190921693909290602083602481885afa928315610c3a578193610c06575b506040516370a0823160e01b815230600482015296602088602481845afa958615610bfb578798839897610bc4575b50308352600080516020612e158339815191526020526108f76108eb6108eb6108f06108d18860408920549c6128b8565b98600080516020612e55833981519152549384918d6121a8565b6123bf565b9a8a6121a8565b9688151580610bbb575b15610b62573015610b495730600052600080516020612e15833981519152602052604060002054818110610b21579160008260209360249695308452600080516020612e15833981519152865203604083205580600080516020612e558339815191525403600080516020612e55833981519152556040519081527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef843092a36109ac8a89836124e7565b6109b78989856124e7565b6040516370a0823160e01b815230600482015293849182905afa918215610b16578392610ae1575b506020602491604051928380926370a0823160e01b82523060048301525afa928315610ad55792610a9a575b5096610a1a929160409861263f565b610a77575b83519083825282602083015260018060a01b0316907fdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d81936496853392a36001600080516020612e958339815191525582519182526020820152f35b610a926003546001600160701b03808260701c1691166121a8565b600655610a1f565b929150966020833d602011610acd575b81610ab760209383612164565b8101031261026857915191969091906040610a0b565b3d9150610aaa565b604051903d90823e3d90fd5b9091506020813d602011610b0e575b81610afd60209383612164565b8101031261026857519060206109df565b3d9150610af0565b6040513d85823e3d90fd5b60405163391434e360e21b815230600482015260248101919091526044810191909152606490fd5b604051634b637e8f60e11b815260048101859052602490fd5b60405162461bcd60e51b815260206004820152602b60248201527f414d4d546f6b656e506169723a20494e53554646494349454e545f4c4951554960448201526a1112551657d0955493915160aa1b6064820152608490fd5b50871515610901565b965096506020863d602011610bf3575b81610be160209383612164565b810103126102685787955196386108a0565b3d9150610bd4565b6040513d84823e3d90fd5b9092506020813d602011610c32575b81610c2260209383612164565b8101031261026857519138610871565b3d9150610c15565b50604051903d90823e3d90fd5b50346102bb57806003193601126102bb577fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d100541580610d7c575b15610d3f57610c8e6121f5565b90610c976122df565b906040519060209060208301938385106001600160401b03861117610493579284926020610cf58896610ce798604052858552604051988998600f60f81b8a5260e0858b015260e08a0190612109565b9088820360408a0152612109565b924660608801523060808801528460a088015286840360c088015251928381520193925b828110610d2857505050500390f35b835185528695509381019392810192600101610d19565b60405162461bcd60e51b81526020600482015260156024820152741152540dcc4c8e88155b9a5b9a5d1a585b1a5e9959605a1b6044820152606490fd5b507fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d1015415610c81565b50346102bb57806003193601126102bb57610dbe612872565b610dc66124bc565b600080516020612e75833981519152600160ff198254161790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586020604051338152a180f35b50346102bb5760203660031901126102bb576001600160a01b03610e2f6120dd565b166000527f5ab42ced628888259c08ac98db1eb0cf702fc1501344311d8b100cd1bfe4bb006020526020604060002054604051908152f35b50346102bb57806003193601126102bb576020600654604051908152f35b50346102bb57806003193601126102bb57610e9e612872565b600080516020612e3583398151915280546001600160a01b031981169091556000906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50346102bb5760203660031901126102bb576020906040906001600160a01b03610f186120dd565b168152600080516020612e1583398151915283522054604051908152f35b50346102bb5760208060031936011261064f57610f516120dd565b90610f5a61248c565b610f626124bc565b610f816003546001600160701b0391828216928260701c169160e01c90565b5091909260018060a01b039283600154169360405184816024816370a0823160e01b998a82523060048301525afa9182156111f757859189936111c6575b50600254169560246040518098819382523060048301525afa948515610644578795611197575b506001600160701b039182871696610ffe8884612185565b968483169361100d8583612185565b9961101885856128b8565b95600080516020612e558339815191525491821560001461107e578d6110466110418f8f6121a8565b6129f8565b6103e71981011161106a5760405163ec442f0560e01b815260006004820152602490fd5b634e487b7160e01b81526011600452602490fd5b8d916108eb6110998e9d9f9c9e936108eb876110a0966121a8565b948c6121a8565b90508082101561119057505b98891561113757906110c48a6110c996959493612a54565b61263f565b611119575b50604051918252838201527f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f60403392a26001600080516020612e9583398151915255604051908152f35b61112e9060035490808260701c1691166121a8565b600655846110ce565b60405162461bcd60e51b8152600481018c9052602b60248201527f414d4d546f6b656e506169723a20494e53554646494349454e545f4c4951554960448201526a1112551657d3525395115160aa1b6064820152608490fd5b90506110ac565b9094508381813d83116111bf575b6111af8183612164565b8101031261026857519338610fe6565b503d6111a5565b8281939294503d83116111f0575b6111de8183612164565b81010312610268578490519138610fbf565b503d6111d4565b6040513d8a823e3d90fd5b50346102bb57806003193601126102bb57602060ff600080516020612e7583398151915254166040519015158152f35b50346102bb57806003193601126102bb576020600554604051908152f35b50346102bb57806003193601126102bb576020600454604051908152f35b50346102bb5760403660031901126102bb576112886120dd565b906112916120f3565b600080516020612eb583398151915254906001600160401b03821680159081611742575b6001149081611738575b15908161172f575b5061171d5760016001600160401b0319831617600080516020612eb58339815191525560ff8260401c16156116f0575b6112ff6123a0565b936113086123a0565b94611311612bed565b611319612bed565b80516001600160401b0381116115c55780611342600080516020612df5833981519152546121bb565b92601f9384811161166f575b506020908483116001146115e45788926115d9575b50508160011b916000199060031b1c191617600080516020612df5833981519152555b85516001600160401b0381116115c5577f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace04916113c283546121bb565b818111611566575b5060209082116001146114e3578190879860ff98926114d8575b50508160011b916000199060031b1c19161790555b611401612bed565b611409612bed565b6001600080516020612e9583398151915255611423612bed565b61142b612bed565b611433612bed565b61143c33612418565b6bffffffffffffffffffffffff60a01b91338387541617865560018060a01b038092168360015416176001551690600254161760025560401c161561147e5780f35b68ff000000000000000019600080516020612eb58339815191525416600080516020612eb5833981519152557fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2602060405160018152a180f35b0151905038806113e4565b8287527f46a2803e59a4de4e7a4c574b1243f25977ac4c77d5a1a4a609b5394cebb4a2aa97601f198316885b81811061154e57509160ff989991846001959410611535575b505050811b0190556113f9565b015160001960f88460031b161c19169055388080611528565b838301518b556001909a01996020938401930161150f565b8388527f46a2803e59a4de4e7a4c574b1243f25977ac4c77d5a1a4a609b5394cebb4a2aa8280850160051c820192602086106115bc575b0160051c01905b8181106115b157506113ca565b8881556001016115a4565b9250819261159d565b634e487b7160e01b86526041600452602486fd5b015190503880611363565b600080516020612df58339815191528952600080516020612dd58339815191529250601f198416895b818110611657575090846001959493921061163e575b505050811b01600080516020612df583398151915255611386565b015160001960f88460031b161c19169055388080611623565b9293602060018192878601518155019501930161160d565b909150600080516020612df583398151915288528380840160051c600080516020612dd58339815191520191602085106116da575b90849392910160051c600080516020612dd583398151915201905b8181106116cc575061134e565b8981558493506001016116bf565b600080516020612dd583398151915292506116a4565b68ffffffffffffffffff1982166801000000000000000117600080516020612eb5833981519152556112f7565b60405163f92ee8a960e01b8152600490fd5b905015386112c7565b303b1591506112bf565b604084901c60ff161591506112b5565b50346102bb57806003193601126102bb5761176b612872565b600080516020612e75833981519152805460ff8116156117b85760ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6020604051338152a180f35b604051638dfc202b60e01b8152600490fd5b50346102bb57806003193601126102bb5760206117e5612b78565b604051908152f35b50346102bb57806003193601126102bb57602060405160128152f35b50346102bb5760603660031901126102bb576118236120dd565b61182b6120f3565b60443590611838836123df565b3360005260205260406000205492600019841061185a575b6106979350612784565b8284106118c9576001600160a01b038116156118b0573315611897578261069794611884836123df565b3360005260205203604060002055611850565b604051634a1406b160e11b815260006004820152602490fd5b60405163e602df0560e01b815260006004820152602490fd5b604051637dc7a0d960e11b81523360048201526024810185905260448101849052606490fd5b50346102bb57806003193601126102bb576020600080516020612e5583398151915254604051908152f35b50346102bb57806003193601126102bb576001546040516001600160a01b039091168152602090f35b50346102bb5760403660031901126102bb576106976119606120dd565b6024359033612b1a565b50346102bb57806003193601126102bb57606063ffffffff6119a16003546001600160701b0391828216928260701c169160e01c90565b909291604051936001600160701b038092168552166020840152166040820152f35b50346102bb57806003193601126102bb57604051600080516020612df583398151915280548260006119f4836121bb565b9283835260209460019186600182169182600014610789575050600114611a2357505061071592500383612164565b859250600052600080516020612dd5833981519152906000915b858310611a5557505061071593508201018580610707565b80548389018501528794508693909201918101611a3d565b50346102bb5760803660031901126102bb576044356001600160a01b03811690036102bb576001600160401b03606435116102bb573660236064350112156102bb576001600160401b0360643560040135116102bb57366024606435600401356064350101116102bb57611adf61248c565b611ae76124bc565b60043515801580916120d2575b1561207c57611b186003546001600160701b0391828216928260701c169160e01c90565b506001600160701b03829392166004351080612068575b15612017576001546002546001600160a01b039081169391811691906044351682141580612002575b15611fbd57611fa9575b602435611f95575b60643560040135611ec6575b906020602492604051938480926370a0823160e01b82523060048301525afa9182156102b0578592611e8f575b506020602493604051948580926370a0823160e01b82523060048301525afa9283156102b0578593611e5b575b50611be66004356001600160701b038616612185565b821115611e5457611c0b611c056004356001600160701b038716612185565b83612185565b935b611c226024356001600160701b038416612185565b841115611e4d57611c47611c416024356001600160701b038516612185565b85612185565b935b8515158615611e44575b15611def57836103e88102046103e81484151715611ddb576003860286810460031487151715611dc757611c8b906103e88602612185565b6103e882028281046103e81483151715611d9f57600387029087820460031488151715611db357611cc69291611cc091612185565b906121a8565b611ce26001600160701b0385166001600160701b0385166121a8565b90620f424091828102928184041490151715611d9f5710611d6857611d069361263f565b60405191825260208201526004356040820152602435606082015260018060a01b0360443516907fd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d82260803392a36001600080516020612e958339815191525580f35b60405162461bcd60e51b815260206004820152600f60248201526e414d4d546f6b656e506169723a204b60881b6044820152606490fd5b634e487b7160e01b89526011600452602489fd5b634e487b7160e01b8a52601160045260248afd5b634e487b7160e01b88526011600452602488fd5b634e487b7160e01b87526011600452602487fd5b60405162461bcd60e51b815260206004820152602760248201527f414d4d546f6b656e506169723a20494e53554646494349454e545f494e50555460448201526617d05353d5539560ca1b6064820152608490fd5b50841515611c53565b8593611c49565b8493611c0d565b9092506020813d602011611e87575b81611e7760209383612164565b8101031261026857519138611bd0565b3d9150611e6a565b9291506020833d602011611ebe575b81611eab60209383612164565b8101031261026857915190916020611ba3565b3d9150611e9e565b6044356001600160a01b03163b156104c157604051635fea11f760e01b815233600482015260043560248201526024356044820152608060648201526064356004013560848201526064356004013560246064350160a483013760a460643560040135828101820188905287918391601f19601f9091011682018290030181836001600160a01b03604435165af1801561060857611f65575b50611b76565b6001600160401b038196929611611f8157604052936020611f5f565b634e487b7160e01b82526041600452602482fd5b611fa4602435604435856124e7565b611b6a565b611fb8600435604435836124e7565b611b62565b60405162461bcd60e51b815260206004820152601860248201527f414d4d546f6b656e506169723a20494e56414c49445f544f00000000000000006044820152606490fd5b506044356001600160a01b0316841415611b58565b60405162461bcd60e51b8152602060048201526024808201527f414d4d546f6b656e506169723a20494e53554646494349454e545f4c495155496044820152634449545960e01b6064820152608490fd5b506001600160701b03811660243510611b2f565b60405162461bcd60e51b815260206004820152602860248201527f414d4d546f6b656e506169723a20494e53554646494349454e545f4f555450556044820152671517d05353d5539560c21b6064820152608490fd5b506024351515611af4565b600435906001600160a01b038216820361026857565b602435906001600160a01b038216820361026857565b919082519283825260005b848110612135575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201612114565b604081019081106001600160401b0382111761049357604052565b90601f801991011681019081106001600160401b0382111761049357604052565b9190820391821161219257565b634e487b7160e01b600052601160045260246000fd5b8181029291811591840414171561219257565b90600182811c921680156121eb575b60208310146121d557565b634e487b7160e01b600052602260045260246000fd5b91607f16916121ca565b604051906000827fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d1029182549261222a846121bb565b808452936020916001918281169081156122b95750600114612258575b50505061225692500383612164565b565b60009081527f42ad5d3e1f2e6e70edcf6d991b8a3023d3fca8047a131592f9edb9fd9b89d57d9590935091905b8284106122a15750612256945050508101602001388080612247565b85548885018301529485019487945092810192612285565b925050506020925061225694915060ff191682840152151560051b820101388080612247565b604051906000827fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d10391825492612314846121bb565b808452936020916001918281169081156122b9575060011461233f5750505061225692500383612164565b60009081527f5f9ce34815f8e11431c7bb75a8e6886a91478f7ffc1dbb0a98dc240fddd76b759590935091905b8284106123885750612256945050508101602001388080612247565b8554888501830152948501948794509281019261236c565b604051906123ad82612149565b6003825262414d4d60e81b6020830152565b81156123c9570490565b634e487b7160e01b600052601260045260246000fd5b6001600160a01b031660009081527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace016020526040902090565b6001600160a01b0390811690811561247357600080516020612e3583398151915280546001600160a01b031981168417909155167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b604051631e4fbdf760e01b815260006004820152602490fd5b600080516020612e9583398151915260028154146124aa5760029055565b604051633ee5aeb560e01b8152600490fd5b60ff600080516020612e7583398151915254166124d557565b60405163d93c066560e01b8152600490fd5b60405192916124f584612149565b601984527f7472616e7366657228616464726573732c75696e74323536290000000000000060209485015260405163a9059cbb60e01b8186019081526001600160a01b0390921660248201526044808201949094529283526001600160401b0392608081018481118282101761049357604052600092839283809351925af1913d15612637573d908111611f81576040519061259a601f8201601f1916860183612164565b81523d828583013e5b826125f7575b5050156125b35750565b6064906040519062461bcd60e51b82526004820152601d60248201527f414d4d546f6b656e506169723a205452414e534645525f4641494c45440000006044820152fd5b8051925082159190848315612613575b505050905038806125a9565b91938180945001031261064f578201519081151582036102bb575080388084612607565b5060606125a3565b92916001600160701b0390818511158061277a575b1561273c577f1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad194604094839263ffffffff60035460e01c81421603169182151580612731575b80612726575b6126e3575b505050607093841b600160701b600160e01b031691169081174260e01b6001600160e01b031916176003819055845191825290921c166020820152a1565b6001600160e01b03916127159190612702908585612707838587612acd565b612afc565b160260045401600455612acd565b1602600554016005553880806126a5565b5084811615156126a0565b50848216151561269a565b60405162461bcd60e51b8152602060048201526016602482015275414d4d546f6b656e506169723a204f564552464c4f5760501b6044820152606490fd5b5081831115612654565b916001600160a01b03808416928315612859571692831561284057600090838252600080516020612e158339815191528060205260408320549184831061280d575082847fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef959360409388602097528652038282205586815220818154019055604051908152a3565b60405163391434e360e21b81526001600160a01b0391909116600482015260248101929092525060448101839052606490fd5b60405163ec442f0560e01b815260006004820152602490fd5b604051634b637e8f60e11b815260006004820152602490fd5b600080516020612e35833981519152546001600160a01b0316330361289357565b60405163118cdaa760e01b8152336004820152602490fd5b9190820180921161219257565b60008054604051622fcfcb60e31b815293949392906001600160a01b03906020908590600490829085165afa938415610b165783946129b7575b50831615159460065491866000146129a65782612911575b5050505050565b61104161292e91612934936001600160701b0380911691166121a8565b916129f8565b90818111612943575b8061290a565b612960600080516020612e5583398151915254611cc08484612185565b9260058202918083046005149015171561106a57506129899291612983916128ab565b906123bf565b80612996575b808061293d565b61299f91612a54565b388061298f565b50509091506129b25750565b600655565b9093506020813d6020116129f0575b816129d360209383612164565b810103126129ec575183811681036129ec5792386128f2565b8280fd5b3d91506129c6565b9060006003831115612a475750816001908060011c600181018091116121925791905b848310612a2757505050565b90919350612a3e84612a3981846123bf565b6128ab565b821c9190612a1b565b91612a4e57565b60019150565b6001600160a01b0316908115612840577fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6020600092600080516020612e55833981519152612aa48282546128ab565b9055848452600080516020612e15833981519152825260408420818154019055604051908152a3565b600160701b600160e01b03607082901b16906001600160701b0316808204600160701b14901517156121925790565b906001600160701b03169081156123c9576001600160e01b03160490565b916001600160a01b038084169283156118b05716928315611897577f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591612b626020926123df565b85600052825280604060002055604051908152a3565b612b80612d25565b612b88612d8f565b6040519060208201927f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f8452604083015260608201524660808201523060a082015260a0815260c081018181106001600160401b038211176104935760405251902090565b60ff600080516020612eb58339815191525460401c1615612c0a57565b604051631afcd79f60e31b8152600490fd5b91907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411612c9457926020929160ff608095604051948552168484015260408301526060820152600092839182805260015afa15610ad55780516001600160a01b03811615612c8b57918190565b50809160019190565b50505060009160039190565b6004811015612d0f5780612cb2575050565b60018103612ccc5760405163f645eedf60e01b8152600490fd5b60028103612ced5760405163fce698f760e01b815260048101839052602490fd5b600314612cf75750565b602490604051906335e2f38360e21b82526004820152fd5b634e487b7160e01b600052602160045260246000fd5b612d2d6121f5565b8051908115612d3d576020012090565b50507fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d100548015612d6a5790565b507fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47090565b612d976122df565b8051908115612da7576020012090565b50507fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d101548015612d6a579056fe2ae08a8e29253f69ac5d979a101956ab8f8d9d7ded63fa7a83b16fc47648eab052c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0352c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace009016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930052c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace02cd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f033009b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00f0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00a2646970667358221220d3ffdd3d92e9da540901defb82f40c7849526e5ea3c333dea2edc1213df2d8f964736f6c634300081600339016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300f0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00a26469706673582212209fe4c834495ff5056f569a2c3e6aa06e330819c8d5b88ae2521198e61757a2c764736f6c63430008160033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x17E7E58 EQ PUSH2 0xE7 JUMPI DUP1 PUSH4 0x94B7415 EQ PUSH2 0xE2 JUMPI DUP1 PUSH4 0x1E3DD18B EQ PUSH2 0xDD JUMPI DUP1 PUSH4 0x574F2BA3 EQ PUSH2 0xD8 JUMPI DUP1 PUSH4 0x5855A25A EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xCE JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0xA2E74AF6 EQ PUSH2 0xC4 JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0xBF JUMPI DUP1 PUSH4 0xC9C65396 EQ PUSH2 0xBA JUMPI DUP1 PUSH4 0xE6A43905 EQ PUSH2 0xB5 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xB0 JUMPI PUSH4 0xF46901ED EQ PUSH2 0xAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x785 JUMP JUMPDEST PUSH2 0x75A JUMP JUMPDEST PUSH2 0x702 JUMP JUMPDEST PUSH2 0x446 JUMP JUMPDEST PUSH2 0x319 JUMP JUMPDEST PUSH2 0x2D2 JUMP JUMPDEST PUSH2 0x270 JUMP JUMPDEST PUSH2 0x202 JUMP JUMPDEST PUSH2 0x1C7 JUMP JUMPDEST PUSH2 0x1A9 JUMP JUMPDEST PUSH2 0x14E JUMP JUMPDEST PUSH2 0x125 JUMP JUMPDEST PUSH2 0xFC JUMP JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0xF7 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xF7 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF7 JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0xF7 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF7 JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0xF7 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF7 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0xF7 JUMPI PUSH1 0x3 PUSH1 0x0 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B ADD SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0xF7 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF7 JUMPI PUSH1 0x20 PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xF7 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF7 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x96E8AC4277198FF8B6F785478AA9A39F403CB768DD02CBEE326C3E7DA348845F DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xF7 JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x26D JUMPI PUSH2 0x21C PUSH2 0xAC8 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3AFA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xF7 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF7 JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3AFA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xF7 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xF7 JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0xF7 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF7 JUMPI PUSH2 0x2EB PUSH2 0x2A6 JUMP JUMPDEST PUSH1 0x1 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH2 0x305 CALLER DUP4 DUP6 AND EQ PUSH2 0x7D6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP3 AND SWAP2 AND OR PUSH1 0x1 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0xF7 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF7 JUMPI PUSH2 0x332 PUSH2 0x2A6 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3B1A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0xFF DUP4 PUSH1 0x40 SHR AND ISZERO SWAP3 AND DUP1 ISZERO SWAP1 DUP2 PUSH2 0x43E JUMPI JUMPDEST PUSH1 0x1 EQ SWAP1 DUP2 PUSH2 0x434 JUMPI JUMPDEST ISZERO SWAP1 DUP2 PUSH2 0x42B JUMPI JUMPDEST POP PUSH2 0x419 JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3B1A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x3A5 SWAP1 DUP3 PUSH2 0x3F4 JUMPI PUSH2 0x81A JUMP JUMPDEST PUSH2 0x3AB JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3B1A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 SWAP1 LOG1 STOP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3B1A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL OR SWAP1 SSTORE PUSH2 0x81A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP1 POP ISZERO CODESIZE PUSH2 0x371 JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO SWAP2 POP PUSH2 0x369 JUMP JUMPDEST DUP4 SWAP2 POP PUSH2 0x35F JUMP JUMPDEST CALLVALUE PUSH2 0xF7 JUMPI PUSH1 0x40 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xF7 JUMPI PUSH2 0x460 PUSH2 0x2A6 JUMP JUMPDEST SWAP1 PUSH2 0x469 PUSH2 0x2BC JUMP JUMPDEST SWAP1 PUSH32 0x9B779B17422D0DF92223018B32B4D1FA46E071723D6817E2486D003BECC55F00 PUSH1 0x2 DUP2 SLOAD EQ PUSH2 0x6F1 JUMPI PUSH1 0x2 SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP3 DUP5 AND DUP2 DUP6 AND PUSH2 0x4B3 DUP2 DUP4 EQ ISZERO PUSH2 0x889 JUMP JUMPDEST LT ISZERO PUSH2 0x6EC JUMPI SWAP2 JUMPDEST DUP4 DUP4 AND PUSH2 0x4C9 DUP2 ISZERO ISZERO PUSH2 0x8D5 JUMP JUMPDEST PUSH2 0x528 PUSH2 0x522 PUSH2 0x516 PUSH2 0x509 DUP6 PUSH2 0x4F2 DUP10 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x921 JUMP JUMPDEST PUSH2 0x2FC9 PUSH2 0x537 PUSH1 0x20 DUP3 ADD PUSH2 0x9BE JUMP JUMPDEST SWAP1 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 PUSH2 0xB31 DUP3 CODECOPY DUP5 MLOAD PUSH1 0x60 DUP8 DUP2 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT SWAP1 DUP2 AND PUSH1 0x20 DUP5 ADD SWAP1 DUP2 MSTORE SWAP2 DUP8 SWAP1 SHL AND PUSH1 0x34 DUP4 ADD MSTORE PUSH1 0x28 DUP3 MSTORE SWAP1 PUSH2 0x57E PUSH1 0x48 DUP3 PUSH2 0x99C JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP2 MLOAD SWAP1 PUSH1 0x0 CREATE2 SWAP4 DUP6 DUP6 AND SWAP6 DUP7 EXTCODESIZE ISZERO PUSH2 0xF7 JUMPI DUP5 MLOAD PUSH4 0x485CC955 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP6 AND PUSH1 0x24 DUP3 ADD MSTORE SWAP7 PUSH1 0x0 SWAP1 DUP9 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP5 SWAP1 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x6E7 JUMPI DUP7 PUSH2 0x624 PUSH2 0x660 SWAP3 PUSH2 0x6CA SWAP11 PUSH32 0xD3648BD0F6BA80134A33BA9275AC585D9D315F0AD8355CDDEFDE31AFA28D0E9 SWAP7 PUSH2 0x6CE JUMPI JUMPDEST POP PUSH2 0x643 DUP4 PUSH2 0x624 DUP11 PUSH2 0x4F2 DUP6 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x4F2 JUMP JUMPDEST PUSH2 0x669 DUP7 PUSH2 0x9DA JUMP JUMPDEST PUSH1 0x3 SLOAD DUP6 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 AND SWAP3 PUSH1 0x40 SWAP1 LOG3 PUSH2 0x6B2 PUSH1 0x1 PUSH32 0x9B779B17422D0DF92223018B32B4D1FA46E071723D6817E2486D003BECC55F00 SSTORE JUMP JUMPDEST MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE SWAP1 DUP2 SWAP1 PUSH1 0x20 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP1 PUSH2 0x6DB PUSH2 0x6E1 SWAP3 PUSH2 0x983 JUMP JUMPDEST DUP1 PUSH2 0xEC JUMP JUMPDEST CODESIZE PUSH2 0x5FF JUMP JUMPDEST PUSH2 0x9CE JUMP JUMPDEST PUSH2 0x4BB JUMP JUMPDEST DUP2 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0xF7 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF7 JUMPI PUSH1 0x20 PUSH2 0x71D PUSH2 0x2A6 JUMP JUMPDEST PUSH2 0x750 PUSH2 0x728 PUSH2 0x2BC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 DUP6 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP3 DUP6 AND DUP3 MSTORE PUSH1 0x20 SWAP3 SWAP1 SWAP3 MSTORE KECCAK256 SWAP1 JUMP JUMPDEST SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xF7 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF7 JUMPI PUSH2 0x783 PUSH2 0x776 PUSH2 0x2A6 JUMP JUMPDEST PUSH2 0x77E PUSH2 0xAC8 JUMP JUMPDEST PUSH2 0xA54 JUMP JUMPDEST STOP JUMPDEST CALLVALUE PUSH2 0xF7 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF7 JUMPI PUSH2 0x79E PUSH2 0x2A6 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 PUSH2 0x7B8 SWAP1 DUP4 AND CALLER EQ PUSH2 0x7D6 JUMP JUMPDEST AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL PUSH1 0x0 SLOAD AND OR PUSH1 0x0 SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST ISZERO PUSH2 0x7DD JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x20A6A6A330B1BA37B93C9D102327A92124A22222A7 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x822 PUSH2 0xB01 JUMP JUMPDEST PUSH2 0x82A PUSH2 0xB01 JUMP JUMPDEST PUSH2 0x833 CALLER PUSH2 0xA54 JUMP JUMPDEST PUSH2 0x83B PUSH2 0xB01 JUMP JUMPDEST PUSH2 0x843 PUSH2 0xB01 JUMP JUMPDEST PUSH1 0x1 PUSH32 0x9B779B17422D0DF92223018B32B4D1FA46E071723D6817E2486D003BECC55F00 SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL PUSH1 0x1 SLOAD AND OR PUSH1 0x1 SSTORE JUMP JUMPDEST ISZERO PUSH2 0x890 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x414D4D466163746F72793A204944454E544943414C5F41444452455353455300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x8DC JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x414D4D466163746F72793A205A45524F5F414444524553530000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x928 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x414D4D466163746F72793A20504149525F455849535453000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x997 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x96D JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x997 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH2 0x9CC PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x99C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x997 JUMPI PUSH1 0x1 DUP2 ADD DUP1 PUSH1 0x3 SSTORE DUP2 LT ISZERO PUSH2 0xA3E JUMPI PUSH1 0x3 PUSH1 0x0 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0xAAF JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3AFA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP5 OR SWAP1 SWAP2 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3AFA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0xAE9 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0xFF PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3B1A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x40 SHR AND ISZERO PUSH2 0xB1E JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0xB9 JUMPI PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 DUP2 SLOAD SWAP1 PUSH1 0xFF DUP3 PUSH1 0x40 SHR AND PUSH2 0xAA JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x2 PUSH1 0x1 PUSH1 0x40 SHL SUB NOT DUP3 DUP3 AND ADD PUSH2 0x65 JUMPI JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F0A SWAP1 DUP2 PUSH3 0xBF DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB NOT SWAP1 SWAP2 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 SWAP1 LOG1 CODESIZE DUP1 DUP1 PUSH2 0x55 JUMP JUMPDEST PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x22C0D9F EQ PUSH2 0x1A6D JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x19C3 JUMPI DUP1 PUSH4 0x902F1AC EQ PUSH2 0x196A JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1943 JUMPI DUP1 PUSH4 0xDFE1681 EQ PUSH2 0x191A JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x18EF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1809 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x17ED JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x17CA JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x1752 JUMPI DUP1 PUSH4 0x485CC955 EQ PUSH2 0x126E JUMPI DUP1 PUSH4 0x5909C0D5 EQ PUSH2 0x1250 JUMPI DUP1 PUSH4 0x5A3D5493 EQ PUSH2 0x1232 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x1202 JUMPI DUP1 PUSH4 0x6A627842 EQ PUSH2 0xF36 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0xEF0 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xE85 JUMPI DUP1 PUSH4 0x7464FC3D EQ PUSH2 0xE67 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0xE0D JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0xDA5 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0xC47 JUMPI DUP1 PUSH4 0x89AFCB44 EQ PUSH2 0x7E1 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x7AB JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x6A2 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x670 JUMPI DUP1 PUSH4 0xBA9A7A56 EQ PUSH2 0x653 JUMPI DUP1 PUSH4 0xBC25CF77 EQ PUSH2 0x515 JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x4EE JUMPI DUP1 PUSH4 0xD21220A7 EQ PUSH2 0x4C5 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x335 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2EB JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2BE JUMPI PUSH4 0xFFF6CAE9 EQ PUSH2 0x188 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2BB JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2BB JUMPI PUSH2 0x1A0 PUSH2 0x248C JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP1 DUP3 MSTORE ADDRESS PUSH1 0x4 DUP4 ADD MSTORE SWAP2 PUSH1 0x20 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP4 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 DUP7 AND GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x2B0 JUMPI DUP4 SWAP2 DUP7 SWAP4 PUSH2 0x27F JUMPI JUMPDEST POP PUSH1 0x2 SLOAD AND SWAP4 PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP7 DUP2 SWAP4 DUP3 MSTORE ADDRESS PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x274 JUMPI DUP5 SWAP3 PUSH2 0x23D JUMPI JUMPDEST POP PUSH2 0x228 SWAP3 POP PUSH1 0x3 SLOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP1 DUP5 PUSH1 0x70 SHR AND SWAP4 AND SWAP2 PUSH2 0x263F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E95 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE DUP1 RETURN JUMPDEST SWAP1 SWAP2 POP DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x26D JUMPI JUMPDEST PUSH2 0x254 DUP2 DUP4 PUSH2 0x2164 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x268 JUMPI PUSH2 0x228 SWAP2 MLOAD SWAP1 CODESIZE PUSH2 0x208 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x24A JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP3 DUP2 SWAP4 SWAP3 SWAP5 POP RETURNDATASIZE DUP4 GT PUSH2 0x2A9 JUMPI JUMPDEST PUSH2 0x297 DUP2 DUP4 PUSH2 0x2164 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x268 JUMPI DUP3 SWAP1 MLOAD SWAP2 CODESIZE PUSH2 0x1E1 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x28D JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2BB JUMPI PUSH2 0x2E8 PUSH2 0x2DB PUSH2 0x20DD JUMP JUMPDEST PUSH2 0x2E3 PUSH2 0x2872 JUMP JUMPDEST PUSH2 0x2418 JUMP JUMPDEST DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2BB JUMPI PUSH2 0x305 PUSH2 0x20DD JUMP JUMPDEST PUSH2 0x316 PUSH2 0x310 PUSH2 0x20F3 JUMP JUMPDEST SWAP2 PUSH2 0x23DF JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI PUSH1 0xE0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2BB JUMPI PUSH2 0x34F PUSH2 0x20DD JUMP JUMPDEST SWAP1 PUSH2 0x358 PUSH2 0x20F3 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x64 CALLDATALOAD SWAP4 PUSH1 0x84 CALLDATALOAD SWAP5 PUSH1 0xFF DUP7 AND DUP7 SUB PUSH2 0x4C1 JUMPI DUP1 TIMESTAMP GT PUSH2 0x4A9 JUMPI PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 DUP4 AND SWAP7 DUP8 DUP8 MSTORE PUSH32 0x5AB42CED628888259C08AC98DB1EB0CF702FC1501344311D8B100CD1BFE4BB00 PUSH1 0x20 MSTORE PUSH1 0x40 DUP8 KECCAK256 SWAP1 DUP2 SLOAD SWAP2 PUSH1 0x1 DUP4 ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP3 PUSH1 0x20 DUP5 ADD SWAP3 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP5 MSTORE DUP11 PUSH1 0x40 DUP7 ADD MSTORE DUP6 DUP9 AND PUSH1 0x60 DUP7 ADD MSTORE DUP9 PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0xC0 DUP4 MSTORE PUSH1 0xE0 DUP4 ADD SWAP2 DUP4 DUP4 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP5 GT OR PUSH2 0x493 JUMPI PUSH2 0x461 SWAP4 PUSH2 0x458 SWAP4 PUSH1 0x40 MSTORE MLOAD SWAP1 KECCAK256 PUSH2 0x431 PUSH2 0x2B78 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x1901 PUSH1 0xF0 SHL DUP4 MSTORE PUSH1 0x2 DUP4 ADD MSTORE PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0xC4 CALLDATALOAD SWAP2 PUSH1 0x42 PUSH1 0xA4 CALLDATALOAD SWAP3 KECCAK256 PUSH2 0x2C1C JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0x2CA0 JUMP JUMPDEST AND DUP6 DUP2 SUB PUSH2 0x475 JUMPI POP PUSH2 0x2E8 SWAP4 SWAP5 POP PUSH2 0x2B1A JUMP JUMPDEST PUSH1 0x44 SWAP1 DUP7 PUSH1 0x40 MLOAD SWAP2 PUSH4 0x25C00723 PUSH1 0xE1 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x313C8981 PUSH1 0xE1 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2BB JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2BB JUMPI SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x64F JUMPI PUSH2 0x530 PUSH2 0x20DD JUMP JUMPDEST SWAP1 PUSH2 0x539 PUSH2 0x248C JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP1 DUP3 MSTORE ADDRESS PUSH1 0x4 DUP4 ADD MSTORE SWAP1 SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP5 SWAP1 SWAP4 SWAP1 SWAP3 AND DUP3 DUP7 PUSH1 0x24 DUP2 DUP5 GAS STATICCALL SWAP6 DUP7 ISZERO PUSH2 0x644 JUMPI DUP8 SWAP7 PUSH2 0x613 JUMPI JUMPDEST POP PUSH2 0x59F SWAP1 DUP5 PUSH2 0x599 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB SWAP9 DUP10 PUSH1 0x3 SLOAD AND SWAP1 PUSH2 0x2185 JUMP JUMPDEST SWAP2 PUSH2 0x24E7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE DUP2 DUP2 PUSH1 0x24 DUP2 DUP8 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x608 JUMPI DUP7 SWAP3 PUSH2 0x5D8 JUMPI JUMPDEST POP POP PUSH2 0x599 SWAP1 PUSH2 0x228 SWAP5 PUSH1 0x3 SLOAD PUSH1 0x70 SHR AND SWAP1 PUSH2 0x2185 JUMP JUMPDEST SWAP1 DUP1 SWAP3 POP DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x601 JUMPI JUMPDEST PUSH2 0x5EF DUP2 DUP4 PUSH2 0x2164 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x268 JUMPI MLOAD DUP4 PUSH2 0x599 PUSH2 0x5C1 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x5E5 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 SWAP6 POP DUP3 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x63D JUMPI JUMPDEST PUSH2 0x62B DUP2 DUP4 PUSH2 0x2164 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x268 JUMPI MLOAD SWAP5 PUSH2 0x59F PUSH2 0x57C JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x621 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2BB JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH2 0x3E8 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2BB JUMPI PUSH2 0x697 PUSH2 0x68D PUSH2 0x20DD JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x2784 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2BB JUMPI PUSH1 0x40 MLOAD PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE04 DUP1 SLOAD DUP3 PUSH1 0x0 PUSH2 0x6E5 DUP4 PUSH2 0x21BB JUMP JUMPDEST SWAP3 DUP4 DUP4 MSTORE PUSH1 0x20 SWAP5 PUSH1 0x1 SWAP2 DUP7 PUSH1 0x1 DUP3 AND SWAP2 DUP3 PUSH1 0x0 EQ PUSH2 0x789 JUMPI POP POP PUSH1 0x1 EQ PUSH2 0x72D JUMPI JUMPDEST POP POP PUSH2 0x715 SWAP3 POP SUB DUP4 PUSH2 0x2164 JUMP JUMPDEST PUSH2 0x729 PUSH1 0x40 MLOAD SWAP3 DUP3 DUP5 SWAP4 DUP5 MSTORE DUP4 ADD SWAP1 PUSH2 0x2109 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP6 SWAP3 POP PUSH1 0x0 MSTORE PUSH32 0x46A2803E59A4DE4E7A4C574B1243F25977AC4C77D5A1A4A609B5394CEBB4A2AA SWAP1 PUSH1 0x0 SWAP2 JUMPDEST DUP6 DUP4 LT PUSH2 0x771 JUMPI POP POP PUSH2 0x715 SWAP4 POP DUP3 ADD ADD DUP6 DUP1 PUSH2 0x707 JUMP JUMPDEST DUP1 SLOAD DUP4 DUP10 ADD DUP6 ADD MSTORE DUP8 SWAP5 POP DUP7 SWAP4 SWAP1 SWAP3 ADD SWAP2 DUP2 ADD PUSH2 0x759 JUMP JUMPDEST SWAP3 POP SWAP4 POP POP PUSH2 0x715 SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD DUP6 DUP1 PUSH2 0x707 JUMP JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2BB JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E35 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2BB JUMPI PUSH2 0x7FB PUSH2 0x20DD JUMP JUMPDEST PUSH2 0x803 PUSH2 0x248C JUMP JUMPDEST PUSH2 0x80B PUSH2 0x24BC JUMP JUMPDEST PUSH2 0x82A PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB SWAP2 DUP3 DUP3 AND SWAP3 DUP3 PUSH1 0x70 SHR AND SWAP2 PUSH1 0xE0 SHR SWAP1 JUMP JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP7 SWAP5 SWAP6 SWAP2 SWAP1 SWAP3 AND SWAP4 SWAP1 SWAP3 SWAP1 PUSH1 0x20 DUP4 PUSH1 0x24 DUP2 DUP9 GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0xC3A JUMPI DUP2 SWAP4 PUSH2 0xC06 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP7 PUSH1 0x20 DUP9 PUSH1 0x24 DUP2 DUP5 GAS STATICCALL SWAP6 DUP7 ISZERO PUSH2 0xBFB JUMPI DUP8 SWAP9 DUP4 SWAP9 SWAP8 PUSH2 0xBC4 JUMPI JUMPDEST POP ADDRESS DUP4 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E15 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH2 0x8F7 PUSH2 0x8EB PUSH2 0x8EB PUSH2 0x8F0 PUSH2 0x8D1 DUP9 PUSH1 0x40 DUP10 KECCAK256 SLOAD SWAP13 PUSH2 0x28B8 JUMP JUMPDEST SWAP9 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E55 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP4 DUP5 SWAP2 DUP14 PUSH2 0x21A8 JUMP JUMPDEST PUSH2 0x23BF JUMP JUMPDEST SWAP11 DUP11 PUSH2 0x21A8 JUMP JUMPDEST SWAP7 DUP9 ISZERO ISZERO DUP1 PUSH2 0xBBB JUMPI JUMPDEST ISZERO PUSH2 0xB62 JUMPI ADDRESS ISZERO PUSH2 0xB49 JUMPI ADDRESS PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E15 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD DUP2 DUP2 LT PUSH2 0xB21 JUMPI SWAP2 PUSH1 0x0 DUP3 PUSH1 0x20 SWAP4 PUSH1 0x24 SWAP7 SWAP6 ADDRESS DUP5 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E15 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP7 MSTORE SUB PUSH1 0x40 DUP4 KECCAK256 SSTORE DUP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E55 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SUB PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E55 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 ADDRESS SWAP3 LOG3 PUSH2 0x9AC DUP11 DUP10 DUP4 PUSH2 0x24E7 JUMP JUMPDEST PUSH2 0x9B7 DUP10 DUP10 DUP6 PUSH2 0x24E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP4 DUP5 SWAP2 DUP3 SWAP1 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0xB16 JUMPI DUP4 SWAP3 PUSH2 0xAE1 JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x24 SWAP2 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP3 MSTORE ADDRESS PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0xAD5 JUMPI SWAP3 PUSH2 0xA9A JUMPI JUMPDEST POP SWAP7 PUSH2 0xA1A SWAP3 SWAP2 PUSH1 0x40 SWAP9 PUSH2 0x263F JUMP JUMPDEST PUSH2 0xA77 JUMPI JUMPDEST DUP4 MLOAD SWAP1 DUP4 DUP3 MSTORE DUP3 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0xDCCD412F0B1252819CB1FD330B93224CA42612892BB3F4F789976E6D81936496 DUP6 CALLER SWAP3 LOG3 PUSH1 0x1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E95 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST PUSH2 0xA92 PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP1 DUP3 PUSH1 0x70 SHR AND SWAP2 AND PUSH2 0x21A8 JUMP JUMPDEST PUSH1 0x6 SSTORE PUSH2 0xA1F JUMP JUMPDEST SWAP3 SWAP2 POP SWAP7 PUSH1 0x20 DUP4 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xACD JUMPI JUMPDEST DUP2 PUSH2 0xAB7 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x2164 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x268 JUMPI SWAP2 MLOAD SWAP2 SWAP7 SWAP1 SWAP2 SWAP1 PUSH1 0x40 PUSH2 0xA0B JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xAAA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 SWAP2 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xB0E JUMPI JUMPDEST DUP2 PUSH2 0xAFD PUSH1 0x20 SWAP4 DUP4 PUSH2 0x2164 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x268 JUMPI MLOAD SWAP1 PUSH1 0x20 PUSH2 0x9DF JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xAF0 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x414D4D546F6B656E506169723A20494E53554646494349454E545F4C49515549 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x1112551657D09554939151 PUSH1 0xAA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP DUP8 ISZERO ISZERO PUSH2 0x901 JUMP JUMPDEST SWAP7 POP SWAP7 POP PUSH1 0x20 DUP7 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xBF3 JUMPI JUMPDEST DUP2 PUSH2 0xBE1 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x2164 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x268 JUMPI DUP8 SWAP6 MLOAD SWAP7 CODESIZE PUSH2 0x8A0 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xBD4 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 SWAP3 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xC32 JUMPI JUMPDEST DUP2 PUSH2 0xC22 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x2164 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x268 JUMPI MLOAD SWAP2 CODESIZE PUSH2 0x871 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xC15 JUMP JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2BB JUMPI PUSH32 0xA16A46D94261C7517CC8FF89F61C0CE93598E3C849801011DEE649A6A557D100 SLOAD ISZERO DUP1 PUSH2 0xD7C JUMPI JUMPDEST ISZERO PUSH2 0xD3F JUMPI PUSH2 0xC8E PUSH2 0x21F5 JUMP JUMPDEST SWAP1 PUSH2 0xC97 PUSH2 0x22DF JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 SWAP1 PUSH1 0x20 DUP4 ADD SWAP4 DUP4 DUP6 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP7 GT OR PUSH2 0x493 JUMPI SWAP3 DUP5 SWAP3 PUSH1 0x20 PUSH2 0xCF5 DUP9 SWAP7 PUSH2 0xCE7 SWAP9 PUSH1 0x40 MSTORE DUP6 DUP6 MSTORE PUSH1 0x40 MLOAD SWAP9 DUP10 SWAP9 PUSH1 0xF PUSH1 0xF8 SHL DUP11 MSTORE PUSH1 0xE0 DUP6 DUP12 ADD MSTORE PUSH1 0xE0 DUP11 ADD SWAP1 PUSH2 0x2109 JUMP JUMPDEST SWAP1 DUP9 DUP3 SUB PUSH1 0x40 DUP11 ADD MSTORE PUSH2 0x2109 JUMP JUMPDEST SWAP3 CHAINID PUSH1 0x60 DUP9 ADD MSTORE ADDRESS PUSH1 0x80 DUP9 ADD MSTORE DUP5 PUSH1 0xA0 DUP9 ADD MSTORE DUP7 DUP5 SUB PUSH1 0xC0 DUP9 ADD MSTORE MLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP4 SWAP3 JUMPDEST DUP3 DUP2 LT PUSH2 0xD28 JUMPI POP POP POP POP SUB SWAP1 RETURN JUMPDEST DUP4 MLOAD DUP6 MSTORE DUP7 SWAP6 POP SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0xD19 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x1152540DCC4C8E88155B9A5B9A5D1A585B1A5E9959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH32 0xA16A46D94261C7517CC8FF89F61C0CE93598E3C849801011DEE649A6A557D101 SLOAD ISZERO PUSH2 0xC81 JUMP JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2BB JUMPI PUSH2 0xDBE PUSH2 0x2872 JUMP JUMPDEST PUSH2 0xDC6 PUSH2 0x24BC JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E75 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH1 0x20 PUSH1 0x40 MLOAD CALLER DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2BB JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xE2F PUSH2 0x20DD JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH32 0x5AB42CED628888259C08AC98DB1EB0CF702FC1501344311D8B100CD1BFE4BB00 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2BB JUMPI PUSH1 0x20 PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2BB JUMPI PUSH2 0xE9E PUSH2 0x2872 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E35 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2BB JUMPI PUSH1 0x20 SWAP1 PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xF18 PUSH2 0x20DD JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E15 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 MSTORE KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x64F JUMPI PUSH2 0xF51 PUSH2 0x20DD JUMP JUMPDEST SWAP1 PUSH2 0xF5A PUSH2 0x248C JUMP JUMPDEST PUSH2 0xF62 PUSH2 0x24BC JUMP JUMPDEST PUSH2 0xF81 PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB SWAP2 DUP3 DUP3 AND SWAP3 DUP3 PUSH1 0x70 SHR AND SWAP2 PUSH1 0xE0 SHR SWAP1 JUMP JUMPDEST POP SWAP2 SWAP1 SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 PUSH1 0x1 SLOAD AND SWAP4 PUSH1 0x40 MLOAD DUP5 DUP2 PUSH1 0x24 DUP2 PUSH4 0x70A08231 PUSH1 0xE0 SHL SWAP10 DUP11 DUP3 MSTORE ADDRESS PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x11F7 JUMPI DUP6 SWAP2 DUP10 SWAP4 PUSH2 0x11C6 JUMPI JUMPDEST POP PUSH1 0x2 SLOAD AND SWAP6 PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP9 DUP2 SWAP4 DUP3 MSTORE ADDRESS PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP5 DUP6 ISZERO PUSH2 0x644 JUMPI DUP8 SWAP6 PUSH2 0x1197 JUMPI JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB SWAP2 DUP3 DUP8 AND SWAP7 PUSH2 0xFFE DUP9 DUP5 PUSH2 0x2185 JUMP JUMPDEST SWAP7 DUP5 DUP4 AND SWAP4 PUSH2 0x100D DUP6 DUP4 PUSH2 0x2185 JUMP JUMPDEST SWAP10 PUSH2 0x1018 DUP6 DUP6 PUSH2 0x28B8 JUMP JUMPDEST SWAP6 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E55 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP2 DUP3 ISZERO PUSH1 0x0 EQ PUSH2 0x107E JUMPI DUP14 PUSH2 0x1046 PUSH2 0x1041 DUP16 DUP16 PUSH2 0x21A8 JUMP JUMPDEST PUSH2 0x29F8 JUMP JUMPDEST PUSH2 0x3E7 NOT DUP2 ADD GT PUSH2 0x106A JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP14 SWAP2 PUSH2 0x8EB PUSH2 0x1099 DUP15 SWAP14 SWAP16 SWAP13 SWAP15 SWAP4 PUSH2 0x8EB DUP8 PUSH2 0x10A0 SWAP7 PUSH2 0x21A8 JUMP JUMPDEST SWAP5 DUP13 PUSH2 0x21A8 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 LT ISZERO PUSH2 0x1190 JUMPI POP JUMPDEST SWAP9 DUP10 ISZERO PUSH2 0x1137 JUMPI SWAP1 PUSH2 0x10C4 DUP11 PUSH2 0x10C9 SWAP7 SWAP6 SWAP5 SWAP4 PUSH2 0x2A54 JUMP JUMPDEST PUSH2 0x263F JUMP JUMPDEST PUSH2 0x1119 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE DUP4 DUP3 ADD MSTORE PUSH32 0x4C209B5FC8AD50758F13E2E1088BA56A560DFF690A1C6FEF26394F4C03821C4F PUSH1 0x40 CALLER SWAP3 LOG2 PUSH1 0x1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E95 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH2 0x112E SWAP1 PUSH1 0x3 SLOAD SWAP1 DUP1 DUP3 PUSH1 0x70 SHR AND SWAP2 AND PUSH2 0x21A8 JUMP JUMPDEST PUSH1 0x6 SSTORE DUP5 PUSH2 0x10CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP13 SWAP1 MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x414D4D546F6B656E506169723A20494E53554646494349454E545F4C49515549 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x1112551657D35253951151 PUSH1 0xAA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH2 0x10AC JUMP JUMPDEST SWAP1 SWAP5 POP DUP4 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x11BF JUMPI JUMPDEST PUSH2 0x11AF DUP2 DUP4 PUSH2 0x2164 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x268 JUMPI MLOAD SWAP4 CODESIZE PUSH2 0xFE6 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x11A5 JUMP JUMPDEST DUP3 DUP2 SWAP4 SWAP3 SWAP5 POP RETURNDATASIZE DUP4 GT PUSH2 0x11F0 JUMPI JUMPDEST PUSH2 0x11DE DUP2 DUP4 PUSH2 0x2164 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x268 JUMPI DUP5 SWAP1 MLOAD SWAP2 CODESIZE PUSH2 0xFBF JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x11D4 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP11 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2BB JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E75 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2BB JUMPI PUSH1 0x20 PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2BB JUMPI PUSH1 0x20 PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2BB JUMPI PUSH2 0x1288 PUSH2 0x20DD JUMP JUMPDEST SWAP1 PUSH2 0x1291 PUSH2 0x20F3 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2EB5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 AND DUP1 ISZERO SWAP1 DUP2 PUSH2 0x1742 JUMPI JUMPDEST PUSH1 0x1 EQ SWAP1 DUP2 PUSH2 0x1738 JUMPI JUMPDEST ISZERO SWAP1 DUP2 PUSH2 0x172F JUMPI JUMPDEST POP PUSH2 0x171D JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB NOT DUP4 AND OR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2EB5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE PUSH1 0xFF DUP3 PUSH1 0x40 SHR AND ISZERO PUSH2 0x16F0 JUMPI JUMPDEST PUSH2 0x12FF PUSH2 0x23A0 JUMP JUMPDEST SWAP4 PUSH2 0x1308 PUSH2 0x23A0 JUMP JUMPDEST SWAP5 PUSH2 0x1311 PUSH2 0x2BED JUMP JUMPDEST PUSH2 0x1319 PUSH2 0x2BED JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x15C5 JUMPI DUP1 PUSH2 0x1342 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2DF5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH2 0x21BB JUMP JUMPDEST SWAP3 PUSH1 0x1F SWAP4 DUP5 DUP2 GT PUSH2 0x166F JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 DUP5 DUP4 GT PUSH1 0x1 EQ PUSH2 0x15E4 JUMPI DUP9 SWAP3 PUSH2 0x15D9 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2DF5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE JUMPDEST DUP6 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x15C5 JUMPI PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE04 SWAP2 PUSH2 0x13C2 DUP4 SLOAD PUSH2 0x21BB JUMP JUMPDEST DUP2 DUP2 GT PUSH2 0x1566 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 DUP3 GT PUSH1 0x1 EQ PUSH2 0x14E3 JUMPI DUP2 SWAP1 DUP8 SWAP9 PUSH1 0xFF SWAP9 SWAP3 PUSH2 0x14D8 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST PUSH2 0x1401 PUSH2 0x2BED JUMP JUMPDEST PUSH2 0x1409 PUSH2 0x2BED JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E95 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE PUSH2 0x1423 PUSH2 0x2BED JUMP JUMPDEST PUSH2 0x142B PUSH2 0x2BED JUMP JUMPDEST PUSH2 0x1433 PUSH2 0x2BED JUMP JUMPDEST PUSH2 0x143C CALLER PUSH2 0x2418 JUMP JUMPDEST PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL SWAP2 CALLER DUP4 DUP8 SLOAD AND OR DUP7 SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP3 AND DUP4 PUSH1 0x1 SLOAD AND OR PUSH1 0x1 SSTORE AND SWAP1 PUSH1 0x2 SLOAD AND OR PUSH1 0x2 SSTORE PUSH1 0x40 SHR AND ISZERO PUSH2 0x147E JUMPI DUP1 RETURN JUMPDEST PUSH9 0xFF0000000000000000 NOT PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2EB5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2EB5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x13E4 JUMP JUMPDEST DUP3 DUP8 MSTORE PUSH32 0x46A2803E59A4DE4E7A4C574B1243F25977AC4C77D5A1A4A609B5394CEBB4A2AA SWAP8 PUSH1 0x1F NOT DUP4 AND DUP9 JUMPDEST DUP2 DUP2 LT PUSH2 0x154E JUMPI POP SWAP2 PUSH1 0xFF SWAP9 SWAP10 SWAP2 DUP5 PUSH1 0x1 SWAP6 SWAP5 LT PUSH2 0x1535 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x13F9 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x1528 JUMP JUMPDEST DUP4 DUP4 ADD MLOAD DUP12 SSTORE PUSH1 0x1 SWAP1 SWAP11 ADD SWAP10 PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 ADD PUSH2 0x150F JUMP JUMPDEST DUP4 DUP9 MSTORE PUSH32 0x46A2803E59A4DE4E7A4C574B1243F25977AC4C77D5A1A4A609B5394CEBB4A2AA DUP3 DUP1 DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 PUSH1 0x20 DUP7 LT PUSH2 0x15BC JUMPI JUMPDEST ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x15B1 JUMPI POP PUSH2 0x13CA JUMP JUMPDEST DUP9 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x15A4 JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH2 0x159D JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x1363 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2DF5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP10 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2DD5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 POP PUSH1 0x1F NOT DUP5 AND DUP10 JUMPDEST DUP2 DUP2 LT PUSH2 0x1657 JUMPI POP SWAP1 DUP5 PUSH1 0x1 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH2 0x163E JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2DF5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE PUSH2 0x1386 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x1623 JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0x160D JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2DF5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP9 MSTORE DUP4 DUP1 DUP5 ADD PUSH1 0x5 SHR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2DD5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0x16DA JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 ADD PUSH1 0x5 SHR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2DD5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x16CC JUMPI POP PUSH2 0x134E JUMP JUMPDEST DUP10 DUP2 SSTORE DUP5 SWAP4 POP PUSH1 0x1 ADD PUSH2 0x16BF JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2DD5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 POP PUSH2 0x16A4 JUMP JUMPDEST PUSH9 0xFFFFFFFFFFFFFFFFFF NOT DUP3 AND PUSH9 0x10000000000000001 OR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2EB5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE PUSH2 0x12F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP1 POP ISZERO CODESIZE PUSH2 0x12C7 JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO SWAP2 POP PUSH2 0x12BF JUMP JUMPDEST PUSH1 0x40 DUP5 SWAP1 SHR PUSH1 0xFF AND ISZERO SWAP2 POP PUSH2 0x12B5 JUMP JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2BB JUMPI PUSH2 0x176B PUSH2 0x2872 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E75 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0xFF DUP2 AND ISZERO PUSH2 0x17B8 JUMPI PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH1 0x20 PUSH1 0x40 MLOAD CALLER DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2BB JUMPI PUSH1 0x20 PUSH2 0x17E5 PUSH2 0x2B78 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2BB JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2BB JUMPI PUSH2 0x1823 PUSH2 0x20DD JUMP JUMPDEST PUSH2 0x182B PUSH2 0x20F3 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH2 0x1838 DUP4 PUSH2 0x23DF JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP3 PUSH1 0x0 NOT DUP5 LT PUSH2 0x185A JUMPI JUMPDEST PUSH2 0x697 SWAP4 POP PUSH2 0x2784 JUMP JUMPDEST DUP3 DUP5 LT PUSH2 0x18C9 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x18B0 JUMPI CALLER ISZERO PUSH2 0x1897 JUMPI DUP3 PUSH2 0x697 SWAP5 PUSH2 0x1884 DUP4 PUSH2 0x23DF JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE SUB PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH2 0x1850 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2BB JUMPI PUSH1 0x20 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E55 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2BB JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2BB JUMPI PUSH2 0x697 PUSH2 0x1960 PUSH2 0x20DD JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x2B1A JUMP JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2BB JUMPI PUSH1 0x60 PUSH4 0xFFFFFFFF PUSH2 0x19A1 PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB SWAP2 DUP3 DUP3 AND SWAP3 DUP3 PUSH1 0x70 SHR AND SWAP2 PUSH1 0xE0 SHR SWAP1 JUMP JUMPDEST SWAP1 SWAP3 SWAP2 PUSH1 0x40 MLOAD SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP1 SWAP3 AND DUP6 MSTORE AND PUSH1 0x20 DUP5 ADD MSTORE AND PUSH1 0x40 DUP3 ADD MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2BB JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2DF5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD DUP3 PUSH1 0x0 PUSH2 0x19F4 DUP4 PUSH2 0x21BB JUMP JUMPDEST SWAP3 DUP4 DUP4 MSTORE PUSH1 0x20 SWAP5 PUSH1 0x1 SWAP2 DUP7 PUSH1 0x1 DUP3 AND SWAP2 DUP3 PUSH1 0x0 EQ PUSH2 0x789 JUMPI POP POP PUSH1 0x1 EQ PUSH2 0x1A23 JUMPI POP POP PUSH2 0x715 SWAP3 POP SUB DUP4 PUSH2 0x2164 JUMP JUMPDEST DUP6 SWAP3 POP PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2DD5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x0 SWAP2 JUMPDEST DUP6 DUP4 LT PUSH2 0x1A55 JUMPI POP POP PUSH2 0x715 SWAP4 POP DUP3 ADD ADD DUP6 DUP1 PUSH2 0x707 JUMP JUMPDEST DUP1 SLOAD DUP4 DUP10 ADD DUP6 ADD MSTORE DUP8 SWAP5 POP DUP7 SWAP4 SWAP1 SWAP3 ADD SWAP2 DUP2 ADD PUSH2 0x1A3D JUMP JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2BB JUMPI PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 SUB PUSH2 0x2BB JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x64 CALLDATALOAD GT PUSH2 0x2BB JUMPI CALLDATASIZE PUSH1 0x23 PUSH1 0x64 CALLDATALOAD ADD SLT ISZERO PUSH2 0x2BB JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x64 CALLDATALOAD PUSH1 0x4 ADD CALLDATALOAD GT PUSH2 0x2BB JUMPI CALLDATASIZE PUSH1 0x24 PUSH1 0x64 CALLDATALOAD PUSH1 0x4 ADD CALLDATALOAD PUSH1 0x64 CALLDATALOAD ADD ADD GT PUSH2 0x2BB JUMPI PUSH2 0x1ADF PUSH2 0x248C JUMP JUMPDEST PUSH2 0x1AE7 PUSH2 0x24BC JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD ISZERO DUP1 ISZERO DUP1 SWAP2 PUSH2 0x20D2 JUMPI JUMPDEST ISZERO PUSH2 0x207C JUMPI PUSH2 0x1B18 PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB SWAP2 DUP3 DUP3 AND SWAP3 DUP3 PUSH1 0x70 SHR AND SWAP2 PUSH1 0xE0 SHR SWAP1 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP3 SWAP4 SWAP3 AND PUSH1 0x4 CALLDATALOAD LT DUP1 PUSH2 0x2068 JUMPI JUMPDEST ISZERO PUSH2 0x2017 JUMPI PUSH1 0x1 SLOAD PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP4 SWAP2 DUP2 AND SWAP2 SWAP1 PUSH1 0x44 CALLDATALOAD AND DUP3 EQ ISZERO DUP1 PUSH2 0x2002 JUMPI JUMPDEST ISZERO PUSH2 0x1FBD JUMPI PUSH2 0x1FA9 JUMPI JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH2 0x1F95 JUMPI JUMPDEST PUSH1 0x64 CALLDATALOAD PUSH1 0x4 ADD CALLDATALOAD PUSH2 0x1EC6 JUMPI JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x24 SWAP3 PUSH1 0x40 MLOAD SWAP4 DUP5 DUP1 SWAP3 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP3 MSTORE ADDRESS PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x2B0 JUMPI DUP6 SWAP3 PUSH2 0x1E8F JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x24 SWAP4 PUSH1 0x40 MLOAD SWAP5 DUP6 DUP1 SWAP3 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP3 MSTORE ADDRESS PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x2B0 JUMPI DUP6 SWAP4 PUSH2 0x1E5B JUMPI JUMPDEST POP PUSH2 0x1BE6 PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP7 AND PUSH2 0x2185 JUMP JUMPDEST DUP3 GT ISZERO PUSH2 0x1E54 JUMPI PUSH2 0x1C0B PUSH2 0x1C05 PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP8 AND PUSH2 0x2185 JUMP JUMPDEST DUP4 PUSH2 0x2185 JUMP JUMPDEST SWAP4 JUMPDEST PUSH2 0x1C22 PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP5 AND PUSH2 0x2185 JUMP JUMPDEST DUP5 GT ISZERO PUSH2 0x1E4D JUMPI PUSH2 0x1C47 PUSH2 0x1C41 PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP6 AND PUSH2 0x2185 JUMP JUMPDEST DUP6 PUSH2 0x2185 JUMP JUMPDEST SWAP4 JUMPDEST DUP6 ISZERO ISZERO DUP7 ISZERO PUSH2 0x1E44 JUMPI JUMPDEST ISZERO PUSH2 0x1DEF JUMPI DUP4 PUSH2 0x3E8 DUP2 MUL DIV PUSH2 0x3E8 EQ DUP5 ISZERO OR ISZERO PUSH2 0x1DDB JUMPI PUSH1 0x3 DUP7 MUL DUP7 DUP2 DIV PUSH1 0x3 EQ DUP8 ISZERO OR ISZERO PUSH2 0x1DC7 JUMPI PUSH2 0x1C8B SWAP1 PUSH2 0x3E8 DUP7 MUL PUSH2 0x2185 JUMP JUMPDEST PUSH2 0x3E8 DUP3 MUL DUP3 DUP2 DIV PUSH2 0x3E8 EQ DUP4 ISZERO OR ISZERO PUSH2 0x1D9F JUMPI PUSH1 0x3 DUP8 MUL SWAP1 DUP8 DUP3 DIV PUSH1 0x3 EQ DUP9 ISZERO OR ISZERO PUSH2 0x1DB3 JUMPI PUSH2 0x1CC6 SWAP3 SWAP2 PUSH2 0x1CC0 SWAP2 PUSH2 0x2185 JUMP JUMPDEST SWAP1 PUSH2 0x21A8 JUMP JUMPDEST PUSH2 0x1CE2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP6 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP6 AND PUSH2 0x21A8 JUMP JUMPDEST SWAP1 PUSH3 0xF4240 SWAP2 DUP3 DUP2 MUL SWAP3 DUP2 DUP5 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x1D9F JUMPI LT PUSH2 0x1D68 JUMPI PUSH2 0x1D06 SWAP4 PUSH2 0x263F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x44 CALLDATALOAD AND SWAP1 PUSH32 0xD78AD95FA46C994B6551D0DA85FC275FE613CE37657FB8D5E3D130840159D822 PUSH1 0x80 CALLER SWAP3 LOG3 PUSH1 0x1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E95 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x414D4D546F6B656E506169723A204B PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP11 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP11 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x414D4D546F6B656E506169723A20494E53554646494349454E545F494E505554 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x17D05353D55395 PUSH1 0xCA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP DUP5 ISZERO ISZERO PUSH2 0x1C53 JUMP JUMPDEST DUP6 SWAP4 PUSH2 0x1C49 JUMP JUMPDEST DUP5 SWAP4 PUSH2 0x1C0D JUMP JUMPDEST SWAP1 SWAP3 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1E87 JUMPI JUMPDEST DUP2 PUSH2 0x1E77 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x2164 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x268 JUMPI MLOAD SWAP2 CODESIZE PUSH2 0x1BD0 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1E6A JUMP JUMPDEST SWAP3 SWAP2 POP PUSH1 0x20 DUP4 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1EBE JUMPI JUMPDEST DUP2 PUSH2 0x1EAB PUSH1 0x20 SWAP4 DUP4 PUSH2 0x2164 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x268 JUMPI SWAP2 MLOAD SWAP1 SWAP2 PUSH1 0x20 PUSH2 0x1BA3 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1E9E JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE ISZERO PUSH2 0x4C1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x5FEA11F7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0x4 ADD CALLDATALOAD PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0x4 ADD CALLDATALOAD PUSH1 0x24 PUSH1 0x64 CALLDATALOAD ADD PUSH1 0xA4 DUP4 ADD CALLDATACOPY PUSH1 0xA4 PUSH1 0x64 CALLDATALOAD PUSH1 0x4 ADD CALLDATALOAD DUP3 DUP2 ADD DUP3 ADD DUP9 SWAP1 MSTORE DUP8 SWAP2 DUP4 SWAP2 PUSH1 0x1F NOT PUSH1 0x1F SWAP1 SWAP2 ADD AND DUP3 ADD DUP3 SWAP1 SUB ADD DUP2 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x44 CALLDATALOAD AND GAS CALL DUP1 ISZERO PUSH2 0x608 JUMPI PUSH2 0x1F65 JUMPI JUMPDEST POP PUSH2 0x1B76 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 SWAP7 SWAP3 SWAP7 GT PUSH2 0x1F81 JUMPI PUSH1 0x40 MSTORE SWAP4 PUSH1 0x20 PUSH2 0x1F5F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST PUSH2 0x1FA4 PUSH1 0x24 CALLDATALOAD PUSH1 0x44 CALLDATALOAD DUP6 PUSH2 0x24E7 JUMP JUMPDEST PUSH2 0x1B6A JUMP JUMPDEST PUSH2 0x1FB8 PUSH1 0x4 CALLDATALOAD PUSH1 0x44 CALLDATALOAD DUP4 PUSH2 0x24E7 JUMP JUMPDEST PUSH2 0x1B62 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x414D4D546F6B656E506169723A20494E56414C49445F544F0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 EQ ISZERO PUSH2 0x1B58 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x414D4D546F6B656E506169723A20494E53554646494349454E545F4C49515549 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x44495459 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP2 AND PUSH1 0x24 CALLDATALOAD LT PUSH2 0x1B2F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x414D4D546F6B656E506169723A20494E53554646494349454E545F4F55545055 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x1517D05353D55395 PUSH1 0xC2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP PUSH1 0x24 CALLDATALOAD ISZERO ISZERO PUSH2 0x1AF4 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x268 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x268 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x2135 JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x2114 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x493 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x493 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x2192 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x2192 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x21EB JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x21D5 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x21CA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x0 DUP3 PUSH32 0xA16A46D94261C7517CC8FF89F61C0CE93598E3C849801011DEE649A6A557D102 SWAP2 DUP3 SLOAD SWAP3 PUSH2 0x222A DUP5 PUSH2 0x21BB JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP4 PUSH1 0x20 SWAP2 PUSH1 0x1 SWAP2 DUP3 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x22B9 JUMPI POP PUSH1 0x1 EQ PUSH2 0x2258 JUMPI JUMPDEST POP POP POP PUSH2 0x2256 SWAP3 POP SUB DUP4 PUSH2 0x2164 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x42AD5D3E1F2E6E70EDCF6D991B8A3023D3FCA8047A131592F9EDB9FD9B89D57D SWAP6 SWAP1 SWAP4 POP SWAP2 SWAP1 JUMPDEST DUP3 DUP5 LT PUSH2 0x22A1 JUMPI POP PUSH2 0x2256 SWAP5 POP POP POP DUP2 ADD PUSH1 0x20 ADD CODESIZE DUP1 DUP1 PUSH2 0x2247 JUMP JUMPDEST DUP6 SLOAD DUP9 DUP6 ADD DUP4 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP3 DUP2 ADD SWAP3 PUSH2 0x2285 JUMP JUMPDEST SWAP3 POP POP POP PUSH1 0x20 SWAP3 POP PUSH2 0x2256 SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 DUP1 PUSH2 0x2247 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x0 DUP3 PUSH32 0xA16A46D94261C7517CC8FF89F61C0CE93598E3C849801011DEE649A6A557D103 SWAP2 DUP3 SLOAD SWAP3 PUSH2 0x2314 DUP5 PUSH2 0x21BB JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP4 PUSH1 0x20 SWAP2 PUSH1 0x1 SWAP2 DUP3 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x22B9 JUMPI POP PUSH1 0x1 EQ PUSH2 0x233F JUMPI POP POP POP PUSH2 0x2256 SWAP3 POP SUB DUP4 PUSH2 0x2164 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x5F9CE34815F8E11431C7BB75A8E6886A91478F7FFC1DBB0A98DC240FDDD76B75 SWAP6 SWAP1 SWAP4 POP SWAP2 SWAP1 JUMPDEST DUP3 DUP5 LT PUSH2 0x2388 JUMPI POP PUSH2 0x2256 SWAP5 POP POP POP DUP2 ADD PUSH1 0x20 ADD CODESIZE DUP1 DUP1 PUSH2 0x2247 JUMP JUMPDEST DUP6 SLOAD DUP9 DUP6 ADD DUP4 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP3 DUP2 ADD SWAP3 PUSH2 0x236C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x23AD DUP3 PUSH2 0x2149 JUMP JUMPDEST PUSH1 0x3 DUP3 MSTORE PUSH3 0x414D4D PUSH1 0xE8 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST DUP2 ISZERO PUSH2 0x23C9 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE01 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x2473 JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E35 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP5 OR SWAP1 SWAP2 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E95 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x2 DUP2 SLOAD EQ PUSH2 0x24AA JUMPI PUSH1 0x2 SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0xFF PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E75 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD AND PUSH2 0x24D5 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP3 SWAP2 PUSH2 0x24F5 DUP5 PUSH2 0x2149 JUMP JUMPDEST PUSH1 0x19 DUP5 MSTORE PUSH32 0x7472616E7366657228616464726573732C75696E743235362900000000000000 PUSH1 0x20 SWAP5 DUP6 ADD MSTORE PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 DUP7 ADD SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP3 DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP3 PUSH1 0x80 DUP2 ADD DUP5 DUP2 GT DUP3 DUP3 LT OR PUSH2 0x493 JUMPI PUSH1 0x40 MSTORE PUSH1 0x0 SWAP3 DUP4 SWAP3 DUP4 DUP1 SWAP4 MLOAD SWAP3 GAS CALL SWAP2 RETURNDATASIZE ISZERO PUSH2 0x2637 JUMPI RETURNDATASIZE SWAP1 DUP2 GT PUSH2 0x1F81 JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH2 0x259A PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP7 ADD DUP4 PUSH2 0x2164 JUMP JUMPDEST DUP2 MSTORE RETURNDATASIZE DUP3 DUP6 DUP4 ADD RETURNDATACOPY JUMPDEST DUP3 PUSH2 0x25F7 JUMPI JUMPDEST POP POP ISZERO PUSH2 0x25B3 JUMPI POP JUMP JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x414D4D546F6B656E506169723A205452414E534645525F4641494C4544000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP1 MLOAD SWAP3 POP DUP3 ISZERO SWAP2 SWAP1 DUP5 DUP4 ISZERO PUSH2 0x2613 JUMPI JUMPDEST POP POP POP SWAP1 POP CODESIZE DUP1 PUSH2 0x25A9 JUMP JUMPDEST SWAP2 SWAP4 DUP2 DUP1 SWAP5 POP ADD SUB SLT PUSH2 0x64F JUMPI DUP3 ADD MLOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH2 0x2BB JUMPI POP DUP1 CODESIZE DUP1 DUP5 PUSH2 0x2607 JUMP JUMPDEST POP PUSH1 0x60 PUSH2 0x25A3 JUMP JUMPDEST SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB SWAP1 DUP2 DUP6 GT ISZERO DUP1 PUSH2 0x277A JUMPI JUMPDEST ISZERO PUSH2 0x273C JUMPI PUSH32 0x1C411E9A96E071241C2F21F7726B17AE89E3CAB4C78BE50E062B03A9FFFBBAD1 SWAP5 PUSH1 0x40 SWAP5 DUP4 SWAP3 PUSH4 0xFFFFFFFF PUSH1 0x3 SLOAD PUSH1 0xE0 SHR DUP2 TIMESTAMP AND SUB AND SWAP2 DUP3 ISZERO ISZERO DUP1 PUSH2 0x2731 JUMPI JUMPDEST DUP1 PUSH2 0x2726 JUMPI JUMPDEST PUSH2 0x26E3 JUMPI JUMPDEST POP POP POP PUSH1 0x70 SWAP4 DUP5 SHL PUSH1 0x1 PUSH1 0x70 SHL PUSH1 0x1 PUSH1 0xE0 SHL SUB AND SWAP2 AND SWAP1 DUP2 OR TIMESTAMP PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND OR PUSH1 0x3 DUP2 SWAP1 SSTORE DUP5 MLOAD SWAP2 DUP3 MSTORE SWAP1 SWAP3 SHR AND PUSH1 0x20 DUP3 ADD MSTORE LOG1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB SWAP2 PUSH2 0x2715 SWAP2 SWAP1 PUSH2 0x2702 SWAP1 DUP6 DUP6 PUSH2 0x2707 DUP4 DUP6 DUP8 PUSH2 0x2ACD JUMP JUMPDEST PUSH2 0x2AFC JUMP JUMPDEST AND MUL PUSH1 0x4 SLOAD ADD PUSH1 0x4 SSTORE PUSH2 0x2ACD JUMP JUMPDEST AND MUL PUSH1 0x5 SLOAD ADD PUSH1 0x5 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x26A5 JUMP JUMPDEST POP DUP5 DUP2 AND ISZERO ISZERO PUSH2 0x26A0 JUMP JUMPDEST POP DUP5 DUP3 AND ISZERO ISZERO PUSH2 0x269A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x414D4D546F6B656E506169723A204F564552464C4F57 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP DUP2 DUP4 GT ISZERO PUSH2 0x2654 JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 DUP4 ISZERO PUSH2 0x2859 JUMPI AND SWAP3 DUP4 ISZERO PUSH2 0x2840 JUMPI PUSH1 0x0 SWAP1 DUP4 DUP3 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E15 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SLOAD SWAP2 DUP5 DUP4 LT PUSH2 0x280D JUMPI POP DUP3 DUP5 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 SWAP4 PUSH1 0x40 SWAP4 DUP9 PUSH1 0x20 SWAP8 MSTORE DUP7 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE POP PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E35 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x2893 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x2192 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH3 0x2FCFCB PUSH1 0xE3 SHL DUP2 MSTORE SWAP4 SWAP5 SWAP4 SWAP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x20 SWAP1 DUP6 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 DUP6 AND GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0xB16 JUMPI DUP4 SWAP5 PUSH2 0x29B7 JUMPI JUMPDEST POP DUP4 AND ISZERO ISZERO SWAP5 PUSH1 0x6 SLOAD SWAP2 DUP7 PUSH1 0x0 EQ PUSH2 0x29A6 JUMPI DUP3 PUSH2 0x2911 JUMPI JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1041 PUSH2 0x292E SWAP2 PUSH2 0x2934 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP1 SWAP2 AND SWAP2 AND PUSH2 0x21A8 JUMP JUMPDEST SWAP2 PUSH2 0x29F8 JUMP JUMPDEST SWAP1 DUP2 DUP2 GT PUSH2 0x2943 JUMPI JUMPDEST DUP1 PUSH2 0x290A JUMP JUMPDEST PUSH2 0x2960 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E55 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH2 0x1CC0 DUP5 DUP5 PUSH2 0x2185 JUMP JUMPDEST SWAP3 PUSH1 0x5 DUP3 MUL SWAP2 DUP1 DUP4 DIV PUSH1 0x5 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x106A JUMPI POP PUSH2 0x2989 SWAP3 SWAP2 PUSH2 0x2983 SWAP2 PUSH2 0x28AB JUMP JUMPDEST SWAP1 PUSH2 0x23BF JUMP JUMPDEST DUP1 PUSH2 0x2996 JUMPI JUMPDEST DUP1 DUP1 PUSH2 0x293D JUMP JUMPDEST PUSH2 0x299F SWAP2 PUSH2 0x2A54 JUMP JUMPDEST CODESIZE DUP1 PUSH2 0x298F JUMP JUMPDEST POP POP SWAP1 SWAP2 POP PUSH2 0x29B2 JUMPI POP JUMP JUMPDEST PUSH1 0x6 SSTORE JUMP JUMPDEST SWAP1 SWAP4 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x29F0 JUMPI JUMPDEST DUP2 PUSH2 0x29D3 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x2164 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x29EC JUMPI MLOAD DUP4 DUP2 AND DUP2 SUB PUSH2 0x29EC JUMPI SWAP3 CODESIZE PUSH2 0x28F2 JUMP JUMPDEST DUP3 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x29C6 JUMP JUMPDEST SWAP1 PUSH1 0x0 PUSH1 0x3 DUP4 GT ISZERO PUSH2 0x2A47 JUMPI POP DUP2 PUSH1 0x1 SWAP1 DUP1 PUSH1 0x1 SHR PUSH1 0x1 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x2192 JUMPI SWAP2 SWAP1 JUMPDEST DUP5 DUP4 LT PUSH2 0x2A27 JUMPI POP POP POP JUMP JUMPDEST SWAP1 SWAP2 SWAP4 POP PUSH2 0x2A3E DUP5 PUSH2 0x2A39 DUP2 DUP5 PUSH2 0x23BF JUMP JUMPDEST PUSH2 0x28AB JUMP JUMPDEST DUP3 SHR SWAP2 SWAP1 PUSH2 0x2A1B JUMP JUMPDEST SWAP2 PUSH2 0x2A4E JUMPI JUMP JUMPDEST PUSH1 0x1 SWAP2 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x2840 JUMPI PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x20 PUSH1 0x0 SWAP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E55 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x2AA4 DUP3 DUP3 SLOAD PUSH2 0x28AB JUMP JUMPDEST SWAP1 SSTORE DUP5 DUP5 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E15 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP3 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x70 SHL PUSH1 0x1 PUSH1 0xE0 SHL SUB PUSH1 0x70 DUP3 SWAP1 SHL AND SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND DUP1 DUP3 DIV PUSH1 0x1 PUSH1 0x70 SHL EQ SWAP1 ISZERO OR ISZERO PUSH2 0x2192 JUMPI SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x23C9 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND DIV SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 DUP4 ISZERO PUSH2 0x18B0 JUMPI AND SWAP3 DUP4 ISZERO PUSH2 0x1897 JUMPI PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 PUSH2 0x2B62 PUSH1 0x20 SWAP3 PUSH2 0x23DF JUMP JUMPDEST DUP6 PUSH1 0x0 MSTORE DUP3 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH2 0x2B80 PUSH2 0x2D25 JUMP JUMPDEST PUSH2 0x2B88 PUSH2 0x2D8F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD SWAP3 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F DUP5 MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 MSTORE PUSH1 0xC0 DUP2 ADD DUP2 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x493 JUMPI PUSH1 0x40 MSTORE MLOAD SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2EB5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x40 SHR AND ISZERO PUSH2 0x2C0A JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT PUSH2 0x2C94 JUMPI SWAP3 PUSH1 0x20 SWAP3 SWAP2 PUSH1 0xFF PUSH1 0x80 SWAP6 PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE AND DUP5 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 SWAP3 DUP4 SWAP2 DUP3 DUP1 MSTORE PUSH1 0x1 GAS STATICCALL ISZERO PUSH2 0xAD5 JUMPI DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x2C8B JUMPI SWAP2 DUP2 SWAP1 JUMP JUMPDEST POP DUP1 SWAP2 PUSH1 0x1 SWAP2 SWAP1 JUMP JUMPDEST POP POP POP PUSH1 0x0 SWAP2 PUSH1 0x3 SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x2D0F JUMPI DUP1 PUSH2 0x2CB2 JUMPI POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 SUB PUSH2 0x2CCC JUMPI PUSH1 0x40 MLOAD PUSH4 0xF645EEDF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP2 SUB PUSH2 0x2CED JUMPI PUSH1 0x40 MLOAD PUSH4 0xFCE698F7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x3 EQ PUSH2 0x2CF7 JUMPI POP JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x35E2F383 PUSH1 0xE2 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x2D2D PUSH2 0x21F5 JUMP JUMPDEST DUP1 MLOAD SWAP1 DUP2 ISZERO PUSH2 0x2D3D JUMPI PUSH1 0x20 ADD KECCAK256 SWAP1 JUMP JUMPDEST POP POP PUSH32 0xA16A46D94261C7517CC8FF89F61C0CE93598E3C849801011DEE649A6A557D100 SLOAD DUP1 ISZERO PUSH2 0x2D6A JUMPI SWAP1 JUMP JUMPDEST POP PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 SWAP1 JUMP JUMPDEST PUSH2 0x2D97 PUSH2 0x22DF JUMP JUMPDEST DUP1 MLOAD SWAP1 DUP2 ISZERO PUSH2 0x2DA7 JUMPI PUSH1 0x20 ADD KECCAK256 SWAP1 JUMP JUMPDEST POP POP PUSH32 0xA16A46D94261C7517CC8FF89F61C0CE93598E3C849801011DEE649A6A557D101 SLOAD DUP1 ISZERO PUSH2 0x2D6A JUMPI SWAP1 JUMP INVALID 0x2A 0xE0 DUP11 DUP15 0x29 0x25 EXTCODEHASH PUSH10 0xAC5D979A101956AB8F8D SWAP14 PUSH30 0xED63FA7A83B16FC47648EAB052C63247E1F47DB19D5CE0460030C497F067 0xCA 0x4C 0xEB 0xF7 SHL 0xA9 DUP15 0xEA 0xDA 0xBE KECCAK256 0xBA 0xCE SUB MSTORE 0xC6 ORIGIN SELFBALANCE 0xE1 DELEGATECALL PUSH30 0xB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE009016D09D72 0xD4 0xF 0xDA 0xE2 REVERT DUP13 0xEA 0xC6 0xB6 0x23 0x4C PUSH24 0x6214FD39C1CD1E609A0528C19930052C63247E1F47DB19D 0x5C 0xE0 CHAINID STOP ADDRESS 0xC4 SWAP8 CREATE PUSH8 0xCA4CEBF71BA98EEA 0xDA 0xBE KECCAK256 0xBA 0xCE MUL 0xCD 0x5E 0xD1 0x5C PUSH15 0x187E77E9AEE88184C21F4F2182AB58 0x27 0xCB EXTCODESIZE PUSH31 0x7FBEDCD63F033009B779B17422D0DF92223018B32B4D1FA46E071723D6817 0xE2 BASEFEE PUSH14 0x3BECC55F00F0C57E16840DF040 CALL POP DUP9 0xDC 0x2F DUP2 INVALID CODECOPY SHR CODECOPY 0x23 0xBE 0xC7 RETURNDATACOPY 0x23 0xA9 PUSH7 0x2EFC9C229C6A00 LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 SELFDESTRUCT 0xDD RETURNDATASIZE SWAP3 0xE9 0xDA SLOAD MULMOD ADD 0xDE 0xFB DUP3 DELEGATECALL 0xC PUSH25 0x49526E5EA3C333DEA2EDC1213DF2D8F964736F6C6343000816 STOP CALLER SWAP1 AND 0xD0 SWAP14 PUSH19 0xD40FDAE2FD8CEAC6B6234C7706214FD39C1CD1 0xE6 MULMOD LOG0 MSTORE DUP13 NOT SWAP4 STOP CREATE 0xC5 PUSH31 0x16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00A264 PUSH10 0x706673582212209FE4C8 CALLVALUE 0x49 PUSH0 CREATE2 SDIV PUSH16 0x569A2C3E6AA06E330819C8D5B88AE252 GT SWAP9 0xE6 OR JUMPI LOG2 0xC7 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ","sourceMap":"398:3511:26:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;;;;;;:::o;:::-;;;;;;;;;;-1:-1:-1;;398:3511:26;;;;;;;;-1:-1:-1;;;;;398:3511:26;;;;;;;;;;;;;;-1:-1:-1;;398:3511:26;;;;;;;;-1:-1:-1;;;;;398:3511:26;;;;;;;;;;;;;;-1:-1:-1;;398:3511:26;;;;;;755:25;398:3511;755:25;;;;;;-1:-1:-1;398:3511:26;;;;;;-1:-1:-1;;;;;398:3511:26;;;;;;;;;;;;;;-1:-1:-1;;398:3511:26;;;;;1513:8;398:3511;;;;;;;;;;;;;-1:-1:-1;;398:3511:26;;;;;;;898:66;398:3511;;;;;;;;;;;;;;;;2303:62:0;;:::i;:::-;-1:-1:-1;;;;;;;;;;;398:3511:26;;-1:-1:-1;;;;;;398:3511:26;;;;;1280:65:0;;-1:-1:-1;;;;;398:3511:26;3975:40:0;1280:65;;3975:40;398:3511:26;;;;;;;;;;;-1:-1:-1;;398:3511:26;;;;-1:-1:-1;;;;;;;;;;;398:3511:26;;;-1:-1:-1;;;;;398:3511:26;;;;;;;;;;;;-1:-1:-1;;;;;398:3511:26;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;398:3511:26;;;;;;:::o;:::-;;;;;;-1:-1:-1;;398:3511:26;;;;;;:::i;:::-;3827:11;398:3511;;-1:-1:-1;;;;;398:3511:26;3805:59;3813:10;398:3511;;;3813:25;3805:59;:::i;:::-;-1:-1:-1;;;;;;398:3511:26;;;;;;3827:11;398:3511;;;;;;;;-1:-1:-1;;398:3511:26;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;398:3511:26;;;;;;;;4301:16:1;398:3511:26;;4724:16:1;;:34;;;;398:3511:26;4803:1:1;4788:16;:50;;;;398:3511:26;4853:13:1;:30;;;;398:3511:26;4849:91:1;;;-1:-1:-1;;;;;;;;;;;398:3511:26;;-1:-1:-1;;398:3511:26;;;;;5053:1:1;;4949:18;4977:67;;5053:1;:::i;:::-;5064:101;;398:3511:26;5064:101:1;-1:-1:-1;;;;;;;;;;;398:3511:26;;-1:-1:-1;;;;398:3511:26;;;;;-1:-1:-1;398:3511:26;;5140:14:1;;398:3511:26;;5140:14:1;398:3511:26;4977:67:1;-1:-1:-1;;;;;;;;;;;398:3511:26;;-1:-1:-1;;;;398:3511:26;-1:-1:-1;;;398:3511:26;;;5053:1:1;:::i;4849:91::-;398:3511:26;;-1:-1:-1;;;4906:23:1;;398:3511:26;;4906:23:1;4853:30;4870:13;;;4853:30;;;4788:50;4816:4;4808:25;:30;;-1:-1:-1;4788:50:1;;4724:34;;;-1:-1:-1;4724:34:1;;398:3511:26;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;2499:73:7;;1991:1;398:3511:26;;3670:20:7;3666:88;;1991:1;;;-1:-1:-1;;;;;398:3511:26;;;;;;;1845:60;1853:16;;;;1845:60;:::i;:::-;2022:15;;;;:77;;398:3511;;;2148:57;2156:20;;;2148:57;:::i;:::-;2270:107;2291:37;:23;;:15;;;398:3511;;;;;;;;1991:1:7;398:3511:26;;;;;;;2291:15;398:3511;;;;;;;;;;;;;;;;2291:23;398:3511;-1:-1:-1;;;;;398:3511:26;;;2291:23;-1:-1:-1;;;;;398:3511:26;;;2291:37;;2270:107;:::i;:::-;2505:31;;398:3511;2505:31;;;:::i;:::-;;;;;398:3511;2505:31;;;;;;398:3511;;;;;;-1:-1:-1;;398:3511:26;;;;2621:32;;398:3511;;;;;;;;;;;;2621:32;;;;;398:3511;;2621:32;:::i;:::-;398:3511;2611:43;;2687:178;;;-1:-1:-1;2687:178:26;398:3511;;;;2960:46;;;;;;398:3511;;-1:-1:-1;;;2960:46:26;;-1:-1:-1;;;;;398:3511:26;;;;2960:46;;398:3511;;;;;;;;-1:-1:-1;;398:3511:26;;;;;;-1:-1:-1;;2960:46:26;;;;;;;;3158:23;:30;2960:46;398:3511;2960:46;3354:50;2960:46;;;2022:77;3067:15;:30;:15;:23;:15;;;398:3511;;;;;;;;1991:1:7;398:3511:26;;;;;;;3067:23;398:3511;;-1:-1:-1;;;;;;398:3511:26;-1:-1:-1;;;;;398:3511:26;;;;;;;;;;3067:30;-1:-1:-1;;;;;398:3511:26;;;;;;1991:1:7;398:3511:26;;;;;3158:15;398:3511;3158:30;3285:19;;;:::i;:::-;:8;398:3511;;;-1:-1:-1;;;;;398:3511:26;;;;;;;;;;;;;;;;3354:50;3426:1:7;1949;2499:73;1991:1;3860:283;3426:1;398:3511:26;-1:-1:-1;;;;;398:3511:26;;;;;;;;;;;;;;;;;2960:46;;;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;2022:77::-;;;3666:88:7;398:3511:26;;-1:-1:-1;;;3713:30:7;;398:3511:26;;3713:30:7;398:3511:26;;;;;;-1:-1:-1;;398:3511:26;;;;;;;:::i;:::-;662:62;398:3511;;:::i;:::-;-1:-1:-1;;;;;398:3511:26;;;-1:-1:-1;398:3511:26;;;662:62;398:3511;;;;;;;;;;;-1:-1:-1;398:3511:26;;;;;;;662:62;398:3511;;;;;;;;;;;;;;-1:-1:-1;;398:3511:26;;;;2357:1:0;398:3511:26;;:::i;:::-;2303:62:0;;:::i;:::-;2357:1;:::i;:::-;398:3511:26;;;;;;;-1:-1:-1;;398:3511:26;;;;;;:::i;:::-;;;-1:-1:-1;;;;;398:3511:26;;3551:59;;398:3511;;3559:10;:25;3551:59;:::i;:::-;398:3511;;;;-1:-1:-1;398:3511:26;;;-1:-1:-1;398:3511:26;-1:-1:-1;398:3511:26;;;;;;:::o;:::-;;;-1:-1:-1;;;398:3511:26;;;;;;;;;;;;-1:-1:-1;;;398:3511:26;;;;;;;1200:176;6891:76:1;;:::i;:::-;;;:::i;:::-;6959:1;1288:10:26;6959:1:1;:::i;:::-;6891:76;;:::i;:::-;;;:::i;:::-;1949:1:7;2499:73;1991:1;398:3511:26;;;;;;;;;1949:1:7;398:3511:26;;;1949:1:7;398:3511:26;1200:176::o;398:3511::-;;;;:::o;:::-;;;-1:-1:-1;;;398:3511:26;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;398:3511:26;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;398:3511:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;2621:32;;398:3511;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;3285:8;398:3511;-1:-1:-1;;;398:3511:26;;;;;;;;;3285:8;398:3511;;;;;;3285:8;-1:-1:-1;398:3511:26;;;;;-1:-1:-1;;;;;;398:3511:26;-1:-1:-1;;;;;398:3511:26;;;;;;;;;:::o;:::-;;;;-1:-1:-1;398:3511:26;;;;;-1:-1:-1;398:3511:26;3405:215:0;-1:-1:-1;;;;;398:3511:26;;;;3489:22:0;;3485:91;;-1:-1:-1;;;;;;;;;;;398:3511:26;;-1:-1:-1;;;;;;398:3511:26;;;;;;;;3975:40:0;-1:-1:-1;;3975:40:0;3405:215::o;3485:91::-;398:3511:26;;-1:-1:-1;;;3534:31:0;;3509:1;3534:31;;;398:3511:26;;;3534:31:0;2658:162;-1:-1:-1;;;;;;;;;;;398:3511:26;-1:-1:-1;;;;;398:3511:26;966:10:4;2717:23:0;2713:101;;2658:162::o;2713:101::-;398:3511:26;;-1:-1:-1;;;2763:40:0;;966:10:4;2763:40:0;;;398:3511:26;;;2763:40:0;7082:141:1;398:3511:26;-1:-1:-1;;;;;;;;;;;398:3511:26;;;;7148:18:1;7144:73;;7082:141::o;7144:73::-;398:3511:26;;-1:-1:-1;;;7189:17:1;;;;"},"methodIdentifiers":{"INIT_CODE_PAIR_HASH()":"5855a25a","allPairs(uint256)":"1e3dd18b","allPairsLength()":"574f2ba3","createPair(address,address)":"c9c65396","feeTo()":"017e7e58","feeToSetter()":"094b7415","getPair(address,address)":"e6a43905","initialize(address)":"c4d66de8","owner()":"8da5cb5b","renounceOwnership()":"715018a6","setFeeTo(address)":"f46901ed","setFeeToSetter(address)":"a2e74af6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"PairCreated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"INIT_CODE_PAIR_HASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allPairs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allPairsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"createPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeTo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeToSetter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeToSetter\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeTo\",\"type\":\"address\"}],\"name\":\"setFeeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeToSetter\",\"type\":\"address\"}],\"name\":\"setFeeToSetter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"allPairsLength()\":{\"details\":\"\\u67e5\\u8be2\\u914d\\u5bf9\\u6570\\u7ec4\\u957f\\u5ea6\\u65b9\\u6cd5\"},\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"createPair(address,address)\":{\"details\":\"\\u521b\\u5efa\\u914d\\u5bf9\",\"params\":{\"tokenA\":\"TokenA\",\"tokenB\":\"TokenB\"},\"returns\":{\"pair\":\"\\u914d\\u5bf9\\u5730\\u5740\"}},\"initialize(address)\":{\"details\":\"\\u521d\\u59cb\\u5316\\u51fd\\u6570\\uff0c\\u66ff\\u4ee3\\u6784\\u9020\\u51fd\\u6570\",\"params\":{\"_feeToSetter\":\"\\u6536\\u7a0e\\u6743\\u9650\\u63a7\\u5236\\u5730\\u5740\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setFeeTo(address)\":{\"details\":\"\\u8bbe\\u7f6e\\u6536\\u7a0e\\u5730\\u5740\",\"params\":{\"_feeTo\":\"\\u6536\\u7a0e\\u5730\\u5740\"}},\"setFeeToSetter(address)\":{\"details\":\"\\u6536\\u7a0e\\u6743\\u9650\\u63a7\\u5236\",\"params\":{\"_feeToSetter\":\"\\u6536\\u7a0e\\u6743\\u9650\\u63a7\\u5236\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AMMFactory.sol\":\"AMMFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xfcd09c2aa8cc3f93e12545454359f901965db312bc03833daf84de0c03e05022\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07701188648d2ab83dab1037808298585264559bddf243bd8929037adcb984b0\",\"dweb:/ipfs/QmavmG5REdHCAWsZ8Cag26BCxAq27DRKGxr3uBg5ZYxQ51\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol\":{\"keccak256\":\"0x075302c23ba4b3a1d2a5000947ac44bbb4e84b011ecadad6f5e3fd92cd568659\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13806b62ea930e61dfba5fbbfd4eafe135bb0e2e4d55ce8cde1407d7b20a739\",\"dweb:/ipfs/QmYjt4fwBLdKrMbGHZPqdsiwsK4obFdXdKFhQBBW5ruEuC\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/NoncesUpgradeable.sol\":{\"keccak256\":\"0x778f4a1546a1c6c726ecc8e2348a2789690fb8f26e12bd9d89537669167b79a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://851d3dfe724e918ff0a064b206e1ef46b27ab0df2aa2c8af976973a22ef59827\",\"dweb:/ipfs/Qmd4wb7zX8ueYhMVBy5PJjfsANK3Ra3pKPN7qQkNsdwGHn\"]},\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0xa6bf6b7efe0e6625a9dcd30c5ddf52c4c24fe8372f37c7de9dbf5034746768d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c353ee3705bbf6fadb84c0fb10ef1b736e8ca3ca1867814349d1487ed207beb\",\"dweb:/ipfs/QmcugaPssrzGGE8q4YZKm2ZhnD3kCijjcgdWWg76nWt3FY\"]},\"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x361126a17677994081cd9cb69c3f50cffff6e920d25cb7e428acdb1ae41d1866\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19ae787a7dd001269cd60a394b1a5261b78925a0fc3a6f927beb2986a9aa56cf\",\"dweb:/ipfs/QmYLfXiuKmcRgTDBEDXMMjXU8t6JxsspUmjxYzqWS55oEv\"]},\"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol\":{\"keccak256\":\"0x89374b2a634f0a9c08f5891b6ecce0179bc2e0577819c787ed3268ca428c2459\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f13d2572e5bdd55e483dfac069aac47603644071616a41fce699e94368e38c13\",\"dweb:/ipfs/QmfKeyNT6vyb99vJQatPZ88UyZgXNmAiHUXSWnaR1TPE11\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xfb223a85dd0b2175cfbbaa325a744e2cd74ecd17c3df2b77b0722f991d2725ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://84bf1dea0589ec49c8d15d559cc6d86ee493048a89b2d4adb60fbe705a3d89ae\",\"dweb:/ipfs/Qmd56n556d529wk2pRMhYhm5nhMDhviwereodDikjs68w1\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x2fa0657dd7b8bc75475a47f64bc04a9adb42236b15d65e6781594ea69a46c3e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7496f42681aed94bf0142a077324e50b86046610c1724e7c12e96cf1c365914a\",\"dweb:/ipfs/QmZvhNdSAAbN4PKPdheAqwpXukUiXp3Q3TdQccDMg2NDTV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/AMMFactory.sol\":{\"keccak256\":\"0xb6f5f5f23cc4db97cd602c923ae153c4bfde6c78d04bb023ff533157a0f032ce\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://a065bbc3486992972d966605b2637fcf1dbba6a7043947c8147e114d9197166a\",\"dweb:/ipfs/QmNi8Fvyhr2ZhuYMYEuebBf1L2mpA2rkFv5iT9guEqxEAX\"]},\"contracts/AMMTokenPair.sol\":{\"keccak256\":\"0xbcf16943c40094b34072c0ddc4fcf0dc0d988c8aa0cb01143d16a88540e1a667\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://c9ef72d1de73f10e2f2cbe2ebb37a173ec8dac7a8ab6668f79333f3ec5b9b217\",\"dweb:/ipfs/QmSoK6wjKd1eyovGnoFV3wXZHLEeT3ZmyDKDUkhaCDrDUn\"]},\"contracts/interfaces/IAMMCallee.sol\":{\"keccak256\":\"0xd8ce18a210a47fc077e75f2244c3a67433e394ea4702a940125e5fe84df3b54e\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://5fbef3ab3658312943bff4c24cdb63f542ba42985ed5ce7707b0cce9edf8a9f1\",\"dweb:/ipfs/QmRSceQrks8PME7yrw3Ry33WPeEADtcpfhtNVPcRLUnm52\"]},\"contracts/interfaces/IAMMFactory.sol\":{\"keccak256\":\"0x837bb0ab74958ab701837a5e42f3a452096d8582c30636edefc5deb0c888dee7\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://22ed4e91933b612d8168bf331976aa1f006457da701b55efabc408c00bde36e9\",\"dweb:/ipfs/QmPv7CFkaHDVMAr2U2jspTf99A1KZUcpRu4XTMnN3pwKoy\"]},\"contracts/interfaces/IAMMTokenPair.sol\":{\"keccak256\":\"0xbc3cac969b5aa1bf479f21a41acc581ca1a022f827b26fd6c2009f18b9403b14\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://0c899c6f09bd7ae8f58fb6eb7f80b5890531bff7b9148515b16e4356a3f2d810\",\"dweb:/ipfs/QmXupsBngQGV1EYDXtA4sH32cot8frC3r56HAxVRyTQqju\"]},\"contracts/libraries/Math.sol\":{\"keccak256\":\"0x0cef61803b6fa0bf72eba690b47de957853f4e34681d39cac75d026391eec454\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://b476ede8973230ec95d26dc3253cd7a0d6e6254a0c0a9c8d202da439c90ef140\",\"dweb:/ipfs/QmZrd5Rocy8QVqhPgLPS1qjDGF4daSqnHsa4p3eEPCKGsL\"]},\"contracts/libraries/UQ112x112.sol\":{\"keccak256\":\"0x7a1409fd34e74e97f36f75d8c8597a8c13d07ac9e7e22109f8e8be5bb2cdfa60\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://8a787d6efdbb107beeaf4ff38ae4088c1397f4a99bdd73de53d04332374d20f5\",\"dweb:/ipfs/QmY5V1hgnEkSm9nEt7t31oVtbsNfN4UvCZxvL3yS63aa5C\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":8341,"contract":"contracts/AMMFactory.sol:AMMFactory","label":"feeTo","offset":0,"slot":"0","type":"t_address"},{"astId":8343,"contract":"contracts/AMMFactory.sol:AMMFactory","label":"feeToSetter","offset":0,"slot":"1","type":"t_address"},{"astId":8349,"contract":"contracts/AMMFactory.sol:AMMFactory","label":"getPair","offset":0,"slot":"2","type":"t_mapping(t_address,t_mapping(t_address,t_address))"},{"astId":8352,"contract":"contracts/AMMFactory.sol:AMMFactory","label":"allPairs","offset":0,"slot":"3","type":"t_array(t_address)dyn_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_address)dyn_storage":{"base":"t_address","encoding":"dynamic_array","label":"address[]","numberOfBytes":"32"},"t_mapping(t_address,t_address)":{"encoding":"mapping","key":"t_address","label":"mapping(address => address)","numberOfBytes":"32","value":"t_address"},"t_mapping(t_address,t_mapping(t_address,t_address))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => address))","numberOfBytes":"32","value":"t_mapping(t_address,t_address)"}}}}},"contracts/AMMTokenPair.sol":{"AMMTokenPair":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"ERC2612ExpiredSignature","type":"error"},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC2612InvalidSigner","type":"error"},{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1","type":"uint256"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"Burn","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1","type":"uint256"}],"name":"Mint","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount0In","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1In","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount0Out","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1Out","type":"uint256"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"Swap","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint112","name":"reserve0","type":"uint112"},{"indexed":false,"internalType":"uint112","name":"reserve1","type":"uint112"}],"name":"Sync","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MINIMUM_LIQUIDITY","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"burn","outputs":[{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"factory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getReserves","outputs":[{"internalType":"uint112","name":"_reserve0","type":"uint112"},{"internalType":"uint112","name":"_reserve1","type":"uint112"},{"internalType":"uint32","name":"_blockTimestampLast","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_token0","type":"address"},{"internalType":"address","name":"_token1","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"kLast","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"mint","outputs":[{"internalType":"uint256","name":"liquidity","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"price0CumulativeLast","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"price1CumulativeLast","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"skim","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount0Out","type":"uint256"},{"internalType":"uint256","name":"amount1Out","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"swap","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"sync","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"token0","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"token1","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608080604052346100b9577ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a009081549060ff8260401c166100aa57506001600160401b036002600160401b031982821601610065575b604051612f0a9081620000bf8239f35b6001600160401b031990911681179091556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d290602090a1388080610055565b63f92ee8a960e01b8152600490fd5b600080fdfe6080604052600436101561001257600080fd5b6000803560e01c8063022c0d9f14611a6d57806306fdde03146119c35780630902f1ac1461196a578063095ea7b3146119435780630dfe16811461191a57806318160ddd146118ef57806323b872dd14611809578063313ce567146117ed5780633644e515146117ca5780633f4ba83a14611752578063485cc9551461126e5780635909c0d5146112505780635a3d5493146112325780635c975abb146112025780636a62784214610f3657806370a0823114610ef0578063715018a614610e855780637464fc3d14610e675780637ecebe0014610e0d5780638456cb5914610da557806384b0196e14610c4757806389afcb44146107e15780638da5cb5b146107ab57806395d89b41146106a2578063a9059cbb14610670578063ba9a7a5614610653578063bc25cf7714610515578063c45a0155146104ee578063d21220a7146104c5578063d505accf14610335578063dd62ed3e146102eb578063f2fde38b146102be5763fff6cae91461018857600080fd5b346102bb57806003193601126102bb576101a061248c565b6001546040516370a0823160e01b808252306004830152916020916001600160a01b039183908290602490829086165afa9182156102b0578391869361027f575b50600254169360246040518096819382523060048301525afa91821561027457849261023d575b506102289250600354916001600160701b03808460701c1693169161263f565b6001600080516020612e958339815191525580f35b90915082813d831161026d575b6102548183612164565b810103126102685761022891519038610208565b600080fd5b503d61024a565b6040513d86823e3d90fd5b8281939294503d83116102a9575b6102978183612164565b810103126102685782905191386101e1565b503d61028d565b6040513d87823e3d90fd5b80fd5b50346102bb5760203660031901126102bb576102e86102db6120dd565b6102e3612872565b612418565b80f35b50346102bb5760403660031901126102bb576103056120dd565b6103166103106120f3565b916123df565b9060018060a01b03166000526020526020604060002054604051908152f35b50346102bb5760e03660031901126102bb5761034f6120dd565b906103586120f3565b60443590606435936084359460ff861686036104c1578042116104a95760018060a01b0390818316968787527f5ab42ced628888259c08ac98db1eb0cf702fc1501344311d8b100cd1bfe4bb0060205260408720908154916001830190556040519260208401927f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c984528a6040860152858816606086015288608086015260a085015260c084015260c0835260e08301918383106001600160401b03841117610493576104619361045893604052519020610431612b78565b906040519161190160f01b83526002830152602282015260c43591604260a4359220612c1c565b90929192612ca0565b1685810361047557506102e8939450612b1a565b60449086604051916325c0072360e11b835260048301526024820152fd5b634e487b7160e01b600052604160045260246000fd5b6024906040519063313c898160e11b82526004820152fd5b8480fd5b50346102bb57806003193601126102bb576002546040516001600160a01b039091168152602090f35b50346102bb57806003193601126102bb57546040516001600160a01b039091168152602090f35b50346102bb5760208060031936011261064f576105306120dd565b9061053961248c565b6001546002546040516370a0823160e01b80825230600483015290946001600160a01b039283169490939092168286602481845afa958615610644578796610613575b5061059f90846105996001600160701b0398896003541690612185565b916124e7565b6040519081523060048201528181602481875afa9182156106085786926105d8575b5050610599906102289460035460701c1690612185565b90809250813d8311610601575b6105ef8183612164565b810103126102685751836105996105c1565b503d6105e5565b6040513d88823e3d90fd5b9095508281813d831161063d575b61062b8183612164565b8101031261026857519461059f61057c565b503d610621565b6040513d89823e3d90fd5b5080fd5b50346102bb57806003193601126102bb5760206040516103e88152f35b50346102bb5760403660031901126102bb5761069761068d6120dd565b6024359033612784565b602060405160018152f35b50346102bb57806003193601126102bb576040517f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0480548260006106e5836121bb565b928383526020946001918660018216918260001461078957505060011461072d575b505061071592500383612164565b610729604051928284938452830190612109565b0390f35b8592506000527f46a2803e59a4de4e7a4c574b1243f25977ac4c77d5a1a4a609b5394cebb4a2aa906000915b85831061077157505061071593508201018580610707565b80548389018501528794508693909201918101610759565b925093505061071594915060ff191682840152151560051b8201018580610707565b50346102bb57806003193601126102bb57600080516020612e35833981519152546040516001600160a01b039091168152602090f35b50346102bb5760203660031901126102bb576107fb6120dd565b61080361248c565b61080b6124bc565b61082a6003546001600160701b0391828216928260701c169160e01c90565b506001546002546040516370a0823160e01b81523060048201526001600160a01b039182169694959190921693909290602083602481885afa928315610c3a578193610c06575b506040516370a0823160e01b815230600482015296602088602481845afa958615610bfb578798839897610bc4575b50308352600080516020612e158339815191526020526108f76108eb6108eb6108f06108d18860408920549c6128b8565b98600080516020612e55833981519152549384918d6121a8565b6123bf565b9a8a6121a8565b9688151580610bbb575b15610b62573015610b495730600052600080516020612e15833981519152602052604060002054818110610b21579160008260209360249695308452600080516020612e15833981519152865203604083205580600080516020612e558339815191525403600080516020612e55833981519152556040519081527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef843092a36109ac8a89836124e7565b6109b78989856124e7565b6040516370a0823160e01b815230600482015293849182905afa918215610b16578392610ae1575b506020602491604051928380926370a0823160e01b82523060048301525afa928315610ad55792610a9a575b5096610a1a929160409861263f565b610a77575b83519083825282602083015260018060a01b0316907fdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d81936496853392a36001600080516020612e958339815191525582519182526020820152f35b610a926003546001600160701b03808260701c1691166121a8565b600655610a1f565b929150966020833d602011610acd575b81610ab760209383612164565b8101031261026857915191969091906040610a0b565b3d9150610aaa565b604051903d90823e3d90fd5b9091506020813d602011610b0e575b81610afd60209383612164565b8101031261026857519060206109df565b3d9150610af0565b6040513d85823e3d90fd5b60405163391434e360e21b815230600482015260248101919091526044810191909152606490fd5b604051634b637e8f60e11b815260048101859052602490fd5b60405162461bcd60e51b815260206004820152602b60248201527f414d4d546f6b656e506169723a20494e53554646494349454e545f4c4951554960448201526a1112551657d0955493915160aa1b6064820152608490fd5b50871515610901565b965096506020863d602011610bf3575b81610be160209383612164565b810103126102685787955196386108a0565b3d9150610bd4565b6040513d84823e3d90fd5b9092506020813d602011610c32575b81610c2260209383612164565b8101031261026857519138610871565b3d9150610c15565b50604051903d90823e3d90fd5b50346102bb57806003193601126102bb577fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d100541580610d7c575b15610d3f57610c8e6121f5565b90610c976122df565b906040519060209060208301938385106001600160401b03861117610493579284926020610cf58896610ce798604052858552604051988998600f60f81b8a5260e0858b015260e08a0190612109565b9088820360408a0152612109565b924660608801523060808801528460a088015286840360c088015251928381520193925b828110610d2857505050500390f35b835185528695509381019392810192600101610d19565b60405162461bcd60e51b81526020600482015260156024820152741152540dcc4c8e88155b9a5b9a5d1a585b1a5e9959605a1b6044820152606490fd5b507fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d1015415610c81565b50346102bb57806003193601126102bb57610dbe612872565b610dc66124bc565b600080516020612e75833981519152600160ff198254161790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586020604051338152a180f35b50346102bb5760203660031901126102bb576001600160a01b03610e2f6120dd565b166000527f5ab42ced628888259c08ac98db1eb0cf702fc1501344311d8b100cd1bfe4bb006020526020604060002054604051908152f35b50346102bb57806003193601126102bb576020600654604051908152f35b50346102bb57806003193601126102bb57610e9e612872565b600080516020612e3583398151915280546001600160a01b031981169091556000906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50346102bb5760203660031901126102bb576020906040906001600160a01b03610f186120dd565b168152600080516020612e1583398151915283522054604051908152f35b50346102bb5760208060031936011261064f57610f516120dd565b90610f5a61248c565b610f626124bc565b610f816003546001600160701b0391828216928260701c169160e01c90565b5091909260018060a01b039283600154169360405184816024816370a0823160e01b998a82523060048301525afa9182156111f757859189936111c6575b50600254169560246040518098819382523060048301525afa948515610644578795611197575b506001600160701b039182871696610ffe8884612185565b968483169361100d8583612185565b9961101885856128b8565b95600080516020612e558339815191525491821560001461107e578d6110466110418f8f6121a8565b6129f8565b6103e71981011161106a5760405163ec442f0560e01b815260006004820152602490fd5b634e487b7160e01b81526011600452602490fd5b8d916108eb6110998e9d9f9c9e936108eb876110a0966121a8565b948c6121a8565b90508082101561119057505b98891561113757906110c48a6110c996959493612a54565b61263f565b611119575b50604051918252838201527f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f60403392a26001600080516020612e9583398151915255604051908152f35b61112e9060035490808260701c1691166121a8565b600655846110ce565b60405162461bcd60e51b8152600481018c9052602b60248201527f414d4d546f6b656e506169723a20494e53554646494349454e545f4c4951554960448201526a1112551657d3525395115160aa1b6064820152608490fd5b90506110ac565b9094508381813d83116111bf575b6111af8183612164565b8101031261026857519338610fe6565b503d6111a5565b8281939294503d83116111f0575b6111de8183612164565b81010312610268578490519138610fbf565b503d6111d4565b6040513d8a823e3d90fd5b50346102bb57806003193601126102bb57602060ff600080516020612e7583398151915254166040519015158152f35b50346102bb57806003193601126102bb576020600554604051908152f35b50346102bb57806003193601126102bb576020600454604051908152f35b50346102bb5760403660031901126102bb576112886120dd565b906112916120f3565b600080516020612eb583398151915254906001600160401b03821680159081611742575b6001149081611738575b15908161172f575b5061171d5760016001600160401b0319831617600080516020612eb58339815191525560ff8260401c16156116f0575b6112ff6123a0565b936113086123a0565b94611311612bed565b611319612bed565b80516001600160401b0381116115c55780611342600080516020612df5833981519152546121bb565b92601f9384811161166f575b506020908483116001146115e45788926115d9575b50508160011b916000199060031b1c191617600080516020612df5833981519152555b85516001600160401b0381116115c5577f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace04916113c283546121bb565b818111611566575b5060209082116001146114e3578190879860ff98926114d8575b50508160011b916000199060031b1c19161790555b611401612bed565b611409612bed565b6001600080516020612e9583398151915255611423612bed565b61142b612bed565b611433612bed565b61143c33612418565b6bffffffffffffffffffffffff60a01b91338387541617865560018060a01b038092168360015416176001551690600254161760025560401c161561147e5780f35b68ff000000000000000019600080516020612eb58339815191525416600080516020612eb5833981519152557fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2602060405160018152a180f35b0151905038806113e4565b8287527f46a2803e59a4de4e7a4c574b1243f25977ac4c77d5a1a4a609b5394cebb4a2aa97601f198316885b81811061154e57509160ff989991846001959410611535575b505050811b0190556113f9565b015160001960f88460031b161c19169055388080611528565b838301518b556001909a01996020938401930161150f565b8388527f46a2803e59a4de4e7a4c574b1243f25977ac4c77d5a1a4a609b5394cebb4a2aa8280850160051c820192602086106115bc575b0160051c01905b8181106115b157506113ca565b8881556001016115a4565b9250819261159d565b634e487b7160e01b86526041600452602486fd5b015190503880611363565b600080516020612df58339815191528952600080516020612dd58339815191529250601f198416895b818110611657575090846001959493921061163e575b505050811b01600080516020612df583398151915255611386565b015160001960f88460031b161c19169055388080611623565b9293602060018192878601518155019501930161160d565b909150600080516020612df583398151915288528380840160051c600080516020612dd58339815191520191602085106116da575b90849392910160051c600080516020612dd583398151915201905b8181106116cc575061134e565b8981558493506001016116bf565b600080516020612dd583398151915292506116a4565b68ffffffffffffffffff1982166801000000000000000117600080516020612eb5833981519152556112f7565b60405163f92ee8a960e01b8152600490fd5b905015386112c7565b303b1591506112bf565b604084901c60ff161591506112b5565b50346102bb57806003193601126102bb5761176b612872565b600080516020612e75833981519152805460ff8116156117b85760ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6020604051338152a180f35b604051638dfc202b60e01b8152600490fd5b50346102bb57806003193601126102bb5760206117e5612b78565b604051908152f35b50346102bb57806003193601126102bb57602060405160128152f35b50346102bb5760603660031901126102bb576118236120dd565b61182b6120f3565b60443590611838836123df565b3360005260205260406000205492600019841061185a575b6106979350612784565b8284106118c9576001600160a01b038116156118b0573315611897578261069794611884836123df565b3360005260205203604060002055611850565b604051634a1406b160e11b815260006004820152602490fd5b60405163e602df0560e01b815260006004820152602490fd5b604051637dc7a0d960e11b81523360048201526024810185905260448101849052606490fd5b50346102bb57806003193601126102bb576020600080516020612e5583398151915254604051908152f35b50346102bb57806003193601126102bb576001546040516001600160a01b039091168152602090f35b50346102bb5760403660031901126102bb576106976119606120dd565b6024359033612b1a565b50346102bb57806003193601126102bb57606063ffffffff6119a16003546001600160701b0391828216928260701c169160e01c90565b909291604051936001600160701b038092168552166020840152166040820152f35b50346102bb57806003193601126102bb57604051600080516020612df583398151915280548260006119f4836121bb565b9283835260209460019186600182169182600014610789575050600114611a2357505061071592500383612164565b859250600052600080516020612dd5833981519152906000915b858310611a5557505061071593508201018580610707565b80548389018501528794508693909201918101611a3d565b50346102bb5760803660031901126102bb576044356001600160a01b03811690036102bb576001600160401b03606435116102bb573660236064350112156102bb576001600160401b0360643560040135116102bb57366024606435600401356064350101116102bb57611adf61248c565b611ae76124bc565b60043515801580916120d2575b1561207c57611b186003546001600160701b0391828216928260701c169160e01c90565b506001600160701b03829392166004351080612068575b15612017576001546002546001600160a01b039081169391811691906044351682141580612002575b15611fbd57611fa9575b602435611f95575b60643560040135611ec6575b906020602492604051938480926370a0823160e01b82523060048301525afa9182156102b0578592611e8f575b506020602493604051948580926370a0823160e01b82523060048301525afa9283156102b0578593611e5b575b50611be66004356001600160701b038616612185565b821115611e5457611c0b611c056004356001600160701b038716612185565b83612185565b935b611c226024356001600160701b038416612185565b841115611e4d57611c47611c416024356001600160701b038516612185565b85612185565b935b8515158615611e44575b15611def57836103e88102046103e81484151715611ddb576003860286810460031487151715611dc757611c8b906103e88602612185565b6103e882028281046103e81483151715611d9f57600387029087820460031488151715611db357611cc69291611cc091612185565b906121a8565b611ce26001600160701b0385166001600160701b0385166121a8565b90620f424091828102928184041490151715611d9f5710611d6857611d069361263f565b60405191825260208201526004356040820152602435606082015260018060a01b0360443516907fd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d82260803392a36001600080516020612e958339815191525580f35b60405162461bcd60e51b815260206004820152600f60248201526e414d4d546f6b656e506169723a204b60881b6044820152606490fd5b634e487b7160e01b89526011600452602489fd5b634e487b7160e01b8a52601160045260248afd5b634e487b7160e01b88526011600452602488fd5b634e487b7160e01b87526011600452602487fd5b60405162461bcd60e51b815260206004820152602760248201527f414d4d546f6b656e506169723a20494e53554646494349454e545f494e50555460448201526617d05353d5539560ca1b6064820152608490fd5b50841515611c53565b8593611c49565b8493611c0d565b9092506020813d602011611e87575b81611e7760209383612164565b8101031261026857519138611bd0565b3d9150611e6a565b9291506020833d602011611ebe575b81611eab60209383612164565b8101031261026857915190916020611ba3565b3d9150611e9e565b6044356001600160a01b03163b156104c157604051635fea11f760e01b815233600482015260043560248201526024356044820152608060648201526064356004013560848201526064356004013560246064350160a483013760a460643560040135828101820188905287918391601f19601f9091011682018290030181836001600160a01b03604435165af1801561060857611f65575b50611b76565b6001600160401b038196929611611f8157604052936020611f5f565b634e487b7160e01b82526041600452602482fd5b611fa4602435604435856124e7565b611b6a565b611fb8600435604435836124e7565b611b62565b60405162461bcd60e51b815260206004820152601860248201527f414d4d546f6b656e506169723a20494e56414c49445f544f00000000000000006044820152606490fd5b506044356001600160a01b0316841415611b58565b60405162461bcd60e51b8152602060048201526024808201527f414d4d546f6b656e506169723a20494e53554646494349454e545f4c495155496044820152634449545960e01b6064820152608490fd5b506001600160701b03811660243510611b2f565b60405162461bcd60e51b815260206004820152602860248201527f414d4d546f6b656e506169723a20494e53554646494349454e545f4f555450556044820152671517d05353d5539560c21b6064820152608490fd5b506024351515611af4565b600435906001600160a01b038216820361026857565b602435906001600160a01b038216820361026857565b919082519283825260005b848110612135575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201612114565b604081019081106001600160401b0382111761049357604052565b90601f801991011681019081106001600160401b0382111761049357604052565b9190820391821161219257565b634e487b7160e01b600052601160045260246000fd5b8181029291811591840414171561219257565b90600182811c921680156121eb575b60208310146121d557565b634e487b7160e01b600052602260045260246000fd5b91607f16916121ca565b604051906000827fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d1029182549261222a846121bb565b808452936020916001918281169081156122b95750600114612258575b50505061225692500383612164565b565b60009081527f42ad5d3e1f2e6e70edcf6d991b8a3023d3fca8047a131592f9edb9fd9b89d57d9590935091905b8284106122a15750612256945050508101602001388080612247565b85548885018301529485019487945092810192612285565b925050506020925061225694915060ff191682840152151560051b820101388080612247565b604051906000827fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d10391825492612314846121bb565b808452936020916001918281169081156122b9575060011461233f5750505061225692500383612164565b60009081527f5f9ce34815f8e11431c7bb75a8e6886a91478f7ffc1dbb0a98dc240fddd76b759590935091905b8284106123885750612256945050508101602001388080612247565b8554888501830152948501948794509281019261236c565b604051906123ad82612149565b6003825262414d4d60e81b6020830152565b81156123c9570490565b634e487b7160e01b600052601260045260246000fd5b6001600160a01b031660009081527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace016020526040902090565b6001600160a01b0390811690811561247357600080516020612e3583398151915280546001600160a01b031981168417909155167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b604051631e4fbdf760e01b815260006004820152602490fd5b600080516020612e9583398151915260028154146124aa5760029055565b604051633ee5aeb560e01b8152600490fd5b60ff600080516020612e7583398151915254166124d557565b60405163d93c066560e01b8152600490fd5b60405192916124f584612149565b601984527f7472616e7366657228616464726573732c75696e74323536290000000000000060209485015260405163a9059cbb60e01b8186019081526001600160a01b0390921660248201526044808201949094529283526001600160401b0392608081018481118282101761049357604052600092839283809351925af1913d15612637573d908111611f81576040519061259a601f8201601f1916860183612164565b81523d828583013e5b826125f7575b5050156125b35750565b6064906040519062461bcd60e51b82526004820152601d60248201527f414d4d546f6b656e506169723a205452414e534645525f4641494c45440000006044820152fd5b8051925082159190848315612613575b505050905038806125a9565b91938180945001031261064f578201519081151582036102bb575080388084612607565b5060606125a3565b92916001600160701b0390818511158061277a575b1561273c577f1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad194604094839263ffffffff60035460e01c81421603169182151580612731575b80612726575b6126e3575b505050607093841b600160701b600160e01b031691169081174260e01b6001600160e01b031916176003819055845191825290921c166020820152a1565b6001600160e01b03916127159190612702908585612707838587612acd565b612afc565b160260045401600455612acd565b1602600554016005553880806126a5565b5084811615156126a0565b50848216151561269a565b60405162461bcd60e51b8152602060048201526016602482015275414d4d546f6b656e506169723a204f564552464c4f5760501b6044820152606490fd5b5081831115612654565b916001600160a01b03808416928315612859571692831561284057600090838252600080516020612e158339815191528060205260408320549184831061280d575082847fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef959360409388602097528652038282205586815220818154019055604051908152a3565b60405163391434e360e21b81526001600160a01b0391909116600482015260248101929092525060448101839052606490fd5b60405163ec442f0560e01b815260006004820152602490fd5b604051634b637e8f60e11b815260006004820152602490fd5b600080516020612e35833981519152546001600160a01b0316330361289357565b60405163118cdaa760e01b8152336004820152602490fd5b9190820180921161219257565b60008054604051622fcfcb60e31b815293949392906001600160a01b03906020908590600490829085165afa938415610b165783946129b7575b50831615159460065491866000146129a65782612911575b5050505050565b61104161292e91612934936001600160701b0380911691166121a8565b916129f8565b90818111612943575b8061290a565b612960600080516020612e5583398151915254611cc08484612185565b9260058202918083046005149015171561106a57506129899291612983916128ab565b906123bf565b80612996575b808061293d565b61299f91612a54565b388061298f565b50509091506129b25750565b600655565b9093506020813d6020116129f0575b816129d360209383612164565b810103126129ec575183811681036129ec5792386128f2565b8280fd5b3d91506129c6565b9060006003831115612a475750816001908060011c600181018091116121925791905b848310612a2757505050565b90919350612a3e84612a3981846123bf565b6128ab565b821c9190612a1b565b91612a4e57565b60019150565b6001600160a01b0316908115612840577fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6020600092600080516020612e55833981519152612aa48282546128ab565b9055848452600080516020612e15833981519152825260408420818154019055604051908152a3565b600160701b600160e01b03607082901b16906001600160701b0316808204600160701b14901517156121925790565b906001600160701b03169081156123c9576001600160e01b03160490565b916001600160a01b038084169283156118b05716928315611897577f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591612b626020926123df565b85600052825280604060002055604051908152a3565b612b80612d25565b612b88612d8f565b6040519060208201927f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f8452604083015260608201524660808201523060a082015260a0815260c081018181106001600160401b038211176104935760405251902090565b60ff600080516020612eb58339815191525460401c1615612c0a57565b604051631afcd79f60e31b8152600490fd5b91907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411612c9457926020929160ff608095604051948552168484015260408301526060820152600092839182805260015afa15610ad55780516001600160a01b03811615612c8b57918190565b50809160019190565b50505060009160039190565b6004811015612d0f5780612cb2575050565b60018103612ccc5760405163f645eedf60e01b8152600490fd5b60028103612ced5760405163fce698f760e01b815260048101839052602490fd5b600314612cf75750565b602490604051906335e2f38360e21b82526004820152fd5b634e487b7160e01b600052602160045260246000fd5b612d2d6121f5565b8051908115612d3d576020012090565b50507fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d100548015612d6a5790565b507fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47090565b612d976122df565b8051908115612da7576020012090565b50507fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d101548015612d6a579056fe2ae08a8e29253f69ac5d979a101956ab8f8d9d7ded63fa7a83b16fc47648eab052c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0352c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace009016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930052c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace02cd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f033009b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00f0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00a2646970667358221220d3ffdd3d92e9da540901defb82f40c7849526e5ea3c333dea2edc1213df2d8f964736f6c63430008160033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0xB9 JUMPI PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 DUP2 SLOAD SWAP1 PUSH1 0xFF DUP3 PUSH1 0x40 SHR AND PUSH2 0xAA JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x2 PUSH1 0x1 PUSH1 0x40 SHL SUB NOT DUP3 DUP3 AND ADD PUSH2 0x65 JUMPI JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F0A SWAP1 DUP2 PUSH3 0xBF DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB NOT SWAP1 SWAP2 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 SWAP1 LOG1 CODESIZE DUP1 DUP1 PUSH2 0x55 JUMP JUMPDEST PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x22C0D9F EQ PUSH2 0x1A6D JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x19C3 JUMPI DUP1 PUSH4 0x902F1AC EQ PUSH2 0x196A JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1943 JUMPI DUP1 PUSH4 0xDFE1681 EQ PUSH2 0x191A JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x18EF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1809 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x17ED JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x17CA JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x1752 JUMPI DUP1 PUSH4 0x485CC955 EQ PUSH2 0x126E JUMPI DUP1 PUSH4 0x5909C0D5 EQ PUSH2 0x1250 JUMPI DUP1 PUSH4 0x5A3D5493 EQ PUSH2 0x1232 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x1202 JUMPI DUP1 PUSH4 0x6A627842 EQ PUSH2 0xF36 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0xEF0 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xE85 JUMPI DUP1 PUSH4 0x7464FC3D EQ PUSH2 0xE67 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0xE0D JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0xDA5 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0xC47 JUMPI DUP1 PUSH4 0x89AFCB44 EQ PUSH2 0x7E1 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x7AB JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x6A2 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x670 JUMPI DUP1 PUSH4 0xBA9A7A56 EQ PUSH2 0x653 JUMPI DUP1 PUSH4 0xBC25CF77 EQ PUSH2 0x515 JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x4EE JUMPI DUP1 PUSH4 0xD21220A7 EQ PUSH2 0x4C5 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x335 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2EB JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2BE JUMPI PUSH4 0xFFF6CAE9 EQ PUSH2 0x188 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2BB JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2BB JUMPI PUSH2 0x1A0 PUSH2 0x248C JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP1 DUP3 MSTORE ADDRESS PUSH1 0x4 DUP4 ADD MSTORE SWAP2 PUSH1 0x20 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP4 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 DUP7 AND GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x2B0 JUMPI DUP4 SWAP2 DUP7 SWAP4 PUSH2 0x27F JUMPI JUMPDEST POP PUSH1 0x2 SLOAD AND SWAP4 PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP7 DUP2 SWAP4 DUP3 MSTORE ADDRESS PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x274 JUMPI DUP5 SWAP3 PUSH2 0x23D JUMPI JUMPDEST POP PUSH2 0x228 SWAP3 POP PUSH1 0x3 SLOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP1 DUP5 PUSH1 0x70 SHR AND SWAP4 AND SWAP2 PUSH2 0x263F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E95 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE DUP1 RETURN JUMPDEST SWAP1 SWAP2 POP DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x26D JUMPI JUMPDEST PUSH2 0x254 DUP2 DUP4 PUSH2 0x2164 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x268 JUMPI PUSH2 0x228 SWAP2 MLOAD SWAP1 CODESIZE PUSH2 0x208 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x24A JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP3 DUP2 SWAP4 SWAP3 SWAP5 POP RETURNDATASIZE DUP4 GT PUSH2 0x2A9 JUMPI JUMPDEST PUSH2 0x297 DUP2 DUP4 PUSH2 0x2164 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x268 JUMPI DUP3 SWAP1 MLOAD SWAP2 CODESIZE PUSH2 0x1E1 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x28D JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2BB JUMPI PUSH2 0x2E8 PUSH2 0x2DB PUSH2 0x20DD JUMP JUMPDEST PUSH2 0x2E3 PUSH2 0x2872 JUMP JUMPDEST PUSH2 0x2418 JUMP JUMPDEST DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2BB JUMPI PUSH2 0x305 PUSH2 0x20DD JUMP JUMPDEST PUSH2 0x316 PUSH2 0x310 PUSH2 0x20F3 JUMP JUMPDEST SWAP2 PUSH2 0x23DF JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI PUSH1 0xE0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2BB JUMPI PUSH2 0x34F PUSH2 0x20DD JUMP JUMPDEST SWAP1 PUSH2 0x358 PUSH2 0x20F3 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x64 CALLDATALOAD SWAP4 PUSH1 0x84 CALLDATALOAD SWAP5 PUSH1 0xFF DUP7 AND DUP7 SUB PUSH2 0x4C1 JUMPI DUP1 TIMESTAMP GT PUSH2 0x4A9 JUMPI PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 DUP4 AND SWAP7 DUP8 DUP8 MSTORE PUSH32 0x5AB42CED628888259C08AC98DB1EB0CF702FC1501344311D8B100CD1BFE4BB00 PUSH1 0x20 MSTORE PUSH1 0x40 DUP8 KECCAK256 SWAP1 DUP2 SLOAD SWAP2 PUSH1 0x1 DUP4 ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP3 PUSH1 0x20 DUP5 ADD SWAP3 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP5 MSTORE DUP11 PUSH1 0x40 DUP7 ADD MSTORE DUP6 DUP9 AND PUSH1 0x60 DUP7 ADD MSTORE DUP9 PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0xC0 DUP4 MSTORE PUSH1 0xE0 DUP4 ADD SWAP2 DUP4 DUP4 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP5 GT OR PUSH2 0x493 JUMPI PUSH2 0x461 SWAP4 PUSH2 0x458 SWAP4 PUSH1 0x40 MSTORE MLOAD SWAP1 KECCAK256 PUSH2 0x431 PUSH2 0x2B78 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x1901 PUSH1 0xF0 SHL DUP4 MSTORE PUSH1 0x2 DUP4 ADD MSTORE PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0xC4 CALLDATALOAD SWAP2 PUSH1 0x42 PUSH1 0xA4 CALLDATALOAD SWAP3 KECCAK256 PUSH2 0x2C1C JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0x2CA0 JUMP JUMPDEST AND DUP6 DUP2 SUB PUSH2 0x475 JUMPI POP PUSH2 0x2E8 SWAP4 SWAP5 POP PUSH2 0x2B1A JUMP JUMPDEST PUSH1 0x44 SWAP1 DUP7 PUSH1 0x40 MLOAD SWAP2 PUSH4 0x25C00723 PUSH1 0xE1 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x313C8981 PUSH1 0xE1 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2BB JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2BB JUMPI SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x64F JUMPI PUSH2 0x530 PUSH2 0x20DD JUMP JUMPDEST SWAP1 PUSH2 0x539 PUSH2 0x248C JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP1 DUP3 MSTORE ADDRESS PUSH1 0x4 DUP4 ADD MSTORE SWAP1 SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP5 SWAP1 SWAP4 SWAP1 SWAP3 AND DUP3 DUP7 PUSH1 0x24 DUP2 DUP5 GAS STATICCALL SWAP6 DUP7 ISZERO PUSH2 0x644 JUMPI DUP8 SWAP7 PUSH2 0x613 JUMPI JUMPDEST POP PUSH2 0x59F SWAP1 DUP5 PUSH2 0x599 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB SWAP9 DUP10 PUSH1 0x3 SLOAD AND SWAP1 PUSH2 0x2185 JUMP JUMPDEST SWAP2 PUSH2 0x24E7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE DUP2 DUP2 PUSH1 0x24 DUP2 DUP8 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x608 JUMPI DUP7 SWAP3 PUSH2 0x5D8 JUMPI JUMPDEST POP POP PUSH2 0x599 SWAP1 PUSH2 0x228 SWAP5 PUSH1 0x3 SLOAD PUSH1 0x70 SHR AND SWAP1 PUSH2 0x2185 JUMP JUMPDEST SWAP1 DUP1 SWAP3 POP DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x601 JUMPI JUMPDEST PUSH2 0x5EF DUP2 DUP4 PUSH2 0x2164 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x268 JUMPI MLOAD DUP4 PUSH2 0x599 PUSH2 0x5C1 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x5E5 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 SWAP6 POP DUP3 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x63D JUMPI JUMPDEST PUSH2 0x62B DUP2 DUP4 PUSH2 0x2164 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x268 JUMPI MLOAD SWAP5 PUSH2 0x59F PUSH2 0x57C JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x621 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2BB JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH2 0x3E8 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2BB JUMPI PUSH2 0x697 PUSH2 0x68D PUSH2 0x20DD JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x2784 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2BB JUMPI PUSH1 0x40 MLOAD PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE04 DUP1 SLOAD DUP3 PUSH1 0x0 PUSH2 0x6E5 DUP4 PUSH2 0x21BB JUMP JUMPDEST SWAP3 DUP4 DUP4 MSTORE PUSH1 0x20 SWAP5 PUSH1 0x1 SWAP2 DUP7 PUSH1 0x1 DUP3 AND SWAP2 DUP3 PUSH1 0x0 EQ PUSH2 0x789 JUMPI POP POP PUSH1 0x1 EQ PUSH2 0x72D JUMPI JUMPDEST POP POP PUSH2 0x715 SWAP3 POP SUB DUP4 PUSH2 0x2164 JUMP JUMPDEST PUSH2 0x729 PUSH1 0x40 MLOAD SWAP3 DUP3 DUP5 SWAP4 DUP5 MSTORE DUP4 ADD SWAP1 PUSH2 0x2109 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP6 SWAP3 POP PUSH1 0x0 MSTORE PUSH32 0x46A2803E59A4DE4E7A4C574B1243F25977AC4C77D5A1A4A609B5394CEBB4A2AA SWAP1 PUSH1 0x0 SWAP2 JUMPDEST DUP6 DUP4 LT PUSH2 0x771 JUMPI POP POP PUSH2 0x715 SWAP4 POP DUP3 ADD ADD DUP6 DUP1 PUSH2 0x707 JUMP JUMPDEST DUP1 SLOAD DUP4 DUP10 ADD DUP6 ADD MSTORE DUP8 SWAP5 POP DUP7 SWAP4 SWAP1 SWAP3 ADD SWAP2 DUP2 ADD PUSH2 0x759 JUMP JUMPDEST SWAP3 POP SWAP4 POP POP PUSH2 0x715 SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD DUP6 DUP1 PUSH2 0x707 JUMP JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2BB JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E35 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2BB JUMPI PUSH2 0x7FB PUSH2 0x20DD JUMP JUMPDEST PUSH2 0x803 PUSH2 0x248C JUMP JUMPDEST PUSH2 0x80B PUSH2 0x24BC JUMP JUMPDEST PUSH2 0x82A PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB SWAP2 DUP3 DUP3 AND SWAP3 DUP3 PUSH1 0x70 SHR AND SWAP2 PUSH1 0xE0 SHR SWAP1 JUMP JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP7 SWAP5 SWAP6 SWAP2 SWAP1 SWAP3 AND SWAP4 SWAP1 SWAP3 SWAP1 PUSH1 0x20 DUP4 PUSH1 0x24 DUP2 DUP9 GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0xC3A JUMPI DUP2 SWAP4 PUSH2 0xC06 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP7 PUSH1 0x20 DUP9 PUSH1 0x24 DUP2 DUP5 GAS STATICCALL SWAP6 DUP7 ISZERO PUSH2 0xBFB JUMPI DUP8 SWAP9 DUP4 SWAP9 SWAP8 PUSH2 0xBC4 JUMPI JUMPDEST POP ADDRESS DUP4 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E15 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH2 0x8F7 PUSH2 0x8EB PUSH2 0x8EB PUSH2 0x8F0 PUSH2 0x8D1 DUP9 PUSH1 0x40 DUP10 KECCAK256 SLOAD SWAP13 PUSH2 0x28B8 JUMP JUMPDEST SWAP9 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E55 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP4 DUP5 SWAP2 DUP14 PUSH2 0x21A8 JUMP JUMPDEST PUSH2 0x23BF JUMP JUMPDEST SWAP11 DUP11 PUSH2 0x21A8 JUMP JUMPDEST SWAP7 DUP9 ISZERO ISZERO DUP1 PUSH2 0xBBB JUMPI JUMPDEST ISZERO PUSH2 0xB62 JUMPI ADDRESS ISZERO PUSH2 0xB49 JUMPI ADDRESS PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E15 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD DUP2 DUP2 LT PUSH2 0xB21 JUMPI SWAP2 PUSH1 0x0 DUP3 PUSH1 0x20 SWAP4 PUSH1 0x24 SWAP7 SWAP6 ADDRESS DUP5 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E15 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP7 MSTORE SUB PUSH1 0x40 DUP4 KECCAK256 SSTORE DUP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E55 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SUB PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E55 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 ADDRESS SWAP3 LOG3 PUSH2 0x9AC DUP11 DUP10 DUP4 PUSH2 0x24E7 JUMP JUMPDEST PUSH2 0x9B7 DUP10 DUP10 DUP6 PUSH2 0x24E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP4 DUP5 SWAP2 DUP3 SWAP1 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0xB16 JUMPI DUP4 SWAP3 PUSH2 0xAE1 JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x24 SWAP2 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP3 MSTORE ADDRESS PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0xAD5 JUMPI SWAP3 PUSH2 0xA9A JUMPI JUMPDEST POP SWAP7 PUSH2 0xA1A SWAP3 SWAP2 PUSH1 0x40 SWAP9 PUSH2 0x263F JUMP JUMPDEST PUSH2 0xA77 JUMPI JUMPDEST DUP4 MLOAD SWAP1 DUP4 DUP3 MSTORE DUP3 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0xDCCD412F0B1252819CB1FD330B93224CA42612892BB3F4F789976E6D81936496 DUP6 CALLER SWAP3 LOG3 PUSH1 0x1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E95 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST PUSH2 0xA92 PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP1 DUP3 PUSH1 0x70 SHR AND SWAP2 AND PUSH2 0x21A8 JUMP JUMPDEST PUSH1 0x6 SSTORE PUSH2 0xA1F JUMP JUMPDEST SWAP3 SWAP2 POP SWAP7 PUSH1 0x20 DUP4 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xACD JUMPI JUMPDEST DUP2 PUSH2 0xAB7 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x2164 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x268 JUMPI SWAP2 MLOAD SWAP2 SWAP7 SWAP1 SWAP2 SWAP1 PUSH1 0x40 PUSH2 0xA0B JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xAAA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 SWAP2 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xB0E JUMPI JUMPDEST DUP2 PUSH2 0xAFD PUSH1 0x20 SWAP4 DUP4 PUSH2 0x2164 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x268 JUMPI MLOAD SWAP1 PUSH1 0x20 PUSH2 0x9DF JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xAF0 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x414D4D546F6B656E506169723A20494E53554646494349454E545F4C49515549 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x1112551657D09554939151 PUSH1 0xAA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP DUP8 ISZERO ISZERO PUSH2 0x901 JUMP JUMPDEST SWAP7 POP SWAP7 POP PUSH1 0x20 DUP7 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xBF3 JUMPI JUMPDEST DUP2 PUSH2 0xBE1 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x2164 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x268 JUMPI DUP8 SWAP6 MLOAD SWAP7 CODESIZE PUSH2 0x8A0 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xBD4 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 SWAP3 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xC32 JUMPI JUMPDEST DUP2 PUSH2 0xC22 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x2164 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x268 JUMPI MLOAD SWAP2 CODESIZE PUSH2 0x871 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xC15 JUMP JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2BB JUMPI PUSH32 0xA16A46D94261C7517CC8FF89F61C0CE93598E3C849801011DEE649A6A557D100 SLOAD ISZERO DUP1 PUSH2 0xD7C JUMPI JUMPDEST ISZERO PUSH2 0xD3F JUMPI PUSH2 0xC8E PUSH2 0x21F5 JUMP JUMPDEST SWAP1 PUSH2 0xC97 PUSH2 0x22DF JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 SWAP1 PUSH1 0x20 DUP4 ADD SWAP4 DUP4 DUP6 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP7 GT OR PUSH2 0x493 JUMPI SWAP3 DUP5 SWAP3 PUSH1 0x20 PUSH2 0xCF5 DUP9 SWAP7 PUSH2 0xCE7 SWAP9 PUSH1 0x40 MSTORE DUP6 DUP6 MSTORE PUSH1 0x40 MLOAD SWAP9 DUP10 SWAP9 PUSH1 0xF PUSH1 0xF8 SHL DUP11 MSTORE PUSH1 0xE0 DUP6 DUP12 ADD MSTORE PUSH1 0xE0 DUP11 ADD SWAP1 PUSH2 0x2109 JUMP JUMPDEST SWAP1 DUP9 DUP3 SUB PUSH1 0x40 DUP11 ADD MSTORE PUSH2 0x2109 JUMP JUMPDEST SWAP3 CHAINID PUSH1 0x60 DUP9 ADD MSTORE ADDRESS PUSH1 0x80 DUP9 ADD MSTORE DUP5 PUSH1 0xA0 DUP9 ADD MSTORE DUP7 DUP5 SUB PUSH1 0xC0 DUP9 ADD MSTORE MLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP4 SWAP3 JUMPDEST DUP3 DUP2 LT PUSH2 0xD28 JUMPI POP POP POP POP SUB SWAP1 RETURN JUMPDEST DUP4 MLOAD DUP6 MSTORE DUP7 SWAP6 POP SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0xD19 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x1152540DCC4C8E88155B9A5B9A5D1A585B1A5E9959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH32 0xA16A46D94261C7517CC8FF89F61C0CE93598E3C849801011DEE649A6A557D101 SLOAD ISZERO PUSH2 0xC81 JUMP JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2BB JUMPI PUSH2 0xDBE PUSH2 0x2872 JUMP JUMPDEST PUSH2 0xDC6 PUSH2 0x24BC JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E75 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH1 0x20 PUSH1 0x40 MLOAD CALLER DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2BB JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xE2F PUSH2 0x20DD JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH32 0x5AB42CED628888259C08AC98DB1EB0CF702FC1501344311D8B100CD1BFE4BB00 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2BB JUMPI PUSH1 0x20 PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2BB JUMPI PUSH2 0xE9E PUSH2 0x2872 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E35 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2BB JUMPI PUSH1 0x20 SWAP1 PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xF18 PUSH2 0x20DD JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E15 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 MSTORE KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x64F JUMPI PUSH2 0xF51 PUSH2 0x20DD JUMP JUMPDEST SWAP1 PUSH2 0xF5A PUSH2 0x248C JUMP JUMPDEST PUSH2 0xF62 PUSH2 0x24BC JUMP JUMPDEST PUSH2 0xF81 PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB SWAP2 DUP3 DUP3 AND SWAP3 DUP3 PUSH1 0x70 SHR AND SWAP2 PUSH1 0xE0 SHR SWAP1 JUMP JUMPDEST POP SWAP2 SWAP1 SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 PUSH1 0x1 SLOAD AND SWAP4 PUSH1 0x40 MLOAD DUP5 DUP2 PUSH1 0x24 DUP2 PUSH4 0x70A08231 PUSH1 0xE0 SHL SWAP10 DUP11 DUP3 MSTORE ADDRESS PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x11F7 JUMPI DUP6 SWAP2 DUP10 SWAP4 PUSH2 0x11C6 JUMPI JUMPDEST POP PUSH1 0x2 SLOAD AND SWAP6 PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP9 DUP2 SWAP4 DUP3 MSTORE ADDRESS PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP5 DUP6 ISZERO PUSH2 0x644 JUMPI DUP8 SWAP6 PUSH2 0x1197 JUMPI JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB SWAP2 DUP3 DUP8 AND SWAP7 PUSH2 0xFFE DUP9 DUP5 PUSH2 0x2185 JUMP JUMPDEST SWAP7 DUP5 DUP4 AND SWAP4 PUSH2 0x100D DUP6 DUP4 PUSH2 0x2185 JUMP JUMPDEST SWAP10 PUSH2 0x1018 DUP6 DUP6 PUSH2 0x28B8 JUMP JUMPDEST SWAP6 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E55 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP2 DUP3 ISZERO PUSH1 0x0 EQ PUSH2 0x107E JUMPI DUP14 PUSH2 0x1046 PUSH2 0x1041 DUP16 DUP16 PUSH2 0x21A8 JUMP JUMPDEST PUSH2 0x29F8 JUMP JUMPDEST PUSH2 0x3E7 NOT DUP2 ADD GT PUSH2 0x106A JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP14 SWAP2 PUSH2 0x8EB PUSH2 0x1099 DUP15 SWAP14 SWAP16 SWAP13 SWAP15 SWAP4 PUSH2 0x8EB DUP8 PUSH2 0x10A0 SWAP7 PUSH2 0x21A8 JUMP JUMPDEST SWAP5 DUP13 PUSH2 0x21A8 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 LT ISZERO PUSH2 0x1190 JUMPI POP JUMPDEST SWAP9 DUP10 ISZERO PUSH2 0x1137 JUMPI SWAP1 PUSH2 0x10C4 DUP11 PUSH2 0x10C9 SWAP7 SWAP6 SWAP5 SWAP4 PUSH2 0x2A54 JUMP JUMPDEST PUSH2 0x263F JUMP JUMPDEST PUSH2 0x1119 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE DUP4 DUP3 ADD MSTORE PUSH32 0x4C209B5FC8AD50758F13E2E1088BA56A560DFF690A1C6FEF26394F4C03821C4F PUSH1 0x40 CALLER SWAP3 LOG2 PUSH1 0x1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E95 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH2 0x112E SWAP1 PUSH1 0x3 SLOAD SWAP1 DUP1 DUP3 PUSH1 0x70 SHR AND SWAP2 AND PUSH2 0x21A8 JUMP JUMPDEST PUSH1 0x6 SSTORE DUP5 PUSH2 0x10CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP13 SWAP1 MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x414D4D546F6B656E506169723A20494E53554646494349454E545F4C49515549 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x1112551657D35253951151 PUSH1 0xAA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH2 0x10AC JUMP JUMPDEST SWAP1 SWAP5 POP DUP4 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x11BF JUMPI JUMPDEST PUSH2 0x11AF DUP2 DUP4 PUSH2 0x2164 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x268 JUMPI MLOAD SWAP4 CODESIZE PUSH2 0xFE6 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x11A5 JUMP JUMPDEST DUP3 DUP2 SWAP4 SWAP3 SWAP5 POP RETURNDATASIZE DUP4 GT PUSH2 0x11F0 JUMPI JUMPDEST PUSH2 0x11DE DUP2 DUP4 PUSH2 0x2164 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x268 JUMPI DUP5 SWAP1 MLOAD SWAP2 CODESIZE PUSH2 0xFBF JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x11D4 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP11 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2BB JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E75 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2BB JUMPI PUSH1 0x20 PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2BB JUMPI PUSH1 0x20 PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2BB JUMPI PUSH2 0x1288 PUSH2 0x20DD JUMP JUMPDEST SWAP1 PUSH2 0x1291 PUSH2 0x20F3 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2EB5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 AND DUP1 ISZERO SWAP1 DUP2 PUSH2 0x1742 JUMPI JUMPDEST PUSH1 0x1 EQ SWAP1 DUP2 PUSH2 0x1738 JUMPI JUMPDEST ISZERO SWAP1 DUP2 PUSH2 0x172F JUMPI JUMPDEST POP PUSH2 0x171D JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB NOT DUP4 AND OR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2EB5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE PUSH1 0xFF DUP3 PUSH1 0x40 SHR AND ISZERO PUSH2 0x16F0 JUMPI JUMPDEST PUSH2 0x12FF PUSH2 0x23A0 JUMP JUMPDEST SWAP4 PUSH2 0x1308 PUSH2 0x23A0 JUMP JUMPDEST SWAP5 PUSH2 0x1311 PUSH2 0x2BED JUMP JUMPDEST PUSH2 0x1319 PUSH2 0x2BED JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x15C5 JUMPI DUP1 PUSH2 0x1342 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2DF5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH2 0x21BB JUMP JUMPDEST SWAP3 PUSH1 0x1F SWAP4 DUP5 DUP2 GT PUSH2 0x166F JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 DUP5 DUP4 GT PUSH1 0x1 EQ PUSH2 0x15E4 JUMPI DUP9 SWAP3 PUSH2 0x15D9 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2DF5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE JUMPDEST DUP6 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x15C5 JUMPI PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE04 SWAP2 PUSH2 0x13C2 DUP4 SLOAD PUSH2 0x21BB JUMP JUMPDEST DUP2 DUP2 GT PUSH2 0x1566 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 DUP3 GT PUSH1 0x1 EQ PUSH2 0x14E3 JUMPI DUP2 SWAP1 DUP8 SWAP9 PUSH1 0xFF SWAP9 SWAP3 PUSH2 0x14D8 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST PUSH2 0x1401 PUSH2 0x2BED JUMP JUMPDEST PUSH2 0x1409 PUSH2 0x2BED JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E95 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE PUSH2 0x1423 PUSH2 0x2BED JUMP JUMPDEST PUSH2 0x142B PUSH2 0x2BED JUMP JUMPDEST PUSH2 0x1433 PUSH2 0x2BED JUMP JUMPDEST PUSH2 0x143C CALLER PUSH2 0x2418 JUMP JUMPDEST PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL SWAP2 CALLER DUP4 DUP8 SLOAD AND OR DUP7 SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP3 AND DUP4 PUSH1 0x1 SLOAD AND OR PUSH1 0x1 SSTORE AND SWAP1 PUSH1 0x2 SLOAD AND OR PUSH1 0x2 SSTORE PUSH1 0x40 SHR AND ISZERO PUSH2 0x147E JUMPI DUP1 RETURN JUMPDEST PUSH9 0xFF0000000000000000 NOT PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2EB5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2EB5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x13E4 JUMP JUMPDEST DUP3 DUP8 MSTORE PUSH32 0x46A2803E59A4DE4E7A4C574B1243F25977AC4C77D5A1A4A609B5394CEBB4A2AA SWAP8 PUSH1 0x1F NOT DUP4 AND DUP9 JUMPDEST DUP2 DUP2 LT PUSH2 0x154E JUMPI POP SWAP2 PUSH1 0xFF SWAP9 SWAP10 SWAP2 DUP5 PUSH1 0x1 SWAP6 SWAP5 LT PUSH2 0x1535 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x13F9 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x1528 JUMP JUMPDEST DUP4 DUP4 ADD MLOAD DUP12 SSTORE PUSH1 0x1 SWAP1 SWAP11 ADD SWAP10 PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 ADD PUSH2 0x150F JUMP JUMPDEST DUP4 DUP9 MSTORE PUSH32 0x46A2803E59A4DE4E7A4C574B1243F25977AC4C77D5A1A4A609B5394CEBB4A2AA DUP3 DUP1 DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 PUSH1 0x20 DUP7 LT PUSH2 0x15BC JUMPI JUMPDEST ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x15B1 JUMPI POP PUSH2 0x13CA JUMP JUMPDEST DUP9 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x15A4 JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH2 0x159D JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x1363 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2DF5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP10 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2DD5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 POP PUSH1 0x1F NOT DUP5 AND DUP10 JUMPDEST DUP2 DUP2 LT PUSH2 0x1657 JUMPI POP SWAP1 DUP5 PUSH1 0x1 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH2 0x163E JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2DF5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE PUSH2 0x1386 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x1623 JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0x160D JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2DF5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP9 MSTORE DUP4 DUP1 DUP5 ADD PUSH1 0x5 SHR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2DD5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0x16DA JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 ADD PUSH1 0x5 SHR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2DD5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x16CC JUMPI POP PUSH2 0x134E JUMP JUMPDEST DUP10 DUP2 SSTORE DUP5 SWAP4 POP PUSH1 0x1 ADD PUSH2 0x16BF JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2DD5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 POP PUSH2 0x16A4 JUMP JUMPDEST PUSH9 0xFFFFFFFFFFFFFFFFFF NOT DUP3 AND PUSH9 0x10000000000000001 OR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2EB5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE PUSH2 0x12F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP1 POP ISZERO CODESIZE PUSH2 0x12C7 JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO SWAP2 POP PUSH2 0x12BF JUMP JUMPDEST PUSH1 0x40 DUP5 SWAP1 SHR PUSH1 0xFF AND ISZERO SWAP2 POP PUSH2 0x12B5 JUMP JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2BB JUMPI PUSH2 0x176B PUSH2 0x2872 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E75 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0xFF DUP2 AND ISZERO PUSH2 0x17B8 JUMPI PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH1 0x20 PUSH1 0x40 MLOAD CALLER DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2BB JUMPI PUSH1 0x20 PUSH2 0x17E5 PUSH2 0x2B78 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2BB JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2BB JUMPI PUSH2 0x1823 PUSH2 0x20DD JUMP JUMPDEST PUSH2 0x182B PUSH2 0x20F3 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH2 0x1838 DUP4 PUSH2 0x23DF JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP3 PUSH1 0x0 NOT DUP5 LT PUSH2 0x185A JUMPI JUMPDEST PUSH2 0x697 SWAP4 POP PUSH2 0x2784 JUMP JUMPDEST DUP3 DUP5 LT PUSH2 0x18C9 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x18B0 JUMPI CALLER ISZERO PUSH2 0x1897 JUMPI DUP3 PUSH2 0x697 SWAP5 PUSH2 0x1884 DUP4 PUSH2 0x23DF JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE SUB PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH2 0x1850 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2BB JUMPI PUSH1 0x20 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E55 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2BB JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2BB JUMPI PUSH2 0x697 PUSH2 0x1960 PUSH2 0x20DD JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x2B1A JUMP JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2BB JUMPI PUSH1 0x60 PUSH4 0xFFFFFFFF PUSH2 0x19A1 PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB SWAP2 DUP3 DUP3 AND SWAP3 DUP3 PUSH1 0x70 SHR AND SWAP2 PUSH1 0xE0 SHR SWAP1 JUMP JUMPDEST SWAP1 SWAP3 SWAP2 PUSH1 0x40 MLOAD SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP1 SWAP3 AND DUP6 MSTORE AND PUSH1 0x20 DUP5 ADD MSTORE AND PUSH1 0x40 DUP3 ADD MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2BB JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2DF5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD DUP3 PUSH1 0x0 PUSH2 0x19F4 DUP4 PUSH2 0x21BB JUMP JUMPDEST SWAP3 DUP4 DUP4 MSTORE PUSH1 0x20 SWAP5 PUSH1 0x1 SWAP2 DUP7 PUSH1 0x1 DUP3 AND SWAP2 DUP3 PUSH1 0x0 EQ PUSH2 0x789 JUMPI POP POP PUSH1 0x1 EQ PUSH2 0x1A23 JUMPI POP POP PUSH2 0x715 SWAP3 POP SUB DUP4 PUSH2 0x2164 JUMP JUMPDEST DUP6 SWAP3 POP PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2DD5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x0 SWAP2 JUMPDEST DUP6 DUP4 LT PUSH2 0x1A55 JUMPI POP POP PUSH2 0x715 SWAP4 POP DUP3 ADD ADD DUP6 DUP1 PUSH2 0x707 JUMP JUMPDEST DUP1 SLOAD DUP4 DUP10 ADD DUP6 ADD MSTORE DUP8 SWAP5 POP DUP7 SWAP4 SWAP1 SWAP3 ADD SWAP2 DUP2 ADD PUSH2 0x1A3D JUMP JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2BB JUMPI PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 SUB PUSH2 0x2BB JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x64 CALLDATALOAD GT PUSH2 0x2BB JUMPI CALLDATASIZE PUSH1 0x23 PUSH1 0x64 CALLDATALOAD ADD SLT ISZERO PUSH2 0x2BB JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x64 CALLDATALOAD PUSH1 0x4 ADD CALLDATALOAD GT PUSH2 0x2BB JUMPI CALLDATASIZE PUSH1 0x24 PUSH1 0x64 CALLDATALOAD PUSH1 0x4 ADD CALLDATALOAD PUSH1 0x64 CALLDATALOAD ADD ADD GT PUSH2 0x2BB JUMPI PUSH2 0x1ADF PUSH2 0x248C JUMP JUMPDEST PUSH2 0x1AE7 PUSH2 0x24BC JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD ISZERO DUP1 ISZERO DUP1 SWAP2 PUSH2 0x20D2 JUMPI JUMPDEST ISZERO PUSH2 0x207C JUMPI PUSH2 0x1B18 PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB SWAP2 DUP3 DUP3 AND SWAP3 DUP3 PUSH1 0x70 SHR AND SWAP2 PUSH1 0xE0 SHR SWAP1 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP3 SWAP4 SWAP3 AND PUSH1 0x4 CALLDATALOAD LT DUP1 PUSH2 0x2068 JUMPI JUMPDEST ISZERO PUSH2 0x2017 JUMPI PUSH1 0x1 SLOAD PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP4 SWAP2 DUP2 AND SWAP2 SWAP1 PUSH1 0x44 CALLDATALOAD AND DUP3 EQ ISZERO DUP1 PUSH2 0x2002 JUMPI JUMPDEST ISZERO PUSH2 0x1FBD JUMPI PUSH2 0x1FA9 JUMPI JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH2 0x1F95 JUMPI JUMPDEST PUSH1 0x64 CALLDATALOAD PUSH1 0x4 ADD CALLDATALOAD PUSH2 0x1EC6 JUMPI JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x24 SWAP3 PUSH1 0x40 MLOAD SWAP4 DUP5 DUP1 SWAP3 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP3 MSTORE ADDRESS PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x2B0 JUMPI DUP6 SWAP3 PUSH2 0x1E8F JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x24 SWAP4 PUSH1 0x40 MLOAD SWAP5 DUP6 DUP1 SWAP3 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP3 MSTORE ADDRESS PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x2B0 JUMPI DUP6 SWAP4 PUSH2 0x1E5B JUMPI JUMPDEST POP PUSH2 0x1BE6 PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP7 AND PUSH2 0x2185 JUMP JUMPDEST DUP3 GT ISZERO PUSH2 0x1E54 JUMPI PUSH2 0x1C0B PUSH2 0x1C05 PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP8 AND PUSH2 0x2185 JUMP JUMPDEST DUP4 PUSH2 0x2185 JUMP JUMPDEST SWAP4 JUMPDEST PUSH2 0x1C22 PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP5 AND PUSH2 0x2185 JUMP JUMPDEST DUP5 GT ISZERO PUSH2 0x1E4D JUMPI PUSH2 0x1C47 PUSH2 0x1C41 PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP6 AND PUSH2 0x2185 JUMP JUMPDEST DUP6 PUSH2 0x2185 JUMP JUMPDEST SWAP4 JUMPDEST DUP6 ISZERO ISZERO DUP7 ISZERO PUSH2 0x1E44 JUMPI JUMPDEST ISZERO PUSH2 0x1DEF JUMPI DUP4 PUSH2 0x3E8 DUP2 MUL DIV PUSH2 0x3E8 EQ DUP5 ISZERO OR ISZERO PUSH2 0x1DDB JUMPI PUSH1 0x3 DUP7 MUL DUP7 DUP2 DIV PUSH1 0x3 EQ DUP8 ISZERO OR ISZERO PUSH2 0x1DC7 JUMPI PUSH2 0x1C8B SWAP1 PUSH2 0x3E8 DUP7 MUL PUSH2 0x2185 JUMP JUMPDEST PUSH2 0x3E8 DUP3 MUL DUP3 DUP2 DIV PUSH2 0x3E8 EQ DUP4 ISZERO OR ISZERO PUSH2 0x1D9F JUMPI PUSH1 0x3 DUP8 MUL SWAP1 DUP8 DUP3 DIV PUSH1 0x3 EQ DUP9 ISZERO OR ISZERO PUSH2 0x1DB3 JUMPI PUSH2 0x1CC6 SWAP3 SWAP2 PUSH2 0x1CC0 SWAP2 PUSH2 0x2185 JUMP JUMPDEST SWAP1 PUSH2 0x21A8 JUMP JUMPDEST PUSH2 0x1CE2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP6 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP6 AND PUSH2 0x21A8 JUMP JUMPDEST SWAP1 PUSH3 0xF4240 SWAP2 DUP3 DUP2 MUL SWAP3 DUP2 DUP5 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x1D9F JUMPI LT PUSH2 0x1D68 JUMPI PUSH2 0x1D06 SWAP4 PUSH2 0x263F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x44 CALLDATALOAD AND SWAP1 PUSH32 0xD78AD95FA46C994B6551D0DA85FC275FE613CE37657FB8D5E3D130840159D822 PUSH1 0x80 CALLER SWAP3 LOG3 PUSH1 0x1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E95 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x414D4D546F6B656E506169723A204B PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP11 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP11 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x414D4D546F6B656E506169723A20494E53554646494349454E545F494E505554 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x17D05353D55395 PUSH1 0xCA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP DUP5 ISZERO ISZERO PUSH2 0x1C53 JUMP JUMPDEST DUP6 SWAP4 PUSH2 0x1C49 JUMP JUMPDEST DUP5 SWAP4 PUSH2 0x1C0D JUMP JUMPDEST SWAP1 SWAP3 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1E87 JUMPI JUMPDEST DUP2 PUSH2 0x1E77 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x2164 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x268 JUMPI MLOAD SWAP2 CODESIZE PUSH2 0x1BD0 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1E6A JUMP JUMPDEST SWAP3 SWAP2 POP PUSH1 0x20 DUP4 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1EBE JUMPI JUMPDEST DUP2 PUSH2 0x1EAB PUSH1 0x20 SWAP4 DUP4 PUSH2 0x2164 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x268 JUMPI SWAP2 MLOAD SWAP1 SWAP2 PUSH1 0x20 PUSH2 0x1BA3 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1E9E JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE ISZERO PUSH2 0x4C1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x5FEA11F7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0x4 ADD CALLDATALOAD PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0x4 ADD CALLDATALOAD PUSH1 0x24 PUSH1 0x64 CALLDATALOAD ADD PUSH1 0xA4 DUP4 ADD CALLDATACOPY PUSH1 0xA4 PUSH1 0x64 CALLDATALOAD PUSH1 0x4 ADD CALLDATALOAD DUP3 DUP2 ADD DUP3 ADD DUP9 SWAP1 MSTORE DUP8 SWAP2 DUP4 SWAP2 PUSH1 0x1F NOT PUSH1 0x1F SWAP1 SWAP2 ADD AND DUP3 ADD DUP3 SWAP1 SUB ADD DUP2 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x44 CALLDATALOAD AND GAS CALL DUP1 ISZERO PUSH2 0x608 JUMPI PUSH2 0x1F65 JUMPI JUMPDEST POP PUSH2 0x1B76 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 SWAP7 SWAP3 SWAP7 GT PUSH2 0x1F81 JUMPI PUSH1 0x40 MSTORE SWAP4 PUSH1 0x20 PUSH2 0x1F5F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST PUSH2 0x1FA4 PUSH1 0x24 CALLDATALOAD PUSH1 0x44 CALLDATALOAD DUP6 PUSH2 0x24E7 JUMP JUMPDEST PUSH2 0x1B6A JUMP JUMPDEST PUSH2 0x1FB8 PUSH1 0x4 CALLDATALOAD PUSH1 0x44 CALLDATALOAD DUP4 PUSH2 0x24E7 JUMP JUMPDEST PUSH2 0x1B62 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x414D4D546F6B656E506169723A20494E56414C49445F544F0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 EQ ISZERO PUSH2 0x1B58 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x414D4D546F6B656E506169723A20494E53554646494349454E545F4C49515549 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x44495459 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP2 AND PUSH1 0x24 CALLDATALOAD LT PUSH2 0x1B2F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x414D4D546F6B656E506169723A20494E53554646494349454E545F4F55545055 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x1517D05353D55395 PUSH1 0xC2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP PUSH1 0x24 CALLDATALOAD ISZERO ISZERO PUSH2 0x1AF4 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x268 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x268 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x2135 JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x2114 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x493 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x493 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x2192 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x2192 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x21EB JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x21D5 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x21CA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x0 DUP3 PUSH32 0xA16A46D94261C7517CC8FF89F61C0CE93598E3C849801011DEE649A6A557D102 SWAP2 DUP3 SLOAD SWAP3 PUSH2 0x222A DUP5 PUSH2 0x21BB JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP4 PUSH1 0x20 SWAP2 PUSH1 0x1 SWAP2 DUP3 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x22B9 JUMPI POP PUSH1 0x1 EQ PUSH2 0x2258 JUMPI JUMPDEST POP POP POP PUSH2 0x2256 SWAP3 POP SUB DUP4 PUSH2 0x2164 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x42AD5D3E1F2E6E70EDCF6D991B8A3023D3FCA8047A131592F9EDB9FD9B89D57D SWAP6 SWAP1 SWAP4 POP SWAP2 SWAP1 JUMPDEST DUP3 DUP5 LT PUSH2 0x22A1 JUMPI POP PUSH2 0x2256 SWAP5 POP POP POP DUP2 ADD PUSH1 0x20 ADD CODESIZE DUP1 DUP1 PUSH2 0x2247 JUMP JUMPDEST DUP6 SLOAD DUP9 DUP6 ADD DUP4 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP3 DUP2 ADD SWAP3 PUSH2 0x2285 JUMP JUMPDEST SWAP3 POP POP POP PUSH1 0x20 SWAP3 POP PUSH2 0x2256 SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 DUP1 PUSH2 0x2247 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x0 DUP3 PUSH32 0xA16A46D94261C7517CC8FF89F61C0CE93598E3C849801011DEE649A6A557D103 SWAP2 DUP3 SLOAD SWAP3 PUSH2 0x2314 DUP5 PUSH2 0x21BB JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP4 PUSH1 0x20 SWAP2 PUSH1 0x1 SWAP2 DUP3 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x22B9 JUMPI POP PUSH1 0x1 EQ PUSH2 0x233F JUMPI POP POP POP PUSH2 0x2256 SWAP3 POP SUB DUP4 PUSH2 0x2164 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x5F9CE34815F8E11431C7BB75A8E6886A91478F7FFC1DBB0A98DC240FDDD76B75 SWAP6 SWAP1 SWAP4 POP SWAP2 SWAP1 JUMPDEST DUP3 DUP5 LT PUSH2 0x2388 JUMPI POP PUSH2 0x2256 SWAP5 POP POP POP DUP2 ADD PUSH1 0x20 ADD CODESIZE DUP1 DUP1 PUSH2 0x2247 JUMP JUMPDEST DUP6 SLOAD DUP9 DUP6 ADD DUP4 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP3 DUP2 ADD SWAP3 PUSH2 0x236C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x23AD DUP3 PUSH2 0x2149 JUMP JUMPDEST PUSH1 0x3 DUP3 MSTORE PUSH3 0x414D4D PUSH1 0xE8 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST DUP2 ISZERO PUSH2 0x23C9 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE01 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x2473 JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E35 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP5 OR SWAP1 SWAP2 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E95 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x2 DUP2 SLOAD EQ PUSH2 0x24AA JUMPI PUSH1 0x2 SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0xFF PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E75 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD AND PUSH2 0x24D5 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP3 SWAP2 PUSH2 0x24F5 DUP5 PUSH2 0x2149 JUMP JUMPDEST PUSH1 0x19 DUP5 MSTORE PUSH32 0x7472616E7366657228616464726573732C75696E743235362900000000000000 PUSH1 0x20 SWAP5 DUP6 ADD MSTORE PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 DUP7 ADD SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP3 DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP3 PUSH1 0x80 DUP2 ADD DUP5 DUP2 GT DUP3 DUP3 LT OR PUSH2 0x493 JUMPI PUSH1 0x40 MSTORE PUSH1 0x0 SWAP3 DUP4 SWAP3 DUP4 DUP1 SWAP4 MLOAD SWAP3 GAS CALL SWAP2 RETURNDATASIZE ISZERO PUSH2 0x2637 JUMPI RETURNDATASIZE SWAP1 DUP2 GT PUSH2 0x1F81 JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH2 0x259A PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP7 ADD DUP4 PUSH2 0x2164 JUMP JUMPDEST DUP2 MSTORE RETURNDATASIZE DUP3 DUP6 DUP4 ADD RETURNDATACOPY JUMPDEST DUP3 PUSH2 0x25F7 JUMPI JUMPDEST POP POP ISZERO PUSH2 0x25B3 JUMPI POP JUMP JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x414D4D546F6B656E506169723A205452414E534645525F4641494C4544000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP1 MLOAD SWAP3 POP DUP3 ISZERO SWAP2 SWAP1 DUP5 DUP4 ISZERO PUSH2 0x2613 JUMPI JUMPDEST POP POP POP SWAP1 POP CODESIZE DUP1 PUSH2 0x25A9 JUMP JUMPDEST SWAP2 SWAP4 DUP2 DUP1 SWAP5 POP ADD SUB SLT PUSH2 0x64F JUMPI DUP3 ADD MLOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH2 0x2BB JUMPI POP DUP1 CODESIZE DUP1 DUP5 PUSH2 0x2607 JUMP JUMPDEST POP PUSH1 0x60 PUSH2 0x25A3 JUMP JUMPDEST SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB SWAP1 DUP2 DUP6 GT ISZERO DUP1 PUSH2 0x277A JUMPI JUMPDEST ISZERO PUSH2 0x273C JUMPI PUSH32 0x1C411E9A96E071241C2F21F7726B17AE89E3CAB4C78BE50E062B03A9FFFBBAD1 SWAP5 PUSH1 0x40 SWAP5 DUP4 SWAP3 PUSH4 0xFFFFFFFF PUSH1 0x3 SLOAD PUSH1 0xE0 SHR DUP2 TIMESTAMP AND SUB AND SWAP2 DUP3 ISZERO ISZERO DUP1 PUSH2 0x2731 JUMPI JUMPDEST DUP1 PUSH2 0x2726 JUMPI JUMPDEST PUSH2 0x26E3 JUMPI JUMPDEST POP POP POP PUSH1 0x70 SWAP4 DUP5 SHL PUSH1 0x1 PUSH1 0x70 SHL PUSH1 0x1 PUSH1 0xE0 SHL SUB AND SWAP2 AND SWAP1 DUP2 OR TIMESTAMP PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND OR PUSH1 0x3 DUP2 SWAP1 SSTORE DUP5 MLOAD SWAP2 DUP3 MSTORE SWAP1 SWAP3 SHR AND PUSH1 0x20 DUP3 ADD MSTORE LOG1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB SWAP2 PUSH2 0x2715 SWAP2 SWAP1 PUSH2 0x2702 SWAP1 DUP6 DUP6 PUSH2 0x2707 DUP4 DUP6 DUP8 PUSH2 0x2ACD JUMP JUMPDEST PUSH2 0x2AFC JUMP JUMPDEST AND MUL PUSH1 0x4 SLOAD ADD PUSH1 0x4 SSTORE PUSH2 0x2ACD JUMP JUMPDEST AND MUL PUSH1 0x5 SLOAD ADD PUSH1 0x5 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x26A5 JUMP JUMPDEST POP DUP5 DUP2 AND ISZERO ISZERO PUSH2 0x26A0 JUMP JUMPDEST POP DUP5 DUP3 AND ISZERO ISZERO PUSH2 0x269A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x414D4D546F6B656E506169723A204F564552464C4F57 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP DUP2 DUP4 GT ISZERO PUSH2 0x2654 JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 DUP4 ISZERO PUSH2 0x2859 JUMPI AND SWAP3 DUP4 ISZERO PUSH2 0x2840 JUMPI PUSH1 0x0 SWAP1 DUP4 DUP3 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E15 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SLOAD SWAP2 DUP5 DUP4 LT PUSH2 0x280D JUMPI POP DUP3 DUP5 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 SWAP4 PUSH1 0x40 SWAP4 DUP9 PUSH1 0x20 SWAP8 MSTORE DUP7 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE POP PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E35 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x2893 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x2192 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH3 0x2FCFCB PUSH1 0xE3 SHL DUP2 MSTORE SWAP4 SWAP5 SWAP4 SWAP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x20 SWAP1 DUP6 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 DUP6 AND GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0xB16 JUMPI DUP4 SWAP5 PUSH2 0x29B7 JUMPI JUMPDEST POP DUP4 AND ISZERO ISZERO SWAP5 PUSH1 0x6 SLOAD SWAP2 DUP7 PUSH1 0x0 EQ PUSH2 0x29A6 JUMPI DUP3 PUSH2 0x2911 JUMPI JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1041 PUSH2 0x292E SWAP2 PUSH2 0x2934 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP1 SWAP2 AND SWAP2 AND PUSH2 0x21A8 JUMP JUMPDEST SWAP2 PUSH2 0x29F8 JUMP JUMPDEST SWAP1 DUP2 DUP2 GT PUSH2 0x2943 JUMPI JUMPDEST DUP1 PUSH2 0x290A JUMP JUMPDEST PUSH2 0x2960 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E55 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH2 0x1CC0 DUP5 DUP5 PUSH2 0x2185 JUMP JUMPDEST SWAP3 PUSH1 0x5 DUP3 MUL SWAP2 DUP1 DUP4 DIV PUSH1 0x5 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x106A JUMPI POP PUSH2 0x2989 SWAP3 SWAP2 PUSH2 0x2983 SWAP2 PUSH2 0x28AB JUMP JUMPDEST SWAP1 PUSH2 0x23BF JUMP JUMPDEST DUP1 PUSH2 0x2996 JUMPI JUMPDEST DUP1 DUP1 PUSH2 0x293D JUMP JUMPDEST PUSH2 0x299F SWAP2 PUSH2 0x2A54 JUMP JUMPDEST CODESIZE DUP1 PUSH2 0x298F JUMP JUMPDEST POP POP SWAP1 SWAP2 POP PUSH2 0x29B2 JUMPI POP JUMP JUMPDEST PUSH1 0x6 SSTORE JUMP JUMPDEST SWAP1 SWAP4 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x29F0 JUMPI JUMPDEST DUP2 PUSH2 0x29D3 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x2164 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x29EC JUMPI MLOAD DUP4 DUP2 AND DUP2 SUB PUSH2 0x29EC JUMPI SWAP3 CODESIZE PUSH2 0x28F2 JUMP JUMPDEST DUP3 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x29C6 JUMP JUMPDEST SWAP1 PUSH1 0x0 PUSH1 0x3 DUP4 GT ISZERO PUSH2 0x2A47 JUMPI POP DUP2 PUSH1 0x1 SWAP1 DUP1 PUSH1 0x1 SHR PUSH1 0x1 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x2192 JUMPI SWAP2 SWAP1 JUMPDEST DUP5 DUP4 LT PUSH2 0x2A27 JUMPI POP POP POP JUMP JUMPDEST SWAP1 SWAP2 SWAP4 POP PUSH2 0x2A3E DUP5 PUSH2 0x2A39 DUP2 DUP5 PUSH2 0x23BF JUMP JUMPDEST PUSH2 0x28AB JUMP JUMPDEST DUP3 SHR SWAP2 SWAP1 PUSH2 0x2A1B JUMP JUMPDEST SWAP2 PUSH2 0x2A4E JUMPI JUMP JUMPDEST PUSH1 0x1 SWAP2 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x2840 JUMPI PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x20 PUSH1 0x0 SWAP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E55 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x2AA4 DUP3 DUP3 SLOAD PUSH2 0x28AB JUMP JUMPDEST SWAP1 SSTORE DUP5 DUP5 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E15 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP3 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x70 SHL PUSH1 0x1 PUSH1 0xE0 SHL SUB PUSH1 0x70 DUP3 SWAP1 SHL AND SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND DUP1 DUP3 DIV PUSH1 0x1 PUSH1 0x70 SHL EQ SWAP1 ISZERO OR ISZERO PUSH2 0x2192 JUMPI SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x23C9 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND DIV SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 DUP4 ISZERO PUSH2 0x18B0 JUMPI AND SWAP3 DUP4 ISZERO PUSH2 0x1897 JUMPI PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 PUSH2 0x2B62 PUSH1 0x20 SWAP3 PUSH2 0x23DF JUMP JUMPDEST DUP6 PUSH1 0x0 MSTORE DUP3 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH2 0x2B80 PUSH2 0x2D25 JUMP JUMPDEST PUSH2 0x2B88 PUSH2 0x2D8F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD SWAP3 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F DUP5 MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 MSTORE PUSH1 0xC0 DUP2 ADD DUP2 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x493 JUMPI PUSH1 0x40 MSTORE MLOAD SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2EB5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x40 SHR AND ISZERO PUSH2 0x2C0A JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT PUSH2 0x2C94 JUMPI SWAP3 PUSH1 0x20 SWAP3 SWAP2 PUSH1 0xFF PUSH1 0x80 SWAP6 PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE AND DUP5 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 SWAP3 DUP4 SWAP2 DUP3 DUP1 MSTORE PUSH1 0x1 GAS STATICCALL ISZERO PUSH2 0xAD5 JUMPI DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x2C8B JUMPI SWAP2 DUP2 SWAP1 JUMP JUMPDEST POP DUP1 SWAP2 PUSH1 0x1 SWAP2 SWAP1 JUMP JUMPDEST POP POP POP PUSH1 0x0 SWAP2 PUSH1 0x3 SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x2D0F JUMPI DUP1 PUSH2 0x2CB2 JUMPI POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 SUB PUSH2 0x2CCC JUMPI PUSH1 0x40 MLOAD PUSH4 0xF645EEDF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP2 SUB PUSH2 0x2CED JUMPI PUSH1 0x40 MLOAD PUSH4 0xFCE698F7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x3 EQ PUSH2 0x2CF7 JUMPI POP JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x35E2F383 PUSH1 0xE2 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x2D2D PUSH2 0x21F5 JUMP JUMPDEST DUP1 MLOAD SWAP1 DUP2 ISZERO PUSH2 0x2D3D JUMPI PUSH1 0x20 ADD KECCAK256 SWAP1 JUMP JUMPDEST POP POP PUSH32 0xA16A46D94261C7517CC8FF89F61C0CE93598E3C849801011DEE649A6A557D100 SLOAD DUP1 ISZERO PUSH2 0x2D6A JUMPI SWAP1 JUMP JUMPDEST POP PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 SWAP1 JUMP JUMPDEST PUSH2 0x2D97 PUSH2 0x22DF JUMP JUMPDEST DUP1 MLOAD SWAP1 DUP2 ISZERO PUSH2 0x2DA7 JUMPI PUSH1 0x20 ADD KECCAK256 SWAP1 JUMP JUMPDEST POP POP PUSH32 0xA16A46D94261C7517CC8FF89F61C0CE93598E3C849801011DEE649A6A557D101 SLOAD DUP1 ISZERO PUSH2 0x2D6A JUMPI SWAP1 JUMP INVALID 0x2A 0xE0 DUP11 DUP15 0x29 0x25 EXTCODEHASH PUSH10 0xAC5D979A101956AB8F8D SWAP14 PUSH30 0xED63FA7A83B16FC47648EAB052C63247E1F47DB19D5CE0460030C497F067 0xCA 0x4C 0xEB 0xF7 SHL 0xA9 DUP15 0xEA 0xDA 0xBE KECCAK256 0xBA 0xCE SUB MSTORE 0xC6 ORIGIN SELFBALANCE 0xE1 DELEGATECALL PUSH30 0xB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE009016D09D72 0xD4 0xF 0xDA 0xE2 REVERT DUP13 0xEA 0xC6 0xB6 0x23 0x4C PUSH24 0x6214FD39C1CD1E609A0528C19930052C63247E1F47DB19D 0x5C 0xE0 CHAINID STOP ADDRESS 0xC4 SWAP8 CREATE PUSH8 0xCA4CEBF71BA98EEA 0xDA 0xBE KECCAK256 0xBA 0xCE MUL 0xCD 0x5E 0xD1 0x5C PUSH15 0x187E77E9AEE88184C21F4F2182AB58 0x27 0xCB EXTCODESIZE PUSH31 0x7FBEDCD63F033009B779B17422D0DF92223018B32B4D1FA46E071723D6817 0xE2 BASEFEE PUSH14 0x3BECC55F00F0C57E16840DF040 CALL POP DUP9 0xDC 0x2F DUP2 INVALID CODECOPY SHR CODECOPY 0x23 0xBE 0xC7 RETURNDATACOPY 0x23 0xA9 PUSH7 0x2EFC9C229C6A00 LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 SELFDESTRUCT 0xDD RETURNDATASIZE SWAP3 0xE9 0xDA SLOAD MULMOD ADD 0xDE 0xFB DUP3 DELEGATECALL 0xC PUSH25 0x49526E5EA3C333DEA2EDC1213DF2D8F964736F6C6343000816 STOP CALLER ","sourceMap":"816:16315:27:-:0;;;;;;;3147:66:1;816:16315:27;;;;;;;;;7894:76:1;;-1:-1:-1;;;;;;;;;;;;816:16315:27;;;7983:34:1;7979:146;;-1:-1:-1;816:16315:27;;;;;;;;;7979:146:1;-1:-1:-1;;;;;;816:16315:27;;;;;;;;;;;;;8085:29:1;;816:16315:27;;8085:29:1;7979:146;;;;;7894:76;-1:-1:-1;;;7936:23:1;;;;;816:16315:27;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":8435,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_31477":{"entryPoint":8413,"id":null,"parameterSlots":0,"returnSlots":1},"abi_encode_address_uint256_uint256":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_string":{"entryPoint":8457,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_uint256":{"entryPoint":10411,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_uint256":{"entryPoint":9151,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_uint256":{"entryPoint":8616,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_uint256":{"entryPoint":8581,"id":null,"parameterSlots":2,"returnSlots":1},"copy_array_from_storage_to_memory_string":{"entryPoint":8927,"id":null,"parameterSlots":0,"returnSlots":1},"copy_array_from_storage_to_memory_string_31491":{"entryPoint":8693,"id":null,"parameterSlots":0,"returnSlots":1},"copy_literal_to_memory_edda99bbc2e81e192db34603b20c3ca6ffc475ec37193683bbf3d66d78db8a7c":{"entryPoint":9120,"id":null,"parameterSlots":0,"returnSlots":1},"extract_byte_array_length":{"entryPoint":8635,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":8548,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_43203":{"entryPoint":8521,"id":null,"parameterSlots":1,"returnSlots":0},"fun_EIP712NameHash":{"entryPoint":11557,"id":1985,"parameterSlots":0,"returnSlots":1},"fun_EIP712VersionHash":{"entryPoint":11663,"id":2037,"parameterSlots":0,"returnSlots":1},"fun_approve":{"entryPoint":11034,"id":1030,"parameterSlots":3,"returnSlots":0},"fun_buildDomainSeparator":{"entryPoint":11128,"id":1824,"parameterSlots":0,"returnSlots":1},"fun_checkInitializing":{"entryPoint":11245,"id":370,"parameterSlots":0,"returnSlots":0},"fun_checkOwner":{"entryPoint":10354,"id":122,"parameterSlots":0,"returnSlots":0},"fun_encode":{"entryPoint":10957,"id":9913,"parameterSlots":1,"returnSlots":1},"fun_getReserves":{"entryPoint":null,"id":8706,"parameterSlots":0,"returnSlots":3},"fun_mint":{"entryPoint":10836,"id":911,"parameterSlots":2,"returnSlots":0},"fun_mintFee":{"entryPoint":10424,"id":8973,"parameterSlots":2,"returnSlots":1},"fun_nonReentrantBefore":{"entryPoint":9356,"id":1659,"parameterSlots":0,"returnSlots":0},"fun_requireNotPaused":{"entryPoint":9404,"id":1503,"parameterSlots":0,"returnSlots":0},"fun_safeTransfer":{"entryPoint":9447,"id":8750,"parameterSlots":3,"returnSlots":0},"fun_sqrt":{"entryPoint":10744,"id":9888,"parameterSlots":1,"returnSlots":1},"fun_throwError":{"entryPoint":11424,"id":4695,"parameterSlots":2,"returnSlots":0},"fun_transfer":{"entryPoint":10116,"id":786,"parameterSlots":3,"returnSlots":0},"fun_transferOwnership_inner":{"entryPoint":9240,"id":null,"parameterSlots":1,"returnSlots":0},"fun_tryRecover":{"entryPoint":11292,"id":4610,"parameterSlots":4,"returnSlots":3},"fun_update":{"entryPoint":9791,"id":8867,"parameterSlots":4,"returnSlots":0},"fun_uqdiv":{"entryPoint":11004,"id":9932,"parameterSlots":2,"returnSlots":1},"mapping_index_access_mapping_address_uint256_of_address":{"entryPoint":9183,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436101561001257600080fd5b6000803560e01c8063022c0d9f14611a6d57806306fdde03146119c35780630902f1ac1461196a578063095ea7b3146119435780630dfe16811461191a57806318160ddd146118ef57806323b872dd14611809578063313ce567146117ed5780633644e515146117ca5780633f4ba83a14611752578063485cc9551461126e5780635909c0d5146112505780635a3d5493146112325780635c975abb146112025780636a62784214610f3657806370a0823114610ef0578063715018a614610e855780637464fc3d14610e675780637ecebe0014610e0d5780638456cb5914610da557806384b0196e14610c4757806389afcb44146107e15780638da5cb5b146107ab57806395d89b41146106a2578063a9059cbb14610670578063ba9a7a5614610653578063bc25cf7714610515578063c45a0155146104ee578063d21220a7146104c5578063d505accf14610335578063dd62ed3e146102eb578063f2fde38b146102be5763fff6cae91461018857600080fd5b346102bb57806003193601126102bb576101a061248c565b6001546040516370a0823160e01b808252306004830152916020916001600160a01b039183908290602490829086165afa9182156102b0578391869361027f575b50600254169360246040518096819382523060048301525afa91821561027457849261023d575b506102289250600354916001600160701b03808460701c1693169161263f565b6001600080516020612e958339815191525580f35b90915082813d831161026d575b6102548183612164565b810103126102685761022891519038610208565b600080fd5b503d61024a565b6040513d86823e3d90fd5b8281939294503d83116102a9575b6102978183612164565b810103126102685782905191386101e1565b503d61028d565b6040513d87823e3d90fd5b80fd5b50346102bb5760203660031901126102bb576102e86102db6120dd565b6102e3612872565b612418565b80f35b50346102bb5760403660031901126102bb576103056120dd565b6103166103106120f3565b916123df565b9060018060a01b03166000526020526020604060002054604051908152f35b50346102bb5760e03660031901126102bb5761034f6120dd565b906103586120f3565b60443590606435936084359460ff861686036104c1578042116104a95760018060a01b0390818316968787527f5ab42ced628888259c08ac98db1eb0cf702fc1501344311d8b100cd1bfe4bb0060205260408720908154916001830190556040519260208401927f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c984528a6040860152858816606086015288608086015260a085015260c084015260c0835260e08301918383106001600160401b03841117610493576104619361045893604052519020610431612b78565b906040519161190160f01b83526002830152602282015260c43591604260a4359220612c1c565b90929192612ca0565b1685810361047557506102e8939450612b1a565b60449086604051916325c0072360e11b835260048301526024820152fd5b634e487b7160e01b600052604160045260246000fd5b6024906040519063313c898160e11b82526004820152fd5b8480fd5b50346102bb57806003193601126102bb576002546040516001600160a01b039091168152602090f35b50346102bb57806003193601126102bb57546040516001600160a01b039091168152602090f35b50346102bb5760208060031936011261064f576105306120dd565b9061053961248c565b6001546002546040516370a0823160e01b80825230600483015290946001600160a01b039283169490939092168286602481845afa958615610644578796610613575b5061059f90846105996001600160701b0398896003541690612185565b916124e7565b6040519081523060048201528181602481875afa9182156106085786926105d8575b5050610599906102289460035460701c1690612185565b90809250813d8311610601575b6105ef8183612164565b810103126102685751836105996105c1565b503d6105e5565b6040513d88823e3d90fd5b9095508281813d831161063d575b61062b8183612164565b8101031261026857519461059f61057c565b503d610621565b6040513d89823e3d90fd5b5080fd5b50346102bb57806003193601126102bb5760206040516103e88152f35b50346102bb5760403660031901126102bb5761069761068d6120dd565b6024359033612784565b602060405160018152f35b50346102bb57806003193601126102bb576040517f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0480548260006106e5836121bb565b928383526020946001918660018216918260001461078957505060011461072d575b505061071592500383612164565b610729604051928284938452830190612109565b0390f35b8592506000527f46a2803e59a4de4e7a4c574b1243f25977ac4c77d5a1a4a609b5394cebb4a2aa906000915b85831061077157505061071593508201018580610707565b80548389018501528794508693909201918101610759565b925093505061071594915060ff191682840152151560051b8201018580610707565b50346102bb57806003193601126102bb57600080516020612e35833981519152546040516001600160a01b039091168152602090f35b50346102bb5760203660031901126102bb576107fb6120dd565b61080361248c565b61080b6124bc565b61082a6003546001600160701b0391828216928260701c169160e01c90565b506001546002546040516370a0823160e01b81523060048201526001600160a01b039182169694959190921693909290602083602481885afa928315610c3a578193610c06575b506040516370a0823160e01b815230600482015296602088602481845afa958615610bfb578798839897610bc4575b50308352600080516020612e158339815191526020526108f76108eb6108eb6108f06108d18860408920549c6128b8565b98600080516020612e55833981519152549384918d6121a8565b6123bf565b9a8a6121a8565b9688151580610bbb575b15610b62573015610b495730600052600080516020612e15833981519152602052604060002054818110610b21579160008260209360249695308452600080516020612e15833981519152865203604083205580600080516020612e558339815191525403600080516020612e55833981519152556040519081527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef843092a36109ac8a89836124e7565b6109b78989856124e7565b6040516370a0823160e01b815230600482015293849182905afa918215610b16578392610ae1575b506020602491604051928380926370a0823160e01b82523060048301525afa928315610ad55792610a9a575b5096610a1a929160409861263f565b610a77575b83519083825282602083015260018060a01b0316907fdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d81936496853392a36001600080516020612e958339815191525582519182526020820152f35b610a926003546001600160701b03808260701c1691166121a8565b600655610a1f565b929150966020833d602011610acd575b81610ab760209383612164565b8101031261026857915191969091906040610a0b565b3d9150610aaa565b604051903d90823e3d90fd5b9091506020813d602011610b0e575b81610afd60209383612164565b8101031261026857519060206109df565b3d9150610af0565b6040513d85823e3d90fd5b60405163391434e360e21b815230600482015260248101919091526044810191909152606490fd5b604051634b637e8f60e11b815260048101859052602490fd5b60405162461bcd60e51b815260206004820152602b60248201527f414d4d546f6b656e506169723a20494e53554646494349454e545f4c4951554960448201526a1112551657d0955493915160aa1b6064820152608490fd5b50871515610901565b965096506020863d602011610bf3575b81610be160209383612164565b810103126102685787955196386108a0565b3d9150610bd4565b6040513d84823e3d90fd5b9092506020813d602011610c32575b81610c2260209383612164565b8101031261026857519138610871565b3d9150610c15565b50604051903d90823e3d90fd5b50346102bb57806003193601126102bb577fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d100541580610d7c575b15610d3f57610c8e6121f5565b90610c976122df565b906040519060209060208301938385106001600160401b03861117610493579284926020610cf58896610ce798604052858552604051988998600f60f81b8a5260e0858b015260e08a0190612109565b9088820360408a0152612109565b924660608801523060808801528460a088015286840360c088015251928381520193925b828110610d2857505050500390f35b835185528695509381019392810192600101610d19565b60405162461bcd60e51b81526020600482015260156024820152741152540dcc4c8e88155b9a5b9a5d1a585b1a5e9959605a1b6044820152606490fd5b507fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d1015415610c81565b50346102bb57806003193601126102bb57610dbe612872565b610dc66124bc565b600080516020612e75833981519152600160ff198254161790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586020604051338152a180f35b50346102bb5760203660031901126102bb576001600160a01b03610e2f6120dd565b166000527f5ab42ced628888259c08ac98db1eb0cf702fc1501344311d8b100cd1bfe4bb006020526020604060002054604051908152f35b50346102bb57806003193601126102bb576020600654604051908152f35b50346102bb57806003193601126102bb57610e9e612872565b600080516020612e3583398151915280546001600160a01b031981169091556000906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50346102bb5760203660031901126102bb576020906040906001600160a01b03610f186120dd565b168152600080516020612e1583398151915283522054604051908152f35b50346102bb5760208060031936011261064f57610f516120dd565b90610f5a61248c565b610f626124bc565b610f816003546001600160701b0391828216928260701c169160e01c90565b5091909260018060a01b039283600154169360405184816024816370a0823160e01b998a82523060048301525afa9182156111f757859189936111c6575b50600254169560246040518098819382523060048301525afa948515610644578795611197575b506001600160701b039182871696610ffe8884612185565b968483169361100d8583612185565b9961101885856128b8565b95600080516020612e558339815191525491821560001461107e578d6110466110418f8f6121a8565b6129f8565b6103e71981011161106a5760405163ec442f0560e01b815260006004820152602490fd5b634e487b7160e01b81526011600452602490fd5b8d916108eb6110998e9d9f9c9e936108eb876110a0966121a8565b948c6121a8565b90508082101561119057505b98891561113757906110c48a6110c996959493612a54565b61263f565b611119575b50604051918252838201527f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f60403392a26001600080516020612e9583398151915255604051908152f35b61112e9060035490808260701c1691166121a8565b600655846110ce565b60405162461bcd60e51b8152600481018c9052602b60248201527f414d4d546f6b656e506169723a20494e53554646494349454e545f4c4951554960448201526a1112551657d3525395115160aa1b6064820152608490fd5b90506110ac565b9094508381813d83116111bf575b6111af8183612164565b8101031261026857519338610fe6565b503d6111a5565b8281939294503d83116111f0575b6111de8183612164565b81010312610268578490519138610fbf565b503d6111d4565b6040513d8a823e3d90fd5b50346102bb57806003193601126102bb57602060ff600080516020612e7583398151915254166040519015158152f35b50346102bb57806003193601126102bb576020600554604051908152f35b50346102bb57806003193601126102bb576020600454604051908152f35b50346102bb5760403660031901126102bb576112886120dd565b906112916120f3565b600080516020612eb583398151915254906001600160401b03821680159081611742575b6001149081611738575b15908161172f575b5061171d5760016001600160401b0319831617600080516020612eb58339815191525560ff8260401c16156116f0575b6112ff6123a0565b936113086123a0565b94611311612bed565b611319612bed565b80516001600160401b0381116115c55780611342600080516020612df5833981519152546121bb565b92601f9384811161166f575b506020908483116001146115e45788926115d9575b50508160011b916000199060031b1c191617600080516020612df5833981519152555b85516001600160401b0381116115c5577f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace04916113c283546121bb565b818111611566575b5060209082116001146114e3578190879860ff98926114d8575b50508160011b916000199060031b1c19161790555b611401612bed565b611409612bed565b6001600080516020612e9583398151915255611423612bed565b61142b612bed565b611433612bed565b61143c33612418565b6bffffffffffffffffffffffff60a01b91338387541617865560018060a01b038092168360015416176001551690600254161760025560401c161561147e5780f35b68ff000000000000000019600080516020612eb58339815191525416600080516020612eb5833981519152557fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2602060405160018152a180f35b0151905038806113e4565b8287527f46a2803e59a4de4e7a4c574b1243f25977ac4c77d5a1a4a609b5394cebb4a2aa97601f198316885b81811061154e57509160ff989991846001959410611535575b505050811b0190556113f9565b015160001960f88460031b161c19169055388080611528565b838301518b556001909a01996020938401930161150f565b8388527f46a2803e59a4de4e7a4c574b1243f25977ac4c77d5a1a4a609b5394cebb4a2aa8280850160051c820192602086106115bc575b0160051c01905b8181106115b157506113ca565b8881556001016115a4565b9250819261159d565b634e487b7160e01b86526041600452602486fd5b015190503880611363565b600080516020612df58339815191528952600080516020612dd58339815191529250601f198416895b818110611657575090846001959493921061163e575b505050811b01600080516020612df583398151915255611386565b015160001960f88460031b161c19169055388080611623565b9293602060018192878601518155019501930161160d565b909150600080516020612df583398151915288528380840160051c600080516020612dd58339815191520191602085106116da575b90849392910160051c600080516020612dd583398151915201905b8181106116cc575061134e565b8981558493506001016116bf565b600080516020612dd583398151915292506116a4565b68ffffffffffffffffff1982166801000000000000000117600080516020612eb5833981519152556112f7565b60405163f92ee8a960e01b8152600490fd5b905015386112c7565b303b1591506112bf565b604084901c60ff161591506112b5565b50346102bb57806003193601126102bb5761176b612872565b600080516020612e75833981519152805460ff8116156117b85760ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6020604051338152a180f35b604051638dfc202b60e01b8152600490fd5b50346102bb57806003193601126102bb5760206117e5612b78565b604051908152f35b50346102bb57806003193601126102bb57602060405160128152f35b50346102bb5760603660031901126102bb576118236120dd565b61182b6120f3565b60443590611838836123df565b3360005260205260406000205492600019841061185a575b6106979350612784565b8284106118c9576001600160a01b038116156118b0573315611897578261069794611884836123df565b3360005260205203604060002055611850565b604051634a1406b160e11b815260006004820152602490fd5b60405163e602df0560e01b815260006004820152602490fd5b604051637dc7a0d960e11b81523360048201526024810185905260448101849052606490fd5b50346102bb57806003193601126102bb576020600080516020612e5583398151915254604051908152f35b50346102bb57806003193601126102bb576001546040516001600160a01b039091168152602090f35b50346102bb5760403660031901126102bb576106976119606120dd565b6024359033612b1a565b50346102bb57806003193601126102bb57606063ffffffff6119a16003546001600160701b0391828216928260701c169160e01c90565b909291604051936001600160701b038092168552166020840152166040820152f35b50346102bb57806003193601126102bb57604051600080516020612df583398151915280548260006119f4836121bb565b9283835260209460019186600182169182600014610789575050600114611a2357505061071592500383612164565b859250600052600080516020612dd5833981519152906000915b858310611a5557505061071593508201018580610707565b80548389018501528794508693909201918101611a3d565b50346102bb5760803660031901126102bb576044356001600160a01b03811690036102bb576001600160401b03606435116102bb573660236064350112156102bb576001600160401b0360643560040135116102bb57366024606435600401356064350101116102bb57611adf61248c565b611ae76124bc565b60043515801580916120d2575b1561207c57611b186003546001600160701b0391828216928260701c169160e01c90565b506001600160701b03829392166004351080612068575b15612017576001546002546001600160a01b039081169391811691906044351682141580612002575b15611fbd57611fa9575b602435611f95575b60643560040135611ec6575b906020602492604051938480926370a0823160e01b82523060048301525afa9182156102b0578592611e8f575b506020602493604051948580926370a0823160e01b82523060048301525afa9283156102b0578593611e5b575b50611be66004356001600160701b038616612185565b821115611e5457611c0b611c056004356001600160701b038716612185565b83612185565b935b611c226024356001600160701b038416612185565b841115611e4d57611c47611c416024356001600160701b038516612185565b85612185565b935b8515158615611e44575b15611def57836103e88102046103e81484151715611ddb576003860286810460031487151715611dc757611c8b906103e88602612185565b6103e882028281046103e81483151715611d9f57600387029087820460031488151715611db357611cc69291611cc091612185565b906121a8565b611ce26001600160701b0385166001600160701b0385166121a8565b90620f424091828102928184041490151715611d9f5710611d6857611d069361263f565b60405191825260208201526004356040820152602435606082015260018060a01b0360443516907fd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d82260803392a36001600080516020612e958339815191525580f35b60405162461bcd60e51b815260206004820152600f60248201526e414d4d546f6b656e506169723a204b60881b6044820152606490fd5b634e487b7160e01b89526011600452602489fd5b634e487b7160e01b8a52601160045260248afd5b634e487b7160e01b88526011600452602488fd5b634e487b7160e01b87526011600452602487fd5b60405162461bcd60e51b815260206004820152602760248201527f414d4d546f6b656e506169723a20494e53554646494349454e545f494e50555460448201526617d05353d5539560ca1b6064820152608490fd5b50841515611c53565b8593611c49565b8493611c0d565b9092506020813d602011611e87575b81611e7760209383612164565b8101031261026857519138611bd0565b3d9150611e6a565b9291506020833d602011611ebe575b81611eab60209383612164565b8101031261026857915190916020611ba3565b3d9150611e9e565b6044356001600160a01b03163b156104c157604051635fea11f760e01b815233600482015260043560248201526024356044820152608060648201526064356004013560848201526064356004013560246064350160a483013760a460643560040135828101820188905287918391601f19601f9091011682018290030181836001600160a01b03604435165af1801561060857611f65575b50611b76565b6001600160401b038196929611611f8157604052936020611f5f565b634e487b7160e01b82526041600452602482fd5b611fa4602435604435856124e7565b611b6a565b611fb8600435604435836124e7565b611b62565b60405162461bcd60e51b815260206004820152601860248201527f414d4d546f6b656e506169723a20494e56414c49445f544f00000000000000006044820152606490fd5b506044356001600160a01b0316841415611b58565b60405162461bcd60e51b8152602060048201526024808201527f414d4d546f6b656e506169723a20494e53554646494349454e545f4c495155496044820152634449545960e01b6064820152608490fd5b506001600160701b03811660243510611b2f565b60405162461bcd60e51b815260206004820152602860248201527f414d4d546f6b656e506169723a20494e53554646494349454e545f4f555450556044820152671517d05353d5539560c21b6064820152608490fd5b506024351515611af4565b600435906001600160a01b038216820361026857565b602435906001600160a01b038216820361026857565b919082519283825260005b848110612135575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201612114565b604081019081106001600160401b0382111761049357604052565b90601f801991011681019081106001600160401b0382111761049357604052565b9190820391821161219257565b634e487b7160e01b600052601160045260246000fd5b8181029291811591840414171561219257565b90600182811c921680156121eb575b60208310146121d557565b634e487b7160e01b600052602260045260246000fd5b91607f16916121ca565b604051906000827fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d1029182549261222a846121bb565b808452936020916001918281169081156122b95750600114612258575b50505061225692500383612164565b565b60009081527f42ad5d3e1f2e6e70edcf6d991b8a3023d3fca8047a131592f9edb9fd9b89d57d9590935091905b8284106122a15750612256945050508101602001388080612247565b85548885018301529485019487945092810192612285565b925050506020925061225694915060ff191682840152151560051b820101388080612247565b604051906000827fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d10391825492612314846121bb565b808452936020916001918281169081156122b9575060011461233f5750505061225692500383612164565b60009081527f5f9ce34815f8e11431c7bb75a8e6886a91478f7ffc1dbb0a98dc240fddd76b759590935091905b8284106123885750612256945050508101602001388080612247565b8554888501830152948501948794509281019261236c565b604051906123ad82612149565b6003825262414d4d60e81b6020830152565b81156123c9570490565b634e487b7160e01b600052601260045260246000fd5b6001600160a01b031660009081527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace016020526040902090565b6001600160a01b0390811690811561247357600080516020612e3583398151915280546001600160a01b031981168417909155167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b604051631e4fbdf760e01b815260006004820152602490fd5b600080516020612e9583398151915260028154146124aa5760029055565b604051633ee5aeb560e01b8152600490fd5b60ff600080516020612e7583398151915254166124d557565b60405163d93c066560e01b8152600490fd5b60405192916124f584612149565b601984527f7472616e7366657228616464726573732c75696e74323536290000000000000060209485015260405163a9059cbb60e01b8186019081526001600160a01b0390921660248201526044808201949094529283526001600160401b0392608081018481118282101761049357604052600092839283809351925af1913d15612637573d908111611f81576040519061259a601f8201601f1916860183612164565b81523d828583013e5b826125f7575b5050156125b35750565b6064906040519062461bcd60e51b82526004820152601d60248201527f414d4d546f6b656e506169723a205452414e534645525f4641494c45440000006044820152fd5b8051925082159190848315612613575b505050905038806125a9565b91938180945001031261064f578201519081151582036102bb575080388084612607565b5060606125a3565b92916001600160701b0390818511158061277a575b1561273c577f1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad194604094839263ffffffff60035460e01c81421603169182151580612731575b80612726575b6126e3575b505050607093841b600160701b600160e01b031691169081174260e01b6001600160e01b031916176003819055845191825290921c166020820152a1565b6001600160e01b03916127159190612702908585612707838587612acd565b612afc565b160260045401600455612acd565b1602600554016005553880806126a5565b5084811615156126a0565b50848216151561269a565b60405162461bcd60e51b8152602060048201526016602482015275414d4d546f6b656e506169723a204f564552464c4f5760501b6044820152606490fd5b5081831115612654565b916001600160a01b03808416928315612859571692831561284057600090838252600080516020612e158339815191528060205260408320549184831061280d575082847fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef959360409388602097528652038282205586815220818154019055604051908152a3565b60405163391434e360e21b81526001600160a01b0391909116600482015260248101929092525060448101839052606490fd5b60405163ec442f0560e01b815260006004820152602490fd5b604051634b637e8f60e11b815260006004820152602490fd5b600080516020612e35833981519152546001600160a01b0316330361289357565b60405163118cdaa760e01b8152336004820152602490fd5b9190820180921161219257565b60008054604051622fcfcb60e31b815293949392906001600160a01b03906020908590600490829085165afa938415610b165783946129b7575b50831615159460065491866000146129a65782612911575b5050505050565b61104161292e91612934936001600160701b0380911691166121a8565b916129f8565b90818111612943575b8061290a565b612960600080516020612e5583398151915254611cc08484612185565b9260058202918083046005149015171561106a57506129899291612983916128ab565b906123bf565b80612996575b808061293d565b61299f91612a54565b388061298f565b50509091506129b25750565b600655565b9093506020813d6020116129f0575b816129d360209383612164565b810103126129ec575183811681036129ec5792386128f2565b8280fd5b3d91506129c6565b9060006003831115612a475750816001908060011c600181018091116121925791905b848310612a2757505050565b90919350612a3e84612a3981846123bf565b6128ab565b821c9190612a1b565b91612a4e57565b60019150565b6001600160a01b0316908115612840577fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6020600092600080516020612e55833981519152612aa48282546128ab565b9055848452600080516020612e15833981519152825260408420818154019055604051908152a3565b600160701b600160e01b03607082901b16906001600160701b0316808204600160701b14901517156121925790565b906001600160701b03169081156123c9576001600160e01b03160490565b916001600160a01b038084169283156118b05716928315611897577f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591612b626020926123df565b85600052825280604060002055604051908152a3565b612b80612d25565b612b88612d8f565b6040519060208201927f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f8452604083015260608201524660808201523060a082015260a0815260c081018181106001600160401b038211176104935760405251902090565b60ff600080516020612eb58339815191525460401c1615612c0a57565b604051631afcd79f60e31b8152600490fd5b91907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411612c9457926020929160ff608095604051948552168484015260408301526060820152600092839182805260015afa15610ad55780516001600160a01b03811615612c8b57918190565b50809160019190565b50505060009160039190565b6004811015612d0f5780612cb2575050565b60018103612ccc5760405163f645eedf60e01b8152600490fd5b60028103612ced5760405163fce698f760e01b815260048101839052602490fd5b600314612cf75750565b602490604051906335e2f38360e21b82526004820152fd5b634e487b7160e01b600052602160045260246000fd5b612d2d6121f5565b8051908115612d3d576020012090565b50507fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d100548015612d6a5790565b507fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47090565b612d976122df565b8051908115612da7576020012090565b50507fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d101548015612d6a579056fe2ae08a8e29253f69ac5d979a101956ab8f8d9d7ded63fa7a83b16fc47648eab052c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0352c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace009016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930052c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace02cd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f033009b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00f0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00a2646970667358221220d3ffdd3d92e9da540901defb82f40c7849526e5ea3c333dea2edc1213df2d8f964736f6c63430008160033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x22C0D9F EQ PUSH2 0x1A6D JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x19C3 JUMPI DUP1 PUSH4 0x902F1AC EQ PUSH2 0x196A JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1943 JUMPI DUP1 PUSH4 0xDFE1681 EQ PUSH2 0x191A JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x18EF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1809 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x17ED JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x17CA JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x1752 JUMPI DUP1 PUSH4 0x485CC955 EQ PUSH2 0x126E JUMPI DUP1 PUSH4 0x5909C0D5 EQ PUSH2 0x1250 JUMPI DUP1 PUSH4 0x5A3D5493 EQ PUSH2 0x1232 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x1202 JUMPI DUP1 PUSH4 0x6A627842 EQ PUSH2 0xF36 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0xEF0 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xE85 JUMPI DUP1 PUSH4 0x7464FC3D EQ PUSH2 0xE67 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0xE0D JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0xDA5 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0xC47 JUMPI DUP1 PUSH4 0x89AFCB44 EQ PUSH2 0x7E1 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x7AB JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x6A2 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x670 JUMPI DUP1 PUSH4 0xBA9A7A56 EQ PUSH2 0x653 JUMPI DUP1 PUSH4 0xBC25CF77 EQ PUSH2 0x515 JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x4EE JUMPI DUP1 PUSH4 0xD21220A7 EQ PUSH2 0x4C5 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x335 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2EB JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2BE JUMPI PUSH4 0xFFF6CAE9 EQ PUSH2 0x188 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2BB JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2BB JUMPI PUSH2 0x1A0 PUSH2 0x248C JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP1 DUP3 MSTORE ADDRESS PUSH1 0x4 DUP4 ADD MSTORE SWAP2 PUSH1 0x20 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP4 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 DUP7 AND GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x2B0 JUMPI DUP4 SWAP2 DUP7 SWAP4 PUSH2 0x27F JUMPI JUMPDEST POP PUSH1 0x2 SLOAD AND SWAP4 PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP7 DUP2 SWAP4 DUP3 MSTORE ADDRESS PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x274 JUMPI DUP5 SWAP3 PUSH2 0x23D JUMPI JUMPDEST POP PUSH2 0x228 SWAP3 POP PUSH1 0x3 SLOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP1 DUP5 PUSH1 0x70 SHR AND SWAP4 AND SWAP2 PUSH2 0x263F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E95 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE DUP1 RETURN JUMPDEST SWAP1 SWAP2 POP DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x26D JUMPI JUMPDEST PUSH2 0x254 DUP2 DUP4 PUSH2 0x2164 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x268 JUMPI PUSH2 0x228 SWAP2 MLOAD SWAP1 CODESIZE PUSH2 0x208 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x24A JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP3 DUP2 SWAP4 SWAP3 SWAP5 POP RETURNDATASIZE DUP4 GT PUSH2 0x2A9 JUMPI JUMPDEST PUSH2 0x297 DUP2 DUP4 PUSH2 0x2164 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x268 JUMPI DUP3 SWAP1 MLOAD SWAP2 CODESIZE PUSH2 0x1E1 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x28D JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2BB JUMPI PUSH2 0x2E8 PUSH2 0x2DB PUSH2 0x20DD JUMP JUMPDEST PUSH2 0x2E3 PUSH2 0x2872 JUMP JUMPDEST PUSH2 0x2418 JUMP JUMPDEST DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2BB JUMPI PUSH2 0x305 PUSH2 0x20DD JUMP JUMPDEST PUSH2 0x316 PUSH2 0x310 PUSH2 0x20F3 JUMP JUMPDEST SWAP2 PUSH2 0x23DF JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI PUSH1 0xE0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2BB JUMPI PUSH2 0x34F PUSH2 0x20DD JUMP JUMPDEST SWAP1 PUSH2 0x358 PUSH2 0x20F3 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x64 CALLDATALOAD SWAP4 PUSH1 0x84 CALLDATALOAD SWAP5 PUSH1 0xFF DUP7 AND DUP7 SUB PUSH2 0x4C1 JUMPI DUP1 TIMESTAMP GT PUSH2 0x4A9 JUMPI PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 DUP4 AND SWAP7 DUP8 DUP8 MSTORE PUSH32 0x5AB42CED628888259C08AC98DB1EB0CF702FC1501344311D8B100CD1BFE4BB00 PUSH1 0x20 MSTORE PUSH1 0x40 DUP8 KECCAK256 SWAP1 DUP2 SLOAD SWAP2 PUSH1 0x1 DUP4 ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP3 PUSH1 0x20 DUP5 ADD SWAP3 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP5 MSTORE DUP11 PUSH1 0x40 DUP7 ADD MSTORE DUP6 DUP9 AND PUSH1 0x60 DUP7 ADD MSTORE DUP9 PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0xC0 DUP4 MSTORE PUSH1 0xE0 DUP4 ADD SWAP2 DUP4 DUP4 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP5 GT OR PUSH2 0x493 JUMPI PUSH2 0x461 SWAP4 PUSH2 0x458 SWAP4 PUSH1 0x40 MSTORE MLOAD SWAP1 KECCAK256 PUSH2 0x431 PUSH2 0x2B78 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x1901 PUSH1 0xF0 SHL DUP4 MSTORE PUSH1 0x2 DUP4 ADD MSTORE PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0xC4 CALLDATALOAD SWAP2 PUSH1 0x42 PUSH1 0xA4 CALLDATALOAD SWAP3 KECCAK256 PUSH2 0x2C1C JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0x2CA0 JUMP JUMPDEST AND DUP6 DUP2 SUB PUSH2 0x475 JUMPI POP PUSH2 0x2E8 SWAP4 SWAP5 POP PUSH2 0x2B1A JUMP JUMPDEST PUSH1 0x44 SWAP1 DUP7 PUSH1 0x40 MLOAD SWAP2 PUSH4 0x25C00723 PUSH1 0xE1 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x313C8981 PUSH1 0xE1 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2BB JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2BB JUMPI SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x64F JUMPI PUSH2 0x530 PUSH2 0x20DD JUMP JUMPDEST SWAP1 PUSH2 0x539 PUSH2 0x248C JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP1 DUP3 MSTORE ADDRESS PUSH1 0x4 DUP4 ADD MSTORE SWAP1 SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP5 SWAP1 SWAP4 SWAP1 SWAP3 AND DUP3 DUP7 PUSH1 0x24 DUP2 DUP5 GAS STATICCALL SWAP6 DUP7 ISZERO PUSH2 0x644 JUMPI DUP8 SWAP7 PUSH2 0x613 JUMPI JUMPDEST POP PUSH2 0x59F SWAP1 DUP5 PUSH2 0x599 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB SWAP9 DUP10 PUSH1 0x3 SLOAD AND SWAP1 PUSH2 0x2185 JUMP JUMPDEST SWAP2 PUSH2 0x24E7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE DUP2 DUP2 PUSH1 0x24 DUP2 DUP8 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x608 JUMPI DUP7 SWAP3 PUSH2 0x5D8 JUMPI JUMPDEST POP POP PUSH2 0x599 SWAP1 PUSH2 0x228 SWAP5 PUSH1 0x3 SLOAD PUSH1 0x70 SHR AND SWAP1 PUSH2 0x2185 JUMP JUMPDEST SWAP1 DUP1 SWAP3 POP DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x601 JUMPI JUMPDEST PUSH2 0x5EF DUP2 DUP4 PUSH2 0x2164 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x268 JUMPI MLOAD DUP4 PUSH2 0x599 PUSH2 0x5C1 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x5E5 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 SWAP6 POP DUP3 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x63D JUMPI JUMPDEST PUSH2 0x62B DUP2 DUP4 PUSH2 0x2164 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x268 JUMPI MLOAD SWAP5 PUSH2 0x59F PUSH2 0x57C JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x621 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2BB JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH2 0x3E8 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2BB JUMPI PUSH2 0x697 PUSH2 0x68D PUSH2 0x20DD JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x2784 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2BB JUMPI PUSH1 0x40 MLOAD PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE04 DUP1 SLOAD DUP3 PUSH1 0x0 PUSH2 0x6E5 DUP4 PUSH2 0x21BB JUMP JUMPDEST SWAP3 DUP4 DUP4 MSTORE PUSH1 0x20 SWAP5 PUSH1 0x1 SWAP2 DUP7 PUSH1 0x1 DUP3 AND SWAP2 DUP3 PUSH1 0x0 EQ PUSH2 0x789 JUMPI POP POP PUSH1 0x1 EQ PUSH2 0x72D JUMPI JUMPDEST POP POP PUSH2 0x715 SWAP3 POP SUB DUP4 PUSH2 0x2164 JUMP JUMPDEST PUSH2 0x729 PUSH1 0x40 MLOAD SWAP3 DUP3 DUP5 SWAP4 DUP5 MSTORE DUP4 ADD SWAP1 PUSH2 0x2109 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP6 SWAP3 POP PUSH1 0x0 MSTORE PUSH32 0x46A2803E59A4DE4E7A4C574B1243F25977AC4C77D5A1A4A609B5394CEBB4A2AA SWAP1 PUSH1 0x0 SWAP2 JUMPDEST DUP6 DUP4 LT PUSH2 0x771 JUMPI POP POP PUSH2 0x715 SWAP4 POP DUP3 ADD ADD DUP6 DUP1 PUSH2 0x707 JUMP JUMPDEST DUP1 SLOAD DUP4 DUP10 ADD DUP6 ADD MSTORE DUP8 SWAP5 POP DUP7 SWAP4 SWAP1 SWAP3 ADD SWAP2 DUP2 ADD PUSH2 0x759 JUMP JUMPDEST SWAP3 POP SWAP4 POP POP PUSH2 0x715 SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD DUP6 DUP1 PUSH2 0x707 JUMP JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2BB JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E35 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2BB JUMPI PUSH2 0x7FB PUSH2 0x20DD JUMP JUMPDEST PUSH2 0x803 PUSH2 0x248C JUMP JUMPDEST PUSH2 0x80B PUSH2 0x24BC JUMP JUMPDEST PUSH2 0x82A PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB SWAP2 DUP3 DUP3 AND SWAP3 DUP3 PUSH1 0x70 SHR AND SWAP2 PUSH1 0xE0 SHR SWAP1 JUMP JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP7 SWAP5 SWAP6 SWAP2 SWAP1 SWAP3 AND SWAP4 SWAP1 SWAP3 SWAP1 PUSH1 0x20 DUP4 PUSH1 0x24 DUP2 DUP9 GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0xC3A JUMPI DUP2 SWAP4 PUSH2 0xC06 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP7 PUSH1 0x20 DUP9 PUSH1 0x24 DUP2 DUP5 GAS STATICCALL SWAP6 DUP7 ISZERO PUSH2 0xBFB JUMPI DUP8 SWAP9 DUP4 SWAP9 SWAP8 PUSH2 0xBC4 JUMPI JUMPDEST POP ADDRESS DUP4 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E15 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH2 0x8F7 PUSH2 0x8EB PUSH2 0x8EB PUSH2 0x8F0 PUSH2 0x8D1 DUP9 PUSH1 0x40 DUP10 KECCAK256 SLOAD SWAP13 PUSH2 0x28B8 JUMP JUMPDEST SWAP9 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E55 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP4 DUP5 SWAP2 DUP14 PUSH2 0x21A8 JUMP JUMPDEST PUSH2 0x23BF JUMP JUMPDEST SWAP11 DUP11 PUSH2 0x21A8 JUMP JUMPDEST SWAP7 DUP9 ISZERO ISZERO DUP1 PUSH2 0xBBB JUMPI JUMPDEST ISZERO PUSH2 0xB62 JUMPI ADDRESS ISZERO PUSH2 0xB49 JUMPI ADDRESS PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E15 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD DUP2 DUP2 LT PUSH2 0xB21 JUMPI SWAP2 PUSH1 0x0 DUP3 PUSH1 0x20 SWAP4 PUSH1 0x24 SWAP7 SWAP6 ADDRESS DUP5 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E15 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP7 MSTORE SUB PUSH1 0x40 DUP4 KECCAK256 SSTORE DUP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E55 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SUB PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E55 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 ADDRESS SWAP3 LOG3 PUSH2 0x9AC DUP11 DUP10 DUP4 PUSH2 0x24E7 JUMP JUMPDEST PUSH2 0x9B7 DUP10 DUP10 DUP6 PUSH2 0x24E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP4 DUP5 SWAP2 DUP3 SWAP1 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0xB16 JUMPI DUP4 SWAP3 PUSH2 0xAE1 JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x24 SWAP2 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP3 MSTORE ADDRESS PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0xAD5 JUMPI SWAP3 PUSH2 0xA9A JUMPI JUMPDEST POP SWAP7 PUSH2 0xA1A SWAP3 SWAP2 PUSH1 0x40 SWAP9 PUSH2 0x263F JUMP JUMPDEST PUSH2 0xA77 JUMPI JUMPDEST DUP4 MLOAD SWAP1 DUP4 DUP3 MSTORE DUP3 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0xDCCD412F0B1252819CB1FD330B93224CA42612892BB3F4F789976E6D81936496 DUP6 CALLER SWAP3 LOG3 PUSH1 0x1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E95 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST PUSH2 0xA92 PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP1 DUP3 PUSH1 0x70 SHR AND SWAP2 AND PUSH2 0x21A8 JUMP JUMPDEST PUSH1 0x6 SSTORE PUSH2 0xA1F JUMP JUMPDEST SWAP3 SWAP2 POP SWAP7 PUSH1 0x20 DUP4 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xACD JUMPI JUMPDEST DUP2 PUSH2 0xAB7 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x2164 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x268 JUMPI SWAP2 MLOAD SWAP2 SWAP7 SWAP1 SWAP2 SWAP1 PUSH1 0x40 PUSH2 0xA0B JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xAAA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 SWAP2 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xB0E JUMPI JUMPDEST DUP2 PUSH2 0xAFD PUSH1 0x20 SWAP4 DUP4 PUSH2 0x2164 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x268 JUMPI MLOAD SWAP1 PUSH1 0x20 PUSH2 0x9DF JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xAF0 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x414D4D546F6B656E506169723A20494E53554646494349454E545F4C49515549 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x1112551657D09554939151 PUSH1 0xAA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP DUP8 ISZERO ISZERO PUSH2 0x901 JUMP JUMPDEST SWAP7 POP SWAP7 POP PUSH1 0x20 DUP7 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xBF3 JUMPI JUMPDEST DUP2 PUSH2 0xBE1 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x2164 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x268 JUMPI DUP8 SWAP6 MLOAD SWAP7 CODESIZE PUSH2 0x8A0 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xBD4 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 SWAP3 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xC32 JUMPI JUMPDEST DUP2 PUSH2 0xC22 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x2164 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x268 JUMPI MLOAD SWAP2 CODESIZE PUSH2 0x871 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xC15 JUMP JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2BB JUMPI PUSH32 0xA16A46D94261C7517CC8FF89F61C0CE93598E3C849801011DEE649A6A557D100 SLOAD ISZERO DUP1 PUSH2 0xD7C JUMPI JUMPDEST ISZERO PUSH2 0xD3F JUMPI PUSH2 0xC8E PUSH2 0x21F5 JUMP JUMPDEST SWAP1 PUSH2 0xC97 PUSH2 0x22DF JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 SWAP1 PUSH1 0x20 DUP4 ADD SWAP4 DUP4 DUP6 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP7 GT OR PUSH2 0x493 JUMPI SWAP3 DUP5 SWAP3 PUSH1 0x20 PUSH2 0xCF5 DUP9 SWAP7 PUSH2 0xCE7 SWAP9 PUSH1 0x40 MSTORE DUP6 DUP6 MSTORE PUSH1 0x40 MLOAD SWAP9 DUP10 SWAP9 PUSH1 0xF PUSH1 0xF8 SHL DUP11 MSTORE PUSH1 0xE0 DUP6 DUP12 ADD MSTORE PUSH1 0xE0 DUP11 ADD SWAP1 PUSH2 0x2109 JUMP JUMPDEST SWAP1 DUP9 DUP3 SUB PUSH1 0x40 DUP11 ADD MSTORE PUSH2 0x2109 JUMP JUMPDEST SWAP3 CHAINID PUSH1 0x60 DUP9 ADD MSTORE ADDRESS PUSH1 0x80 DUP9 ADD MSTORE DUP5 PUSH1 0xA0 DUP9 ADD MSTORE DUP7 DUP5 SUB PUSH1 0xC0 DUP9 ADD MSTORE MLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP4 SWAP3 JUMPDEST DUP3 DUP2 LT PUSH2 0xD28 JUMPI POP POP POP POP SUB SWAP1 RETURN JUMPDEST DUP4 MLOAD DUP6 MSTORE DUP7 SWAP6 POP SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0xD19 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x1152540DCC4C8E88155B9A5B9A5D1A585B1A5E9959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH32 0xA16A46D94261C7517CC8FF89F61C0CE93598E3C849801011DEE649A6A557D101 SLOAD ISZERO PUSH2 0xC81 JUMP JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2BB JUMPI PUSH2 0xDBE PUSH2 0x2872 JUMP JUMPDEST PUSH2 0xDC6 PUSH2 0x24BC JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E75 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH1 0x20 PUSH1 0x40 MLOAD CALLER DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2BB JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xE2F PUSH2 0x20DD JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH32 0x5AB42CED628888259C08AC98DB1EB0CF702FC1501344311D8B100CD1BFE4BB00 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2BB JUMPI PUSH1 0x20 PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2BB JUMPI PUSH2 0xE9E PUSH2 0x2872 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E35 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2BB JUMPI PUSH1 0x20 SWAP1 PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xF18 PUSH2 0x20DD JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E15 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 MSTORE KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x64F JUMPI PUSH2 0xF51 PUSH2 0x20DD JUMP JUMPDEST SWAP1 PUSH2 0xF5A PUSH2 0x248C JUMP JUMPDEST PUSH2 0xF62 PUSH2 0x24BC JUMP JUMPDEST PUSH2 0xF81 PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB SWAP2 DUP3 DUP3 AND SWAP3 DUP3 PUSH1 0x70 SHR AND SWAP2 PUSH1 0xE0 SHR SWAP1 JUMP JUMPDEST POP SWAP2 SWAP1 SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 PUSH1 0x1 SLOAD AND SWAP4 PUSH1 0x40 MLOAD DUP5 DUP2 PUSH1 0x24 DUP2 PUSH4 0x70A08231 PUSH1 0xE0 SHL SWAP10 DUP11 DUP3 MSTORE ADDRESS PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x11F7 JUMPI DUP6 SWAP2 DUP10 SWAP4 PUSH2 0x11C6 JUMPI JUMPDEST POP PUSH1 0x2 SLOAD AND SWAP6 PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP9 DUP2 SWAP4 DUP3 MSTORE ADDRESS PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP5 DUP6 ISZERO PUSH2 0x644 JUMPI DUP8 SWAP6 PUSH2 0x1197 JUMPI JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB SWAP2 DUP3 DUP8 AND SWAP7 PUSH2 0xFFE DUP9 DUP5 PUSH2 0x2185 JUMP JUMPDEST SWAP7 DUP5 DUP4 AND SWAP4 PUSH2 0x100D DUP6 DUP4 PUSH2 0x2185 JUMP JUMPDEST SWAP10 PUSH2 0x1018 DUP6 DUP6 PUSH2 0x28B8 JUMP JUMPDEST SWAP6 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E55 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP2 DUP3 ISZERO PUSH1 0x0 EQ PUSH2 0x107E JUMPI DUP14 PUSH2 0x1046 PUSH2 0x1041 DUP16 DUP16 PUSH2 0x21A8 JUMP JUMPDEST PUSH2 0x29F8 JUMP JUMPDEST PUSH2 0x3E7 NOT DUP2 ADD GT PUSH2 0x106A JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP14 SWAP2 PUSH2 0x8EB PUSH2 0x1099 DUP15 SWAP14 SWAP16 SWAP13 SWAP15 SWAP4 PUSH2 0x8EB DUP8 PUSH2 0x10A0 SWAP7 PUSH2 0x21A8 JUMP JUMPDEST SWAP5 DUP13 PUSH2 0x21A8 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 LT ISZERO PUSH2 0x1190 JUMPI POP JUMPDEST SWAP9 DUP10 ISZERO PUSH2 0x1137 JUMPI SWAP1 PUSH2 0x10C4 DUP11 PUSH2 0x10C9 SWAP7 SWAP6 SWAP5 SWAP4 PUSH2 0x2A54 JUMP JUMPDEST PUSH2 0x263F JUMP JUMPDEST PUSH2 0x1119 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE DUP4 DUP3 ADD MSTORE PUSH32 0x4C209B5FC8AD50758F13E2E1088BA56A560DFF690A1C6FEF26394F4C03821C4F PUSH1 0x40 CALLER SWAP3 LOG2 PUSH1 0x1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E95 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH2 0x112E SWAP1 PUSH1 0x3 SLOAD SWAP1 DUP1 DUP3 PUSH1 0x70 SHR AND SWAP2 AND PUSH2 0x21A8 JUMP JUMPDEST PUSH1 0x6 SSTORE DUP5 PUSH2 0x10CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP13 SWAP1 MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x414D4D546F6B656E506169723A20494E53554646494349454E545F4C49515549 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x1112551657D35253951151 PUSH1 0xAA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH2 0x10AC JUMP JUMPDEST SWAP1 SWAP5 POP DUP4 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x11BF JUMPI JUMPDEST PUSH2 0x11AF DUP2 DUP4 PUSH2 0x2164 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x268 JUMPI MLOAD SWAP4 CODESIZE PUSH2 0xFE6 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x11A5 JUMP JUMPDEST DUP3 DUP2 SWAP4 SWAP3 SWAP5 POP RETURNDATASIZE DUP4 GT PUSH2 0x11F0 JUMPI JUMPDEST PUSH2 0x11DE DUP2 DUP4 PUSH2 0x2164 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x268 JUMPI DUP5 SWAP1 MLOAD SWAP2 CODESIZE PUSH2 0xFBF JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x11D4 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP11 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2BB JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E75 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2BB JUMPI PUSH1 0x20 PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2BB JUMPI PUSH1 0x20 PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2BB JUMPI PUSH2 0x1288 PUSH2 0x20DD JUMP JUMPDEST SWAP1 PUSH2 0x1291 PUSH2 0x20F3 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2EB5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 AND DUP1 ISZERO SWAP1 DUP2 PUSH2 0x1742 JUMPI JUMPDEST PUSH1 0x1 EQ SWAP1 DUP2 PUSH2 0x1738 JUMPI JUMPDEST ISZERO SWAP1 DUP2 PUSH2 0x172F JUMPI JUMPDEST POP PUSH2 0x171D JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB NOT DUP4 AND OR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2EB5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE PUSH1 0xFF DUP3 PUSH1 0x40 SHR AND ISZERO PUSH2 0x16F0 JUMPI JUMPDEST PUSH2 0x12FF PUSH2 0x23A0 JUMP JUMPDEST SWAP4 PUSH2 0x1308 PUSH2 0x23A0 JUMP JUMPDEST SWAP5 PUSH2 0x1311 PUSH2 0x2BED JUMP JUMPDEST PUSH2 0x1319 PUSH2 0x2BED JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x15C5 JUMPI DUP1 PUSH2 0x1342 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2DF5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH2 0x21BB JUMP JUMPDEST SWAP3 PUSH1 0x1F SWAP4 DUP5 DUP2 GT PUSH2 0x166F JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 DUP5 DUP4 GT PUSH1 0x1 EQ PUSH2 0x15E4 JUMPI DUP9 SWAP3 PUSH2 0x15D9 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2DF5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE JUMPDEST DUP6 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x15C5 JUMPI PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE04 SWAP2 PUSH2 0x13C2 DUP4 SLOAD PUSH2 0x21BB JUMP JUMPDEST DUP2 DUP2 GT PUSH2 0x1566 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 DUP3 GT PUSH1 0x1 EQ PUSH2 0x14E3 JUMPI DUP2 SWAP1 DUP8 SWAP9 PUSH1 0xFF SWAP9 SWAP3 PUSH2 0x14D8 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST PUSH2 0x1401 PUSH2 0x2BED JUMP JUMPDEST PUSH2 0x1409 PUSH2 0x2BED JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E95 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE PUSH2 0x1423 PUSH2 0x2BED JUMP JUMPDEST PUSH2 0x142B PUSH2 0x2BED JUMP JUMPDEST PUSH2 0x1433 PUSH2 0x2BED JUMP JUMPDEST PUSH2 0x143C CALLER PUSH2 0x2418 JUMP JUMPDEST PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL SWAP2 CALLER DUP4 DUP8 SLOAD AND OR DUP7 SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP3 AND DUP4 PUSH1 0x1 SLOAD AND OR PUSH1 0x1 SSTORE AND SWAP1 PUSH1 0x2 SLOAD AND OR PUSH1 0x2 SSTORE PUSH1 0x40 SHR AND ISZERO PUSH2 0x147E JUMPI DUP1 RETURN JUMPDEST PUSH9 0xFF0000000000000000 NOT PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2EB5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2EB5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x13E4 JUMP JUMPDEST DUP3 DUP8 MSTORE PUSH32 0x46A2803E59A4DE4E7A4C574B1243F25977AC4C77D5A1A4A609B5394CEBB4A2AA SWAP8 PUSH1 0x1F NOT DUP4 AND DUP9 JUMPDEST DUP2 DUP2 LT PUSH2 0x154E JUMPI POP SWAP2 PUSH1 0xFF SWAP9 SWAP10 SWAP2 DUP5 PUSH1 0x1 SWAP6 SWAP5 LT PUSH2 0x1535 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x13F9 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x1528 JUMP JUMPDEST DUP4 DUP4 ADD MLOAD DUP12 SSTORE PUSH1 0x1 SWAP1 SWAP11 ADD SWAP10 PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 ADD PUSH2 0x150F JUMP JUMPDEST DUP4 DUP9 MSTORE PUSH32 0x46A2803E59A4DE4E7A4C574B1243F25977AC4C77D5A1A4A609B5394CEBB4A2AA DUP3 DUP1 DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 PUSH1 0x20 DUP7 LT PUSH2 0x15BC JUMPI JUMPDEST ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x15B1 JUMPI POP PUSH2 0x13CA JUMP JUMPDEST DUP9 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x15A4 JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH2 0x159D JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x1363 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2DF5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP10 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2DD5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 POP PUSH1 0x1F NOT DUP5 AND DUP10 JUMPDEST DUP2 DUP2 LT PUSH2 0x1657 JUMPI POP SWAP1 DUP5 PUSH1 0x1 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH2 0x163E JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2DF5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE PUSH2 0x1386 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x1623 JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0x160D JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2DF5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP9 MSTORE DUP4 DUP1 DUP5 ADD PUSH1 0x5 SHR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2DD5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0x16DA JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 ADD PUSH1 0x5 SHR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2DD5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x16CC JUMPI POP PUSH2 0x134E JUMP JUMPDEST DUP10 DUP2 SSTORE DUP5 SWAP4 POP PUSH1 0x1 ADD PUSH2 0x16BF JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2DD5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 POP PUSH2 0x16A4 JUMP JUMPDEST PUSH9 0xFFFFFFFFFFFFFFFFFF NOT DUP3 AND PUSH9 0x10000000000000001 OR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2EB5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE PUSH2 0x12F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP1 POP ISZERO CODESIZE PUSH2 0x12C7 JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO SWAP2 POP PUSH2 0x12BF JUMP JUMPDEST PUSH1 0x40 DUP5 SWAP1 SHR PUSH1 0xFF AND ISZERO SWAP2 POP PUSH2 0x12B5 JUMP JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2BB JUMPI PUSH2 0x176B PUSH2 0x2872 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E75 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0xFF DUP2 AND ISZERO PUSH2 0x17B8 JUMPI PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH1 0x20 PUSH1 0x40 MLOAD CALLER DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2BB JUMPI PUSH1 0x20 PUSH2 0x17E5 PUSH2 0x2B78 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2BB JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2BB JUMPI PUSH2 0x1823 PUSH2 0x20DD JUMP JUMPDEST PUSH2 0x182B PUSH2 0x20F3 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH2 0x1838 DUP4 PUSH2 0x23DF JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP3 PUSH1 0x0 NOT DUP5 LT PUSH2 0x185A JUMPI JUMPDEST PUSH2 0x697 SWAP4 POP PUSH2 0x2784 JUMP JUMPDEST DUP3 DUP5 LT PUSH2 0x18C9 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x18B0 JUMPI CALLER ISZERO PUSH2 0x1897 JUMPI DUP3 PUSH2 0x697 SWAP5 PUSH2 0x1884 DUP4 PUSH2 0x23DF JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE SUB PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH2 0x1850 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2BB JUMPI PUSH1 0x20 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E55 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2BB JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2BB JUMPI PUSH2 0x697 PUSH2 0x1960 PUSH2 0x20DD JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x2B1A JUMP JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2BB JUMPI PUSH1 0x60 PUSH4 0xFFFFFFFF PUSH2 0x19A1 PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB SWAP2 DUP3 DUP3 AND SWAP3 DUP3 PUSH1 0x70 SHR AND SWAP2 PUSH1 0xE0 SHR SWAP1 JUMP JUMPDEST SWAP1 SWAP3 SWAP2 PUSH1 0x40 MLOAD SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP1 SWAP3 AND DUP6 MSTORE AND PUSH1 0x20 DUP5 ADD MSTORE AND PUSH1 0x40 DUP3 ADD MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2BB JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2DF5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD DUP3 PUSH1 0x0 PUSH2 0x19F4 DUP4 PUSH2 0x21BB JUMP JUMPDEST SWAP3 DUP4 DUP4 MSTORE PUSH1 0x20 SWAP5 PUSH1 0x1 SWAP2 DUP7 PUSH1 0x1 DUP3 AND SWAP2 DUP3 PUSH1 0x0 EQ PUSH2 0x789 JUMPI POP POP PUSH1 0x1 EQ PUSH2 0x1A23 JUMPI POP POP PUSH2 0x715 SWAP3 POP SUB DUP4 PUSH2 0x2164 JUMP JUMPDEST DUP6 SWAP3 POP PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2DD5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x0 SWAP2 JUMPDEST DUP6 DUP4 LT PUSH2 0x1A55 JUMPI POP POP PUSH2 0x715 SWAP4 POP DUP3 ADD ADD DUP6 DUP1 PUSH2 0x707 JUMP JUMPDEST DUP1 SLOAD DUP4 DUP10 ADD DUP6 ADD MSTORE DUP8 SWAP5 POP DUP7 SWAP4 SWAP1 SWAP3 ADD SWAP2 DUP2 ADD PUSH2 0x1A3D JUMP JUMPDEST POP CALLVALUE PUSH2 0x2BB JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2BB JUMPI PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 SUB PUSH2 0x2BB JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x64 CALLDATALOAD GT PUSH2 0x2BB JUMPI CALLDATASIZE PUSH1 0x23 PUSH1 0x64 CALLDATALOAD ADD SLT ISZERO PUSH2 0x2BB JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x64 CALLDATALOAD PUSH1 0x4 ADD CALLDATALOAD GT PUSH2 0x2BB JUMPI CALLDATASIZE PUSH1 0x24 PUSH1 0x64 CALLDATALOAD PUSH1 0x4 ADD CALLDATALOAD PUSH1 0x64 CALLDATALOAD ADD ADD GT PUSH2 0x2BB JUMPI PUSH2 0x1ADF PUSH2 0x248C JUMP JUMPDEST PUSH2 0x1AE7 PUSH2 0x24BC JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD ISZERO DUP1 ISZERO DUP1 SWAP2 PUSH2 0x20D2 JUMPI JUMPDEST ISZERO PUSH2 0x207C JUMPI PUSH2 0x1B18 PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB SWAP2 DUP3 DUP3 AND SWAP3 DUP3 PUSH1 0x70 SHR AND SWAP2 PUSH1 0xE0 SHR SWAP1 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP3 SWAP4 SWAP3 AND PUSH1 0x4 CALLDATALOAD LT DUP1 PUSH2 0x2068 JUMPI JUMPDEST ISZERO PUSH2 0x2017 JUMPI PUSH1 0x1 SLOAD PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP4 SWAP2 DUP2 AND SWAP2 SWAP1 PUSH1 0x44 CALLDATALOAD AND DUP3 EQ ISZERO DUP1 PUSH2 0x2002 JUMPI JUMPDEST ISZERO PUSH2 0x1FBD JUMPI PUSH2 0x1FA9 JUMPI JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH2 0x1F95 JUMPI JUMPDEST PUSH1 0x64 CALLDATALOAD PUSH1 0x4 ADD CALLDATALOAD PUSH2 0x1EC6 JUMPI JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x24 SWAP3 PUSH1 0x40 MLOAD SWAP4 DUP5 DUP1 SWAP3 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP3 MSTORE ADDRESS PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x2B0 JUMPI DUP6 SWAP3 PUSH2 0x1E8F JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x24 SWAP4 PUSH1 0x40 MLOAD SWAP5 DUP6 DUP1 SWAP3 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP3 MSTORE ADDRESS PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x2B0 JUMPI DUP6 SWAP4 PUSH2 0x1E5B JUMPI JUMPDEST POP PUSH2 0x1BE6 PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP7 AND PUSH2 0x2185 JUMP JUMPDEST DUP3 GT ISZERO PUSH2 0x1E54 JUMPI PUSH2 0x1C0B PUSH2 0x1C05 PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP8 AND PUSH2 0x2185 JUMP JUMPDEST DUP4 PUSH2 0x2185 JUMP JUMPDEST SWAP4 JUMPDEST PUSH2 0x1C22 PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP5 AND PUSH2 0x2185 JUMP JUMPDEST DUP5 GT ISZERO PUSH2 0x1E4D JUMPI PUSH2 0x1C47 PUSH2 0x1C41 PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP6 AND PUSH2 0x2185 JUMP JUMPDEST DUP6 PUSH2 0x2185 JUMP JUMPDEST SWAP4 JUMPDEST DUP6 ISZERO ISZERO DUP7 ISZERO PUSH2 0x1E44 JUMPI JUMPDEST ISZERO PUSH2 0x1DEF JUMPI DUP4 PUSH2 0x3E8 DUP2 MUL DIV PUSH2 0x3E8 EQ DUP5 ISZERO OR ISZERO PUSH2 0x1DDB JUMPI PUSH1 0x3 DUP7 MUL DUP7 DUP2 DIV PUSH1 0x3 EQ DUP8 ISZERO OR ISZERO PUSH2 0x1DC7 JUMPI PUSH2 0x1C8B SWAP1 PUSH2 0x3E8 DUP7 MUL PUSH2 0x2185 JUMP JUMPDEST PUSH2 0x3E8 DUP3 MUL DUP3 DUP2 DIV PUSH2 0x3E8 EQ DUP4 ISZERO OR ISZERO PUSH2 0x1D9F JUMPI PUSH1 0x3 DUP8 MUL SWAP1 DUP8 DUP3 DIV PUSH1 0x3 EQ DUP9 ISZERO OR ISZERO PUSH2 0x1DB3 JUMPI PUSH2 0x1CC6 SWAP3 SWAP2 PUSH2 0x1CC0 SWAP2 PUSH2 0x2185 JUMP JUMPDEST SWAP1 PUSH2 0x21A8 JUMP JUMPDEST PUSH2 0x1CE2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP6 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP6 AND PUSH2 0x21A8 JUMP JUMPDEST SWAP1 PUSH3 0xF4240 SWAP2 DUP3 DUP2 MUL SWAP3 DUP2 DUP5 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x1D9F JUMPI LT PUSH2 0x1D68 JUMPI PUSH2 0x1D06 SWAP4 PUSH2 0x263F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x44 CALLDATALOAD AND SWAP1 PUSH32 0xD78AD95FA46C994B6551D0DA85FC275FE613CE37657FB8D5E3D130840159D822 PUSH1 0x80 CALLER SWAP3 LOG3 PUSH1 0x1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E95 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x414D4D546F6B656E506169723A204B PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP11 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP11 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x414D4D546F6B656E506169723A20494E53554646494349454E545F494E505554 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x17D05353D55395 PUSH1 0xCA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP DUP5 ISZERO ISZERO PUSH2 0x1C53 JUMP JUMPDEST DUP6 SWAP4 PUSH2 0x1C49 JUMP JUMPDEST DUP5 SWAP4 PUSH2 0x1C0D JUMP JUMPDEST SWAP1 SWAP3 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1E87 JUMPI JUMPDEST DUP2 PUSH2 0x1E77 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x2164 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x268 JUMPI MLOAD SWAP2 CODESIZE PUSH2 0x1BD0 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1E6A JUMP JUMPDEST SWAP3 SWAP2 POP PUSH1 0x20 DUP4 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1EBE JUMPI JUMPDEST DUP2 PUSH2 0x1EAB PUSH1 0x20 SWAP4 DUP4 PUSH2 0x2164 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x268 JUMPI SWAP2 MLOAD SWAP1 SWAP2 PUSH1 0x20 PUSH2 0x1BA3 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1E9E JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE ISZERO PUSH2 0x4C1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x5FEA11F7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0x4 ADD CALLDATALOAD PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0x4 ADD CALLDATALOAD PUSH1 0x24 PUSH1 0x64 CALLDATALOAD ADD PUSH1 0xA4 DUP4 ADD CALLDATACOPY PUSH1 0xA4 PUSH1 0x64 CALLDATALOAD PUSH1 0x4 ADD CALLDATALOAD DUP3 DUP2 ADD DUP3 ADD DUP9 SWAP1 MSTORE DUP8 SWAP2 DUP4 SWAP2 PUSH1 0x1F NOT PUSH1 0x1F SWAP1 SWAP2 ADD AND DUP3 ADD DUP3 SWAP1 SUB ADD DUP2 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x44 CALLDATALOAD AND GAS CALL DUP1 ISZERO PUSH2 0x608 JUMPI PUSH2 0x1F65 JUMPI JUMPDEST POP PUSH2 0x1B76 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 SWAP7 SWAP3 SWAP7 GT PUSH2 0x1F81 JUMPI PUSH1 0x40 MSTORE SWAP4 PUSH1 0x20 PUSH2 0x1F5F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST PUSH2 0x1FA4 PUSH1 0x24 CALLDATALOAD PUSH1 0x44 CALLDATALOAD DUP6 PUSH2 0x24E7 JUMP JUMPDEST PUSH2 0x1B6A JUMP JUMPDEST PUSH2 0x1FB8 PUSH1 0x4 CALLDATALOAD PUSH1 0x44 CALLDATALOAD DUP4 PUSH2 0x24E7 JUMP JUMPDEST PUSH2 0x1B62 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x414D4D546F6B656E506169723A20494E56414C49445F544F0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 EQ ISZERO PUSH2 0x1B58 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x414D4D546F6B656E506169723A20494E53554646494349454E545F4C49515549 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x44495459 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP2 AND PUSH1 0x24 CALLDATALOAD LT PUSH2 0x1B2F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x414D4D546F6B656E506169723A20494E53554646494349454E545F4F55545055 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x1517D05353D55395 PUSH1 0xC2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP PUSH1 0x24 CALLDATALOAD ISZERO ISZERO PUSH2 0x1AF4 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x268 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x268 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x2135 JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x2114 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x493 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x493 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x2192 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x2192 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x21EB JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x21D5 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x21CA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x0 DUP3 PUSH32 0xA16A46D94261C7517CC8FF89F61C0CE93598E3C849801011DEE649A6A557D102 SWAP2 DUP3 SLOAD SWAP3 PUSH2 0x222A DUP5 PUSH2 0x21BB JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP4 PUSH1 0x20 SWAP2 PUSH1 0x1 SWAP2 DUP3 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x22B9 JUMPI POP PUSH1 0x1 EQ PUSH2 0x2258 JUMPI JUMPDEST POP POP POP PUSH2 0x2256 SWAP3 POP SUB DUP4 PUSH2 0x2164 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x42AD5D3E1F2E6E70EDCF6D991B8A3023D3FCA8047A131592F9EDB9FD9B89D57D SWAP6 SWAP1 SWAP4 POP SWAP2 SWAP1 JUMPDEST DUP3 DUP5 LT PUSH2 0x22A1 JUMPI POP PUSH2 0x2256 SWAP5 POP POP POP DUP2 ADD PUSH1 0x20 ADD CODESIZE DUP1 DUP1 PUSH2 0x2247 JUMP JUMPDEST DUP6 SLOAD DUP9 DUP6 ADD DUP4 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP3 DUP2 ADD SWAP3 PUSH2 0x2285 JUMP JUMPDEST SWAP3 POP POP POP PUSH1 0x20 SWAP3 POP PUSH2 0x2256 SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 DUP1 PUSH2 0x2247 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x0 DUP3 PUSH32 0xA16A46D94261C7517CC8FF89F61C0CE93598E3C849801011DEE649A6A557D103 SWAP2 DUP3 SLOAD SWAP3 PUSH2 0x2314 DUP5 PUSH2 0x21BB JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP4 PUSH1 0x20 SWAP2 PUSH1 0x1 SWAP2 DUP3 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x22B9 JUMPI POP PUSH1 0x1 EQ PUSH2 0x233F JUMPI POP POP POP PUSH2 0x2256 SWAP3 POP SUB DUP4 PUSH2 0x2164 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x5F9CE34815F8E11431C7BB75A8E6886A91478F7FFC1DBB0A98DC240FDDD76B75 SWAP6 SWAP1 SWAP4 POP SWAP2 SWAP1 JUMPDEST DUP3 DUP5 LT PUSH2 0x2388 JUMPI POP PUSH2 0x2256 SWAP5 POP POP POP DUP2 ADD PUSH1 0x20 ADD CODESIZE DUP1 DUP1 PUSH2 0x2247 JUMP JUMPDEST DUP6 SLOAD DUP9 DUP6 ADD DUP4 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP3 DUP2 ADD SWAP3 PUSH2 0x236C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x23AD DUP3 PUSH2 0x2149 JUMP JUMPDEST PUSH1 0x3 DUP3 MSTORE PUSH3 0x414D4D PUSH1 0xE8 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST DUP2 ISZERO PUSH2 0x23C9 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE01 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x2473 JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E35 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP5 OR SWAP1 SWAP2 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E95 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x2 DUP2 SLOAD EQ PUSH2 0x24AA JUMPI PUSH1 0x2 SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0xFF PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E75 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD AND PUSH2 0x24D5 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP3 SWAP2 PUSH2 0x24F5 DUP5 PUSH2 0x2149 JUMP JUMPDEST PUSH1 0x19 DUP5 MSTORE PUSH32 0x7472616E7366657228616464726573732C75696E743235362900000000000000 PUSH1 0x20 SWAP5 DUP6 ADD MSTORE PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 DUP7 ADD SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP3 DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP3 PUSH1 0x80 DUP2 ADD DUP5 DUP2 GT DUP3 DUP3 LT OR PUSH2 0x493 JUMPI PUSH1 0x40 MSTORE PUSH1 0x0 SWAP3 DUP4 SWAP3 DUP4 DUP1 SWAP4 MLOAD SWAP3 GAS CALL SWAP2 RETURNDATASIZE ISZERO PUSH2 0x2637 JUMPI RETURNDATASIZE SWAP1 DUP2 GT PUSH2 0x1F81 JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH2 0x259A PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP7 ADD DUP4 PUSH2 0x2164 JUMP JUMPDEST DUP2 MSTORE RETURNDATASIZE DUP3 DUP6 DUP4 ADD RETURNDATACOPY JUMPDEST DUP3 PUSH2 0x25F7 JUMPI JUMPDEST POP POP ISZERO PUSH2 0x25B3 JUMPI POP JUMP JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x414D4D546F6B656E506169723A205452414E534645525F4641494C4544000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP1 MLOAD SWAP3 POP DUP3 ISZERO SWAP2 SWAP1 DUP5 DUP4 ISZERO PUSH2 0x2613 JUMPI JUMPDEST POP POP POP SWAP1 POP CODESIZE DUP1 PUSH2 0x25A9 JUMP JUMPDEST SWAP2 SWAP4 DUP2 DUP1 SWAP5 POP ADD SUB SLT PUSH2 0x64F JUMPI DUP3 ADD MLOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH2 0x2BB JUMPI POP DUP1 CODESIZE DUP1 DUP5 PUSH2 0x2607 JUMP JUMPDEST POP PUSH1 0x60 PUSH2 0x25A3 JUMP JUMPDEST SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB SWAP1 DUP2 DUP6 GT ISZERO DUP1 PUSH2 0x277A JUMPI JUMPDEST ISZERO PUSH2 0x273C JUMPI PUSH32 0x1C411E9A96E071241C2F21F7726B17AE89E3CAB4C78BE50E062B03A9FFFBBAD1 SWAP5 PUSH1 0x40 SWAP5 DUP4 SWAP3 PUSH4 0xFFFFFFFF PUSH1 0x3 SLOAD PUSH1 0xE0 SHR DUP2 TIMESTAMP AND SUB AND SWAP2 DUP3 ISZERO ISZERO DUP1 PUSH2 0x2731 JUMPI JUMPDEST DUP1 PUSH2 0x2726 JUMPI JUMPDEST PUSH2 0x26E3 JUMPI JUMPDEST POP POP POP PUSH1 0x70 SWAP4 DUP5 SHL PUSH1 0x1 PUSH1 0x70 SHL PUSH1 0x1 PUSH1 0xE0 SHL SUB AND SWAP2 AND SWAP1 DUP2 OR TIMESTAMP PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND OR PUSH1 0x3 DUP2 SWAP1 SSTORE DUP5 MLOAD SWAP2 DUP3 MSTORE SWAP1 SWAP3 SHR AND PUSH1 0x20 DUP3 ADD MSTORE LOG1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB SWAP2 PUSH2 0x2715 SWAP2 SWAP1 PUSH2 0x2702 SWAP1 DUP6 DUP6 PUSH2 0x2707 DUP4 DUP6 DUP8 PUSH2 0x2ACD JUMP JUMPDEST PUSH2 0x2AFC JUMP JUMPDEST AND MUL PUSH1 0x4 SLOAD ADD PUSH1 0x4 SSTORE PUSH2 0x2ACD JUMP JUMPDEST AND MUL PUSH1 0x5 SLOAD ADD PUSH1 0x5 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x26A5 JUMP JUMPDEST POP DUP5 DUP2 AND ISZERO ISZERO PUSH2 0x26A0 JUMP JUMPDEST POP DUP5 DUP3 AND ISZERO ISZERO PUSH2 0x269A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x414D4D546F6B656E506169723A204F564552464C4F57 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP DUP2 DUP4 GT ISZERO PUSH2 0x2654 JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 DUP4 ISZERO PUSH2 0x2859 JUMPI AND SWAP3 DUP4 ISZERO PUSH2 0x2840 JUMPI PUSH1 0x0 SWAP1 DUP4 DUP3 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E15 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SLOAD SWAP2 DUP5 DUP4 LT PUSH2 0x280D JUMPI POP DUP3 DUP5 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 SWAP4 PUSH1 0x40 SWAP4 DUP9 PUSH1 0x20 SWAP8 MSTORE DUP7 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE POP PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E35 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x2893 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x2192 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH3 0x2FCFCB PUSH1 0xE3 SHL DUP2 MSTORE SWAP4 SWAP5 SWAP4 SWAP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x20 SWAP1 DUP6 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 DUP6 AND GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0xB16 JUMPI DUP4 SWAP5 PUSH2 0x29B7 JUMPI JUMPDEST POP DUP4 AND ISZERO ISZERO SWAP5 PUSH1 0x6 SLOAD SWAP2 DUP7 PUSH1 0x0 EQ PUSH2 0x29A6 JUMPI DUP3 PUSH2 0x2911 JUMPI JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1041 PUSH2 0x292E SWAP2 PUSH2 0x2934 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP1 SWAP2 AND SWAP2 AND PUSH2 0x21A8 JUMP JUMPDEST SWAP2 PUSH2 0x29F8 JUMP JUMPDEST SWAP1 DUP2 DUP2 GT PUSH2 0x2943 JUMPI JUMPDEST DUP1 PUSH2 0x290A JUMP JUMPDEST PUSH2 0x2960 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E55 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH2 0x1CC0 DUP5 DUP5 PUSH2 0x2185 JUMP JUMPDEST SWAP3 PUSH1 0x5 DUP3 MUL SWAP2 DUP1 DUP4 DIV PUSH1 0x5 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x106A JUMPI POP PUSH2 0x2989 SWAP3 SWAP2 PUSH2 0x2983 SWAP2 PUSH2 0x28AB JUMP JUMPDEST SWAP1 PUSH2 0x23BF JUMP JUMPDEST DUP1 PUSH2 0x2996 JUMPI JUMPDEST DUP1 DUP1 PUSH2 0x293D JUMP JUMPDEST PUSH2 0x299F SWAP2 PUSH2 0x2A54 JUMP JUMPDEST CODESIZE DUP1 PUSH2 0x298F JUMP JUMPDEST POP POP SWAP1 SWAP2 POP PUSH2 0x29B2 JUMPI POP JUMP JUMPDEST PUSH1 0x6 SSTORE JUMP JUMPDEST SWAP1 SWAP4 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x29F0 JUMPI JUMPDEST DUP2 PUSH2 0x29D3 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x2164 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x29EC JUMPI MLOAD DUP4 DUP2 AND DUP2 SUB PUSH2 0x29EC JUMPI SWAP3 CODESIZE PUSH2 0x28F2 JUMP JUMPDEST DUP3 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x29C6 JUMP JUMPDEST SWAP1 PUSH1 0x0 PUSH1 0x3 DUP4 GT ISZERO PUSH2 0x2A47 JUMPI POP DUP2 PUSH1 0x1 SWAP1 DUP1 PUSH1 0x1 SHR PUSH1 0x1 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x2192 JUMPI SWAP2 SWAP1 JUMPDEST DUP5 DUP4 LT PUSH2 0x2A27 JUMPI POP POP POP JUMP JUMPDEST SWAP1 SWAP2 SWAP4 POP PUSH2 0x2A3E DUP5 PUSH2 0x2A39 DUP2 DUP5 PUSH2 0x23BF JUMP JUMPDEST PUSH2 0x28AB JUMP JUMPDEST DUP3 SHR SWAP2 SWAP1 PUSH2 0x2A1B JUMP JUMPDEST SWAP2 PUSH2 0x2A4E JUMPI JUMP JUMPDEST PUSH1 0x1 SWAP2 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x2840 JUMPI PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x20 PUSH1 0x0 SWAP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E55 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x2AA4 DUP3 DUP3 SLOAD PUSH2 0x28AB JUMP JUMPDEST SWAP1 SSTORE DUP5 DUP5 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E15 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP3 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x70 SHL PUSH1 0x1 PUSH1 0xE0 SHL SUB PUSH1 0x70 DUP3 SWAP1 SHL AND SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND DUP1 DUP3 DIV PUSH1 0x1 PUSH1 0x70 SHL EQ SWAP1 ISZERO OR ISZERO PUSH2 0x2192 JUMPI SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x23C9 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND DIV SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 DUP4 ISZERO PUSH2 0x18B0 JUMPI AND SWAP3 DUP4 ISZERO PUSH2 0x1897 JUMPI PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 PUSH2 0x2B62 PUSH1 0x20 SWAP3 PUSH2 0x23DF JUMP JUMPDEST DUP6 PUSH1 0x0 MSTORE DUP3 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH2 0x2B80 PUSH2 0x2D25 JUMP JUMPDEST PUSH2 0x2B88 PUSH2 0x2D8F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD SWAP3 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F DUP5 MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 MSTORE PUSH1 0xC0 DUP2 ADD DUP2 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x493 JUMPI PUSH1 0x40 MSTORE MLOAD SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2EB5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x40 SHR AND ISZERO PUSH2 0x2C0A JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT PUSH2 0x2C94 JUMPI SWAP3 PUSH1 0x20 SWAP3 SWAP2 PUSH1 0xFF PUSH1 0x80 SWAP6 PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE AND DUP5 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 SWAP3 DUP4 SWAP2 DUP3 DUP1 MSTORE PUSH1 0x1 GAS STATICCALL ISZERO PUSH2 0xAD5 JUMPI DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x2C8B JUMPI SWAP2 DUP2 SWAP1 JUMP JUMPDEST POP DUP1 SWAP2 PUSH1 0x1 SWAP2 SWAP1 JUMP JUMPDEST POP POP POP PUSH1 0x0 SWAP2 PUSH1 0x3 SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x2D0F JUMPI DUP1 PUSH2 0x2CB2 JUMPI POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 SUB PUSH2 0x2CCC JUMPI PUSH1 0x40 MLOAD PUSH4 0xF645EEDF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP2 SUB PUSH2 0x2CED JUMPI PUSH1 0x40 MLOAD PUSH4 0xFCE698F7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x3 EQ PUSH2 0x2CF7 JUMPI POP JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x35E2F383 PUSH1 0xE2 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x2D2D PUSH2 0x21F5 JUMP JUMPDEST DUP1 MLOAD SWAP1 DUP2 ISZERO PUSH2 0x2D3D JUMPI PUSH1 0x20 ADD KECCAK256 SWAP1 JUMP JUMPDEST POP POP PUSH32 0xA16A46D94261C7517CC8FF89F61C0CE93598E3C849801011DEE649A6A557D100 SLOAD DUP1 ISZERO PUSH2 0x2D6A JUMPI SWAP1 JUMP JUMPDEST POP PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 SWAP1 JUMP JUMPDEST PUSH2 0x2D97 PUSH2 0x22DF JUMP JUMPDEST DUP1 MLOAD SWAP1 DUP2 ISZERO PUSH2 0x2DA7 JUMPI PUSH1 0x20 ADD KECCAK256 SWAP1 JUMP JUMPDEST POP POP PUSH32 0xA16A46D94261C7517CC8FF89F61C0CE93598E3C849801011DEE649A6A557D101 SLOAD DUP1 ISZERO PUSH2 0x2D6A JUMPI SWAP1 JUMP INVALID 0x2A 0xE0 DUP11 DUP15 0x29 0x25 EXTCODEHASH PUSH10 0xAC5D979A101956AB8F8D SWAP14 PUSH30 0xED63FA7A83B16FC47648EAB052C63247E1F47DB19D5CE0460030C497F067 0xCA 0x4C 0xEB 0xF7 SHL 0xA9 DUP15 0xEA 0xDA 0xBE KECCAK256 0xBA 0xCE SUB MSTORE 0xC6 ORIGIN SELFBALANCE 0xE1 DELEGATECALL PUSH30 0xB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE009016D09D72 0xD4 0xF 0xDA 0xE2 REVERT DUP13 0xEA 0xC6 0xB6 0x23 0x4C PUSH24 0x6214FD39C1CD1E609A0528C19930052C63247E1F47DB19D 0x5C 0xE0 CHAINID STOP ADDRESS 0xC4 SWAP8 CREATE PUSH8 0xCA4CEBF71BA98EEA 0xDA 0xBE KECCAK256 0xBA 0xCE MUL 0xCD 0x5E 0xD1 0x5C PUSH15 0x187E77E9AEE88184C21F4F2182AB58 0x27 0xCB EXTCODESIZE PUSH31 0x7FBEDCD63F033009B779B17422D0DF92223018B32B4D1FA46E071723D6817 0xE2 BASEFEE PUSH14 0x3BECC55F00F0C57E16840DF040 CALL POP DUP9 0xDC 0x2F DUP2 INVALID CODECOPY SHR CODECOPY 0x23 0xBE 0xC7 RETURNDATACOPY 0x23 0xA9 PUSH7 0x2EFC9C229C6A00 LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 SELFDESTRUCT 0xDD RETURNDATASIZE SWAP3 0xE9 0xDA SLOAD MULMOD ADD 0xDE 0xFB DUP3 DELEGATECALL 0xC PUSH25 0x49526E5EA3C333DEA2EDC1213DF2D8F964736F6C6343000816 STOP CALLER ","sourceMap":"816:16315:27:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3361:103:7;;:::i;:::-;816:16315:27;;;;-1:-1:-1;;;16976:39:27;;;17009:4;816:16315;16976:39;;816:16315;;16976:39;;-1:-1:-1;;;;;816:16315:27;16976:39;;816:16315;;;;;;;;16976:39;;;;;;;;;;;;;816:16315;;17036:6;816:16315;;;;;;17029:39;;;;;;17009:4;816:16315;17029:39;;816:16315;17029:39;;;;;;;;;;;816:16315;;17104:8;816:16315;;17082:8;816:16315;;-1:-1:-1;;;;;816:16315:27;;;;;;;17104:8;;:::i;:::-;16983:6;-1:-1:-1;;;;;;;;;;;816:16315:27;;;17029:39;;;;;;;;;;;;;;;;:::i;:::-;;;816:16315;;;;17104:8;816:16315;;17029:39;;;;816:16315;;;;17029:39;;;;;;816:16315;;;;;;;;;16976:39;;;;;;;;;;;;;;;;;:::i;:::-;;;816:16315;;;;;;;16976:39;;;;;;;;;;816:16315;;;;;;;;;;;;;;;;;;;-1:-1:-1;;816:16315:27;;;;2357:1:0;816:16315:27;;:::i;:::-;2303:62:0;;:::i;:::-;2357:1;:::i;:::-;816:16315:27;;;;;;;;;-1:-1:-1;;816:16315:27;;;;;;:::i;:::-;4771:20:2;816:16315:27;;:::i;:::-;4771:20:2;;:::i;:::-;816:16315:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;816:16315:27;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;2286:15:3;;:26;2282:97;;816:16315:27;;;;;;;;;;;;;972:64:5;816:16315:27;;;;;;;;;;;;;;;;2420:78:3;816:16315:27;2420:78:3;;816:16315:27;1279:95:3;816:16315:27;;1279:95:3;816:16315:27;1279:95:3;;816:16315:27;;;;;1279:95:3;;816:16315:27;1279:95:3;816:16315:27;1279:95:3;;816:16315:27;;1279:95:3;;816:16315:27;;1279:95:3;;816:16315:27;;2420:78:3;;816:16315:27;;;;;;;-1:-1:-1;;;;;816:16315:27;;;;;7105:8:20;816:16315:27;7051:25:20;816:16315:27;;;;2410:89:3;;3980:23:8;;:::i;:::-;3993:249:21;816:16315:27;3993:249:21;;-1:-1:-1;;;3993:249:21;;;;;;;;;;816:16315:27;;;3993:249:21;816:16315:27;;3993:249:21;;7051:25:20;:::i;:::-;7105:8;;;;;:::i;:::-;816:16315:27;2623:15:3;;;2619:88;;10021:4:2;;;;;;:::i;2619:88:3:-;816:16315:27;;;;;2661:35:3;;;;;;816:16315:27;2661:35:3;;816:16315:27;;1279:95:3;;816:16315:27;2661:35:3;816:16315:27;;;;;;;;;;;;2282:97:3;816:16315:27;;;;2335:33:3;;;;;;816:16315:27;2335:33:3;;816:16315:27;2335:33:3;816:16315:27;;;;;;;;;;;;;;;;;1430:21;816:16315;;;-1:-1:-1;;;;;816:16315:27;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;816:16315:27;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3361:103:7;;;:::i;:::-;816:16315:27;;16458:6;816:16315;;;-1:-1:-1;;;16639:40:27;;;16673:4;816:16315;16639:40;;816:16315;;;-1:-1:-1;;;;;816:16315:27;;;;;;;;;;;;;;16639:40;;;;;;;;;;;816:16315;;16639:51;816:16315;;16639:51;-1:-1:-1;;;;;816:16315:27;;16682:8;816:16315;;16639:51;;:::i;:::-;;;:::i;:::-;816:16315;;16774:40;;;16673:4;816:16315;16774:40;;816:16315;16774:40;;816:16315;16774:40;;;;;;;;;;;;;816:16315;;;16774:51;816:16315;16774:51;816:16315;16682:8;816:16315;;;;16774:51;;:::i;:40::-;;;;;;;;;;;;;;;;:::i;:::-;;;816:16315;;;;;;16774:51;:40;;;;;;;;816:16315;;;;;;;;;16639:40;;;;;;;;;;;;;;;;;:::i;:::-;;;816:16315;;;;;;16639:51;:40;;;;;;;;816:16315;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1132:7;816:16315;;;;;;;;;;-1:-1:-1;;816:16315:27;;;;4545:5:2;816:16315:27;;:::i;:::-;;;966:10:4;;4545:5:2;:::i;:::-;816:16315:27;;;;;;;;;;;;;;;;;;;;;;3086:9:2;816:16315:27;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;816:16315:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;816:16315:27;;;-1:-1:-1;;;;;816:16315:27;;;;;;;;;;;;;;;-1:-1:-1;;816:16315:27;;;;;;:::i;:::-;3361:103:7;;:::i;:::-;1944:72:6;;:::i;:::-;10174:13:27;3165:8;816:16315;-1:-1:-1;;;;;816:16315:27;;;;;;;;;;;;2959:301;;10174:13;-1:-1:-1;816:16315:27;;10302:6;816:16315;;;-1:-1:-1;;;10408:40:27;;10442:4;816:16315;10408:40;;816:16315;-1:-1:-1;;;;;816:16315:27;;;;;;;;;;;;;;;;;;;10408:40;;;;;;;;;;;816:16315;-1:-1:-1;816:16315:27;;-1:-1:-1;;;10533:40:27;;10442:4;816:16315;10533:40;;816:16315;;;;;;;10533:40;;;;;;;;;;;;;;816:16315;10442:4;;816:16315;;-1:-1:-1;;;;;;;;;;;816:16315:27;;11338:37;11138:20;11339;11137:37;10772:30;816:16315;;;;;10772:30;;:::i;:::-;816:16315;-1:-1:-1;;;;;;;;;;;816:16315:27;11138:20;;;;;:::i;:::-;11137:37;:::i;:::-;11339:20;;;:::i;11338:37::-;11498:11;;;;:26;;;816:16315;;;;10442:4;9233:21:2;9229:89;;10442:4:27;816:16315;;-1:-1:-1;;;;;;;;;;;816:16315:27;;;;;;7513:19:2;;;7509:115;;10442:4:27;816:16315;10442:4;816:16315;10442:4;816:16315;10442:4;;;816:16315;;-1:-1:-1;;;;;;;;;;;816:16315:27;;;;;;;;-1:-1:-1;;;;;;;;;;;816:16315:27;;-1:-1:-1;;;;;;;;;;;816:16315:27;;;;;;8262:25:2;10442:4:27;;8262:25:2;;11775:7:27;;;;;:::i;:::-;11874;;;;;:::i;:::-;816:16315;;-1:-1:-1;;;11928:40:27;;10442:4;816:16315;11928:40;;816:16315;;;;;;11928:40;;;;;;;;;;;816:16315;;;;;;;;;;;;;;12014:40;;10442:4;816:16315;12014:40;;816:16315;12014:40;;;;;;;;;;816:16315;12130:9;;;;;816:16315;12130:9;;:::i;:::-;12215:47;;816:16315;;;;;;;;;;;;;;;;;;12351:10;12346:38;12351:10;;12346:38;;10253:6;-1:-1:-1;;;;;;;;;;;816:16315:27;;;;;;;;;;;12215:47;12234:28;12242:8;816:16315;-1:-1:-1;;;;;816:16315:27;;;;;;;12234:28;:::i;:::-;12226:36;816:16315;12215:47;;12014:40;;;;;816:16315;12014:40;;816:16315;12014:40;;;;;;816:16315;12014:40;;;:::i;:::-;;;816:16315;;;;;;12014:40;;;;816:16315;;12014:40;;;;;-1:-1:-1;12014:40:27;;;816:16315;;;;;;;;;;11928:40;;;;816:16315;11928:40;;816:16315;11928:40;;;;;;816:16315;11928:40;;;:::i;:::-;;;816:16315;;;;;;;11928:40;;;;;-1:-1:-1;11928:40:27;;;816:16315;;;;;;;;;7509:115:2;816:16315:27;;-1:-1:-1;;;7559:50:2;;10442:4:27;816:16315;7559:50:2;;816:16315:27;;;;;;;;;;;;;;;;;7559:50:2;9229:89;816:16315:27;;-1:-1:-1;;;9277:30:2;;816:16315:27;9277:30:2;;816:16315:27;;;;;9277:30:2;816:16315:27;;;-1:-1:-1;;;816:16315:27;;;;;;;;;;;;;;;;;-1:-1:-1;;;816:16315:27;;;;;;;11498:26;11513:11;;;;11498:26;;10533:40;;;;;816:16315;10533:40;;816:16315;10533:40;;;;;;816:16315;10533:40;;;:::i;:::-;;;816:16315;;;;;;;10533:40;;;;;;;-1:-1:-1;10533:40:27;;;816:16315;;;;;;;;;10408:40;;;;816:16315;10408:40;;816:16315;10408:40;;;;;;816:16315;10408:40;;;:::i;:::-;;;816:16315;;;;;10408:40;;;;;;;-1:-1:-1;10408:40:27;;;816:16315;;;;;;;;;;;;;;;;;;;;;;;;2692:64:8;816:16315:27;5647:18:8;:43;;;816:16315:27;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;;;;;816:16315:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;5835:13:8;;816:16315:27;;;;5870:4:8;816:16315:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;816:16315:27;;;;;;;;;;;;;;;-1:-1:-1;;;816:16315:27;;;;;;;;;;;;-1:-1:-1;;;816:16315:27;;;;;;;5647:43:8;816:16315:27;5669:16:8;816:16315:27;5669:21:8;5647:43;;816:16315:27;;;;;;;;;;;;;2303:62:0;;:::i;:::-;1944:72:6;;:::i;:::-;-1:-1:-1;;;;;;;;;;;3300:4:6;816:16315:27;;;;;;;;3319:20:6;816:16315:27;;;966:10:4;816:16315:27;;3319:20:6;816:16315:27;;;;;;;;;-1:-1:-1;;816:16315:27;;;;-1:-1:-1;;;;;816:16315:27;;:::i;:::-;;;;972:64:5;816:16315:27;;;;;;;;;;;;;;;;;;;;;;;;;;;1892:20;816:16315;;;;;;;;;;;;;;;;;;;;2303:62:0;;:::i;:::-;-1:-1:-1;;;;;;;;;;;816:16315:27;;-1:-1:-1;;;;;;816:16315:27;;;;;;;-1:-1:-1;;;;;816:16315:27;3975:40:0;816:16315:27;;3975:40:0;816:16315:27;;;;;;;;;-1:-1:-1;;816:16315:27;;;;;;;;-1:-1:-1;;;;;816:16315:27;;:::i;:::-;;;;-1:-1:-1;;;;;;;;;;;816:16315:27;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3361:103:7;;;:::i;:::-;1944:72:6;;:::i;:::-;7765:13:27;3165:8;816:16315;-1:-1:-1;;;;;816:16315:27;;;;;;;;;;;;2959:301;;7765:13;816:16315;;;;;;;;;;;7885:6;816:16315;;;;;;;;;;;;7878:39;;;;7911:4;816:16315;7878:39;;816:16315;7878:39;;;;;;;;;;;;;816:16315;;8009:6;816:16315;;;;;;8002:39;;;;;;7911:4;816:16315;8002:39;;816:16315;8002:39;;;;;;;;;;;816:16315;;-1:-1:-1;;;;;816:16315:27;;;;8107:20;;;;;:::i;:::-;816:16315;;;;8193:20;;;;;:::i;:::-;8269:30;;;;;:::i;:::-;816:16315;-1:-1:-1;;;;;;;;;;;816:16315:27;8568:17;;;8564:651;8568:17;;;8703;8693:28;8703:17;;;;:::i;:::-;8693:28;:::i;:::-;-1:-1:-1;;816:16315:27;;;;;;;-1:-1:-1;;;8751:32:2;;816:16315:27;;8751:32:2;;816:16315:27;;;8751:32:2;816:16315:27;-1:-1:-1;;;816:16315:27;;;;;;;;8564:651;9101:22;;9155;9100:36;9101:22;;;;;;;;9154:36;9101:22;;:::i;9100:36::-;9155:22;;;:::i;9154:36::-;210:13:31;-1:-1:-1;210:5:31;;;;;;:13;;8564:651:27;9262:13;;816:16315;;9380:9;;;9466;9380;;;;;:::i;:::-;9466;:::i;:::-;9551:47;;8564:651;816:16315;;;;;;;;;;9682:34;816:16315;9687:10;9682:34;;7885:6;-1:-1:-1;;;;;;;;;;;816:16315:27;;;;;;;9551:47;9570:28;816:16315;9578:8;816:16315;;;;;;;;;9570:28;:::i;:::-;9562:36;816:16315;9551:47;;;816:16315;;;-1:-1:-1;;;816:16315:27;;;;;;;;;;;;;;;;;;-1:-1:-1;;;816:16315:27;;;;;;;210:13:31;;;;;8002:39:27;;;;;;;;;;;;;;;;;:::i;:::-;;;816:16315;;;;;8002:39;;;;;;;;;7878;;;;;;;;;;;;;;;;;:::i;:::-;;;816:16315;;;;;;;7878:39;;;;;;;;;;816:16315;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;816:16315:27;;;;;;;;;;;;;;;;;;;;;;;;1730:35;816:16315;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;816:16315:27;;;;;;:::i;:::-;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;816:16315:27;;-1:-1:-1;;;;;816:16315:27;;4724:16:1;;:34;;;;816:16315:27;4803:1:1;4788:16;:50;;;;816:16315:27;4853:13:1;:30;;;;816:16315:27;4849:91:1;;;4803:1;-1:-1:-1;;;;;816:16315:27;;;;-1:-1:-1;;;;;;;;;;;816:16315:27;;;;;;4301:16:1;4977:67;;816:16315:27;;;:::i;:::-;;;;:::i;:::-;6891:76:1;;;:::i;:::-;;;:::i;:::-;816:16315:27;;-1:-1:-1;;;;;816:16315:27;;;;;;-1:-1:-1;;;;;;;;;;;816:16315:27;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;4803:1:1;816:16315:27;11833:17:2;;;816:16315:27;2581:7:2;816:16315:27;;;;;-1:-1:-1;;;;;;;;;;;816:16315:27;;;;-1:-1:-1;;;;;816:16315:27;;;;2606:9:2;816:16315:27;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4803:1:1;816:16315:27;11833:17:2;;;816:16315:27;2581:7:2;816:16315:27;;;;;;;;6891:76:1;;:::i;:::-;;;:::i;:::-;4803:1;-1:-1:-1;;;;;;;;;;;816:16315:27;6891:76:1;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;6959:1;2361:10:27;6959:1:1;:::i;:::-;816:16315:27;;;2361:10;;816:16315;;;;;;;;;;;;;;;;4803:1:1;816:16315:27;;;4803:1:1;816:16315:27;;;2480:16;816:16315;;;2480:16;816:16315;;;;4301:16:1;5064:101;;816:16315:27;;5064:101:1;816:16315:27;;-1:-1:-1;;;;;;;;;;;816:16315:27;;-1:-1:-1;;;;;;;;;;;816:16315:27;5140:14:1;816:16315:27;;;4803:1:1;816:16315:27;;5140:14:1;816:16315:27;;;;;;-1:-1:-1;816:16315:27;;;;;;;;;;-1:-1:-1;;816:16315:27;;;;;;;;;;;;;;;;4803:1:1;816:16315:27;;;;;;;;;;;;;;;;;;;11833:17:2;;816:16315:27;;2581:7:2;816:16315:27;;;;;;;;;;;;;;;;;;;4803:1:1;816:16315:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4803:1:1;816:16315:27;;;;;;;;;;;-1:-1:-1;;;816:16315:27;;;;;;;;;;;;-1:-1:-1;816:16315:27;;;;;-1:-1:-1;;;;;;;;;;;816:16315:27;;-1:-1:-1;;;;;;;;;;;816:16315:27;-1:-1:-1;;;816:16315:27;;;;;;;;;;;;4803:1:1;816:16315:27;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;816:16315:27;;;;;;11833:17:2;;816:16315:27;;2581:7:2;816:16315:27;;;;;;;;;;;;;;;;4803:1:1;816:16315:27;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;816:16315:27;;;;;;;;-1:-1:-1;;;;;;;;;;;816:16315:27;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;816:16315:27;;;;;;;;;;;;;;;;;-1:-1:-1;4803:1:1;816:16315:27;;;;-1:-1:-1;;;;;;;;;;;816:16315:27;-1:-1:-1;816:16315:27;;4977:67:1;-1:-1:-1;;816:16315:27;;;;-1:-1:-1;;;;;;;;;;;816:16315:27;4977:67:1;;4849:91;816:16315:27;;-1:-1:-1;;;4906:23:1;;816:16315:27;;4906:23:1;4853:30;4870:13;;;4853:30;;;4788:50;4816:4;4808:25;:30;;-1:-1:-1;4788:50:1;;4724:34;816:16315:27;;;;;;4301:16:1;;-1:-1:-1;4724:34:1;;816:16315:27;;;;;;;;;;;;;2303:62:0;;:::i;:::-;-1:-1:-1;;;;;;;;;;;816:16315:27;;;;;2971:9:6;2967:62;;816:16315:27;;;;;3627:22:6;816:16315:27;;;966:10:4;816:16315:27;;3627:22:6;816:16315:27;;2967:62:6;816:16315:27;;-1:-1:-1;;;3003:15:6;;816:16315:27;;3003:15:6;816:16315:27;;;;;;;;;;;;;;3980:23:8;;:::i;:::-;816:16315:27;;;;;;;;;;;;;;;;;;;;;;3808:2:2;816:16315:27;;;;;;;;;;-1:-1:-1;;816:16315:27;;;;;;:::i;:::-;;;:::i;:::-;;;4771:20:2;;;;:::i;:::-;966:10:4;816:16315:27;;;;;;;;11833:17:2;;;11814:36;;11810:309;;816:16315:27;6102:5:2;;;;:::i;11810:309::-;11870:24;;;11866:130;;-1:-1:-1;;;;;816:16315:27;;11045:19:2;11041:89;;966:10:4;11143:21:2;11139:90;;11238:20;6102:5;11238:20;;;;:::i;:::-;966:10:4;816:16315:27;;;;;;;;;11810:309:2;;11139:90;816:16315:27;;-1:-1:-1;;;11187:31:2;;816:16315:27;;11187:31:2;;816:16315:27;;;11187:31:2;11041:89;816:16315:27;;-1:-1:-1;;;11087:32:2;;816:16315:27;;11087:32:2;;816:16315:27;;;11087:32:2;11866:130;816:16315:27;;-1:-1:-1;;;11921:60:2;;966:10:4;816:16315:27;11921:60:2;;816:16315:27;;;;;;;;;;;;;;;7559:50:2;816:16315:27;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;816:16315:27;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;816:16315:27;;;;;;;;;;;;;;;-1:-1:-1;;816:16315:27;;;;10021:4:2;816:16315:27;;:::i;:::-;;;966:10:4;;10021:4:2;:::i;816:16315:27:-;;;;;;;;;;;;;;;;3165:8;816:16315;-1:-1:-1;;;;;816:16315:27;;;;;;;;;;;;2959:301;;816:16315;;;;;;;-1:-1:-1;;;;;816:16315:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;816:16315:27;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;;;;;;;816:16315:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;816:16315:27;;;;;;;;;;;;;;;;;-1:-1:-1;;816:16315:27;;;;;;-1:-1:-1;;;;;816:16315:27;;;;;;-1:-1:-1;;;;;816:16315:27;;;;;;;;;;;;;;-1:-1:-1;;;;;816:16315:27;;;;;;;;;;;;;;;;;;;;;;3361:103:7;;:::i;:::-;1944:72:6;;:::i;:::-;816:16315:27;;12911:14;;;:32;;;;816:16315;;;;13104:13;3165:8;816:16315;-1:-1:-1;;;;;816:16315:27;;;;;;;;;;;;2959:301;;13104:13;816:16315;-1:-1:-1;;;;;816:16315:27;;;;;;13214:22;:48;;;816:16315;;;;;;13624:6;816:16315;-1:-1:-1;;;;;816:16315:27;;;;;;;;;;;;13708:13;;;;:30;;816:16315;;;;13869:58;;816:16315;;;14063:58;;816:16315;;;;;;14234:199;;816:16315;;;;;;;;;;;;;;14530:40;;14564:4;816:16315;14530:40;;816:16315;14530:40;;;;;;;;;;;816:16315;;;;;;;;;;;;;;14595:40;;14564:4;816:16315;14595:40;;816:16315;14595:40;;;;;;;;;;;816:16315;;14804:22;816:16315;;-1:-1:-1;;;;;816:16315:27;;14804:22;:::i;:::-;14793:33;;:99;;;14841:35;14853:22;816:16315;;-1:-1:-1;;;;;816:16315:27;;14853:22;:::i;:::-;14841:35;;:::i;:::-;14793:99;;15051:22;816:16315;;-1:-1:-1;;;;;816:16315:27;;15051:22;:::i;:::-;15040:33;;:99;;;15088:35;15100:22;816:16315;;-1:-1:-1;;;;;816:16315:27;;15100:22;:::i;:::-;15088:35;;:::i;:::-;15040:99;;15212:13;;;;;:30;;15040:99;816:16315;;;;15589:4;816:16315;;;15589:4;816:16315;;;;;;;15609:1;816:16315;;;;;15609:1;816:16315;15212:13;;816:16315;;;;15578:33;816:16315;15589:4;816:16315;;15578:33;:::i;:::-;15589:4;816:16315;;;;;15589:4;816:16315;;;;;;;15609:1;816:16315;;;;;;15609:1;816:16315;;;;;;;15880:35;15721:33;;;;;:::i;:::-;15880:35;;:::i;:::-;15939:30;-1:-1:-1;;;;;816:16315:27;;-1:-1:-1;;;;;816:16315:27;;15939:30;:::i;:::-;15973:9;;816:16315;;;;;;;;;;;;;;;15880:103;816:16315;;16118:9;;;:::i;:::-;816:16315;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16177:10;16172:66;816:16315;16177:10;16172:66;;816:16315;-1:-1:-1;;;;;;;;;;;816:16315:27;;;;;;-1:-1:-1;;;816:16315:27;;;;;;;;;;;;-1:-1:-1;;;816:16315:27;;;;;;;;-1:-1:-1;;;816:16315:27;;;;;;;;;-1:-1:-1;;;816:16315:27;;;;;;;;;-1:-1:-1;;;816:16315:27;;;;;;;;;-1:-1:-1;;;816:16315:27;;;;;;;;;;;-1:-1:-1;;;816:16315:27;;;;;;;;;;;;;;;;;-1:-1:-1;;;816:16315:27;;;;;;;15212:30;15229:13;;;;15212:30;;15040:99;;;;;14793;;;;;14595:40;;;;816:16315;14595:40;;816:16315;14595:40;;;;;;816:16315;14595:40;;;:::i;:::-;;;816:16315;;;;;14595:40;;;;;;;-1:-1:-1;14595:40:27;;14530;;;;816:16315;14530:40;;816:16315;14530:40;;;;;;816:16315;14530:40;;;:::i;:::-;;;816:16315;;;;;;14530:40;;816:16315;14530:40;;;;;-1:-1:-1;14530:40:27;;14234:199;816:16315;;-1:-1:-1;;;;;816:16315:27;14271:162;;;;816:16315;;;;;14271:162;;14315:10;816:16315;14271:162;;816:16315;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;816:16315:27;;;;;;;14271:162;;;;816:16315;;-1:-1:-1;;;;;816:16315:27;;;14271:162;;;;;;;;14234:199;;;;14271:162;-1:-1:-1;;;;;816:16315:27;;;;;;;;;;;14271:162;;816:16315;-1:-1:-1;;;816:16315:27;;;;;;;;14063:58;14110:10;816:16315;;;;14110:10;;:::i;:::-;14063:58;;13869;13916:10;816:16315;;;;13916:10;;:::i;:::-;13869:58;;816:16315;;;-1:-1:-1;;;816:16315:27;;;;;;;;;;;;;;;;;;;;13708:30;-1:-1:-1;816:16315:27;;-1:-1:-1;;;;;816:16315:27;13725:13;;;13708:30;;816:16315;;;-1:-1:-1;;;816:16315:27;;;;;;;;;;;;;;;;;-1:-1:-1;;;816:16315:27;;;;;;;13214:48;816:16315;-1:-1:-1;;;;;816:16315:27;;;;13240:22;13214:48;;816:16315;;;-1:-1:-1;;;816:16315:27;;;;;;;;;;;;;;;;;-1:-1:-1;;;816:16315:27;;;;;;;12911:32;816:16315;;;12929:14;;12911:32;;816:16315;;;;-1:-1:-1;;;;;816:16315:27;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;816:16315:27;;;;;;:::o;:::-;;;;;;;;;-1:-1:-1;816:16315:27;;;;;;;;;-1:-1:-1;816:16315:27;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;816:16315:27;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;816:16315:27;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6311:7:8;;816:16315:27;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:::o;:::-;-1:-1:-1;816:16315:27;;;;;-1:-1:-1;;;816:16315:27;;;;;;;;-1:-1:-1;816:16315:27;;-1:-1:-1;;;816:16315:27;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;816:16315:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6696:10:8;;816:16315:27;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;816:16315:27;;;;;-1:-1:-1;;;816:16315:27;;;;;;;;-1:-1:-1;816:16315:27;;-1:-1:-1;;;816:16315:27;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;816:16315:27;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;816:16315:27;;;;:::o;:::-;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;816:16315:27;;;;;4771:13:2;816:16315:27;;;;;;:::o;3405:215:0:-;-1:-1:-1;;;;;816:16315:27;;;;3489:22:0;;3485:91;;-1:-1:-1;;;;;;;;;;;816:16315:27;;-1:-1:-1;;;;;;816:16315:27;;;;;;;;3975:40:0;-1:-1:-1;;3975:40:0;3405:215::o;3485:91::-;816:16315:27;;-1:-1:-1;;;3534:31:0;;3509:1;3534:31;;;816:16315:27;;;3534:31:0;3470:384:7;-1:-1:-1;;;;;;;;;;;1991:1:7;816:16315:27;;3670:20:7;3666:88;;1991:1;816:16315:27;;3470:384:7:o;3666:88::-;816:16315:27;;-1:-1:-1;;;3713:30:7;;;;;2709:128:6;816:16315:27;-1:-1:-1;;;;;;;;;;;816:16315:27;;2770:61:6;;2709:128::o;2770:61::-;816:16315:27;;-1:-1:-1;;;2805:15:6;;;;;3401:487:27;816:16315;;;3401:487;816:16315;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;3601:43:27;;;;;;-1:-1:-1;;;;;816:16315:27;;;3601:43;;;816:16315;1284:53;;;;816:16315;;;;3601:43;;;-1:-1:-1;;;;;816:16315:27;;;;;;;;;;;;;;;-1:-1:-1;3577:77:27;;;;;;;;;;;1284:53;;;;;816:16315;;;;;;;;;;;;-1:-1:-1;;816:16315:27;;;;;:::i;:::-;;;1284:53;;;;;;;3769:57;;;1284:53;;;;;;3401:487;:::o;1284:53::-;;816:16315;;;;;;;1284:53;;;;;;;3601:43;1284:53;;816:16315;1284:53;;816:16315;;1284:53;;3769:57;816:16315;;;-1:-1:-1;3781:16:27;;;816:16315;3781:44;;;;;3769:57;;;;;;;;;;3781:44;3801:24;;;;;;;1284:53;;;;3801:24;;1284:53;816:16315;;;;1284:53;;;;3781:44;;;;;;;1284:53;;816:16315;1284:53;;4125:1569;;;-1:-1:-1;;;;;4355:29:27;;;;;:62;;;4125:1569;816:16315;;;5663:24;816:16315;;;;;;4687:18;816:16315;;;4560:15;;816:16315;;;4811:15;;;;:33;;;4125:1569;4811:51;;;4125:1569;4807:612;;4125:1569;-1:-1:-1;;;816:16315:27;;;;-1:-1:-1;;;;;;;816:16315:27;;;;;;4560:15;816:16315;;-1:-1:-1;;;;;;816:16315:27;;4687:18;816:16315;;;;;;;;;;;;;;;;5663:24;4125:1569::o;4807:612::-;-1:-1:-1;;;;;816:16315:27;5325:44;;816:16315;5325:27;;5087;816:16315;5087:44;:27;5325;816:16315;5087:27;:::i;:::-;:44;:::i;:::-;816:16315;;5035:131;816:16315;;5035:131;816:16315;5325:27;:::i;:44::-;816:16315;;5273:131;816:16315;;5273:131;816:16315;4807:612;;;;;4811:51;816:16315;;;;4848:14;;4811:51;;:33;816:16315;;;;4830:14;;4811:33;;816:16315;;;-1:-1:-1;;;816:16315:27;;;;;;;;;;;;-1:-1:-1;;;816:16315:27;;;;;;;4355:62;4388:29;;;;;4355:62;;6509:300:2;;-1:-1:-1;;;;;816:16315:27;;;;6592:18:2;;6588:86;;816:16315:27;6687:16:2;;;6683:86;;7262:546;816:16315:27;;;;-1:-1:-1;;;;;;;;;;;816:16315:27;;;;;;;7513:19:2;;;;7509:115;;816:16315:27;;;8262:25:2;816:16315:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8262:25:2;6509:300::o;7509:115::-;816:16315:27;;-1:-1:-1;;;7559:50:2;;-1:-1:-1;;;;;816:16315:27;;;;7559:50:2;;;816:16315:27;;;;;;;;-1:-1:-1;816:16315:27;;;;;;;;7559:50:2;6683:86;816:16315:27;;-1:-1:-1;;;6726:32:2;;6608:1;6726:32;;;816:16315:27;;;6726:32:2;6588:86;816:16315:27;;-1:-1:-1;;;6633:30:2;;6608:1;6633:30;;;816:16315:27;;;6633:30:2;2658:162:0;-1:-1:-1;;;;;;;;;;;816:16315:27;-1:-1:-1;;;;;816:16315:27;966:10:4;2717:23:0;2713:101;;2658:162::o;2713:101::-;816:16315:27;;-1:-1:-1;;;2763:40:0;;966:10:4;2763:40:0;;;816:16315:27;;;2763:40:0;816:16315:27;;;;;;;;;;:::o;5876:1494::-;6067:7;816:16315;;;;-1:-1:-1;;;6055:28:27;;5876:1494;;;816:16315;5876:1494;-1:-1:-1;;;;;816:16315:27;6055:28;;816:16315;;6055:28;;816:16315;;;;6055:28;;;;;;;;;;;5876:1494;816:16315;;;6169:19;;816:16315;6236:5;816:16315;6298:1066;;;;;;6362:11;6358:875;;6298:1066;;;;;;5876:1494::o;6358:875::-;6477:30;6467:41;816:16315;6587:17;816:16315;-1:-1:-1;;;;;816:16315:27;;;;;6477:30;:::i;6467:41::-;6587:17;;:::i;:::-;6666;;;;6662:557;;6358:875;;;;6662:557;6792:35;-1:-1:-1;;;;;;;;;;;816:16315:27;6809:17;;;;:::i;6792:35::-;816:16315;6932:1;816:16315;;;;;;6932:1;816:16315;;;;;;;6924:21;7037:23;6924:21;;;;;:::i;:::-;7037:23;;:::i;:::-;7162:13;7158:42;;6662:557;;;;;7158:42;7190:9;;;:::i;:::-;7158:42;;;;6298:1066;7296:11;;;;;7292:72;;6298:1066;5876:1494::o;7292:72::-;6236:5;816:16315;5876:1494::o;6055:28::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;816:16315;;;;;;;;;;;;6055:28;;;;816:16315;;;;6055:28;;;-1:-1:-1;6055:28:27;;345:292:31;;816:16315:27;416:1:31;412:5;;416:1;;;433:5;;816:16315:27;;;;;;;;;;;;;452:18:31;;491:5;;;;;;408:223;;;345:292::o;484:89::-;516:5;;;;544:9;516:5;544;;;;:::i;:::-;:9;:::i;:::-;816:16315:27;;;;484:89:31;;408:223;593:6;589:42;;345:292::o;589:42::-;619:1;;-1:-1:-1;816:16315:27:o;8637:208:2:-;-1:-1:-1;;;;;816:16315:27;;8707:21:2;;8703:91;;8262:25;816:16315:27;7818:429:2;7402:14;-1:-1:-1;;;;;;;;;;;7402:23:2;816:16315:27;;;7402:23:2;:::i;:::-;816:16315:27;;;;;-1:-1:-1;;;;;;;;;;;816:16315:27;;;;;;;;;;;;;;;;8262:25:2;8637:208::o;323:118:32:-;-1:-1:-1;;;;;;;816:16315:27;269:8:32;;;;;-1:-1:-1;;;;;816:16315:27;269:8:32;;;-1:-1:-1;;;269:8:32;;;;;;;323:118;:::o;509:106::-;;-1:-1:-1;;;;;816:16315:27;;;;;;-1:-1:-1;;;;;816:16315:27;;;509:106:32:o;10880:487:2:-;;-1:-1:-1;;;;;816:16315:27;;;;11045:19:2;;11041:89;;816:16315:27;11143:21:2;;;11139:90;;11319:31;11238:20;;816:16315:27;11238:20:2;;:::i;:::-;816:16315:27;-1:-1:-1;816:16315:27;;;;;-1:-1:-1;816:16315:27;;;;;;;11319:31:2;10880:487::o;4016:191:8:-;4129:17;;:::i;:::-;4148:20;;:::i;:::-;816:16315:27;;4107:92:8;;;;816:16315:27;1959:95:8;816:16315:27;;;1959:95:8;;816:16315:27;1959:95:8;;;816:16315:27;4170:13:8;1959:95;;;816:16315:27;4193:4:8;1959:95;;;816:16315:27;1959:95:8;4107:92;;1959:95;816:16315:27;;;;;-1:-1:-1;;;;;816:16315:27;;;;;;;;4097:103:8;;4016:191;:::o;7082:141:1:-;816:16315:27;-1:-1:-1;;;;;;;;;;;816:16315:27;;;;7148:18:1;7144:73;;7082:141::o;7144:73::-;816:16315:27;;-1:-1:-1;;;7189:17:1;;;;;5203:1551:20;;;6283:66;6270:79;;6266:164;;816:16315:27;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6541:24:20;;;;;;;;;;;;;;-1:-1:-1;;;;;816:16315:27;;6579:20:20;6575:113;;6698:49;;5203:1551;:::o;6575:113::-;6615:62;;;6541:24;6615:62;;:::o;6266:164::-;6365:54;;;6381:1;6365:54;6385:30;6365:54;;:::o;7280:532::-;816:16315:27;;;;;;7366:29:20;;;7411:7;;:::o;7362:444::-;816:16315:27;7462:38:20;;816:16315:27;;;;-1:-1:-1;;;7523:23:20;;816:16315:27;;7523:23:20;7458:348;7576:35;7567:44;;7576:35;;816:16315:27;;-1:-1:-1;;;7634:46:20;;816:16315:27;7634:46:20;;816:16315:27;;;;;7634:46:20;7563:243;7710:30;7701:39;7697:109;;7563:243;7280:532::o;7697:109::-;816:16315:27;;;;7763:32:20;;;;;;816:16315:27;7763:32:20;;816:16315:27;7763:32:20;816:16315:27;;;;7375:20:20;816:16315:27;;;;;7375:20:20;816:16315:27;6928:687:8;816:16315:27;;:::i;:::-;;;;7100:22:8;;;;816:16315:27;;7145:22:8;7138:29;:::o;7096:513::-;-1:-1:-1;;2692:64:8;816:16315:27;7473:15:8;;;;7508:17;:::o;7469:130::-;7564:20;7571:13;7564:20;:::o;7836:723::-;816:16315:27;;:::i;:::-;;;;8017:25:8;;;;816:16315:27;;8065:25:8;8058:32;:::o;8013:540::-;-1:-1:-1;;8377:16:8;816:16315:27;8411:18:8;;;;8449:20;:::o"},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","MINIMUM_LIQUIDITY()":"ba9a7a56","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(address)":"89afcb44","decimals()":"313ce567","eip712Domain()":"84b0196e","factory()":"c45a0155","getReserves()":"0902f1ac","initialize(address,address)":"485cc955","kLast()":"7464fc3d","mint(address)":"6a627842","name()":"06fdde03","nonces(address)":"7ecebe00","owner()":"8da5cb5b","pause()":"8456cb59","paused()":"5c975abb","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","price0CumulativeLast()":"5909c0d5","price1CumulativeLast()":"5a3d5493","renounceOwnership()":"715018a6","skim(address)":"bc25cf77","swap(uint256,uint256,address,bytes)":"022c0d9f","symbol()":"95d89b41","sync()":"fff6cae9","token0()":"0dfe1681","token1()":"d21220a7","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b","unpause()":"3f4ba83a"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve0\",\"type\":\"uint112\"},{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve1\",\"type\":\"uint112\"}],\"name\":\"Sync\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINIMUM_LIQUIDITY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint112\",\"name\":\"_reserve0\",\"type\":\"uint112\"},{\"internalType\":\"uint112\",\"name\":\"_reserve1\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"_blockTimestampLast\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token1\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price0CumulativeLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price1CumulativeLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"skim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sync\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"burn(address)\":{\"details\":\"\\u9500\\u6bc1\\u65b9\\u6cd5\",\"params\":{\"to\":\"to\\u5730\\u5740\"},\"returns\":{\"amount0\":\"amount0\",\"amount1\":\"amount1\"}},\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"},\"getReserves()\":{\"details\":\"\\u83b7\\u53d6\\u50a8\\u5907\",\"returns\":{\"_blockTimestampLast\":\"\\u65f6\\u95f4\\u6233\",\"_reserve0\":\"\\u50a8\\u5907\\u91cf0\",\"_reserve1\":\"\\u50a8\\u5907\\u91cf1\"}},\"initialize(address,address)\":{\"details\":\"\\u521d\\u59cb\\u5316\\u65b9\\u6cd5,\\u90e8\\u7f72\\u65f6\\u7531\\u5de5\\u5382\\u8c03\\u7528\\u4e00\\u6b21\",\"params\":{\"_token0\":\"token0\",\"_token1\":\"token1\"}},\"mint(address)\":{\"details\":\"\\u94f8\\u9020\\u65b9\\u6cd5\",\"params\":{\"to\":\"to\\u5730\\u5740\"},\"returns\":{\"liquidity\":\"\\u6d41\\u52a8\\u6027\\u6570\\u91cf\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pause()\":{\"details\":\"\\u7d27\\u6025\\u6682\\u505c\\u529f\\u80fd - \\u53ea\\u6709\\u6240\\u6709\\u8005\\u53ef\\u4ee5\\u8c03\\u7528\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"skim(address)\":{\"details\":\"\\u5f3a\\u5236\\u5e73\\u8861\\u4ee5\\u5339\\u914d\\u50a8\\u5907\",\"params\":{\"to\":\"to\\u5730\\u5740\"}},\"swap(uint256,uint256,address,bytes)\":{\"details\":\"\\u4ea4\\u6362\\u65b9\\u6cd5\",\"params\":{\"amount0Out\":\"\\u8f93\\u51fa\\u6570\\u989d0\",\"amount1Out\":\"\\u8f93\\u51fa\\u6570\\u989d1\",\"data\":\"\\u7528\\u4e8e\\u56de\\u8c03\\u7684\\u6570\\u636e\",\"to\":\"to\\u5730\\u5740\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"sync()\":{\"details\":\"\\u5f3a\\u5236\\u51c6\\u5907\\u91d1\\u4e0e\\u4f59\\u989d\\u5339\\u914d\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unpause()\":{\"details\":\"\\u53d6\\u6d88\\u6682\\u505c\\u529f\\u80fd - \\u53ea\\u6709\\u6240\\u6709\\u8005\\u53ef\\u4ee5\\u8c03\\u7528\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"burn(address)\":{\"notice\":\"\\u5e94\\u8be5\\u4ece\\u6267\\u884c\\u91cd\\u8981\\u5b89\\u5168\\u68c0\\u67e5\\u7684\\u5408\\u540c\\u4e2d\\u8c03\\u7528\\u6b64\\u4f4e\\u7ea7\\u529f\\u80fd\"},\"mint(address)\":{\"notice\":\"\\u5e94\\u8be5\\u4ece\\u6267\\u884c\\u91cd\\u8981\\u5b89\\u5168\\u68c0\\u67e5\\u7684\\u5408\\u540c\\u4e2d\\u8c03\\u7528\\u6b64\\u4f4e\\u7ea7\\u529f\\u80fd\"},\"swap(uint256,uint256,address,bytes)\":{\"notice\":\"\\u5e94\\u8be5\\u4ece\\u6267\\u884c\\u91cd\\u8981\\u5b89\\u5168\\u68c0\\u67e5\\u7684\\u5408\\u540c\\u4e2d\\u8c03\\u7528\\u6b64\\u4f4e\\u7ea7\\u529f\\u80fd\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AMMTokenPair.sol\":\"AMMTokenPair\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xfcd09c2aa8cc3f93e12545454359f901965db312bc03833daf84de0c03e05022\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07701188648d2ab83dab1037808298585264559bddf243bd8929037adcb984b0\",\"dweb:/ipfs/QmavmG5REdHCAWsZ8Cag26BCxAq27DRKGxr3uBg5ZYxQ51\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol\":{\"keccak256\":\"0x075302c23ba4b3a1d2a5000947ac44bbb4e84b011ecadad6f5e3fd92cd568659\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13806b62ea930e61dfba5fbbfd4eafe135bb0e2e4d55ce8cde1407d7b20a739\",\"dweb:/ipfs/QmYjt4fwBLdKrMbGHZPqdsiwsK4obFdXdKFhQBBW5ruEuC\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/NoncesUpgradeable.sol\":{\"keccak256\":\"0x778f4a1546a1c6c726ecc8e2348a2789690fb8f26e12bd9d89537669167b79a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://851d3dfe724e918ff0a064b206e1ef46b27ab0df2aa2c8af976973a22ef59827\",\"dweb:/ipfs/Qmd4wb7zX8ueYhMVBy5PJjfsANK3Ra3pKPN7qQkNsdwGHn\"]},\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0xa6bf6b7efe0e6625a9dcd30c5ddf52c4c24fe8372f37c7de9dbf5034746768d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c353ee3705bbf6fadb84c0fb10ef1b736e8ca3ca1867814349d1487ed207beb\",\"dweb:/ipfs/QmcugaPssrzGGE8q4YZKm2ZhnD3kCijjcgdWWg76nWt3FY\"]},\"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x361126a17677994081cd9cb69c3f50cffff6e920d25cb7e428acdb1ae41d1866\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19ae787a7dd001269cd60a394b1a5261b78925a0fc3a6f927beb2986a9aa56cf\",\"dweb:/ipfs/QmYLfXiuKmcRgTDBEDXMMjXU8t6JxsspUmjxYzqWS55oEv\"]},\"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol\":{\"keccak256\":\"0x89374b2a634f0a9c08f5891b6ecce0179bc2e0577819c787ed3268ca428c2459\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f13d2572e5bdd55e483dfac069aac47603644071616a41fce699e94368e38c13\",\"dweb:/ipfs/QmfKeyNT6vyb99vJQatPZ88UyZgXNmAiHUXSWnaR1TPE11\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xfb223a85dd0b2175cfbbaa325a744e2cd74ecd17c3df2b77b0722f991d2725ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://84bf1dea0589ec49c8d15d559cc6d86ee493048a89b2d4adb60fbe705a3d89ae\",\"dweb:/ipfs/Qmd56n556d529wk2pRMhYhm5nhMDhviwereodDikjs68w1\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x2fa0657dd7b8bc75475a47f64bc04a9adb42236b15d65e6781594ea69a46c3e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7496f42681aed94bf0142a077324e50b86046610c1724e7c12e96cf1c365914a\",\"dweb:/ipfs/QmZvhNdSAAbN4PKPdheAqwpXukUiXp3Q3TdQccDMg2NDTV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/AMMTokenPair.sol\":{\"keccak256\":\"0xbcf16943c40094b34072c0ddc4fcf0dc0d988c8aa0cb01143d16a88540e1a667\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://c9ef72d1de73f10e2f2cbe2ebb37a173ec8dac7a8ab6668f79333f3ec5b9b217\",\"dweb:/ipfs/QmSoK6wjKd1eyovGnoFV3wXZHLEeT3ZmyDKDUkhaCDrDUn\"]},\"contracts/interfaces/IAMMCallee.sol\":{\"keccak256\":\"0xd8ce18a210a47fc077e75f2244c3a67433e394ea4702a940125e5fe84df3b54e\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://5fbef3ab3658312943bff4c24cdb63f542ba42985ed5ce7707b0cce9edf8a9f1\",\"dweb:/ipfs/QmRSceQrks8PME7yrw3Ry33WPeEADtcpfhtNVPcRLUnm52\"]},\"contracts/interfaces/IAMMFactory.sol\":{\"keccak256\":\"0x837bb0ab74958ab701837a5e42f3a452096d8582c30636edefc5deb0c888dee7\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://22ed4e91933b612d8168bf331976aa1f006457da701b55efabc408c00bde36e9\",\"dweb:/ipfs/QmPv7CFkaHDVMAr2U2jspTf99A1KZUcpRu4XTMnN3pwKoy\"]},\"contracts/interfaces/IAMMTokenPair.sol\":{\"keccak256\":\"0xbc3cac969b5aa1bf479f21a41acc581ca1a022f827b26fd6c2009f18b9403b14\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://0c899c6f09bd7ae8f58fb6eb7f80b5890531bff7b9148515b16e4356a3f2d810\",\"dweb:/ipfs/QmXupsBngQGV1EYDXtA4sH32cot8frC3r56HAxVRyTQqju\"]},\"contracts/libraries/Math.sol\":{\"keccak256\":\"0x0cef61803b6fa0bf72eba690b47de957853f4e34681d39cac75d026391eec454\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://b476ede8973230ec95d26dc3253cd7a0d6e6254a0c0a9c8d202da439c90ef140\",\"dweb:/ipfs/QmZrd5Rocy8QVqhPgLPS1qjDGF4daSqnHsa4p3eEPCKGsL\"]},\"contracts/libraries/UQ112x112.sol\":{\"keccak256\":\"0x7a1409fd34e74e97f36f75d8c8597a8c13d07ac9e7e22109f8e8be5bb2cdfa60\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://8a787d6efdbb107beeaf4ff38ae4088c1397f4a99bdd73de53d04332374d20f5\",\"dweb:/ipfs/QmY5V1hgnEkSm9nEt7t31oVtbsNfN4UvCZxvL3yS63aa5C\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":8599,"contract":"contracts/AMMTokenPair.sol:AMMTokenPair","label":"factory","offset":0,"slot":"0","type":"t_address"},{"astId":8601,"contract":"contracts/AMMTokenPair.sol:AMMTokenPair","label":"token0","offset":0,"slot":"1","type":"t_address"},{"astId":8603,"contract":"contracts/AMMTokenPair.sol:AMMTokenPair","label":"token1","offset":0,"slot":"2","type":"t_address"},{"astId":8605,"contract":"contracts/AMMTokenPair.sol:AMMTokenPair","label":"reserve0","offset":0,"slot":"3","type":"t_uint112"},{"astId":8607,"contract":"contracts/AMMTokenPair.sol:AMMTokenPair","label":"reserve1","offset":14,"slot":"3","type":"t_uint112"},{"astId":8609,"contract":"contracts/AMMTokenPair.sol:AMMTokenPair","label":"blockTimestampLast","offset":28,"slot":"3","type":"t_uint32"},{"astId":8611,"contract":"contracts/AMMTokenPair.sol:AMMTokenPair","label":"price0CumulativeLast","offset":0,"slot":"4","type":"t_uint256"},{"astId":8613,"contract":"contracts/AMMTokenPair.sol:AMMTokenPair","label":"price1CumulativeLast","offset":0,"slot":"5","type":"t_uint256"},{"astId":8615,"contract":"contracts/AMMTokenPair.sol:AMMTokenPair","label":"kLast","offset":0,"slot":"6","type":"t_uint256"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_uint112":{"encoding":"inplace","label":"uint112","numberOfBytes":"14"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint32":{"encoding":"inplace","label":"uint32","numberOfBytes":"4"}}}}},"contracts/interfaces/IAMMCallee.sol":{"IAMMCallee":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"ammCall","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"ammCall(address,uint256,uint256,bytes)":"5fea11f7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"ammCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IAMMCallee.sol\":\"IAMMCallee\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interfaces/IAMMCallee.sol\":{\"keccak256\":\"0xd8ce18a210a47fc077e75f2244c3a67433e394ea4702a940125e5fe84df3b54e\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://5fbef3ab3658312943bff4c24cdb63f542ba42985ed5ce7707b0cce9edf8a9f1\",\"dweb:/ipfs/QmRSceQrks8PME7yrw3Ry33WPeEADtcpfhtNVPcRLUnm52\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/interfaces/IAMMFactory.sol":{"IAMMFactory":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token0","type":"address"},{"indexed":true,"internalType":"address","name":"token1","type":"address"},{"indexed":false,"internalType":"address","name":"pair","type":"address"},{"indexed":false,"internalType":"uint256","name":"","type":"uint256"}],"name":"PairCreated","type":"event"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"allPairs","outputs":[{"internalType":"address","name":"pair","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"allPairsLength","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"}],"name":"createPair","outputs":[{"internalType":"address","name":"pair","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"feeTo","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"feeToSetter","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"}],"name":"getPair","outputs":[{"internalType":"address","name":"pair","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"setFeeTo","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"setFeeToSetter","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allPairs(uint256)":"1e3dd18b","allPairsLength()":"574f2ba3","createPair(address,address)":"c9c65396","feeTo()":"017e7e58","feeToSetter()":"094b7415","getPair(address,address)":"e6a43905","setFeeTo(address)":"f46901ed","setFeeToSetter(address)":"a2e74af6"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"PairCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allPairs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allPairsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"createPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeTo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeToSetter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"getPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"setFeeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"setFeeToSetter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IAMMFactory.sol\":\"IAMMFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interfaces/IAMMFactory.sol\":{\"keccak256\":\"0x837bb0ab74958ab701837a5e42f3a452096d8582c30636edefc5deb0c888dee7\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://22ed4e91933b612d8168bf331976aa1f006457da701b55efabc408c00bde36e9\",\"dweb:/ipfs/QmPv7CFkaHDVMAr2U2jspTf99A1KZUcpRu4XTMnN3pwKoy\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/interfaces/IAMMTokenPair.sol":{"IAMMTokenPair":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1","type":"uint256"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"Burn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1","type":"uint256"}],"name":"Mint","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount0In","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1In","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount0Out","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1Out","type":"uint256"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"Swap","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint112","name":"reserve0","type":"uint112"},{"indexed":false,"internalType":"uint112","name":"reserve1","type":"uint112"}],"name":"Sync","type":"event"},{"inputs":[],"name":"MINIMUM_LIQUIDITY","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"burn","outputs":[{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"factory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getReserves","outputs":[{"internalType":"uint112","name":"reserve0","type":"uint112"},{"internalType":"uint112","name":"reserve1","type":"uint112"},{"internalType":"uint32","name":"blockTimestampLast","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"kLast","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"mint","outputs":[{"internalType":"uint256","name":"liquidity","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"price0CumulativeLast","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"price1CumulativeLast","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"skim","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount0Out","type":"uint256"},{"internalType":"uint256","name":"amount1Out","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"swap","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"sync","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"token0","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"token1","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"MINIMUM_LIQUIDITY()":"ba9a7a56","burn(address)":"89afcb44","factory()":"c45a0155","getReserves()":"0902f1ac","initialize(address,address)":"485cc955","kLast()":"7464fc3d","mint(address)":"6a627842","price0CumulativeLast()":"5909c0d5","price1CumulativeLast()":"5a3d5493","skim(address)":"bc25cf77","swap(uint256,uint256,address,bytes)":"022c0d9f","sync()":"fff6cae9","token0()":"0dfe1681","token1()":"d21220a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve0\",\"type\":\"uint112\"},{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve1\",\"type\":\"uint112\"}],\"name\":\"Sync\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MINIMUM_LIQUIDITY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint112\",\"name\":\"reserve0\",\"type\":\"uint112\"},{\"internalType\":\"uint112\",\"name\":\"reserve1\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"blockTimestampLast\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price0CumulativeLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price1CumulativeLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"skim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sync\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IAMMTokenPair.sol\":\"IAMMTokenPair\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interfaces/IAMMTokenPair.sol\":{\"keccak256\":\"0xbc3cac969b5aa1bf479f21a41acc581ca1a022f827b26fd6c2009f18b9403b14\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://0c899c6f09bd7ae8f58fb6eb7f80b5890531bff7b9148515b16e4356a3f2d810\",\"dweb:/ipfs/QmXupsBngQGV1EYDXtA4sH32cot8frC3r56HAxVRyTQqju\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/libraries/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212206c3caea6e242f76c0268f181248b75ab0d12abf5d5d2025af3777b60ba76d9c664736f6c63430008160033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH13 0x3CAEA6E242F76C0268F181248B PUSH22 0xAB0D12ABF5D5D2025AF3777B60BA76D9C664736F6C63 NUMBER STOP ADDMOD AND STOP CALLER ","sourceMap":"117:522:31:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212206c3caea6e242f76c0268f181248b75ab0d12abf5d5d2025af3777b60ba76d9c664736f6c63430008160033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH13 0x3CAEA6E242F76C0268F181248B PUSH22 0xAB0D12ABF5D5D2025AF3777B60BA76D9C664736F6C63 NUMBER STOP ADDMOD AND STOP CALLER ","sourceMap":"117:522:31:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/libraries/Math.sol\":{\"keccak256\":\"0x0cef61803b6fa0bf72eba690b47de957853f4e34681d39cac75d026391eec454\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://b476ede8973230ec95d26dc3253cd7a0d6e6254a0c0a9c8d202da439c90ef140\",\"dweb:/ipfs/QmZrd5Rocy8QVqhPgLPS1qjDGF4daSqnHsa4p3eEPCKGsL\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/libraries/UQ112x112.sol":{"UQ112x112":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea264697066735822122058799e7e665e02b490c8c53fb53787fcfa6900d0de24aee2edd7707823c9746e64736f6c63430008160033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PC PUSH26 0x9E7E665E02B490C8C53FB53787FCFA6900D0DE24AEE2EDD77078 0x23 0xC9 PUSH21 0x6E64736F6C63430008160033000000000000000000 ","sourceMap":"221:396:32:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea264697066735822122058799e7e665e02b490c8c53fb53787fcfa6900d0de24aee2edd7707823c9746e64736f6c63430008160033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PC PUSH26 0x9E7E665E02B490C8C53FB53787FCFA6900D0DE24AEE2EDD77078 0x23 0xC9 PUSH21 0x6E64736F6C63430008160033000000000000000000 ","sourceMap":"221:396:32:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/UQ112x112.sol\":\"UQ112x112\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/libraries/UQ112x112.sol\":{\"keccak256\":\"0x7a1409fd34e74e97f36f75d8c8597a8c13d07ac9e7e22109f8e8be5bb2cdfa60\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://8a787d6efdbb107beeaf4ff38ae4088c1397f4a99bdd73de53d04332374d20f5\",\"dweb:/ipfs/QmY5V1hgnEkSm9nEt7t31oVtbsNfN4UvCZxvL3yS63aa5C\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}}}}}