/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  TestToken,
  TestTokenInterface,
} from "../../../contracts/test/TestToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "initialSupply",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60406080815234620003e35762000e4d803803806200001e81620003e8565b9283398101606082820312620003e35781516001600160401b039290838111620003e35782620000509183016200040e565b60209283830151858111620003e35786916200006e9185016200040e565b920151938151818111620002e3576003908154906001948583811c93168015620003d8575b88841014620003c2578190601f938481116200036c575b5088908483116001146200030557600092620002f9575b505060001982851b1c191690851b1782555b8451928311620002e35760049485548581811c91168015620002d8575b88821014620002c35782811162000278575b50869184116001146200020d5793839491849260009562000201575b50501b92600019911b1c19161781555b3315620001ea5760058054336001600160a01b0319821681179092556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a360025490838201809211620001d557506000917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9160025533835282815284832084815401905584519384523393a3516109cc9081620004818239f35b601190634e487b7160e01b6000525260246000fd5b6024906000855191631e4fbdf760e01b8352820152fd5b0151935038806200011e565b9190601f198416928660005284886000209460005b8a8983831062000260575050501062000245575b50505050811b0181556200012e565b01519060f884600019921b161c191690553880808062000236565b86860151895590970196948501948893500162000222565b86600052876000208380870160051c8201928a8810620002b9575b0160051c019086905b828110620002ac57505062000102565b600081550186906200029c565b9250819262000293565b602287634e487b7160e01b6000525260246000fd5b90607f1690620000f0565b634e487b7160e01b600052604160045260246000fd5b015190503880620000c1565b90879350601f19831691866000528a6000209260005b8c8282106200035557505084116200033c575b505050811b018255620000d3565b015160001983871b60f8161c191690553880806200032e565b8385015186558b979095019493840193016200031b565b90915084600052886000208480850160051c8201928b8610620003b8575b918991869594930160051c01915b828110620003a8575050620000aa565b6000815585945089910162000398565b925081926200038a565b634e487b7160e01b600052602260045260246000fd5b92607f169262000093565b600080fd5b6040519190601f01601f191682016001600160401b03811183821017620002e357604052565b919080601f84011215620003e35782516001600160401b038111620002e35760209062000444601f8201601f19168301620003e8565b92818452828287010111620003e35760005b8181106200046c57508260009394955001015290565b85810183015184820184015282016200045656fe6080604081815260048036101561001557600080fd5b600092833560e01c90816306fdde031461071b57508063095ea7b31461067257806318160ddd1461065357806323b872dd14610560578063313ce5671461054457806340c10f191461048f57806370a0823114610458578063715018a6146103fb5780638da5cb5b146103d257806395d89b41146102b05780639dc29fac146101cd578063a9059cbb1461019c578063dd62ed3e1461014f5763f2fde38b146100bd57600080fd5b3461014b57602036600319011261014b576100d661085b565b906100df61096a565b6001600160a01b03918216928315610135575050600554826bffffffffffffffffffffffff60a01b821617600555167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b51631e4fbdf760e01b8152908101849052602490fd5b8280fd5b5050346101985780600319360112610198578060209261016d61085b565b610175610876565b6001600160a01b0391821683526001865283832091168252845220549051908152f35b5080fd5b5050346101985780600319360112610198576020906101c66101bc61085b565b602435903361088c565b5160018152f35b5091346102ad57816003193601126102ad576101e761085b565b92602435906101f461096a565b6001600160a01b0385169485156102965785845283602052848420549183831061026257505060208286937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9383988752868452038686205580600254036002558551908152a35160018152f35b855163391434e360e21b81526001600160a01b03909216908201908152602081018390526040810184905281906060010390fd5b8451634b637e8f60e11b8152808301859052602490fd5b80fd5b5091903461019857816003193601126101985780519082845460018160011c90600183169283156103c8575b60209384841081146103b5578388529081156103995750600114610344575b505050829003601f01601f191682019267ffffffffffffffff841183851017610331575082918261032d925282610812565b0390f35b634e487b7160e01b815260418552602490fd5b8787529192508591837f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b83851061038557505050508301013880806102fb565b80548886018301529301928490820161036f565b60ff1916878501525050151560051b84010190503880806102fb565b634e487b7160e01b895260228a52602489fd5b91607f16916102dc565b50503461019857816003193601126101985760055490516001600160a01b039091168152602090f35b83346102ad57806003193601126102ad5761041461096a565b600580546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b5050346101985760203660031901126101985760209181906001600160a01b0361048061085b565b16815280845220549051908152f35b5091346102ad57816003193601126102ad576104a961085b565b90602435916104b661096a565b6001600160a01b031691821561052d5760025481810180911161051a57602095507fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9186916002558484528382528584208181540190558551908152a35160018152f35b634e487b7160e01b835260118652602483fd5b835163ec442f0560e01b8152808601839052602490fd5b5050346101985781600319360112610198576020905160128152f35b5082346102ad5760603660031901126102ad5761057b61085b565b610583610876565b916044359360018060a01b0383168083526001602052868320338452602052868320549160001983106105bf575b6020886101c689898961088c565b8683106106275781156106105733156105f9575082526001602090815286832033845281529186902090859003905582906101c6876105b1565b8751634a1406b160e11b8152908101849052602490fd5b875163e602df0560e01b8152908101849052602490fd5b8751637dc7a0d960e11b8152339181019182526020820193909352604081018790528291506060010390fd5b5050346101985781600319360112610198576020906002549051908152f35b503461014b578160031936011261014b5761068b61085b565b602435903315610704576001600160a01b03169182156106ed57508083602095338152600187528181208582528752205582519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925843392a35160018152f35b8351634a1406b160e11b8152908101859052602490fd5b835163e602df0560e01b8152808401869052602490fd5b849150833461014b578260031936011261014b578260035460018160011c9060018316928315610808575b60209384841081146103b5578388529081156107ec575060011461079657505050829003601f01601f191682019267ffffffffffffffff841183851017610331575082918261032d925282610812565b600387529192508591837fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b8385106107d857505050508301018580806102fb565b8054888601830152930192849082016107c2565b60ff1916878501525050151560051b84010190508580806102fb565b91607f1691610746565b6020808252825181830181905290939260005b82811061084757505060409293506000838284010152601f8019910116010190565b818101860151848201604001528501610825565b600435906001600160a01b038216820361087157565b600080fd5b602435906001600160a01b038216820361087157565b916001600160a01b0380841692831561095157169283156109385760009083825281602052604082205490838210610906575091604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815220818154019055604051908152a3565b60405163391434e360e21b81526001600160a01b03919091166004820152602481019190915260448101839052606490fd5b60405163ec442f0560e01b815260006004820152602490fd5b604051634b637e8f60e11b815260006004820152602490fd5b6005546001600160a01b0316330361097e57565b60405163118cdaa760e01b8152336004820152602490fdfea2646970667358221220bf6f01fa7ad04691bab5c4e5421c79ab8f48cdcedec1783d02b440490f0b8fb064736f6c63430008160033";

type TestTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestToken__factory extends ContractFactory {
  constructor(...args: TestTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    name: string,
    symbol: string,
    initialSupply: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      name,
      symbol,
      initialSupply,
      overrides || {}
    );
  }
  override deploy(
    name: string,
    symbol: string,
    initialSupply: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      name,
      symbol,
      initialSupply,
      overrides || {}
    ) as Promise<
      TestToken & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TestToken__factory {
    return super.connect(runner) as TestToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestTokenInterface {
    return new Interface(_abi) as TestTokenInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): TestToken {
    return new Contract(address, _abi, runner) as unknown as TestToken;
  }
}
